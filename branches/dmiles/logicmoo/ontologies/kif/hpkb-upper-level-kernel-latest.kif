;;; Translation of Hpkb-Upper-Level-Kernel-Latest
;;; into target language Kif


(in-package "ONTOLINGUA-USER")

(defrelation Biological-Order
             (Name-In-Cyc Biological-Order "#$BiologicalOrder")
             (Biological-Taxon-Type Biological-Order)
             (Subclass-Of Biological-Order Biological-Taxon)
             (Set-Or-Collection Biological-Order)
             (Arity Biological-Order 1)
             (Documentation Biological-Order
              "The collection of biological taxonomic subdivisions below Biological-Class (or Biological-Subclass) and above Biological-Family."))

(defrelation Digestive-System
             (Name-In-Cyc Digestive-System "#$DigestiveSystem")
             (Animal-Body-Part-Type Digestive-System)
             (Subclass-Of Digestive-System Biological-Living-Object)
             (Subclass-Of Digestive-System Animal-Body-Part)
             (Set-Or-Collection Digestive-System)
             (Arity Digestive-System 1)
             (Documentation Digestive-System
              "The collection of all animals' digestive systems.  A Digestive-System is a system of organs and other body parts (typically of Vertebrates) which work together to accomplish the digestion function."))

(defrelation Simple-Segment-Of-Path
             (Name-In-Cyc Simple-Segment-Of-Path "#$SimpleSegmentOfPath")
             (Object-Type Simple-Segment-Of-Path)
             (Subclass-Of Simple-Segment-Of-Path Path-Generic)
             (Set-Or-Collection Simple-Segment-Of-Path)
             (Arity Simple-Segment-Of-Path 1)
             (Documentation Simple-Segment-Of-Path
              "The collection of all segments of Path-Generics each of which has no path junctions between its ends.  The two ends of such a segment may or may not coincide at the same location (i.e. a Simple-Segment-Of-Path may form a loop.  See also Simple-Unlooped-Segment-Of-Path).  The only access to something located along a Simple-Segment-Of-Path is via the Ends-Of-Path-Segment locations for that #SimpleSegmentOfPath.  When the segment is part of a specified Path-System (as opposed to a mere Customary-System-Of-Links), the predicate Link-In-System (or else Loop-In-System) applies to it and the system."))

(defrelation Steppe-Climate-Cycle
             (Name-In-Cyc Steppe-Climate-Cycle "#$SteppeClimateCycle")
             (Climate-Cycle-Type Steppe-Climate-Cycle)
             (Subclass-Of Steppe-Climate-Cycle Temperate-Climate-Cycle)
             (Set-Or-Collection Steppe-Climate-Cycle)
             (Arity Steppe-Climate-Cycle 1)
             (Documentation Steppe-Climate-Cycle
              "A collection of annual climate cycles.  Each element of Steppe-Climate-Cycle is a year-long event consisting of weather occurring (typically) on the steppes (i.e., temperate zone semiarid plains).  Characteristics of a steppe climate include: little precipitation, but wetter than a desert; wide temperature extremes, from very hot in the day to cold at night."))

(defrelation Sociability-Based-Action
             (Name-In-Cyc Sociability-Based-Action "#$SociabilityBasedAction")
             (Temporal-Object-Type Sociability-Based-Action)
             (Default-Disjoint-Script-Type Sociability-Based-Action)
             (Subclass-Of Sociability-Based-Action Social-Occurrence)
             (Set-Or-Collection Sociability-Based-Action)
             (Arity Sociability-Based-Action 1)
             (Documentation Sociability-Based-Action
              "The collection of socially based actions, those performed mostly for the sake of sociability, in which considerations of socially acceptable interactions with others are important."))

(defrelation Pre-Actors
             (Subrelation-Of Pre-Actors Actors)
             (Subrelation-Of Pre-Actors Starts-After-Starting-Of)
             (Domain Pre-Actors Event)
             (Range Pre-Actors Something-Existing)
             (Name-In-Cyc Pre-Actors "#$preActors")
             (Irreflexive-Binary-Predicate Pre-Actors)
             (Actor-Slot Pre-Actors)
             (Asymmetric-Binary-Predicate Pre-Actors)
             (Slot Pre-Actors)
             (Relation Pre-Actors)
             (Arity Pre-Actors 2)
             (Binary-Relation Pre-Actors)
             (Documentation Pre-Actors
              "The predicate Pre-Actors is used to indicate a participant that pre-exists a particular event.  (Pre-Actors EVENT OBJECT) means that OBJECT exists before EVENT begins.  It makes no commitment about OBJECT's condition during or after EVENT.  Pre-Actors is a very general Actor-Slot, subsuming Done-By, Object-Acted-On, Object-Moving, and many others."))

(defrelation Drug-Prescription
             (Name-In-Cyc Drug-Prescription "#$DrugPrescription")
             (Existing-Object-Type Drug-Prescription)
             (Subclass-Of Drug-Prescription Textual-Material)
             (Set-Or-Collection Drug-Prescription)
             (Arity Drug-Prescription 1)
             (Documentation Drug-Prescription
              "The legal document in which a doctor authorizes a patient to purchase a certain amount of a drug and take it according to some specified schedule."))

(defrelation Plumbing-Fixture
             (Name-In-Cyc Plumbing-Fixture "#$PlumbingFixture")
             (Product-Type Plumbing-Fixture)
             (Existing-Object-Type Plumbing-Fixture)
             (Subclass-Of Plumbing-Fixture Physical-Device)
             (Subclass-Of Plumbing-Fixture Part-Of-Building)
             (Set-Or-Collection Plumbing-Fixture)
             (Arity Plumbing-Fixture 1)
             (Documentation Plumbing-Fixture
              "A collection of physical devices.  An instance of Plumbing-Fixture is any object which is -- or was or will be or could be -- part of some plumbing system.  Types of Plumbing-Fixture include pipes, sinks, and toilets, as well as faucets and drain plugs.  It must be a functional part (so sewage doesn't count) and a significant part (so a label on a pipe doesn't count) and a specialized part (so an individual screw doesn't count, nor does an individual iron atom that's part of a faucet) and a relatively long-lived and localized part (so the water flowing through a pipe doesn't count.)"))

(defrelation Surface-Generic
             (Name-In-Cyc Surface-Generic "#$Surface-Generic")
             (Object-Type Surface-Generic)
             (Subclass-Of Surface-Generic Spatial-Thing)
             (Set-Or-Collection Surface-Generic)
             (Arity Surface-Generic 1)
             (Documentation Surface-Generic
              "The collection of all surfaces (including Surface-Abstract and Surface-Physical); each is a Spatial-Thing that has extent in at least two dimensions, but either does not have a thickness (i.e. a two dimensional object) or has an insignificant thickness compared with its length and width (Note: if the object is a closed surface, e.g. an apple skin, any significant sub region must have insignificant thickness compared to its length and width).  Surfaces may be two or three dimensional, tangible or intangible.  Such a surface may be curved, folded, crumpled, or flat.  Thus a Euclidian two dimensional disc, a dinner plate, a crumpled sheet of paper, the top of a desk, a ribbon, and a basket ball's skin are exemplars of a Surface-Generic.  They may be spatially connected or not spatially connected.  Thus, both a frisbee and the Milky Way galaxy (as it appears in the sky) are exemples.  Negative exemplars include an entire basket ball (i.e. its skin plus the cavity inside), a planet, and a euclidian solid sphere. All of these are negative exemplars because thickness is not significantly smaller than length and width.  If an object has an Area-Of-Object it must be a Surface-Generic.  If the object `has two sides' (e.g. a sheet of paper, a frisbee, but not Texas-State or an Inside-Surface of a cave or room.  (See One-Sided-Vs-Two-Sided-Object-Note.) The areas on either side of a Surface-Generic are equal."))

(defrelation Time-Point
             (Synonymous-External-Concept Time-Point Sensus-Information1997
              "TIME-POINT")
             (Synonymous-External-Concept Time-Point Sensus-Information1997
              "ZERO-D-TIME")
             (Name-In-Cyc Time-Point "#$TimePoint")
             (Temporal-Object-Type Time-Point)
             (Subclass-Of Time-Point Time-Interval)
             (Set-Or-Collection Time-Point)
             (Arity Time-Point 1)
             (Documentation Time-Point
              "A Time-Point is a piece of time which has an infinitely small duration.  In Cyc's basic representation of time, all time is like an infinite straight line, and any Time-Point is like a point on that line.  Many temporal attributes of a Temporal-Thing may be described in terms of time points; e.g., its Starting-Point.  A Time-Point can also be contextual, such as Now."))

(defrelation Translation-Single-Path
             (Name-In-Cyc Translation-Single-Path "#$Translation-SinglePath")
             (Temporal-Object-Type Translation-Single-Path)
             (Subclass-Of Translation-Single-Path Movement-Translation-Event)
             (Set-Or-Collection Translation-Single-Path)
             (Arity Translation-Single-Path 1)
             (Documentation Translation-Single-Path
              "A subset of Movement-Translation-Event.  Each element of Translation-Single-Path is a translational movement which involves exactly one Pathway-Complete.  One or more items may have the role of Object-Moving in such an event.  Note that although there is a single Pathway-Complete, it does not follow that there is a unique From-Location and a unique To-Location because that depends on our descriptions of locations.  (A single-pathed movement can be described as from TX to PA, or from Austin to Pittsburgh, or even from Northwest in Austin to Oakland in Pittsburgh.)  However, the single Pathway-Complete connects From-Location and To-Location.  Consider a translational motion performed by a whole group; it is likely to be a Translation-Single-Path ---  e.g., a flock of birds flying together, or a snarl of rush-hour traffic on the Beltway.  Negative examples (see Translation-Multi-Path) would be: a set of billiard balls during the opening break, a group of water droplets that come together into one big drop."))

(defrelation |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "MISC-STUFF")|
             (Skolem-Object
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "MISC-STUFF")|)
             (Collection
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "MISC-STUFF")|)
             (Subclass-Of
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "MISC-STUFF")|
              Thing)
             (Set-Or-Collection
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "MISC-STUFF")|)
             (Arity
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "MISC-STUFF")| 1))

(defrelation Wagon
             (Name-In-Cyc Wagon "#$Wagon")
             (Product-Type Wagon)
             (Existing-Object-Type Wagon)
             (Subclass-Of Wagon Muscle-Powered-Device)
             (Subclass-Of Wagon Land-Transportation-Device)
             (Subclass-Of Wagon Container-Product)
             (Set-Or-Collection Wagon)
             (Arity Wagon 1)
             (Documentation Wagon
              "The collection of all carts and wagons, relatively small non-motorized wheeled devices with two or more wheels, used for moving goods.  Usually they are human-powered or Equine-Animal driven."))

(deffunction Hertz
   (Args-Isa Hertz Real-Number)
   (Result-Instance-Of Hertz Frequency)
   (Result-Instance-Of Hertz Rate)
   (Result-Instance-Of Hertz Scalar-Interval)
   (Name-In-Cyc Hertz "#$Hertz")
   (Unit-Of-Frequency Hertz)
   (Standard-Unit-Of-Measure Hertz)
   (Unit-Of-Measure-No-Prefix Hertz)
   (Function Hertz)
   (Documentation Hertz
    "A Cyc function, specifically an Individual-Denoting-Function.  Hertz represents the basic unit of measure for elements of Frequency (1 Hz=1 cycle per second).  (Hertz NUM) denotes the frequency NUM cycles per second."))

(defrelation Acts-In-Capacity
             (Nth-Domain Acts-In-Capacity 1 Agent)
             (Nth-Domain Acts-In-Capacity 2 Actor-Slot)
             (Nth-Domain Acts-In-Capacity 3 Script-Type)
             (Nth-Domain Acts-In-Capacity 4 Capacity-Attribute)
             (Name-In-Cyc Acts-In-Capacity "#$actsInCapacity")
             (Quaternary-Predicate Acts-In-Capacity)
             (Relation Acts-In-Capacity)
             (Arity Acts-In-Capacity 4)
             (Documentation Acts-In-Capacity
              "The predicate Acts-In-Capacity indicates the capacity in which an agent participates in certain kinds of actions.  (Acts-In-Capacity AGENT ROLE SCRIPT-TYPE CAP) means that the agent AGENT plays the role ROLE in instances of SCRIPT-TYPE, and s/he does that role in the capacity CAP.  CAP is a Capacity-Attribute (q.v.) which describes the AGENT's mode of participation--e.g., as a job, hobby, main function, support function, etc.  Contrast three cases of acts of Greeting-Someone, when Performed-By: (1) instances of Receptionist, in their Job-Capacity and as their Main-Function; (2) instances of Flight-Attendant, in their Job-Capacity but as a Support-Function; and (3) instances of Train-Engineer, in a Hobby-Capacity (though they do it while working, it's not part of their job)."))

(defrelation |(GROUP-FN INTELLIGENT-AGENT)|
             (Skolem-Object |(GROUP-FN INTELLIGENT-AGENT)|)
             (Object-Type |(GROUP-FN INTELLIGENT-AGENT)|)
             (Subclass-Of |(GROUP-FN INTELLIGENT-AGENT)| Group)
             (Subclass-Of |(GROUP-FN INTELLIGENT-AGENT)| Spatial-Thing)
             (Set-Or-Collection |(GROUP-FN INTELLIGENT-AGENT)|)
             (Arity |(GROUP-FN INTELLIGENT-AGENT)| 1))

(defobject A-Few-Days-Duration
   (Time-Quantity A-Few-Days-Duration)
   (Order-Of-Magnitude-Interval A-Few-Days-Duration)
   (Name-In-Cyc A-Few-Days-Duration "#$AFewDaysDuration")
   (Documentation A-Few-Days-Duration "Duration of 2 to 10 days"))

(defrelation Wearing-Something
             (Name-In-Cyc Wearing-Something "#$WearingSomething")
             (Situation-Type Wearing-Something)
             (Subclass-Of Wearing-Something Physical-Contact-Situation)
             (Subclass-Of Wearing-Something Configuration)
             (Set-Or-Collection Wearing-Something)
             (Arity Wearing-Something 1)
             (Documentation Wearing-Something
              "A collection of situations; a subset of Configuration.  Such a configuration has a temporal as well as a spatial extent, but activity is not implied.  Each element of Wearing-Something is an arrangement of tangible objects, one of which is wearing the other(s).  Typically the wearer is a living person or animal, although surrogates are possible (e.g., mannequins, dolls, or corpses).  Objects worn are elements of Something-To-Wear.  See also Wearer, Wears-Clothing."))

(defobject Underground
   (Attribute-Value Underground)
   (Name-In-Cyc Underground "#$Underground")
   (Documentation Underground
    "The attribute of a location or region that means that it is below the surface of the ground of a particular place."))

(defrelation Animal-Body-Region
             (Name-In-Cyc Animal-Body-Region "#$AnimalBodyRegion")
             (Existing-Object-Type Animal-Body-Region)
             (Subclass-Of Animal-Body-Region Organism-Part)
             (Subclass-Of Animal-Body-Region Animal-Blo)
             (Set-Or-Collection Animal-Body-Region)
             (Arity Animal-Body-Region 1)
             (Documentation Animal-Body-Region
              "The set of parts of an animal's body that one might point to, operate on, photograph, transplant, etc.  So this is a collection of (conceptual) spatial subdivisions of the bodies of Animals, generally contiguous and having some more or less clear boundary.  Some elements of this collections are Einstein's head, Santas-Beard, and Babe Ruth's right arm.  Other elements of this set are what might be considered unhealthy body regions, such as a blister, a puncture wound, a bruise, etc. -- but those are still clearly a part of an animal's body, can be pointed to, photographed, bandaged up, etc.   
Note that this concept is quite different from an animal body `system' (such as the lymph system, the nervous system, etc.) which comprises a small portion of an animal's total mass but is distributed throughout the animal's body -- see Animal-Body-Part.  (At the naive, commonsense level of physiology, and for almost all purposes, it is perfectly acceptable to conceptualize Santa's beard as one Animal-Body-Region, and the same for Farrah Fawcett's hair, etc.  A borderline case of this is:  Cher's fingernails.  In some contexts, one would treat those as an Animal-Body-Region, and in other contexts one would treat them as ten separate Animal-Body-Regions.)"))

(defrelation Court-Judicial
             (Name-In-Cyc Court-Judicial "#$Court-Judicial")
             (Existing-Object-Type Court-Judicial)
             (Subclass-Of Court-Judicial Organization)
             (Set-Or-Collection Court-Judicial)
             (Arity Court-Judicial 1)
             (Documentation Court-Judicial
              "A collection of organizations which are judicial agents.  An element of Court-Judicial is an established judicial court, i.e., an enduring governmental Organization whose Primary-Function is to settle disputes by means of legal reasoning by one or more Judges.  Typically, a court's orders are enforced by some other agency belonging to the government of which that court is a part.  The collection Court-Judicial includes federal, state, county, and municipal courts, appellate and chancery courts, tax courts, courts of claims, courts-martial (if non-temporary), admiralty courts, courts of chivalry, American Indian tribal courts, and the Permanent Court of International Justice.  It excludes Gypsy/Rom Kris courts, nonjudicial administrative county courts, stannaries, and temporary Tribunals."))

(defrelation The-Term
             (Name-In-Cyc The-Term "#$TheTerm")
             (Collection The-Term)
             (Subclass-Of The-Term Thing)
             (Set-Or-Collection The-Term)
             (Arity The-Term 1)
             (Documentation The-Term
              "A special kind of term that allows back-reference to any individual thing that satisfies the constraints on the The-Term.  E.g., 'Suppose a cat walks into a fish store.  The cat is likely to get into a lot of trouble.'  'The cat' in the second sentence refers back to 'a cat' in the first; i.e., any cat that walks into a fish store.  In Cyc, the constraints for a The-Term in a given context are given by use of the predicate The-Term-Constraints on the unit representing that context.  In lifting assertions out of that context, the constraints are added as antecedents."))

(defrelation Serving-Food-Or-Drink
             (Name-In-Cyc Serving-Food-Or-Drink "#$ServingFoodOrDrink")
             (Default-Disjoint-Script-Type Serving-Food-Or-Drink)
             (Temporal-Object-Type Serving-Food-Or-Drink)
             (Subclass-Of Serving-Food-Or-Drink Service-Event)
             (Subclass-Of Serving-Food-Or-Drink Human-Activity)
             (Subclass-Of Serving-Food-Or-Drink Handling-An-Object)
             (Subclass-Of Serving-Food-Or-Drink Transportation-Event)
             (Subclass-Of Serving-Food-Or-Drink Directed-Translation)
             (Set-Or-Collection Serving-Food-Or-Drink)
             (Arity Serving-Food-Or-Drink 1)
             (Documentation Serving-Food-Or-Drink
              "A collection of events.  Each element of Serving-Food-Or-Drink is an event in which an item of food or drink is served.  It starts when the server picks up the food or drink from a preparation or pickup area and ends when it is deposited at the location where the people being served may eat or drink it.  Such events are typically part of the job of any restaurant server who waits on tables, and they may be performed also by a host or servant at a dinner party or banquet, or by a family member at a home meal.  Note: this collection does not include placing a `serving' of food from a common dish onto a diner's plate."))

(defobject In-Lodged
   (Asymmetric-Binary-Predicate In-Lodged)
   (Name-In-Cyc In-Lodged "#$in-Lodged"))

(defrelation Spatial-Predicate
             (Synonymous-External-Concept Spatial-Predicate
              Sensus-Information1997 "SPATIAL-RELATION")
             (Name-In-Cyc Spatial-Predicate "#$SpatialPredicate")
             (Relationship-Type Spatial-Predicate)
             (Subclass-Of Spatial-Predicate Predicate)
             (Subclass-Of Spatial-Predicate Cotemporal-Predicate)
             (Set-Or-Collection Spatial-Predicate)
             (Arity Spatial-Predicate 1)
             (Documentation Spatial-Predicate
              "The collection predicates about spatial relationships.  Note that when an element of Spatial-Predicate has an instance of Group as one of its arguments, the predicate applies to all the members of that group."))

(defrelation Window-Pane
             (Name-In-Cyc Window-Pane "#$WindowPane")
             (Existing-Object-Type Window-Pane)
             (Subclass-Of Window-Pane Solid-Tangible-Product)
             (Set-Or-Collection Window-Pane)
             (Arity Window-Pane 1)
             (Documentation Window-Pane
              "Each individual pane in a window. A window may only have one window pane."))

(defrelation Occupation-Type
             (Name-In-Cyc Occupation-Type "#$OccupationType")
             (Sibling-Disjoint-Collection Occupation-Type)
             (Subclass-Of Occupation-Type Person-By-Activity-Type)
             (Subclass-Of Occupation-Type Position-Type)
             (Set-Or-Collection Occupation-Type)
             (Arity Occupation-Type 1)
             (Documentation Occupation-Type
              "A collection of collections.  Each element of Occupation-Type is a collection of workers, based on their kinds of work; each of those workers is an element of (:Direct-Types) Professional.  Elements of Occupation-Type represent all kinds of jobs, not just the kinds of occupations colloquially considered `professional'.  Elements of Occupation-Type include the collections Computer-Programmer-Professional, Food-Service-Employee, Medical-Care-Professional, Baseball-Umpire, Sales-Representative, Brewer, Gymnast, and many others.  Also see Professional, Position-Type."))

(deffunction The-Partition
   (Args-Isa The-Partition Set-Or-Collection)
   (Result-Instance-Of The-Partition Set-Mathematical)
   (Result-Instance-Of The-Partition Disjoint-Set-Or-Collection)
   (Name-In-Cyc The-Partition "#$ThePartition")
   (Variable-Arity-Relation The-Partition)
   (Reifiable-Function The-Partition)
   (Function The-Partition)
   (Documentation The-Partition
    "This is a special variable-arity Reifiable-Function that allows one to specify a set of collections or mathematical sets which partition a given set or collection, in order to conveniently state assertions about partitioning (see Partitioned-Into).  For example, the fact that the collection Whale is partitioned into the collections Baleen-Whale and Toothed-Whale can be expressed as (Partitioned-Into Whale (The-Partition Baleen-Whale Toothed-Whale))."))

(defrelation |(THE-PARTITION NON-PERSON-ANIMAL PERSON)|
             (Skolem-Object |(THE-PARTITION NON-PERSON-ANIMAL PERSON)|)
             (Disjoint-Set-Or-Collection
              |(THE-PARTITION NON-PERSON-ANIMAL PERSON)|)
             (Set-Mathematical |(THE-PARTITION NON-PERSON-ANIMAL PERSON)|)
             (Subclass-Of |(THE-PARTITION NON-PERSON-ANIMAL PERSON)| Thing)
             (Set-Or-Collection |(THE-PARTITION NON-PERSON-ANIMAL PERSON)|)
             (Arity |(THE-PARTITION NON-PERSON-ANIMAL PERSON)| 1))

(defrelation Visual-Information-Source
             (Name-In-Cyc Visual-Information-Source
              "#$VisualInformationSource")
             (Temporal-Stuff-Type Visual-Information-Source)
             (Subclass-Of Visual-Information-Source Information-Bearing-Thing)
             (Set-Or-Collection Visual-Information-Source)
             (Arity Visual-Information-Source 1)
             (Documentation Visual-Information-Source
              "A collection of information bearing things (IBTs).  Each element of Visual-Information-Source is an IBT from which information is extracted by viewing it (with the appropriate interpretive conventions).  Examples of Visual-Information-Source include handwritten letters; newspapers and other print media objects; paintings, sculpture, and other visual art objects; projected images, neon signs, etc.  The information content of instances of Visual-Information-Source may or may not be propositional in nature."))

(defobject Translucent
   (Transparency Translucent)
   (Name-In-Cyc Translucent "#$Translucent")
   (Documentation Translucent
    "Translucent is a Physical-Attribute representing a specific degree of Transparency.  Translucent objects can transmit light, but not enough to see clear images.  See also Transparency-Of-Object."))

(defrelation Capital-City
             (Subrelation-Of Capital-City Geographical-Sub-Regions)
             (Subrelation-Of Capital-City Controls)
             (Domain Capital-City Geopolitical-Entity)
             (Range Capital-City Capital-City-Of-Region)
             (Name-In-Cyc Capital-City "#$capitalCity")
             (Functional-Slot Capital-City)
             (Inter-Existing-Object-Slot Capital-City)
             (Slot Capital-City)
             (Relation Capital-City)
             (Arity Capital-City 2)
             (Binary-Relation Capital-City)
             (Documentation Capital-City
              "The predicate Capital-City is used to indicate the capital of a country (only).  (Capital-City CNTRY CITY) means that CITY is the capital city of the Country CNTRY.  Examples: the Capital-City of the United-States-Of-America is the City-Of-Washington-DC; the Capital-City of Armenia is Yerevan.  Note: for regional capitals, use Capital-City-Of-This-State."))

(defrelation Raindrop
             (Name-In-Cyc Raindrop "#$Raindrop")
             (Existing-Object-Type Raindrop)
             (Subclass-Of Raindrop |(LIQUID-FN WATER)|)
             (Subclass-Of Raindrop Precipitation-Particle)
             (Set-Or-Collection Raindrop)
             (Arity Raindrop 1)
             (Documentation Raindrop
              "The collection of drops of liquid water emitted by clouds in instances of Rain-Process."))

(defrelation Tangible-Substance-Predicate
             (Name-In-Cyc Tangible-Substance-Predicate
              "#$TangibleSubstancePredicate")
             (Predicate-Category Tangible-Substance-Predicate)
             (Subclass-Of Tangible-Substance-Predicate
              Tangible-Object-Predicate)
             (Set-Or-Collection Tangible-Substance-Predicate)
             (Arity Tangible-Substance-Predicate 1)
             (Documentation Tangible-Substance-Predicate
              "A collection of predicates.  Each element of Tangible-Substance-Predicate is a predicate that is used to specify or describe the properties (usually physical properties) of tangible substances.  Examples: State-Of-Matter, Freezing-Point, Physical-Structural-Integrity, Soluble-In."))

(defrelation Unit-Of-Pressure
             (Name-In-Cyc Unit-Of-Pressure "#$UnitOfPressure")
             (Interconvertible-Unit-Type Unit-Of-Pressure)
             (Subclass-Of Unit-Of-Pressure Unit-Of-Measure)
             (Set-Or-Collection Unit-Of-Pressure)
             (Arity Unit-Of-Pressure 1)
             (Documentation Unit-Of-Pressure
              "The collection of functions which return elements of Pressure (i.e., force per unit Area) or Elasticity.  E.g., (Pascal-Unit-Of-Pressure 175) denotes a Pressure of 175 pascals."))

(defrelation Muscular-System
             (Name-In-Cyc Muscular-System "#$MuscularSystem")
             (Animal-Body-Part-Type Muscular-System)
             (Subclass-Of Muscular-System Animal-Body-Part)
             (Set-Or-Collection Muscular-System)
             (Arity Muscular-System 1)
             (Documentation Muscular-System
              "The collection of all animals' muscle systems.  A Muscular-System of an animal is composed of all its muscles, considered as a functional whole.  As a system, they work together to enable foot motions in locomotion, pumping in circulation, breathing in respiration, biting and chewing and swallowing in eating, etc."))

(defrelation Echolocation-Perception
             (Name-In-Cyc Echolocation-Perception "#$EcholocationPerception")
             (Temporal-Stuff-Type Echolocation-Perception)
             (Subclass-Of Echolocation-Perception Perceiving)
             (Set-Or-Collection Echolocation-Perception)
             (Arity Echolocation-Perception 1)
             (Documentation Echolocation-Perception
              "Echolocation-Perception is the collection of spatial Perceivings in which a Perceptual-Agent (such as a bat or a submarine) generates sounds (potentially ultra- or sub- sonic in frequency), hears the sounds reflected from surfaces, and thereby acquires information about the position of other objects in its environment."))

(defobject A-Few-Decades-Duration
   (Time-Quantity A-Few-Decades-Duration)
   (Order-Of-Magnitude-Interval A-Few-Decades-Duration)
   (Name-In-Cyc A-Few-Decades-Duration "#$AFewDecadesDuration")
   (Documentation A-Few-Decades-Duration "Duration of 2 to 10 decades"))

(defrelation Pure-Space
             (Overlapping-External-Concept Pure-Space Sensus-Information1997
              "SPACE")
             (Name-In-Cyc Pure-Space "#$PureSpace")
             (Stuff-Type Pure-Space)
             (Subclass-Of Pure-Space Spatial-Thing)
             (Set-Or-Collection Pure-Space)
             (Arity Pure-Space 1)
             (Documentation Pure-Space
              "The collection of all portions, regions, or quantities of empty space (whether connected in one piece or unconnected, in multiple pieces).  The meaning of `empty' depends on context. A high energy physics microtheory might define `empty' as containing no particles, thus an element of Pure-Space would be a complete vacuum.  But an element of Pure-Space in Ambient-Conditions-Mt would be a piece of Atmosphere.  An undersea context could treat Pure-Space as seawater.  Elements of Pure-Space are not committed to tangibility, so elements may be intangible or abstract pieces of space."))

(defrelation Proper-Name-String
             (Name-In-Cyc Proper-Name-String "#$ProperNameString")
             (Id-String-Type Proper-Name-String)
             (Subclass-Of Proper-Name-String Id-String)
             (Set-Or-Collection Proper-Name-String)
             (Arity Proper-Name-String 1)
             (Documentation Proper-Name-String
              "The collection of all proper names, considered as character strings.  This includes, as elements, city names such as ``Dallas'', people's names such as ``Douglas'', company names such as ``Apple'', conference names, book titles, etc."))

(defobject South-West-Directly
   (Geographical-Direction South-West-Directly)
   (Unit-Vector-Precise South-West-Directly)
   (Name-In-Cyc South-West-Directly "#$SouthWest-Directly")
   (Documentation South-West-Directly
    "The precise Southwest direction from any geographic point other than a pole."))

(deffunction Degree-Celsius
   (Args-Isa Degree-Celsius Real-Number)
   (Result-Instance-Of Degree-Celsius Temperature)
   (Result-Instance-Of Degree-Celsius Scalar-Interval)
   (Name-In-Cyc Degree-Celsius "#$DegreeCelsius")
   (Unit-Of-Temperature Degree-Celsius)
   (Mks-Unit-Of-Measure Degree-Celsius)
   (Unit-Of-Measure-No-Prefix Degree-Celsius)
   (Function Degree-Celsius)
   (Documentation Degree-Celsius
    "The standard unit of temperature in much of the world and also in CYC."))

(defrelation Condensing
             (Name-In-Cyc Condensing "#$Condensing")
             (Temporal-Object-Type Condensing)
             (Default-Disjoint-Script-Type Condensing)
             (Subclass-Of Condensing Translocation)
             (Subclass-Of Condensing Physical-State-Change-Event)
             (Set-Or-Collection Condensing)
             (Arity Condensing 1)
             (Documentation Condensing
              "A collection of events.  In each instance of this collection, an object is cooled to (and then below) its Boiling-Point, changing it from Gaseous-State-Of-Matter to Liquid-State-Of-Matter."))

(defobject |(VERY-HIGH-AMOUNT-FN TENSILE-STRENGTH)|
   (Scalar-Interval |(VERY-HIGH-AMOUNT-FN TENSILE-STRENGTH)|)
   (Tensile-Strength |(VERY-HIGH-AMOUNT-FN TENSILE-STRENGTH)|)
   (Skolem-Object |(VERY-HIGH-AMOUNT-FN TENSILE-STRENGTH)|))

(defrelation Human-Activity
             (Name-In-Cyc Human-Activity "#$HumanActivity")
             (Temporal-Object-Type Human-Activity)
             (Script-Type Human-Activity)
             (Subclass-Of Human-Activity Animal-Activity)
             (Set-Or-Collection Human-Activity)
             (Arity Human-Activity 1)
             (Documentation Human-Activity
              "A collection of events.  Each element of Human-Activity is an activity that is performed by some instance(s) of Person."))

(defrelation Auto-Dealership
             (Name-In-Cyc Auto-Dealership "#$AutoDealership")
             (Existing-Object-Type Auto-Dealership)
             (Subclass-Of Auto-Dealership Retail-Store)
             (Subclass-Of Auto-Dealership Local-Customer-Contact-Point)
             (Subclass-Of Auto-Dealership Business)
             (Set-Or-Collection Auto-Dealership)
             (Arity Auto-Dealership 1)
             (Documentation Auto-Dealership
              "Each instance is an establishment (an organization located at one site) that sells automobiles and other types of road vehicles to consumers."))

(defrelation Malnutrition
             (Name-In-Cyc Malnutrition "#$Malnutrition")
             (Physiological-Condition-Type Malnutrition)
             (Subclass-Of Malnutrition Ailment-Condition)
             (Set-Or-Collection Malnutrition)
             (Arity Malnutrition 1)
             (Documentation Malnutrition
              "A collection of physiological conditions caused by the lack of
essential Nutrients (usually vitamins, minerals or proteins).
Specialized forms of Malnutrition are: (1)
Dietary-Deficiency-Condition, in which the necessary nutrients are
not ingested; and (2) Malnutrition-Secondary, in which the necessary
nutrients are not properly metabolized."))

(defrelation Biological-Development-Event
             (Name-In-Cyc Biological-Development-Event
              "#$BiologicalDevelopmentEvent")
             (Temporal-Object-Type Biological-Development-Event)
             (Default-Disjoint-Script-Type Biological-Development-Event)
             (Subclass-Of Biological-Development-Event
              Intrinsic-State-Change-Event)
             (Subclass-Of Biological-Development-Event Biological-Event)
             (Set-Or-Collection Biological-Development-Event)
             (Arity Biological-Development-Event 1)
             (Documentation Biological-Development-Event
              "A collection of events, and a subset of Intrinsic-State-Change-Events.  In each Biological-Development-Event, one or more living things undergo biological changes in which they progress from one developmental stage to another.  For example, the germination of a seed, the opening of a flower, the pupating of a caterpillar, a teenager reaching puberty.  Some borderline non-examples include: Groucho Marx being born, Groucho Marx dying."))

(defrelation Temporally-Intersects
             (not (Transitive-Binary-Predicate Temporally-Intersects))
             (Subrelation-Of Temporally-Intersects Temporal-Bounds-Intersect)
             (Slot-Inverse Temporally-Intersects Temporally-Intersects)
             (Domain Temporally-Intersects Temporal-Thing)
             (Range Temporally-Intersects Temporal-Thing)
             (Name-In-Cyc Temporally-Intersects "#$temporallyIntersects")
             (Complex-Temporal-Relation Temporally-Intersects)
             (Symmetric-Binary-Predicate Temporally-Intersects)
             (Reflexive-Binary-Predicate Temporally-Intersects)
             (Slot Temporally-Intersects)
             (Relation Temporally-Intersects)
             (Arity Temporally-Intersects 2)
             (Binary-Relation Temporally-Intersects)
             (Documentation Temporally-Intersects
              "(Temporally-Intersects ?X ?Y) means that there is at least one Time-Point which ?X Temporally-Subsumes and ?Y Temporally-Subsumes.  If you think of ?X and ?Y as sets of Time-Points, then those two sets intersect."))

(defrelation Train-Transportation-Device
             (Transport-Via-Fn Train-Transportation-Device
              |(TRANSPORT-VIA-FN TRAIN-TRANSPORTATION-DEVICE)|)
             (Name-In-Cyc Train-Transportation-Device
              "#$Train-TransportationDevice")
             (Product-Type Train-Transportation-Device)
             (Existing-Object-Type Train-Transportation-Device)
             (Subclass-Of Train-Transportation-Device
              Transportation-Device-Vehicle)
             (Subclass-Of Train-Transportation-Device Container-Product)
             (Subclass-Of Train-Transportation-Device
              Land-Transportation-Device)
             (Set-Or-Collection Train-Transportation-Device)
             (Arity Train-Transportation-Device 1)
             (Documentation Train-Transportation-Device
              "The collection of all trains, the transportation devices that run on Railways and consist of multiple Train-Cars coupled together."))

(defrelation Product
             (Name-In-Cyc Product "#$Product")
             (Product-Type Product)
             (Subclass-Of Product Individual)
             (Set-Or-Collection Product)
             (Arity Product 1)
             (Documentation Product
              "A collection of things.  Elements of Product are individual goods, services, investments, etc.--basically, anything which is offered (or may be exchanged) for money or trade.  Examples: a Lexus sedan, a package of McDonald's french fries, a massage, a bouquet of flowers, a share in a money market fund, the services of a real estate agent, a research satellite."))

(defrelation Sub-Organizations
             (Subrelation-Of Sub-Organizations Affiliated-With)
             (Subrelation-Of Sub-Organizations Sub-Groups)
             (Domain Sub-Organizations Organization)
             (Range Sub-Organizations Organization)
             (Name-In-Cyc Sub-Organizations "#$subOrganizations")
             (Cotemporal-Objects-Slot Sub-Organizations)
             (Non-Physical-Part-Predicate Sub-Organizations)
             (Irreflexive-Binary-Predicate Sub-Organizations)
             (Transitive-Binary-Predicate Sub-Organizations)
             (Slot Sub-Organizations)
             (Relation Sub-Organizations)
             (Arity Sub-Organizations 2)
             (Binary-Relation Sub-Organizations)
             (Documentation Sub-Organizations
              "The predicate Sub-Organizations relates a particular organization to
one of its sub-organizations. (Sub-Organizations ORG1 ORG2) means ORG2 is a
 sub-organization of ORG1, whether it is at the very next organizational level
down, e.g., (Sub-Organizations NationalLeague-Baseball NationalLeagueEast-Baseball),
or several levels down the heirarchy, e.g., (Sub-Organizations NationalLeague-Baseball NewYorkMets)."))

(defrelation Wave-Propagation
             (Name-In-Cyc Wave-Propagation "#$WavePropagation")
             (Temporal-Stuff-Type Wave-Propagation)
             (Default-Disjoint-Script-Type Wave-Propagation)
             (Subclass-Of Wave-Propagation Physical-Event)
             (Subclass-Of Wave-Propagation Translocation)
             (Set-Or-Collection Wave-Propagation)
             (Arity Wave-Propagation 1)
             (Documentation Wave-Propagation
              "A collection of events.  Each element of Wave-Propagation is an event in which a wavelike disturbance propagates through space, with or without a medium.  A wave propagation is like a translational movement in that it can have a From-Location and a To-Location, but differs in that there is no Object-Moving. Sound and Electromagnetic-Radiation are types of Wave-Propagation.  Elements of Wave-Propagation include the sounds from exploding firecrackers at Penn State's Homecoming celebration in 1989; the light shining from my desk lamp right now; the X-rays generated in the dentist's office last Tuesday, for examining my teeth."))

(defrelation Intangible
             (The-Partition Intangible Partially-Tangible
              |(THE-PARTITION INTANGIBLE PARTIALLY-TANGIBLE)|)
             (Name-In-Cyc Intangible "#$Intangible")
             (Collection Intangible)
             (Subclass-Of Intangible Thing)
             (Set-Or-Collection Intangible)
             (Arity Intangible 1)
             (Documentation Intangible
              "The collection of things that are not physical -- are not made of, or encoded in, matter.  Every Collection is an Intangible (even if its instances are tangible), and so are some Individuals.  Caution: do not confuse `tangibility' with `perceivability' -- humans can perceive light even though it's intangible--at least in a sense.  For more on this issue, see the relevant Cyclist-Notes."))

(defrelation Time-Quantity
             (Synonymous-External-Concept Time-Quantity Sensus-Information1997
              "AGE")
             (Name-In-Cyc Time-Quantity "#$Time-Quantity")
             (Collection Time-Quantity)
             (Fundamental-Numeric-Attribute-Type Time-Quantity)
             (Subclass-Of Time-Quantity Scalar-Interval)
             (Subclass-Of Time-Quantity Physical-Attribute)
             (Set-Or-Collection Time-Quantity)
             (Arity Time-Quantity 1)
             (Documentation Time-Quantity "Time-Quantity is a physical 
quantity possessed by Temporal-Things.  An Event transpires 
over a certain amount of Time-Quantity, a Something-Existing 
exists for a lifetime which is a certain amount of Time-Quantity,
 and of course an abstract Time-Interval has a duration which 
is a certain amount of Time-Quantity.   The standard unit of 
Time-Quantity in Cyc is Seconds-Duration (qv) but there can 
be and are many other ways to specify an amount of time; e.g., 
with other Unit-Of-Measure instances such as Weeks-Duration 
and Years-Duration, and with reified quantities of (instances 
of) Time-Quantity such as Long-Time, Immediately, 
A-Few-Decades-Duration, etc."))

(defrelation Unit-Of-Frequency
             (Name-In-Cyc Unit-Of-Frequency "#$UnitOfFrequency")
             (Interconvertible-Unit-Type Unit-Of-Frequency)
             (Subclass-Of Unit-Of-Frequency Unit-Of-Measure)
             (Subclass-Of Unit-Of-Frequency Unit-Of-Rate)
             (Set-Or-Collection Unit-Of-Frequency)
             (Arity Unit-Of-Frequency 1)
             (Documentation Unit-Of-Frequency
              "The collection of functions which are used for expressing how often something occurs during an interval of time, i.e., functions which return an element of Frequency.  E.g., (Mega-Hertz 89.5) returns a frequency of 89.5 MHz."))

(defrelation Transformation-Event
             (Name-In-Cyc Transformation-Event "#$TransformationEvent")
             (Script-Type Transformation-Event)
             (Temporal-Object-Type Transformation-Event)
             (Subclass-Of Transformation-Event Destruction-Event)
             (Subclass-Of Transformation-Event Creation-Event)
             (Subclass-Of Transformation-Event Physical-Event)
             (Set-Or-Collection Transformation-Event)
             (Arity Transformation-Event 1)
             (Documentation Transformation-Event
              "A collection of events.  In each element of Transformation-Event, at least one thing ceases to exist and at least one thing comes into existence.  Usually at least some portion of the thing(s) destroyed becomes incorporated into the thing(s) that are created.

Note:  this collection is a superset of, but NOT coextensional with, Transformation-Process (q.v.)."))

(defrelation Restlessness
             (Name-In-Cyc Restlessness "#$Restlessness")
             (Feeling-Attribute-Type Restlessness)
             (Subclass-Of Restlessness Feeling-Attribute)
             (Set-Or-Collection Restlessness)
             (Arity Restlessness 1)
             (Documentation Restlessness
              "The feeling of being troubled, restless, concerned about something, or in emotional turmoil.  This is a Collection --- for an explanation of that, see Happiness."))

(defrelation Biological-Transportation-Event
             (Name-In-Cyc Biological-Transportation-Event
              "#$BiologicalTransportationEvent")
             (Temporal-Object-Type Biological-Transportation-Event)
             (Default-Disjoint-Script-Type Biological-Transportation-Event)
             (Subclass-Of Biological-Transportation-Event Transportation-Event)
             (Subclass-Of Biological-Transportation-Event Biological-Event)
             (Set-Or-Collection Biological-Transportation-Event)
             (Arity Biological-Transportation-Event 1)
             (Documentation Biological-Transportation-Event
              "The collection of processes involving living structures in which objects are transported."))

(defrelation |(TRANSPORT-FN PERSON)|
             (Skolem-Object |(TRANSPORT-FN PERSON)|)
             (Script-Type |(TRANSPORT-FN PERSON)|)
             (Subclass-Of |(TRANSPORT-FN PERSON)| Transporting-Goods)
             (Set-Or-Collection |(TRANSPORT-FN PERSON)|)
             (Arity |(TRANSPORT-FN PERSON)| 1))

(defrelation Roof-Of-A-Construction
             (Name-In-Cyc Roof-Of-A-Construction "#$RoofOfAConstruction")
             (Existing-Object-Type Roof-Of-A-Construction)
             (Subclass-Of Roof-Of-A-Construction Surface-On-Tangible-Object)
             (Subclass-Of Roof-Of-A-Construction Part-Of-Building)
             (Set-Or-Collection Roof-Of-A-Construction)
             (Arity Roof-Of-A-Construction 1)
             (Documentation Roof-Of-A-Construction
              "The collection of all roofs of structures which are instances of Human-Shelter-Construction.  Like instances of Wall-Vertical, instances of Roof-Of-A-Construction may be considered as having one or two sides; the 'inner' side of a roof may or may not qualify as a Ceiling-Of-A-Room.  It is understood that one and only one side of a Roof-Of-A-Construction is 'exposed to the elements.'"))

(defrelation Unincorporated-Organization
             (Name-In-Cyc Unincorporated-Organization
              "#$UnincorporatedOrganization")
             (Existing-Object-Type Unincorporated-Organization)
             (Subclass-Of Unincorporated-Organization Organization)
             (Set-Or-Collection Unincorporated-Organization)
             (Arity Unincorporated-Organization 1)
             (Documentation Unincorporated-Organization
              "A collection of organizations.  An element of Unincorporated-Organization is an organization that is constituted by one or more people but is not formally incorporated by a government charter.  It may be called an association.  In many legal jurisdictions, the organization itself is not a Legal-Agent (q.v.); only its participants are.  Typically, an element of Unincorporated-Organization (and thus its participants) are not protected by the limits on liability which are extended to a Legal-Corporation (q.v.)."))

(defrelation Organization-Policy
             (Name-In-Cyc Organization-Policy "#$OrganizationPolicy")
             (Existing-Object-Type Organization-Policy)
             (Microtheory-Type Organization-Policy)
             (Subclass-Of Organization-Policy Agreement)
             (Set-Or-Collection Organization-Policy)
             (Arity Organization-Policy 1)
             (Documentation Organization-Policy
              "A collection of microtheories; a subset of Agreement.  Each element of Organization-Policy is a microtheory which contains the terms of some policy of a particular organization.  For example, U.S. Federal government hiring policies; a policy governing a corporation's charitable or political donations; or a school dress code."))

(deffunction Rectangular-Solid-Fn
   (Nth-Domain Rectangular-Solid-Fn 1 Distance)
   (Nth-Domain Rectangular-Solid-Fn 2 Distance)
   (Nth-Domain Rectangular-Solid-Fn 3 Distance)
   (Result-Instance-Of Rectangular-Solid-Fn Abstract-Shape)
   (Name-In-Cyc Rectangular-Solid-Fn "#$RectangularSolidFn")
   (Shape-Function Rectangular-Solid-Fn)
   (Function Rectangular-Solid-Fn)
   (Arity Rectangular-Solid-Fn 3)
   (Function-Arity Rectangular-Solid-Fn 2)
   (Documentation Rectangular-Solid-Fn
    "The Cyc function Rectangular-Solid-Fn is a Shape-Function (q.v.).  (Rectangular-Solid-Fn LN BR HT) returns an abstract rectangular solid of length LN, breadth BR, and height HT.  For example, the Shape of a 2-by-4 stud is Rectangular3D-Shape; it Fits-In the shape denoted by (Rectangular-Solid-Fn (Inch 2) (Inch 4) (Foot-Unit-Of-Measure 8))."))

(defrelation Unalloyed-Metal
             (Name-In-Cyc Unalloyed-Metal "#$UnalloyedMetal")
             (Tangible-Stuff-Composition-Type Unalloyed-Metal)
             (Subclass-Of Unalloyed-Metal Element-Stuff)
             (Subclass-Of Unalloyed-Metal Metal)
             (Set-Or-Collection Unalloyed-Metal)
             (Arity Unalloyed-Metal 1)
             (Documentation Unalloyed-Metal
              "A collection of tangible stuffs; a subset of Metal.  Every instance of Unalloyed-Metal is a metal which is also an element, i.e., a substance of unmixed chemical type.  Thus, each subset of Unalloyed-Metal is a subset of both Metal and Element-Stuff.  Examples of Unalloyed-Metal include the instances of Gold, Iron, Uranium, Antimony, Titanium, and many more."))

(defrelation |(THE-PARTITION INTANGIBLE PARTIALLY-TANGIBLE)|
             (Skolem-Object |(THE-PARTITION INTANGIBLE PARTIALLY-TANGIBLE)|)
             (Disjoint-Set-Or-Collection
              |(THE-PARTITION INTANGIBLE PARTIALLY-TANGIBLE)|)
             (Set-Mathematical |(THE-PARTITION INTANGIBLE PARTIALLY-TANGIBLE)|)
             (Subclass-Of |(THE-PARTITION INTANGIBLE PARTIALLY-TANGIBLE)|
              Thing)
             (Set-Or-Collection
              |(THE-PARTITION INTANGIBLE PARTIALLY-TANGIBLE)|)
             (Arity |(THE-PARTITION INTANGIBLE PARTIALLY-TANGIBLE)| 1))

(defrelation Behavior-Capable
             (Nth-Domain Behavior-Capable 1 Something-Existing)
             (Nth-Domain Behavior-Capable 2 Collection)
             (Nth-Domain Behavior-Capable 3 Role)
             (Nth-Domain-Subclass-Of Behavior-Capable 2 Situation)
             (Name-In-Cyc Behavior-Capable "#$behaviorCapable")
             (Ternary-Predicate Behavior-Capable)
             (Relation Behavior-Capable)
             (Arity Behavior-Capable 3)
             (Documentation Behavior-Capable
              "The predicate Behavior-Capable is used to describe a type of situation (and the role) in which an object can participate due to its intrinsic properties.  (Behavior-Capable OBJ SIT-TYPE ROLE) means that the individual, OBJ, is able to act as a ROLE in a situation of type SIT-TYPE.  OBJ may or may not have been designed to function in that way (cf. Primary-Function, Intended-Behavior-Capable).  Also, Behavior-Capable does not imply that OBJ can unquestionably act in that way in every such situation, since extrinsic factors may prevent it; e.g., the object may be in the wrong location, operated by a person lacking the proper skills, certain legal preconditions may not be satisfied, etc.  Examples: (intended capability) a hammer is Behavior-Capable of being the Device-Used in instances of Hammering-A-Nail; (unintended capability) an inner tube is capable of being the Device-Used in instances of people Floating-In-Liquid."))

(defrelation Relationship
             (Name-In-Cyc Relationship "#$Relationship")
             (Relationship-Type Relationship)
             (Collection Relationship)
             (Subclass-Of Relationship Mathematical-Object)
             (Subclass-Of Relationship Individual)
             (Set-Or-Collection Relationship)
             (Arity Relationship 1)
             (Documentation Relationship
              "A collection of abstract objects.  Each element of Relationship represents some kind of relation.  Some elements of Relationship are truth-valued, that is, when applied to arguments, they yield statements which are true or false.  That includes elements of the following subsets of Relationship: Predicate, Logical-Connective, and Quantifier.  Other elements of Relationship yield new terms, rather than just true or false -- among them are all the members of Non-Predicate-Function.  Syntactically, elements of Relationship are Cyc constants that can legally appear in the `zero-th' argument place of a CycL expression, i.e., immediately after the opening parenthesis in a CycL expression."))

(defrelation Professional
             (Name-In-Cyc Professional "#$Professional")
             (Existing-Object-Type Professional)
             (Subclass-Of Professional Person)
             (Set-Or-Collection Professional)
             (Arity Professional 1)
             (Documentation Professional
              "A set of agents.  Elements of Professional are agents who spend a significant part of their waking hours doing activities that are characteristic of some occupation, skilled or unskilled.  However, elements of Professional need not be working the entire duration of when they are a professional, such as a Professor on summer break, or someone who is temporarily unemployed.  The elements of Professional are persons, most of whom belong to at least one such collection during some portion of their lives.  Typically their actions are performed for pay, but not always (e.g., Artist-Visual).  What are colloquially considered professions or occupations are subsets of Professional; for example, Lumber-Jack, Scientist, Lifeguard, Stock-Broker, Technician, Craft-Worker, Housekeeper, Sports-Coach, Athlete, Legal-Professional, Publicist, Crew-Member-On-Ship, Self-Employed-Worker (and many more).  Additionally, other subsets of Professional classify workers according to other features of their working life besides skills; e.g., Self-Employed-Worker, Desk-Worker.   Subsets may be general (e.g., Desk-Worker, Doctor-Medical) or specialized (e.g., Continuing-Ed-Program-Coordinator, Pediatric-Neuro-Surgeon).  Elements of Professional are people: Mary-Shepherd (Human-Cyclist), Michael-Jordan (Athlete), Alfred-North-Whitehead (Philosopher), Michelangelo (Sculptor, Painter-Fine-Artist), Bill-Clinton (United-States-President), etc."))

(defrelation Temporal-Part-Slot
             (Name-In-Cyc Temporal-Part-Slot "#$TemporalPartSlot")
             (Predicate-Category Temporal-Part-Slot)
             (Subclass-Of Temporal-Part-Slot Slot)
             (Subclass-Of Temporal-Part-Slot Non-Physical-Part-Predicate)
             (Set-Or-Collection Temporal-Part-Slot)
             (Arity Temporal-Part-Slot 1)
             (Documentation Temporal-Part-Slot
              "A collection of predicates.  Each element of Temporal-Part-Slot is a binary predicate used to relate two things which have temporal extent, asserting either that one thing is a temporal part of the second thing, or that one thing is a temporal composite that includes the second thing.  Examples: Developmental-Stages, Sub-Events, First-Sub-Events, Sub-Abstrac, Manufacturing-Steps, Before-Actors, After-Actors."))

(deffunction Ampere
   (Args-Isa Ampere Real-Number)
   (Result-Instance-Of Ampere Physical-Attribute)
   (Result-Instance-Of Ampere Scalar-Interval)
   (Name-In-Cyc Ampere "#$Ampere")
   (Standard-Unit-Of-Measure Ampere)
   (Mks-Unit-Of-Measure Ampere)
   (Unit-Of-Current Ampere)
   (Unit-Of-Measure-No-Prefix Ampere)
   (Function Ampere)
   (Documentation Ampere
    "The standard unit of measure of electrical current, equivalent to a 1-#$Coulomb flow of current, or 1 Volt across a resistance of 1 Ohm."))

(defrelation Courtesy-Title
             (Name-In-Cyc Courtesy-Title "#$CourtesyTitle")
             (Linguistic-Object-Type Courtesy-Title)
             (Subclass-Of Courtesy-Title Title)
             (Set-Or-Collection Courtesy-Title)
             (Arity Courtesy-Title 1)
             (Documentation Courtesy-Title
              "The collection of Titles, such as  Mr., Ms., Mrs., Miss, Dr., etc., which precede names in Anglo-American addressing custom."))

(defrelation Solid-Tangible-Product
             (Name-In-Cyc Solid-Tangible-Product "#$SolidTangibleProduct")
             (Product-Type Solid-Tangible-Product)
             (Existing-Object-Type Solid-Tangible-Product)
             (Subclass-Of Solid-Tangible-Product Solid-Tangible-Thing)
             (Subclass-Of Solid-Tangible-Product Tangible-Product)
             (Set-Or-Collection Solid-Tangible-Product)
             (Arity Solid-Tangible-Product 1)
             (Documentation Solid-Tangible-Product
              "A collection of tangible products.  Each element of Solid-Tangible-Product is a tangible product that is a solid, either a solid object (e.g., an automobile) or a stuff in solid form (e.g., lumber)."))

(defrelation Order-Of-Magnitude-Interval
             (Name-In-Cyc Order-Of-Magnitude-Interval
              "#$OrderOfMagnitudeInterval")
             (Object-Type Order-Of-Magnitude-Interval)
             (Subclass-Of Order-Of-Magnitude-Interval Scalar-Interval)
             (Set-Or-Collection Order-Of-Magnitude-Interval)
             (Arity Order-Of-Magnitude-Interval 1)
             (Documentation Order-Of-Magnitude-Interval
              "Order-Of-Magnitude-Interval, a subset of Scalar-Interval, is the collection of intervals which represent significant differences in quantity, for the various types of measurable properties.  The most familiar case is for numbers, in which orders of magnitudes typically correspond with powers of 10; thus, in any given numerical quantity, the 100's dominate the 10's or the units, which are negligible with respect to the hundreds.  In Cyc, we can identify the significant intervals for any measurable property.  For example, for Time, some intervals which represent orders of magnitude are: A-Few-Seconds-Duration, A-Few-Minutes-Duration, A-Few-Hours-Duration, A-Few-Days-Duration, A-Few-Weeks-Duration, etc.  Similar scales could be identified for any measurable property.  Moreover, orders of magnitude for the same measurable property may differ between microtheories; e.g., the orders of magnitude for Time in a `GeologicalTimeMt' would be much larger than those listed above, which are relevant for human perceptions and activities.  



Any two attributes which represent amounts of the same kind of property (e.g., time, distance) and which are also elements of Order-Of-Magnitude-Interval will be assumed to differ so substantially in size that the smaller one (and values associated with it) will be insignificant compared to the larger interval (and values associated with it).  That is, in general and as a default, if ORD1 and ORD2 are two different elements of Order-Of-Magnitude-Interval which are also elements of the same type of Attribute-Value (e.g., Speed, Mass, Density), then one is negligible with respect to the other.  To know which dominates the other, we need additional knowledge about their relative size, e.g., that ORD2 is a Following-Value of (i.e., 'bigger' than) ORD1.  See also Negligible-WRT, Following-Value.  The predicate Order-Of-Magnitude (q.v.) is used to relate particular quantities to the appropriate element of Order-Of-Magnitude-Interval.  For example, two days -- in Cyc, (Days-Duration 2) -- has the Order-Of-Magnitude A-Few-Days-Duration."))

(defrelation Container-Product
             (Name-In-Cyc Container-Product "#$ContainerProduct")
             (Existing-Object-Type Container-Product)
             (Subclass-Of Container-Product Solid-Tangible-Thing)
             (Subclass-Of Container-Product Physical-Device)
             (Set-Or-Collection Container-Product)
             (Arity Container-Product 1)
             (Documentation Container-Product
              "A collection of physical devices.  An instance of Container-Product is an object whose Primary-Function (or one of whose main functions) is to be a container.  Examples are of staggering variety, including storage containers for books, office records, food, clothing, tools, and materials; containers for transporting the same; passenger compartments of various kinds of vehicles; artificial constructs for housing humans and animals; etc., etc.  Instances of Crib, Sandbox, Office-Space, and Coffin."))

(defrelation Water
             (Liquid-Fn Water |(LIQUID-FN WATER)|)
             (Solid-Fn Water |(SOLID-FN WATER)|)
             (Gaseous-Fn Water |(GASEOUS-FN WATER)|)
             (Name-In-Cyc Water "#$Water")
             (Object-Type Water)
             (Chemical-Compound-Type Water)
             (Subclass-Of Water Oxide)
             (Set-Or-Collection Water)
             (Arity Water 1)
             (Documentation Water
              "A collection of tangible things; a subset of Oxide.  Each instance of Water is one piece of all the portions of the chemical compound H2O.  Those instances may be in a gaseous, liquid, or solid  State-Of-Matter; they may be salty, not salty, drinkable, or not drinkable.  Examples of Water include portions of the ocean, such as the Bay-Of-Biscay and the Bay-Of-Bengal (see also Sea-Water); bodies of fresh water, such as Niagara-Falls or the Ganges-River; quantities of chlorinated water (see Pool-Water); and the contents of bottles of tonic water (see Seltzer-Water).  Things that have one or more important properties different from water's, but consist mostly of water, don't belong to the collection Water but have an element of Water as their Main-Constituent; e.g., urine, coffee, lemonade."))

(defrelation Navigation-Device
             (Name-In-Cyc Navigation-Device "#$NavigationDevice")
             (Existing-Object-Type Navigation-Device)
             (Subclass-Of Navigation-Device Solid-Tangible-Thing)
             (Subclass-Of Navigation-Device Physical-Device)
             (Set-Or-Collection Navigation-Device)
             (Arity Navigation-Device 1)
             (Documentation Navigation-Device
              "A collection of physical devices.  An instance of Navigation-Device is a device used for Navigating, i.e., for taking the bearings and plotting the course of someone or something travelling through some medium, usually in some transportation device.  Instances include the simplest elements of Compass, but also sophisticated GPS (geopositioning systems utilizing satellites.)"))

(defrelation Building
             (Name-In-Cyc Building "#$Building")
             (Existing-Object-Type Building)
             (Product-Type Building)
             (Subclass-Of Building Fixed-Structure)
             (Subclass-Of Building Human-Shelter-Construction)
             (Subclass-Of Building Real-Estate)
             (Set-Or-Collection Building)
             (Arity Building 1)
             (Documentation Building
              "A collection of artifacts; a subset of Fixed-Structure and of Human-Shelter-Construction.  An instance of Building is typically a substantial structure and must have walls and a roof, with rooms inside or at least some area designed to be occupied by humans (but not necessarily as a residence).  Examples include the Empire State Building, Michael Jackson's house in L.A., King Arthur's castle, an Aircraft-Hangar at O'Hare, a Lighthouse in the Mediterranean sea, the Sydney-Opera-House, the Washington-Monument-In-Washington-DC, etc."))

(defrelation Making-Facial-Expression
             (Name-In-Cyc Making-Facial-Expression "#$MakingFacialExpression")
             (Temporal-Stuff-Type Making-Facial-Expression)
             (Default-Disjoint-Script-Type Making-Facial-Expression)
             (Subclass-Of Making-Facial-Expression Action)
             (Subclass-Of Making-Facial-Expression Body-Movement-Event)
             (Set-Or-Collection Making-Facial-Expression)
             (Arity Making-Facial-Expression 1)
             (Documentation Making-Facial-Expression
              "The collection of events during which the configuration of an agent's face changes.  This is usually associated with the expression of some emotion."))

(defrelation Manager
             (Name-In-Cyc Manager "#$Manager")
             (Occupation-Type Manager)
             (Subclass-Of Manager Desk-Worker)
             (Set-Or-Collection Manager)
             (Arity Manager 1)
             (Documentation Manager
              "A collection of people.  An instance of Manager is a person whose primary job is to manage other people, directing their work activity in an Organization or for a Project.  A Manager tells his or her subordinate workers what to do."))

(defrelation Meta-Relation
             (Name-In-Cyc Meta-Relation "#$MetaRelation")
             (Relationship-Type Meta-Relation)
             (Subclass-Of Meta-Relation Relationship)
             (Set-Or-Collection Meta-Relation)
             (Arity Meta-Relation 1)
             (Documentation Meta-Relation
              "A collection of relations. Each element of Meta-Relation can be used to define other relations."))

(defrelation Scientist
             (Name-In-Cyc Scientist "#$Scientist")
             (Occupation-Type Scientist)
             (Subclass-Of Scientist Professional)
             (Set-Or-Collection Scientist)
             (Arity Scientist 1)
             (Documentation Scientist
              "A set of persons; a subset of Professional.  Each element of Scientist is a person who is educated and employed in one (or more) of the natural or abstract sciences.  Elements of Scientist include members of its subsets Astronomer, Chemist, Linguist, Mathematician, Geneticist, Cultural-Anthropologist, etc.  Examples of Scientist: Charles-Darwin, Richard-Feynman, Noam Chomsky."))

(defrelation Creation-Or-Destruction-Event
             (Name-In-Cyc Creation-Or-Destruction-Event
              "#$CreationOrDestructionEvent")
             (Temporal-Object-Type Creation-Or-Destruction-Event)
             (Subclass-Of Creation-Or-Destruction-Event Physical-Event)
             (Set-Or-Collection Creation-Or-Destruction-Event)
             (Arity Creation-Or-Destruction-Event 1)
             (Documentation Creation-Or-Destruction-Event
              "A collection of events.  During each element of Creation-Or-Destruction-Event, one or more instances of Entity come into or go out of existence.  Elements of this collection are the sorts of events that have Inputs, Outputs, Products, Waste-Products, and By-Products.  Examples of Creation-Or-Destruction-Event would include a particular campfire (a Combustion-Process), manufacturing a particular car, etc."))

(defrelation Road-Vehicle
             (Transport-Via-Fn Road-Vehicle |(TRANSPORT-VIA-FN ROAD-VEHICLE)|)
             (Name-In-Cyc Road-Vehicle "#$RoadVehicle")
             (Product-Type Road-Vehicle)
             (Existing-Object-Type Road-Vehicle)
             (Subclass-Of Road-Vehicle Transportation-Device-Vehicle)
             (Subclass-Of Road-Vehicle Land-Transportation-Device)
             (Subclass-Of Road-Vehicle Container-Product)
             (Set-Or-Collection Road-Vehicle)
             (Arity Road-Vehicle 1)
             (Documentation Road-Vehicle
              "A collection of transportation devices.  An instance of Road-Vehicle is a vehicle which would typically be found travelling on roads and (optionally) carrying passengers: cars, busses, vans, pickup trucks, fire trucks, RVs, motorcycles, etc..  Since Road-Vehicles are vehicles, i.e. self powered (e.g. see Vehicle), Land-Transportation-Devices such as Bicycles, or Wheelchairs are not in this class."))

(defobject |(NO-AMOUNT-FN ELASTICITY)|
   (Scalar-Interval |(NO-AMOUNT-FN ELASTICITY)|)
   (Elasticity |(NO-AMOUNT-FN ELASTICITY)|)
   (Skolem-Object |(NO-AMOUNT-FN ELASTICITY)|)
   (Documentation |(NO-AMOUNT-FN ELASTICITY)|
    "does not re-expand at all after compression"))

(defrelation Name-String
             (Synonymous-External-Concept Name-String Sensus-Information1997
              "NAME-RELATION")
             (Synonymous-External-Concept Name-String Sensus-Information1997
              "NAME-OF")
             (Domain Name-String Reifiable-Term)
             (Range Name-String Proper-Name-String)
             (Name-In-Cyc Name-String "#$nameString")
             (Slot Name-String)
             (Intangible-Object-Predicate Name-String)
             (Relation Name-String)
             (Arity Name-String 2)
             (Binary-Relation Name-String)
             (Documentation Name-String "(Name-String THING STRING) means that
the name of the thing THING is the string STRING. Use it to connect
constants or NATS with their names. For agents, use the more 
specific predicate Name-Of-Agent."))

(defrelation Researcher
             (Name-In-Cyc Researcher "#$Researcher")
             (Occupation-Type Researcher)
             (Subclass-Of Researcher Professional)
             (Set-Or-Collection Researcher)
             (Arity Researcher 1)
             (Documentation Researcher
              "A collection of persons; a subset of Professional.  Each element of Researcher is a person who performs research as his or her main occupation.  This collection includes academicians, clinical investigators, experimental physicists, market researchers, industrial researchers, etc."))

(defrelation Unit-Of-Energy
             (Name-In-Cyc Unit-Of-Energy "#$UnitOfEnergy")
             (Interconvertible-Unit-Type Unit-Of-Energy)
             (Subclass-Of Unit-Of-Energy Unit-Of-Measure)
             (Set-Or-Collection Unit-Of-Energy)
             (Arity Unit-Of-Energy 1)
             (Documentation Unit-Of-Energy
              "The collection of functions which return elements of Energy-As-A-Quantity.  E.g., (Joule 5) denotes 5 joules."))

(defrelation Transparency
             (Name-In-Cyc Transparency "#$Transparency")
             (Measurable-Attribute-Type Transparency)
             (Subclass-Of Transparency Physical-Attribute)
             (Subclass-Of Transparency Scalar-Interval)
             (Set-Or-Collection Transparency)
             (Arity Transparency 1)
             (Documentation Transparency
              "A collection of attributes; a subset of Physical-Attribute.  Each element of Transparency represents a capacity of some tangible object to transmit light.  Degrees of Transparency may be represented qualitatively (e.g., Translucent, Transparent, Murky, Opaque), or using Generic-Value-Functions.  Indicate a particular object's Transparency with the predicate Transparency-Of-Object."))

(defobject Semiconductor-Resistance
   (Electrical-Resistance Semiconductor-Resistance)
   (Name-In-Cyc Semiconductor-Resistance "#$SemiconductorResistance")
   (Documentation Semiconductor-Resistance
    "A measurable physical attribute.  Semiconductor-Resistance is the element of Electrical-Resistance that represents the level of resistance found in instances of Semiconductor-Stuff.  See also Resistance-Of-Object."))

(defrelation Fluid-Tangible-Thing
             (Name-In-Cyc Fluid-Tangible-Thing "#$FluidTangibleThing")
             (Existing-Stuff-Type Fluid-Tangible-Thing)
             (Subclass-Of Fluid-Tangible-Thing Tangible-Thing)
             (Set-Or-Collection Fluid-Tangible-Thing)
             (Arity Fluid-Tangible-Thing 1)
             (Documentation Fluid-Tangible-Thing
              "A collection of tangibles.  Each element of Fluid-Tangible-Thing is a tangible thing that flows, including gases, liquids, and semisolid tangible things which are Pourable (e.g., sand).  Examples: the Air-In-Austin, Lake-Erie, the snow drifted in my driveway, the sand on the beach at Hippie Hollow, mercury in the thermometer on the balcony.  Note that the granules of a semisolid Fluid-Tangible-Thing are not necessarily themselves Fluid-Tangible-Things.  Cf. Liquid-Tangible-Thing."))

(defrelation Desk-Worker
             (Name-In-Cyc Desk-Worker "#$DeskWorker")
             (Occupation-Type Desk-Worker)
             (Subclass-Of Desk-Worker Professional)
             (Set-Or-Collection Desk-Worker)
             (Arity Desk-Worker 1)
             (Documentation Desk-Worker
              "A collection of persons; a subset of Professional.  This is a general category of workers that generally sit at desks, as opposed to those who do factory work or outside work, etc.  Subsets include Administrator, Computer-Operator, and Secretary."))

(defrelation Physical-Attribute-Description-Slot
             (Name-In-Cyc Physical-Attribute-Description-Slot
              "#$PhysicalAttributeDescriptionSlot")
             (Relationship-Type Physical-Attribute-Description-Slot)
             (Subclass-Of Physical-Attribute-Description-Slot
              Physical-Feature-Describing-Predicate)
             (Subclass-Of Physical-Attribute-Description-Slot Slot)
             (Subclass-Of Physical-Attribute-Description-Slot
              Extensional-Representation-Predicate)
             (Set-Or-Collection Physical-Attribute-Description-Slot)
             (Arity Physical-Attribute-Description-Slot 1)
             (Documentation Physical-Attribute-Description-Slot
              "A collection of predicates.  Physical-Attribute-Description-Slot is a subset of both :Slot and Physical-Feature-Describing-Predicate.  Each element of Physical-Attribute-Description-Slot relates some particular tangible object to an instance of Physical-Attribute which characterizes that object.  The attribute may or may not be a quantifiable property.  Examples of Physical-Attribute-Description-Slot: Object-Emits-Odor, Viscosity-Of-Substance, Color-Of-Object, Diameter-Of-Object, Physical-Parts, Shape, Xz-Cross-Section-Shape-Type."))

(defrelation Anti-Symmetric-Binary-Predicate
             (Name-In-Cyc Anti-Symmetric-Binary-Predicate
              "#$AntiSymmetricBinaryPredicate")
             (Predicate-Category Anti-Symmetric-Binary-Predicate)
             (Collection Anti-Symmetric-Binary-Predicate)
             (Subclass-Of Anti-Symmetric-Binary-Predicate Slot)
             (Set-Or-Collection Anti-Symmetric-Binary-Predicate)
             (Arity Anti-Symmetric-Binary-Predicate 1)
             (Documentation Anti-Symmetric-Binary-Predicate
              "A collection of predicates; the subset of :Slot whose elements represent antisymmetric relations.  A predicate F is an element of Anti-Symmetric-Binary-Predicate if and only if F is a binary predicate and, if both (F X Y) and (F Y X) hold, then X=Y, for every X,Y within the domain and range of F.  For example, Greater-Than-Or-Equal-To, Compatible-Blood-Types.







Note this additional restriction: A Cyc predicate F can be an element of Anti-Symmetric-Binary-Predicate only if the type (i.e., arg-Isa) constraint applicable to F's first argument is not disjoint with the type constraint applicable to F's second argument.  See also Note-On-Argument-Typing-And-Properties-Of-Relations."))

(defrelation Secretion-Bodily
             (Name-In-Cyc Secretion-Bodily "#$Secretion-Bodily")
             (Tangible-Stuff-Composition-Type Secretion-Bodily)
             (Subclass-Of Secretion-Bodily Natural-Tangible-Stuff)
             (Set-Or-Collection Secretion-Bodily)
             (Arity Secretion-Bodily 1)
             (Documentation Secretion-Bodily
              "The collection of all Natural-Tangible-Stuff secreted by an organism's body.  There are a wide variety of bodily secretions, including Hormones, Mucus, Insulin-The-Secretion, and Semen.  Secretions may be deposited either within the body (e.g., Bile-The-Secretion) or outside of it (e.g., Sweat). 
Note: Secretions are different from Excretion-Substance in that secretions are not necessarily waste products.  E.g., they may be a release of pheromones to attract a mate, a layer of sweat to cool off the organism, a layer of nectar to attract bees, etc.  Some subsets of Secretion-Bodily, such as Sweat, are also subsets of Excretion-Substance (i.e., wastes)."))

(defrelation |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "NON-DIRECTED-ACTION")|
             (Skolem-Object
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "NON-DIRECTED-ACTION")|)
             (Collection
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "NON-DIRECTED-ACTION")|)
             (Subclass-Of
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "NON-DIRECTED-ACTION")|
              Physical-Event)
             (Set-Or-Collection
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "NON-DIRECTED-ACTION")|)
             (Arity
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "NON-DIRECTED-ACTION")|
              1))

(defrelation Ambulance
             (Transport-Via-Fn Ambulance |(TRANSPORT-VIA-FN AMBULANCE)|)
             (Name-In-Cyc Ambulance "#$Ambulance")
             (Product-Type Ambulance)
             (Existing-Object-Type Ambulance)
             (Subclass-Of Ambulance Road-Vehicle)
             (Set-Or-Collection Ambulance)
             (Arity Ambulance 1)
             (Documentation Ambulance
              "The collection of all RoadVehicles that are equipped primarily for transporting wounded, injured or sick persons."))

(defrelation Excitement
             (Name-In-Cyc Excitement "#$Excitement")
             (Feeling-Attribute-Type Excitement)
             (Subclass-Of Excitement Feeling-Attribute)
             (Set-Or-Collection Excitement)
             (Arity Excitement 1)
             (Documentation Excitement
              "A feeling of arousal that stirs up, moves profoundly, or serves as a challenge to one's power, eliciting the desire to do or perceive something.  This is a Collection --- for an explanation of that, see Happiness.  Some more specialized Feeling-Attribute-Types than Excitement include Enthusiasm, Celebratory-Emotion, Triumph-The-Feeling, etc."))

(defobject Government-Leader-Note
   (Shared-Note Government-Leader-Note)
   (Name-In-Cyc Government-Leader-Note "#$GovernmentLeaderNote")
   (Documentation Government-Leader-Note
    "The distinction between Head-Of-Government and Head-Of-State is a subtle one.  Head-Of-Government is the set of Leaders who actually run the government.  Head-Of-State is the set of Leaders who are mainly ceremonial figures, fulfilling diplomatic roles such as hosting foreign dignitaries.  For a given Country, these two roles may be filled by the same person, such as Bill-Clinton for the United-States-Of-America in 1996, or by two separate individuals; for example, in 1996 the Head-Of-State for Great-Britain would be Queen-Elizabeth-II, while the Head-Of-Government would be John Major (Prime-Minister-Head-Of-Government).  Cyc constant names indicate which government role is associated with a particular title; e.g., Sultan-Head-Of-Government vs. Sultan-Head-Of-State."))

(defrelation Computational-Object
             (Name-In-Cyc Computational-Object "#$ComputationalObject")
             (Object-Type Computational-Object)
             (Subclass-Of Computational-Object Intangible-Individual)
             (Subclass-Of Computational-Object
              Mathematical-Or-Computational-Thing)
             (Set-Or-Collection Computational-Object)
             (Arity Computational-Object 1)
             (Documentation Computational-Object
              "A collection of abstract objects; a subset of Intangible-Individual.  Each element of Computational-Object is a syntactically structured form, such as a Cyc system expression, a Lisp string, a C variable name, or an equation in a particular canonical form format."))

(defobject Snowy
   (Weather-Attribute Snowy)
   (Subattribute-Of Snowy Cloudy)
   (Name-In-Cyc Snowy "#$Snowy")
   (Documentation Snowy
    "The Weather-Attribute that characterizes an Outdoor-Location at which it is snowing."))

(defrelation Heavenly-Body
             (Name-In-Cyc Heavenly-Body "#$HeavenlyBody")
             (Existing-Object-Type Heavenly-Body)
             (Subclass-Of Heavenly-Body Astronomical-Object)
             (Subclass-Of Heavenly-Body Partially-Tangible)
             (Set-Or-Collection Heavenly-Body)
             (Arity Heavenly-Body 1)
             (Documentation Heavenly-Body
              "A collection of tangible objects.  Each element of Heavenly-Body is an astronomical object located in outer space (including the Earth).  Elements of Heavenly-Body are natural bodies, NOT artificially made objects such as spaceships or communications satellites.  Examples: the Sun, Polaris-The-Star, Planet-Pluto, Moon-Of-Earth."))

(defrelation Botanical-Organ
             (Name-In-Cyc Botanical-Organ "#$BotanicalOrgan")
             (Existing-Object-Type Botanical-Organ)
             (Subclass-Of Botanical-Organ Plant-Part)
             (Set-Or-Collection Botanical-Organ)
             (Arity Botanical-Organ 1)
             (Documentation Botanical-Organ
              "A subset of Plant-Part, the collection Botanical-Organ includes parts of a plant which are major morphological and functional divisions of individual plants, typically consisting of stems, flowers, roots, leaves, etc."))

(defobject Continent-Of-Europe
   (Continent Continent-Of-Europe)
   (Entity Continent-Of-Europe)
   (Name-In-Cyc Continent-Of-Europe "#$ContinentOfEurope")
   (Documentation Continent-Of-Europe
    "The sixth largest continent; includes adjacent islands.  The Continent-Of-Europe is separated from the Continent-Of-Asia by the Ural-Mountains."))

(defrelation Chordata-Phylum
             (Name-In-Cyc Chordata-Phylum "#$ChordataPhylum")
             (Biological-Phylum Chordata-Phylum)
             (Subclass-Of Chordata-Phylum Thing)
             (Set-Or-Collection Chordata-Phylum)
             (Arity Chordata-Phylum 1)
             (Documentation Chordata-Phylum
              "An instance of Biological-Phylum within the Biological-Kingdom Animal, the Chordata-Phylum contains the many chordate taxa.  All have members who have a notochord (a flexible rod running the length of the body) at some stage of development and pharyngeal gills at some stage of development.  The Chordata-Phylum has as Taxon-Members all the subsets of Vertebrate (including Person), as well as some non-vertebrate chordates like Amphioxus."))

(defrelation Tangible-Thing
             (Name-In-Cyc Tangible-Thing "#$TangibleThing")
             (Existing-Object-Type Tangible-Thing)
             (Subclass-Of Tangible-Thing Partially-Tangible)
             (Set-Or-Collection Tangible-Thing)
             (Arity Tangible-Thing 1)
             (Documentation Tangible-Thing
              "The collection of things which are made of some sort of matter and whose nature is primarily material--in the sense that they do not have important non-physical properties (such as encoded information).  (Compare Partially-Tangible.)  Tangible-Thing includes chemical compounds, natural objects (and their parts), tangible artifacts and man-made materials (but see Information-Bearing-Object).  Collections that are specializations of Tangible-Thing may be elements of Existing-Object-Type or Existing-Stuff-Type (qq.v.), or of neither.  
Note: Tangible-Thing has the genls Partially-Tangible in the Base-KB, so its elements are NOT generally excluded from having intangible aspects; however, material things which do have important non-physical aspects should be elements of Partially-Tangible instead.  Moreover, note that in some contexts, all instances of this collection must be 100% tangible and have no intangible aspects (i.e., it is Disjoint-With Partially-Tangible)."))

(defrelation Doorway
             (Name-In-Cyc Doorway "#$Doorway")
             (Existing-Object-Type Doorway)
             (Subclass-Of Doorway Inanimate-Thing)
             (Subclass-Of Doorway Portal)
             (Set-Or-Collection Doorway)
             (Arity Doorway 1)
             (Documentation Doorway
              "A collection of portals.  Each element of Doorway is a portal in some instance of Shelter-Construction, suitable for people (and perhaps vehicles) to enter and exit.  For example, doorways to houses, office buildings, elevators, automobiles, airplanes, garages, etc."))

(defrelation Translocation
             (Name-In-Cyc Translocation "#$Translocation")
             (Temporal-Object-Type Translocation)
             (Subclass-Of Translocation Generalized-Transfer)
             (Set-Or-Collection Translocation)
             (Arity Translocation 1)
             (Documentation Translocation
              "A collection of events; a subset of Generalized-Transfer.  Each element of Translocation is a transfer of something across a distance.  Translocations may have a To-Location and a From-Location.  Translocation is the common generalization of (i.e., a superset of) both Wave-Propagation and Movement-Translation-Event (q.v.). "))

(defrelation Material-Strength-Type
             (Name-In-Cyc Material-Strength-Type "#$MaterialStrengthType")
             (Collection Material-Strength-Type)
             (Subclass-Of Material-Strength-Type
              Derived-Numeric-Attribute-Type)
             (Set-Or-Collection Material-Strength-Type)
             (Arity Material-Strength-Type 1)
             (Documentation Material-Strength-Type
              "A collection of collections.  Each element of Material-Strength-Type is a specific collection of attributes used in determining the strength of a material.  Examples: Hardness, Malleability, Ductility, Elasticity, Shear-Strength."))

(defrelation Bio-Deterioration-Resistance
             (Very-High-Amount-Fn Bio-Deterioration-Resistance
              |(VERY-HIGH-AMOUNT-FN BIO-DETERIORATION-RESISTANCE)|)
             (Medium-Amount-Fn Bio-Deterioration-Resistance
              |(MEDIUM-AMOUNT-FN BIO-DETERIORATION-RESISTANCE)|)
             (Name-In-Cyc Bio-Deterioration-Resistance
              "#$BioDeteriorationResistance")
             (Primitive-Attribute-Type Bio-Deterioration-Resistance)
             (Subclass-Of Bio-Deterioration-Resistance Scalar-Interval)
             (Subclass-Of Bio-Deterioration-Resistance Physical-Attribute)
             (Set-Or-Collection Bio-Deterioration-Resistance)
             (Arity Bio-Deterioration-Resistance 1)
             (Documentation Bio-Deterioration-Resistance
              "A collection of attributes; a subset of Physical-Attribute.  Each element of Bio-Deterioration-Resistance represents a specific capacity of a tangible object to resist biological deterioration.  Degrees of Bio-Deterioration-Resistance may be represented using Generic-Value-Functions.  Indicate a particular object's Bio-Deterioration-Resistance with the predicate Resistance-To-Bio-Deterioration."))

(deffunction Radians-Per-Second
   (Args-Isa Radians-Per-Second Real-Number)
   (Result-Instance-Of Radians-Per-Second Rate-Of-Rotation)
   (Result-Instance-Of Radians-Per-Second Rate)
   (Result-Instance-Of Radians-Per-Second Scalar-Interval)
   (Name-In-Cyc Radians-Per-Second "#$RadiansPerSecond")
   (Unit-Of-Measure-No-Prefix Radians-Per-Second)
   (Unit-Of-Angular-Speed Radians-Per-Second)
   (Mks-Unit-Of-Measure Radians-Per-Second)
   (Standard-Unit-Of-Measure Radians-Per-Second)
   (Function Radians-Per-Second)
   (Documentation Radians-Per-Second "The basic measure of Rate-Of-Rotation."))

(defrelation Astronomical-Object
             (Name-In-Cyc Astronomical-Object "#$AstronomicalObject")
             (Existing-Object-Type Astronomical-Object)
             (Subclass-Of Astronomical-Object Inanimate-Object-Natural)
             (Subclass-Of Astronomical-Object Tangible-Thing)
             (Set-Or-Collection Astronomical-Object)
             (Arity Astronomical-Object 1)
             (Documentation Astronomical-Object
              "A collection of tangible objects.  Each element of Astronomical-Object is an object of interest to astronomers, which includes the Earth along with other objects in outer space.  Some, but not all, elements of Astronomical-Object belong to Celestial-Object, the collection of heavenly bodies visible from earth.  Examples: Polaris-The-Star, the Sun, Planet-Saturn."))

(defrelation |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "GAS-MATERIAL")|
             (Skolem-Object
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "GAS-MATERIAL")|)
             (Collection
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "GAS-MATERIAL")|)
             (Subclass-Of
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "GAS-MATERIAL")|
              Thing)
             (Set-Or-Collection
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "GAS-MATERIAL")|)
             (Arity
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "GAS-MATERIAL")| 1))

(defrelation Structural-Support-Stuff
             (Name-In-Cyc Structural-Support-Stuff "#$StructuralSupportStuff")
             (Existing-Stuff-Type Structural-Support-Stuff)
             (Subclass-Of Structural-Support-Stuff Solid-Tangible-Thing)
             (Set-Or-Collection Structural-Support-Stuff)
             (Arity Structural-Support-Stuff 1)
             (Documentation Structural-Support-Stuff
              "A collection of tangibles. Each element of Structural-Support-Stuff is a hard, rigid substance typically used for structural support.  For example, the instances of Wood, Bone-The-Stuff, Stone-Stuff."))

(defrelation Flow-Path
             (Name-In-Cyc Flow-Path "#$FlowPath")
             (Object-Type Flow-Path)
             (Subclass-Of Flow-Path Spatial-Thing)
             (Subclass-Of Flow-Path Path-Simple)
             (Set-Or-Collection Flow-Path)
             (Arity Flow-Path 1)
             (Documentation Flow-Path
              "A collection of pathways; a subset of Path-Generic.  Each element of Flow-Path is a path whose extent is delineated by the movement of a fluid over an area; for example, the path of a lava flow or the Alaskan-Pipeline.  Elements of Flow-Path may (but need not) be constrained by objects or forces that channel the flow of fluid; see also the subset Fluid-Conduit."))

(defobject Spanish-Language
   (Living-Language Spanish-Language)
   (Name-In-Cyc Spanish-Language "#$SpanishLanguage")
   (Documentation Spanish-Language
    "The indigenous language of Spain and, secondarily, most of Central and South America"))

(defrelation Orientation-Attribute
             (Name-In-Cyc Orientation-Attribute "#$OrientationAttribute")
             (Attribute-Type Orientation-Attribute)
             (Subclass-Of Orientation-Attribute Attribute-Value)
             (Set-Or-Collection Orientation-Attribute)
             (Arity Orientation-Attribute 1)
             (Documentation Orientation-Attribute
              "The collection of attributes which characterize an object's orientation relative to whatever instance of Frame-Of-Reference is being used in the current context.  In most contexts, orientation is taken with respect to the Terrestrial-Frame-Of-Reference."))

(defrelation Predicate-Category
             (Name-In-Cyc Predicate-Category "#$PredicateCategory")
             (Collection Predicate-Category)
             (Subclass-Of Predicate-Category Relationship-Type)
             (Set-Or-Collection Predicate-Category)
             (Arity Predicate-Category 1)
             (Documentation Predicate-Category
              "A collection of collections; a subset of Relationship-Type.  Each element of Predicate-Category is a collection of Cyc Predicates.  Examples: Temporal-Part-Slot, Interval-Based-Quantity-Slot, Functional-Slot, Inter-Actor-Slot, Transitive-Binary-Predicate, Propositional-Attitude-Slot.  See also the comment on Predicate."))

(defrelation Standard-Unit-Of-Measure
             (Name-In-Cyc Standard-Unit-Of-Measure "#$StandardUnitOfMeasure")
             (Relationship-Type Standard-Unit-Of-Measure)
             (Subclass-Of Standard-Unit-Of-Measure Unit-Of-Measure)
             (Set-Or-Collection Standard-Unit-Of-Measure)
             (Arity Standard-Unit-Of-Measure 1)
             (Documentation Standard-Unit-Of-Measure
              "Standard-Unit-Of-Measure is a subset of Unit-Of-Measure, the collection of units used to measure quantifiable properties.  Standard-Unit-Of-Measure contains those units which are considered the Standard-Unit for the property they measure.  Some examples: the standard Unit-Of-Volume is the Liter; the standard Unit-Of-Temperature is the Degree-Kelvin; the standard Unit-Of-Mass is the Kilogram.  Every unit type has one unit designated as the standard unit for that type."))

(defrelation Electron
             (Name-In-Cyc Electron "#$Electron")
             (Existing-Object-Type Electron)
             (Subclass-Of Electron Sub-Atomic-Particle)
             (Set-Or-Collection Electron)
             (Arity Electron 1)
             (Documentation Electron
              "A collection of objects; a subset of Sub-Atomic-Particle.  Every instance of Electron is a subatomic particle with an Electrical-Charge of -1."))

(deffunction Dollar-United-States
   (Args-Isa Dollar-United-States Real-Number)
   (Result-Instance-Of Dollar-United-States Money)
   (Result-Instance-Of Dollar-United-States Scalar-Interval)
   (Name-In-Cyc Dollar-United-States "#$Dollar-UnitedStates")
   (Unit-Of-Money Dollar-United-States)
   (Unit-Of-Measure-No-Prefix Dollar-United-States)
   (Standard-Unit-Of-Measure Dollar-United-States)
   (Function Dollar-United-States)
   (Documentation Dollar-United-States
    "An element of Unit-Of-Money.  Dollar-United-States represents the main standard monetary unit of the United States of America.  One Dollar-United-States is equivalent to 100 Cent-United-States.  See Unit-Of-Measure for further explanation."))

(defrelation Positive-Number
             (Name-In-Cyc Positive-Number "#$PositiveNumber")
             (Measurable-Attribute-Type Positive-Number)
             (Subclass-Of Positive-Number Non-Negative-Number)
             (Set-Or-Collection Positive-Number)
             (Arity Positive-Number 1)
             (Documentation Positive-Number
              "Positive-Number is a subset of Real-Number.  Each instance of Positive-Number is a Real-Number that is Greater-Than zero; thus, it includes 42 and 0.17 but not 0 or -5."))

(defrelation Social-Status-Attribute-Type
             (Name-In-Cyc Social-Status-Attribute-Type
              "#$SocialStatusAttributeType")
             (Collection Social-Status-Attribute-Type)
             (Subclass-Of Social-Status-Attribute-Type Social-Attribute-Type)
             (Set-Or-Collection Social-Status-Attribute-Type)
             (Arity Social-Status-Attribute-Type 1)
             (Documentation Social-Status-Attribute-Type
              "This is a collection of collections.  Each Social-Status-Attribute-Type is itself a coherent collection of attributes that pertain to rank/status along some particular `dimension' related somehow to `status in society.'  Some sample elements of Social-Status-Attribute-Type are: Social-Status-Attribute, Glamor, Social-Power, Credibility, Education-Level-Attribute, etc. "))

(defrelation Caused-By
             (not (Transitive-Binary-Predicate Caused-By))
             (Subrelation-Of Caused-By Starts-After-Starting-Of)
             (Subrelation-Of Caused-By
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "CAUSE-EFFECT")|)
             (Domain Caused-By Event)
             (Range Caused-By Event)
             (Name-In-Cyc Caused-By "#$causedBy")
             (Irreflexive-Binary-Predicate Caused-By)
             (Asymmetric-Binary-Predicate Caused-By)
             (Inter-Existing-Object-Slot Caused-By)
             (Slot Caused-By)
             (Relation Caused-By)
             (Arity Caused-By 2)
             (Binary-Relation Caused-By)
             (Documentation Caused-By "Caused-By is the predicate used for 
token-token event causation, i.e., causation between individual
events. (causedBy EVENT1 EVENT2) means that EVENT1 is causedBy
EVENT2."))

(defrelation Uses-Comm-Convention-For-Info
             (Nth-Domain Uses-Comm-Convention-For-Info 1 Abstract-Information)
             (Nth-Domain Uses-Comm-Convention-For-Info 2
              Communication-Convention)
             (Nth-Domain Uses-Comm-Convention-For-Info 3
              Information-Bearing-Thing)
             (Name-In-Cyc Uses-Comm-Convention-For-Info
              "#$usesCommConventionForInfo")
             (Ternary-Predicate Uses-Comm-Convention-For-Info)
             (Relation Uses-Comm-Convention-For-Info)
             (Arity Uses-Comm-Convention-For-Info 3)
             (Documentation Uses-Comm-Convention-For-Info
              "(Uses-Comm-Convention-For-Info INFO CC IBT) means that the Information-Bearing-Thing IBT contains the information INFO, and INFO was encoded using the Communication-Convention CC.  INFO need not be propositional (see also Propositional-Information-Thing)."))

(defrelation Cancer
             (Name-In-Cyc Cancer "#$Cancer")
             (Physiological-Condition-Type Cancer)
             (Subclass-Of Cancer Terminal-Physiological-Condition)
             (Subclass-Of Cancer Ailment-Condition)
             (Set-Or-Collection Cancer)
             (Arity Cancer 1)
             (Documentation Cancer
              "The collection of all particular cases of cancer.  Instances of Cancer may belong to any one of the many different types of disease that are studied and treated by oncologists.  Cancer is characterized by abnormal (and usually rapid) growth of cells in some organ or system of the body; these growths are then prone to dispersal (metastesis) into other body regions.  See also Cancer-Fn --- the expression (Cancer-Fn Lung) represents a subset of Cancer, namely the set of all lung cancers."))

(defrelation Controls
             (not (Irreflexive-Binary-Predicate Controls))
             (not (Reflexive-Binary-Predicate Controls))
             (not (Asymmetric-Binary-Predicate Controls))
             (not (Anti-Symmetric-Binary-Predicate Controls))
             (not (Symmetric-Binary-Predicate Controls))
             (not (Transitive-Binary-Predicate Controls))
             (Subrelation-Of Controls Cotemporal)
             (Subrelation-Of Controls Positive-Vested-Interest)
             (Domain Controls Agent)
             (Range Controls Individual)
             (Name-In-Cyc Controls "#$controls")
             (Cotemporal-Objects-Slot Controls)
             (Slot Controls)
             (Relation Controls)
             (Arity Controls 2)
             (Binary-Relation Controls)
             (Documentation Controls
              "(Controls X Y) represents that assertion that agent X controls the object Y, in one of the following 2 senses:  X can influence (prohibit, enable or constrain) the behavior of Y; or else X can at least influence (prohibit, enable or constrain) the behavior of other Agents in/concerning Y.  For example, Fred may control his horse directly, forcing it to do things, or not do them; and he also could control the horse indirectly, by deciding who else has access to and use of that horse.  Control of one agent over another agent is rarely total, of course, so this predicate is most likely to apply to a Y which is a non-living possession, and/or to apply in a very narrow context.  X's control over Y is usually either actual (de facto) control or legal (de jure) control.  It is usually Cotemporal, meaning that some time slice of X controls the same temporal time slice of Y."))

(defrelation Inform-Communication-Act
             (Synonymous-External-Concept Inform-Communication-Act
              Sensus-Information1997 "ASSERTION")
             (Synonymous-External-Concept Inform-Communication-Act
              Sensus-Information1997 "ASSERTIVE-ACT")
             (Name-In-Cyc Inform-Communication-Act "#$Inform-CommunicationAct")
             (Script-Type Inform-Communication-Act)
             (Temporal-Object-Type Inform-Communication-Act)
             (Subclass-Of Inform-Communication-Act Communication-Act-Single)
             (Set-Or-Collection Inform-Communication-Act)
             (Arity Inform-Communication-Act 1)
             (Documentation Inform-Communication-Act
              "The collection of acts of conveying information by means of intentional communication."))

(defobject Complete-Cloud-Cover
   (Cloudiness Complete-Cloud-Cover)
   (Subattribute-Of Complete-Cloud-Cover Cloudy)
   (Name-In-Cyc Complete-Cloud-Cover "#$CompleteCloudCover")
   (Documentation Complete-Cloud-Cover
    "Complete-Cloud-Cover is a Weather-Attribute representing a specific degree of Cloudiness.  This attribute describes a location as so clouded over with a uniform layer grey or white clouds that direct sunlight is blocked out.  There are no shadows, the shape or exact location of the sun or moon is impossible to identify."))

(defrelation Done-By
             (Subrelation-Of Done-By Pre-Actors)
             (Subrelation-Of Done-By Actors)
             (Domain Done-By Event)
             (Range Done-By Something-Existing)
             (Name-In-Cyc Done-By "#$doneBy")
             (Actor-Slot Done-By)
             (Slot Done-By)
             (Relation Done-By)
             (Arity Done-By 2)
             (Binary-Relation Done-By)
             (Documentation Done-By
              "The predicate Done-By relates an event to its `doer'.  (Done-By EVENT DOER) means that DOER is the `doer' in the event EVENT.  Some action on the part of the doer causes or carries out the event.  This predicate is agnostic as to whether DOER does EVENT intentionally or not (DOER need not even be animate; e.g., the event in which Mount Vesuvius erupted and buried Pompeii was Done-By Mount Vesuvius).  See Performed-By and Bodily-Doer for the more specific senses of `doer' when DOER is, respectively, an agent (Agent) acting deliberately or a biological organism (Organism-Whole)."))

(defobject Indonesia-The-Nation
   (Entity Indonesia-The-Nation)
   (Independent-Country Indonesia-The-Nation)
   (Government-Fn Indonesia-The-Nation |(GOVERNMENT-FN INDONESIA-THE-NATION)|)
   (Name-In-Cyc Indonesia-The-Nation "#$Indonesia-TheNation")
   (Documentation Indonesia-The-Nation
    "The country of Indonesia, which comprises 13500 islands. Includes both physical and political aspects."))

(deffunction Minutes-Duration
   (Args-Isa Minutes-Duration Real-Number)
   (Result-Instance-Of Minutes-Duration Scalar-Interval)
   (Result-Instance-Of Minutes-Duration Time-Quantity)
   (Name-In-Cyc Minutes-Duration "#$MinutesDuration")
   (Unit-Of-Time Minutes-Duration)
   (Unit-Of-Measure-No-Prefix Minutes-Duration)
   (Unit-Of-Measure Minutes-Duration)
   (Function Minutes-Duration)
   (Documentation Minutes-Duration
    "Minutes-Duration is a function that takes one or two numbers and returns, as its value, some amount of Time.  An expression of the form (Minutes-Duration ?min ?max) denotes a quantity of Time that is at least ?min minutes and at most ?max minutes.  An expression of the form (Minutes-Duration ?num) denotes a quantity of Time that is exactly ?num minutes."))

(defrelation Skill-Required
             (Nth-Domain Skill-Required 1 Script-Type)
             (Nth-Domain Skill-Required 2 Script-Type)
             (Nth-Domain Skill-Required 3 Script-Performance-Attribute-Type)
             (Nth-Domain Skill-Required 4 Generic-Attribute)
             (Nth-Domain-Subclass-Of Skill-Required 1 Animal-Activity)
             (Nth-Domain-Subclass-Of Skill-Required 2 Animal-Activity)
             (Nth-Domain-Subclass-Of Skill-Required 3
              Script-Performance-Attribute)
             (Name-In-Cyc Skill-Required "#$skillRequired")
             (Quaternary-Predicate Skill-Required)
             (Relation Skill-Required)
             (Arity Skill-Required 4)
             (Documentation Skill-Required
              "(Skill-Required ACT-TYPE OTHER-TYPE PERF-ATT LEVEL) means that if one is to successfully perform an instance of some kind of action (ACT-TYPE), then one must be capable of performing instances of another kind of action (OTHER-TYPE) with the performance attribute PERF-ATT at a level of at least LEVEL.  For example, (Skill-Required PlayingVolleyball ServingAVolleyball Competence Low).  If you can't even serve a volleyball at a `Low' competence level, you're not so much `playing' volleyball as developing the skills to play it."))

(defrelation Derived-Numeric-Attribute-Type
             (Name-In-Cyc Derived-Numeric-Attribute-Type
              "#$DerivedNumericAttributeType")
             (Collection Derived-Numeric-Attribute-Type)
             (Subclass-Of Derived-Numeric-Attribute-Type
              Measurable-Attribute-Type)
             (Set-Or-Collection Derived-Numeric-Attribute-Type)
             (Arity Derived-Numeric-Attribute-Type 1)
             (Documentation Derived-Numeric-Attribute-Type
              "A collection of collections.  Each element of Derived-Numeric-Attribute-Type is a collection of measurable attributes that are measured in complex units, including Volume, Area, Acceleration, etc.  The types of attributes in Derived-Numeric-Attribute-Type are `derived' from other, fundamental attributes (such as Distance and Mass) which are measured in simple units.  Cf. Fundamental-Numeric-Attribute-Type."))

(defrelation Mks-Unit-Of-Measure
             (Name-In-Cyc Mks-Unit-Of-Measure "#$MKSUnitOfMeasure")
             (Relationship-Type Mks-Unit-Of-Measure)
             (Subclass-Of Mks-Unit-Of-Measure Unit-Of-Measure)
             (Set-Or-Collection Mks-Unit-Of-Measure)
             (Arity Mks-Unit-Of-Measure 1)
             (Documentation Mks-Unit-Of-Measure
              "A subset of Unit-Of-Measure.  MKS-Unit-Of-Measure is the collection of all the measurement functions whose results use the MKS (i.e., meter-kilogram-second) system of measure to describe physical quantities.  Examples: Meters-Per-Second-Per-Second, Liter, Metric-Ton."))

(defrelation Surprise
             (Name-In-Cyc Surprise "#$Surprise")
             (Feeling-Attribute-Type Surprise)
             (Subclass-Of Surprise Feeling-Attribute)
             (Set-Or-Collection Surprise)
             (Arity Surprise 1)
             (Documentation Surprise
              "Impression due to something unexpected, unanticipated, or startling.  This is a collection; for an explanation of a typical Feeling-Attribute-Type, see Happiness.  Some more specialized Feeling-Attribute-Types than Surprise are Disappointment and Wonder-Admiration."))

(defrelation Land-Topographical-Feature
             (Name-In-Cyc Land-Topographical-Feature
              "#$LandTopographicalFeature")
             (Existing-Object-Type Land-Topographical-Feature)
             (Subclass-Of Land-Topographical-Feature Earth-Stuff)
             (Subclass-Of Land-Topographical-Feature Solid-Tangible-Thing)
             (Subclass-Of Land-Topographical-Feature Topographical-Feature)
             (Subclass-Of Land-Topographical-Feature Outdoor-Location)
             (Set-Or-Collection Land-Topographical-Feature)
             (Arity Land-Topographical-Feature 1)
             (Documentation Land-Topographical-Feature
              "A collection of geographical regions.  Each element of Topographical-Feature is a region of land distinguishable from surrounding regions by salient physical differences in surface texture, three-dimensional shape, or elevation.   For example, the Arabian-Peninsula, Zion-Hill, the San-Andreas-Fault, the Great-Smoky-Mountains."))

(defrelation Fruit
             (Name-In-Cyc Fruit "#$Fruit")
             (Existing-Object-Type Fruit)
             (Subclass-Of Fruit Plant-Part)
             (Set-Or-Collection Fruit)
             (Arity Fruit 1)
             (Documentation Fruit
              "A subset of Plant-Part.  Each element of Fruit is a plant structure that contains the seeds of angiosperms.  Many fruits have fleshy walls having high concentrations of sugars or fats, and these are often eaten by humans and other animals.  Fruits usually develop from the ovary wall, although some fruits include other tissues; e.g., the flesh of apples and of strawberries develops from the receptacle, and the fruits of pineapple and fig develop from a whole inflorescence (group of flowers)."))

(defrelation Equals
             (Slot-Inverse Equals Equals)
             (Domain Equals Thing)
             (Range Equals Thing)
             (Name-In-Cyc Equals "#$equals")
             (Transitive-Binary-Predicate Equals)
             (Reflexive-Binary-Predicate Equals)
             (Symmetric-Binary-Predicate Equals)
             (Default-Monotonic-Predicate Equals)
             (Slot Equals)
             (Relation Equals)
             (Arity Equals 2)
             (Binary-Relation Equals)
             (Documentation Equals
              "The predicate Equals is the Cyc version of identity of predicate logic.  (Equals A B) means A and B denote the same thing."))

(defrelation Structure-Members
             (Subrelation-Of Structure-Members Parts)
             (Domain Structure-Members Situation)
             (Range Structure-Members Thing)
             (Name-In-Cyc Structure-Members "#$structureMembers")
             (Slot Structure-Members)
             (Relation Structure-Members)
             (Arity Structure-Members 2)
             (Binary-Relation Structure-Members)
             (Documentation Structure-Members
              "Structure-Members is a very general predicate, encompassing all the ways a Situation's structure can be composed out of parts.  In (Structure-Members WHOL PRT), PRT could be a member of a Group or Series (if WHOL is a Group or Series), the Sub-Events of an Event (if WHOL is an Event), and so on."))

(defrelation Athlete
             (Name-In-Cyc Athlete "#$Athlete")
             (Occupation-Type Athlete)
             (Subclass-Of Athlete Professional)
             (Subclass-Of Athlete Person)
             (Set-Or-Collection Athlete)
             (Arity Athlete 1)
             (Documentation Athlete
              "A collection of persons.  Each element of Athlete is a person who trains to compete in contests involving physical agility, stamina, or strength.  In the Job-Mt, Athlete is a subset of Professional (q.v.), and hence in that microtheory represents the collection of professional athletes."))

(defrelation Abstract-Shape
             (Overlapping-External-Concept Abstract-Shape
              Sensus-Information1997 "SHAPE-QUALITY")
             (Name-In-Cyc Abstract-Shape "#$AbstractShape")
             (Object-Type Abstract-Shape)
             (Subclass-Of Abstract-Shape Geometric-Thing)
             (Set-Or-Collection Abstract-Shape)
             (Arity Abstract-Shape 1)
             (Documentation Abstract-Shape
              "A collection of objects; a subset of Geometric-Thing.  Abstract-Shape is the collection of all abstract physical shapes.  Each element of Abstract-Shape is an abstract region of physical space, having two or more dimensions.  This includes all circles, spheres, triangles, wedges, spirals, cylinders, toruses, etc."))

(defrelation Entertainment-Performance
             (Name-In-Cyc Entertainment-Performance
              "#$EntertainmentPerformance")
             (Default-Disjoint-Script-Type Entertainment-Performance)
             (Subclass-Of Entertainment-Performance Entertainment-Event)
             (Subclass-Of Entertainment-Performance Social-Gathering)
             (Subclass-Of Entertainment-Performance Accessing-An-Ibt)
             (Set-Or-Collection Entertainment-Performance)
             (Arity Entertainment-Performance 1)
             (Documentation Entertainment-Performance
              "The collection of public and private entertainment performances, like plays, street performances, ballets, movies.  Each Entertainment-Performance  is a presentation or exhibition, to a human audience, with artistic or entertainment value.  
Note:  Movies are included even though the Performers aren't performing in the same point in space-time.  But we draw the line at still photographs; i.e., those are not considered Entertainment-Performances."))

(defrelation |(THE-PARTITION NON-LEAP-YEAR LEAP-YEAR)|
             (Skolem-Object |(THE-PARTITION NON-LEAP-YEAR LEAP-YEAR)|)
             (Disjoint-Set-Or-Collection
              |(THE-PARTITION NON-LEAP-YEAR LEAP-YEAR)|)
             (Set-Mathematical |(THE-PARTITION NON-LEAP-YEAR LEAP-YEAR)|)
             (Subclass-Of |(THE-PARTITION NON-LEAP-YEAR LEAP-YEAR)| Thing)
             (Set-Or-Collection |(THE-PARTITION NON-LEAP-YEAR LEAP-YEAR)|)
             (Arity |(THE-PARTITION NON-LEAP-YEAR LEAP-YEAR)| 1))

(defrelation Feels-Towards-Object
             (Nth-Domain Feels-Towards-Object 1 Intelligent-Agent)
             (Nth-Domain Feels-Towards-Object 1 Person)
             (Nth-Domain Feels-Towards-Object 2 Individual)
             (Nth-Domain Feels-Towards-Object 3 Feeling-Attribute-Type)
             (Nth-Domain Feels-Towards-Object 4 Generic-Attribute)
             (Nth-Domain-Subclass-Of Feels-Towards-Object 3 Feeling-Attribute)
             (Name-In-Cyc Feels-Towards-Object "#$feelsTowardsObject")
             (Quaternary-Predicate Feels-Towards-Object)
             (Relation Feels-Towards-Object)
             (Arity Feels-Towards-Object 4)
             (Documentation Feels-Towards-Object
              "(Feels-Towards-Object AGT OBJ EMOTYPE DEGREE) means that the Intelligent-Agent AGT feels a feeling of the Feeling-Attribute-Type EMOTYPE towards the Individual OBJ, with intensity DEGREE.
Note: the first argument can be a non-human intelligent agent, such as a dog or a company, because we often ascribe feelings and emotions to them, and they often behave consistently with having such feelings and emotions."))

(defrelation Conveyance
             (Name-In-Cyc Conveyance "#$Conveyance")
             (Existing-Object-Type Conveyance)
             (Subclass-Of Conveyance Solid-Tangible-Thing)
             (Subclass-Of Conveyance Artifact)
             (Set-Or-Collection Conveyance)
             (Arity Conveyance 1)
             (Documentation Conveyance
              "A collection of concrete physical objects.  Each instance of Conveyance is intended for moving (at least partially tangible) things --- it could be a car, ship, plane, or other vehicle for transporting people; it could be a conveyor belt, a grocery bag, etc.  See also Transportation-Device which is used to axiomatize more specific kinds of conveying events in which the object doing the conveying actually moves along with the object being transported.  See Transportation-Event for the collection of events about this more specific kind of conveying event.  Some positive exemplars:  a gun, a car, a slingshot.  A borderline non-exemplar is a wire over which electricity, signals, etc. are moving."))

(defrelation Airport-Physical
             (Name-In-Cyc Airport-Physical "#$Airport-Physical")
             (Existing-Object-Type Airport-Physical)
             (Subclass-Of Airport-Physical Construction-Artifact)
             (Set-Or-Collection Airport-Physical)
             (Arity Airport-Physical 1)
             (Documentation Airport-Physical
              "The collection of all airfields, where airplanes take off and land.  An Airport-Physical definitely has a runway, may or may not have any other buildings.  If it's the grounds of an Airport-Organization, some of those other features will be present."))

(defrelation Rude-Action
             (Name-In-Cyc Rude-Action "#$RudeAction")
             (Default-Disjoint-Script-Type Rude-Action)
             (Subclass-Of Rude-Action Action)
             (Subclass-Of Rude-Action Social-Occurrence)
             (Set-Or-Collection Rude-Action)
             (Arity Rude-Action 1)
             (Documentation Rude-Action
              "The collection of behaviors that go against the social conventions of politeness.  This will be a different set of behaviors in different circumstances (contexts).  In an office, e.g., it might be rude to make a loud noise, but at a football game it might be rude to not do so."))

(defrelation Acquaintance-Attribute
             (Name-In-Cyc Acquaintance-Attribute "#$AcquaintanceAttribute")
             (Social-Attribute-Type Acquaintance-Attribute)
             (Subclass-Of Acquaintance-Attribute Attribute-Value)
             (Set-Or-Collection Acquaintance-Attribute)
             (Arity Acquaintance-Attribute 1)
             (Documentation Acquaintance-Attribute
              "The collection of attributes that specify ways in which (and/or degrees to which) one person is acquainted with another  E.g., some instances of this collection are:  Famous-Person-Acquaintance, True-Fan-Acquaintance, Intimate-Acquaintance, Frequent-Contact-Acquaintance, etc."))

(defrelation Movement-Translation-Event
             (The-Covering Movement-Translation-Event Movement-Rotation
              |(THE-COVERING MOVEMENT-TRANSLATION-EVENT MOVEMENT-ROTATION)|)
             (Name-In-Cyc Movement-Translation-Event
              "#$Movement-TranslationEvent")
             (Temporal-Object-Type Movement-Translation-Event)
             (Script-Type Movement-Translation-Event)
             (Subclass-Of Movement-Translation-Event Translocation)
             (Subclass-Of Movement-Translation-Event Movement-Event)
             (Set-Or-Collection Movement-Translation-Event)
             (Arity Movement-Translation-Event 1)
             (Documentation Movement-Translation-Event
              "This collection is a subset of Movement-Event.  An element of this set is an Event in which the center of mass of the Object-Moving changes location, with respect to the relevant frame of reference.  Moreover, the moving object travels along some Pathway-Complete from its origin (From-Location) to its stopping place (To-Location) and must, at some point during the movement, be in a different location than it was at the start of motion (even if it ultimately returns to the origin).  So:  One special subset of translational movements includes those in which the movement ends in the same place it started from (e.g., one lap of a race car around the Indianapolis race trace; a trip to the grocery store and back); this subset is Translation-No-Location-Change (including its subset Translation-Round-Trip).  The other case is where the From-Location and To-Location of a Movement-Translation-Event are different; in that case, the movement event is also an element of Translation-Location-Change (e.g., the movement of the baseball during a home run hit by Roger Maris.)     Note that a Stationary object cannot be an Object-Moving in a Movement-Translation-Event, because it has a zero translational velocity."))

(defrelation Provider-Of-Motive-Force
             (Subrelation-Of Provider-Of-Motive-Force Pre-Actors)
             (Domain Provider-Of-Motive-Force Movement-Event)
             (Range Provider-Of-Motive-Force Partially-Tangible)
             (Name-In-Cyc Provider-Of-Motive-Force "#$providerOfMotiveForce")
             (Actor-Slot Provider-Of-Motive-Force)
             (Slot Provider-Of-Motive-Force)
             (Relation Provider-Of-Motive-Force)
             (Arity Provider-Of-Motive-Force 2)
             (Binary-Relation Provider-Of-Motive-Force)
             (Documentation Provider-Of-Motive-Force
              "(Provider-Of-Motive-Force ACT OBJ) means that OBJ provides, through its expenditure of energy, a significant fraction of the physical force required to make ACT happen. For example, if ACT is an element of Pedaling-A-Bicycle, OBJ will be the person who is operating the bike.  Another example: in the use of a belt sanding tool, there will be two values for Provider-Of-Motive-Force, the electric sander and the person operating the sander.  In that case, although force is transmitted and applied through the sandpaper, the paper doesn't count as a Provider-Of-Motive-Force, because it only transmits force and does not itself expend energy.   Note that inferences involving this constant require that every Provider-Of-Motive-Force be a whole object, not just a part of an object.  For example: (=> (:and (:Direct-Types ?LOCO Locomotion-Event) (Provider-Of-Motive-Force ?LOCO ?OBJ)) (Object-Moving ?LOCO ?OBJ)) or (=> (:and (:Direct-Types ?LOC Locomotion-Event) (Provider-Of-Motive-Force ?LOC ?PROV)) (Done-By ?LOC ?PROV)) or (Domain-Assumptions Manual-Human-Activities-Mt (:Forall ?U (:Forall ?PERS (:=> (:and (:Direct-Types ?U Action) (Provider-Of-Motive-Force ?U ?PERS)) (:Direct-Types ?PERS Person))))))."))

(defrelation Shame
             (Name-In-Cyc Shame "#$Shame")
             (Feeling-Attribute-Type Shame)
             (Subclass-Of Shame Embarrassment)
             (Set-Or-Collection Shame)
             (Arity Shame 1)
             (Documentation Shame
              "Painful self-conscious feeling of guilt, shortcoming, or impropriety.  Shame often accompanies social disgrace or disrepute.  It often leads to Remorse.  This is a collection; for an explanation of a typical Feeling-Attribute-Type, see Happiness."))

(defrelation Physical-State-Change-Event
             (Name-In-Cyc Physical-State-Change-Event
              "#$PhysicalStateChangeEvent")
             (Temporal-Object-Type Physical-State-Change-Event)
             (Default-Disjoint-Script-Type Physical-State-Change-Event)
             (Subclass-Of Physical-State-Change-Event Physical-Event)
             (Subclass-Of Physical-State-Change-Event
              Intrinsic-State-Change-Event)
             (Set-Or-Collection Physical-State-Change-Event)
             (Arity Physical-State-Change-Event 1)
             (Documentation Physical-State-Change-Event
              "Physical-State-Change-Event is the collection of events in which some piece of matter changes from one of the physical states of matter to another.  Such changes of state can be induced by changes in temperature (or the equivalent in the manipulation of kinetic energy).  Each particular instance of Boiling, Freezing, Evaporating, Condensing, Melting, etc. is an instance of Physical-State-Change-Event.  

Note: Most Cyc microtheories distinguish four states of matter, namely, Solid-State-Of-Matter, Semi-Solid-State-Of-Matter, Liquid-State-Of-Matter, Gaseous-State-Of-Matter.  See State-Of-Matter-Solid-Liquid-Gaseous and its individual state constants."))

(defrelation Hardcopy-Information-Bearing-Object
             (Name-In-Cyc Hardcopy-Information-Bearing-Object
              "#$HardcopyInformationBearingObject")
             (Existing-Object-Type Hardcopy-Information-Bearing-Object)
             (Subclass-Of Hardcopy-Information-Bearing-Object Artifact)
             (Subclass-Of Hardcopy-Information-Bearing-Object
              Information-Bearing-Object)
             (Set-Or-Collection Hardcopy-Information-Bearing-Object)
             (Arity Hardcopy-Information-Bearing-Object 1)
             (Documentation Hardcopy-Information-Bearing-Object
              "A collection of information bearing objects (IBOs).  Each element of Hardcopy-Information-Bearing-Object is an IBO in a `hard' format, e.g., written on paper, on wood, on palm leaves, engraved in metal, carved on stone.  Humans can read hardcopy IBOs without using a computer or electronic device to access them.  Thus, Hardcopy-Information-Bearing-Object does NOT include the tangible IBOs which are embodied in magnetic media (e.g., data or music on tapes or disks).  Examples of Hardcopy-Information-Bearing-Object: a billboard, a greeting card, a restaurant check, a magazine, an engraving by Rembrandt, a ten dollar bill, a price tag."))

(defrelation Transfer-In
             (The-Covering Transfer-In Transfer-Out
              |(THE-COVERING TRANSFER-IN TRANSFER-OUT)|)
             (Name-In-Cyc Transfer-In "#$TransferIn")
             (Temporal-Object-Type Transfer-In)
             (Subclass-Of Transfer-In Generalized-Transfer)
             (Set-Or-Collection Transfer-In)
             (Arity Transfer-In 1)
             (Documentation Transfer-In
              "A collection of events.  Transfer-In includes all Generalized-Transfers for which there is a well-defined To-Generic, but not necessarily a From-Generic.  This includes, among other things, Collection-Event, Gaining-User-Rights, and Accessing-An-IBT.  At the end of a Transfer-In, Transferred-Thing is 'loccated' at the To-Generic.  Some negative examples of Transfer-Out are Abandoning-Something (when there is no prospective owner) and IBT-Generation (when the information may go to various unspecified locations."))

(defrelation Anticipation-Feeling
             (Name-In-Cyc Anticipation-Feeling "#$Anticipation-Feeling")
             (Feeling-Attribute-Type Anticipation-Feeling)
             (Subclass-Of Anticipation-Feeling Feeling-Attribute)
             (Set-Or-Collection Anticipation-Feeling)
             (Arity Anticipation-Feeling 1)
             (Documentation Anticipation-Feeling
              "Emotion accompanying an expectation of something pleasant in the foreseeable future.  This is a collection; for an explanation of a typical Feeling-Attribute-Type, see Happiness. "))

(defrelation Obscures-From
             (Nth-Domain Obscures-From 1 Partially-Tangible)
             (Nth-Domain Obscures-From 2 Partially-Tangible)
             (Nth-Domain Obscures-From 3 Agent)
             (Name-In-Cyc Obscures-From "#$obscuresFrom")
             (Ternary-Predicate Obscures-From)
             (Relation Obscures-From)
             (Arity Obscures-From 3)
             (Documentation Obscures-From
              "(obscuresFrom OBJ1 OBJ2 OBJ3) means that OBJ1 visually blocks OBJ2 from OBJ3's view."))

(defobject |(LOW-AMOUNT-FN MALLEABILITY)|
   (Scalar-Interval |(LOW-AMOUNT-FN MALLEABILITY)|)
   (Malleability |(LOW-AMOUNT-FN MALLEABILITY)|)
   (Skolem-Object |(LOW-AMOUNT-FN MALLEABILITY)|))

(defrelation Electrical-Component
             (Name-In-Cyc Electrical-Component "#$ElectricalComponent")
             (Product-Type Electrical-Component)
             (Existing-Object-Type Electrical-Component)
             (Subclass-Of Electrical-Component Electrical-Device)
             (Set-Or-Collection Electrical-Component)
             (Arity Electrical-Component 1)
             (Documentation Electrical-Component
              "A collection of electrical devices.  An instance of Electrical-Device is an electrical device which is normally considered to be a part of some larger, more clearly distinguished device (e.g., clearly distinguished in the sense that it is sold, moved, etc. as a unit).  The Electrical-Component must be connected with other parts in order to perform its Primary-Function."))

(defrelation Symbolic-Object
             (Name-In-Cyc Symbolic-Object "#$SymbolicObject")
             (Existing-Object-Type Symbolic-Object)
             (Subclass-Of Symbolic-Object Information-Bearing-Object)
             (Set-Or-Collection Symbolic-Object)
             (Arity Symbolic-Object 1)
             (Documentation Symbolic-Object
              "A collection of objects.  Each element of Symbolic-Object by convention symbolizes some thing or event or achievement, without describing it propositionally in any detail.  Examples include national flags, military medals and ribbons, school colors, an Oscar, a Crucifix, a caduceus, trademark logos of commercial brands.  Elements of Symbolic-Object need not have propositional information contents; probably most do not.  Rather, symbolic objects are typically associated (by an informed interpreter) with the particular entities that originated or appropriated them.  To emotional interpreters, such as humans, symbolic objects are often evocative of certain attitudes associated with the entities symbolized--such as nationalism, respect, school spirit, hatred, reverence, etc.  Only some elements of Symbolic-Object have the Primary-Function of serving as symbols (e.g., national flags, war memorials); others are symbolic in a secondary capacity (e.g., a gravestone symbolizes death but its primary function is as a marker).  Some objects are created to serve a symbolic function (primary or secondary), while others acquire symbolic associations in the course of their `lifetimes' (e.g., San Juan Hill, Ellis Island).  Examples of Symbolic-Object: the Arc-De-Triomphe, the Statue-Of-Liberty, the Pyramid-Of-Cheops, the United-States-Capitol-Building (and other capitol buildings); a hangman's noose, a Menorah, a white dove, a black armband."))

(defrelation Configuration
             (Name-In-Cyc Configuration "#$Configuration")
             (Existing-Object-Type Configuration)
             (Situation-Type Configuration)
             (Subclass-Of Configuration Partially-Tangible)
             (Subclass-Of Configuration Static-Situation)
             (Set-Or-Collection Configuration)
             (Arity Configuration 1)
             (Documentation Configuration
              "Configuration is a subset of Static-Situation.  Each Configuration is a static configuration, existing over time, of two or more tangible objects.  The Static-Situations that aren't Configurations are those which don't involve tangible objects; for example, reified relationships among agents such as In-Custody)."))

(defrelation Weekly-Event-Type
             (Name-In-Cyc Weekly-Event-Type "#$WeeklyEventType")
             (Collection Weekly-Event-Type)
             (Subclass-Of Weekly-Event-Type Temporal-Object-Type)
             (Set-Or-Collection Weekly-Event-Type)
             (Arity Weekly-Event-Type 1)
             (Documentation Weekly-Event-Type
              "The collection of event-types that occur weekly.  Each Weekly-Event-Type is a collection of events, all of which are synchronized with the calendar and which occur once a week.  E.g., once instance Weekly-Event-Type is Cyc-Staff-Meeting, since there is an instance of Cyc-Staff-Meeting once a week."))

(deffunction Times-Per-Week
   (Args-Isa Times-Per-Week Real-Number)
   (Result-Instance-Of Times-Per-Week Frequency)
   (Result-Instance-Of Times-Per-Week Rate)
   (Result-Instance-Of Times-Per-Week Scalar-Interval)
   (Name-In-Cyc Times-Per-Week "#$TimesPerWeek")
   (Unit-Of-Measure-No-Prefix Times-Per-Week)
   (Unit-Of-Frequency Times-Per-Week)
   (Function Times-Per-Week)
   (Documentation Times-Per-Week "Times per week -- unit of frequency"))

(defrelation Unit-Of-Angular-Speed
             (Name-In-Cyc Unit-Of-Angular-Speed "#$UnitOfAngularSpeed")
             (Interconvertible-Unit-Type Unit-Of-Angular-Speed)
             (Subclass-Of Unit-Of-Angular-Speed Unit-Of-Measure)
             (Subclass-Of Unit-Of-Angular-Speed Unit-Of-Rate)
             (Set-Or-Collection Unit-Of-Angular-Speed)
             (Arity Unit-Of-Angular-Speed 1)
             (Documentation Unit-Of-Angular-Speed
              "The collection of functions which return elements of Rate-Of-Rotation.  E.g., (Radians-Per-Second 5) denotes a change of 5 radians in angular distance per second."))

(defrelation Engineer
             (Name-In-Cyc Engineer "#$Engineer")
             (Occupation-Type Engineer)
             (Subclass-Of Engineer Professional)
             (Set-Or-Collection Engineer)
             (Arity Engineer 1)
             (Documentation Engineer
              "A collection of persons; a subset of Professional.  Each element of Engineer is a professional who works in some branch of engineering.  Elements of Engineer include the members of the subsets Electrical-Engineer, Chemical-Engineer, Civil-Engineer, Mechanical-Engineer, etc."))

(defrelation Simple-Path-System
             (Name-In-Cyc Simple-Path-System "#$SimplePathSystem")
             (Collection Simple-Path-System)
             (Subclass-Of Simple-Path-System Thing)
             (Set-Or-Collection Simple-Path-System)
             (Arity Simple-Path-System 1)
             (Documentation Simple-Path-System
              "An instance of Path-System-Type and the collection of Path-Systems without loops or parallel links.  This collection includes Simple-Graph-Graph-Theoretic when there are no non-node points along links."))

(defrelation Sending-Something
             (Name-In-Cyc Sending-Something "#$SendingSomething")
             (Temporal-Object-Type Sending-Something)
             (Default-Disjoint-Script-Type Sending-Something)
             (Subclass-Of Sending-Something Directed-Translation)
             (Subclass-Of Sending-Something Losing-User-Rights)
             (Subclass-Of Sending-Something
              Causing-Another-Objects-Translational-Motion)
             (Subclass-Of Sending-Something Human-Activity)
             (Set-Or-Collection Sending-Something)
             (Arity Sending-Something 1)
             (Documentation Sending-Something
              "The collection of events in which an Agent intends to have an object (other than itself) delivered to some other Agent. This involves at least a temporary loss of some user rights to the object by the sender.  If successful, an instance of Sending-Something is also an instance of Transferring-Possession."))

(defrelation Sharing
             (Name-In-Cyc Sharing "#$Sharing")
             (Temporal-Object-Type Sharing)
             (Default-Disjoint-Script-Type Sharing)
             (Subclass-Of Sharing Making-Something-Available)
             (Subclass-Of Sharing Gaining-User-Rights)
             (Subclass-Of Sharing Temporary-Change-Of-User-Rights)
             (Set-Or-Collection Sharing)
             (Arity Sharing 1)
             (Documentation Sharing
              "A collection of events; a subset of Making-Something-Available (among other supersets).  In an instance of Sharing, one Agent receives Primary-Role-Use-Rights over an object for a limited time from another Agent, who doesn't give up his or her own right to use it, too (but does give up exclusive right to it).  Cf. Borrowing-Something."))

(defrelation Abandoning-Something
             (Name-In-Cyc Abandoning-Something "#$AbandoningSomething")
             (Script-Type Abandoning-Something)
             (Temporal-Object-Type Abandoning-Something)
             (Subclass-Of Abandoning-Something Purposeful-Action)
             (Subclass-Of Abandoning-Something Losing-User-Rights)
             (Set-Or-Collection Abandoning-Something)
             (Arity Abandoning-Something 1)
             (Documentation Abandoning-Something
              "The collection of events in which some Agent deliberately gives up possession of something, without giving it to another."))

(defrelation Interior
             (Name-In-Cyc Interior "#$Interior")
             (Region-Type Interior)
             (Subclass-Of Interior Piece-Of-Free-Space)
             (Set-Or-Collection Interior)
             (Arity Interior 1)
             (Documentation Interior
              "The collection of spatial regions that are physical areas inside the walls or boundary of some object.  The area need not be completely sealed off.  See also Cavity which, unlike Interior, can include walls."))

(defrelation River
             (Name-In-Cyc River "#$River")
             (Existing-Object-Type River)
             (Subclass-Of River Stream)
             (Set-Or-Collection River)
             (Arity River 1)
             (Documentation River
              "A collection of topographical features.  Each element of River is a natural stream of water, normally of a large volume.  Cf. Creek.  Examples of River include the Colorado-River-Of-Arizona, the Amazon-River, the Chang-Jiang-River, the Thames-River."))

(defrelation Knows-Value
             (Nth-Domain Knows-Value 1 Intelligent-Agent)
             (Nth-Domain Knows-Value 2 Thing)
             (Nth-Domain Knows-Value 3 Slot)
             (Name-In-Cyc Knows-Value "#$knowsValue")
             (Modal-Relationship Knows-Value)
             (Ternary-Predicate Knows-Value)
             (Relation Knows-Value)
             (Arity Knows-Value 3)
             (Documentation Knows-Value
              "(Knows-Value AGT X PRED) means that, if (PRED X VAL) is true, then the Agent ?AGT knows that; i.e., (Knows AGT (PRED X VAL)).  E.g., this is a more compact way of expressing `people know their own date of birth' than if one had to use Knows.  One could just write  (:=> (:Direct-Types ?A Agent) (Knows-Value ?A ?A Birth-Date); presumably this would be asserted in a context (Microtheory) in which all actions were performed by human beings, or else there would have to be an extra qualifier to that effect added to the rule."))

(defrelation Sub-Atomic-Particle
             (Name-In-Cyc Sub-Atomic-Particle "#$SubAtomicParticle")
             (Existing-Object-Type Sub-Atomic-Particle)
             (Subclass-Of Sub-Atomic-Particle Microscopic-Scale-Object)
             (Set-Or-Collection Sub-Atomic-Particle)
             (Arity Sub-Atomic-Particle 1)
             (Documentation Sub-Atomic-Particle
              "A collection of objects; a subset of Microscopic-Scale-Object.  Every instance of Sub-Atomic-Particle is a physical particle smaller than an atom.  Major subsets of Sub-Atomic-Particle include Electron, Proton, and Neutron."))

(defrelation Direction-Between-Objects
             (Nth-Domain Direction-Between-Objects 1 Partially-Tangible)
             (Nth-Domain Direction-Between-Objects 2 Partially-Tangible)
             (Nth-Domain Direction-Between-Objects 3 Unit-Vector-Interval)
             (Name-In-Cyc Direction-Between-Objects
              "#$directionBetweenObjects")
             (Ternary-Predicate Direction-Between-Objects)
             (Relation Direction-Between-Objects)
             (Arity Direction-Between-Objects 3)
             (Documentation Direction-Between-Objects
              "(Direction-Between-Objects OBJ1 OBJ2 UVI) means that UVI, an element of Unit-Vector-Interval, is a vector or set of vectors which point(s) from a point (or set of points) in OBJ1 to a point (or set of points) in OBJ2.  See also Vector-From-To-Fn which is roughly interchangeable with Direction-Between-Objects.  Direction-Between-Objects has the advantage that an arbitrarily precise direction may be specified.  Vector-From-To-Fn saves the user from doing the labor involved with reifiing and from having to know the direction between OBJ1 and OBJ2."))

(defrelation Apathy
             (Name-In-Cyc Apathy "#$Apathy")
             (Feeling-Attribute-Type Apathy)
             (Subclass-Of Apathy Feeling-Attribute)
             (Set-Or-Collection Apathy)
             (Arity Apathy 1)
             (Documentation Apathy
              "A lack of interest or concern.  If someone is feeling some measure of Apathy, then they typically will have little or no response to things normally expected to excite emotion or interest.  This is a Collection --- for an explanation of that, see Happiness.  A related Feeling-Attribute-Type is Boredom."))

(defrelation Solubility
             (Name-In-Cyc Solubility "#$Solubility")
             (Measurable-Attribute-Type Solubility)
             (Subclass-Of Solubility Scalar-Interval)
             (Subclass-Of Solubility Physical-Attribute)
             (Set-Or-Collection Solubility)
             (Arity Solubility 1)
             (Documentation Solubility
              "A collection of attributes; a subset of Physical-Attribute.  Each element of Solubility describes how readily some tangible substance dissolves in some kind of liquid.  Different levels of Solubility may be represented with Generic-Value-Functions or qualitatively (e.g., Will-Dissolve, Insoluble)."))

(defobject |(NO-AMOUNT-FN FLAMMABILITY)|
   (Scalar-Interval |(NO-AMOUNT-FN FLAMMABILITY)|)
   (Flammability |(NO-AMOUNT-FN FLAMMABILITY)|)
   (Skolem-Object |(NO-AMOUNT-FN FLAMMABILITY)|))

(defrelation Semi-Solid-Tangible-Thing
             (Transport-Fn Semi-Solid-Tangible-Thing
              |(TRANSPORT-FN SEMI-SOLID-TANGIBLE-THING)|)
             (Name-In-Cyc Semi-Solid-Tangible-Thing "#$SemiSolidTangibleThing")
             (Tangible-Stuff-State-Type Semi-Solid-Tangible-Thing)
             (Subclass-Of Semi-Solid-Tangible-Thing Tangible-Thing)
             (Set-Or-Collection Semi-Solid-Tangible-Thing)
             (Arity Semi-Solid-Tangible-Thing 1)
             (Documentation Semi-Solid-Tangible-Thing
              "A collection of tangible things.  Each element of Semi-Solid-Tangible-Thing is a tangible thing that is intrinsically in a semisolid state.  Some semisolids are pourable (e.g., sand) and some are not (e.g., jello).  When a force is first applied to a semisolid, the object moves or deforms substantially and does not break or crack.  Semisolids are stirrable (thus, rubber is probably not a semisolid).  A semisolid can be deformed into any shape that does not require some dimension of the object to be smaller than all dimensions of the granule size of that stuff; e.g., a Mob of hailstones cannot form a paper-thin sheet.  The granules of a Pourable semisolid, such as sand, may themselves belong to Solid-Tangible-Thing."))

(defobject Horizontal-Orientation
   (Orientation-Attribute Horizontal-Orientation)
   (Name-In-Cyc Horizontal-Orientation "#$HorizontalOrientation")
   (Documentation Horizontal-Orientation
    "(Orientation OBJECT Horizontal-Orientation) means that OBJECT is horizontal with respect to the current instance of Frame-Of-Reference.  A linear (Long-And-Thin) object is horizontal if and only if its longest axis lies in the horizontal plane.  A planar (Sheet-Shaped) object is horizontal if and only if its two longest axes lie in the horizontal plane.  Typically, horizontal objects include dinner plates, mousepads, ice skating rinks, parking lots, and stratus clouds."))

(defrelation Shipping
             (Name-In-Cyc Shipping "#$Shipping")
             (Temporal-Object-Type Shipping)
             (Default-Disjoint-Script-Type Shipping)
             (Subclass-Of Shipping |(TRANSPORT-VIA-FN TRANSPORTATION-DEVICE)|)
             (Subclass-Of Shipping Transporting-Goods)
             (Subclass-Of Shipping Service-Event)
             (Subclass-Of Shipping Sending-Something)
             (Set-Or-Collection Shipping)
             (Arity Shipping 1)
             (Documentation Shipping
              "Shipping of objects from one physical location to another. Shipping from the perspective of being done as a dedicated service, such as what UPS, the US Postal Service, or Dominoes Pizza Delivery might do."))

(defrelation Map-Cartographic
             (Name-In-Cyc Map-Cartographic "#$Map")
             (Temporal-Stuff-Type Map-Cartographic)
             (Object-Type Map-Cartographic)
             (Subclass-Of Map-Cartographic Structured-Information-Source)
             (Subclass-Of Map-Cartographic Information-Bearing-Thing)
             (Set-Or-Collection Map-Cartographic)
             (Arity Map-Cartographic 1)
             (Documentation Map-Cartographic
              "A collection of information bearing things (IBTs).  Each element of Map-Cartographic is an IBT which, properly interpreted, models a region of physical space many times its own size by using graphical symbols (or possibly another code), often in conjunction with a natural language, to represent features of one or more of the following kinds: geographical areas (Geographical-Region), topographical features (Topographical-Feature), political regions (Geopolitical-Entity), climate zones (Climate-Cycle-Type), human artifacts (Construction-Artifact), population densities (Population-Density), etc.  Maps are generally intended to help an agent to orient itself in space or to understand some aspect(s) of a large spatial area.  The collection Map-Cartographic includes terrestrial and celestial maps, either on paper, in computerized geographical information systems, or in other forms."))

(defrelation Embarrassment
             (Name-In-Cyc Embarrassment "#$Embarrassment")
             (Feeling-Attribute-Type Embarrassment)
             (Subclass-Of Embarrassment Feeling-Attribute)
             (Set-Or-Collection Embarrassment)
             (Arity Embarrassment 1)
             (Documentation Embarrassment
              "Mental disturbance and confusion at self-exposure.  Embarrassment is often an impediment to freedom of thought, speech, or action.  This is a collection; for an explanation of a typical Feeling-Attribute-Type, see Happiness.  A more specialized Feeling-Attribute-Type than Embarrassment is Shame."))

(defrelation Temporary-Change-Of-User-Rights
             (Name-In-Cyc Temporary-Change-Of-User-Rights
              "#$TemporaryChangeOfUserRights")
             (Default-Disjoint-Script-Type Temporary-Change-Of-User-Rights)
             (Subclass-Of Temporary-Change-Of-User-Rights
              Change-In-User-Rights)
             (Subclass-Of Temporary-Change-Of-User-Rights Transaction)
             (Set-Or-Collection Temporary-Change-Of-User-Rights)
             (Arity Temporary-Change-Of-User-Rights 1)
             (Documentation Temporary-Change-Of-User-Rights
              "A collection of events; a subset of Change-In-User-Rights.  In an instance of Temporary-Change-Of-User-Rights, one agent temporarily gives up user rights over some object (see User-Rights-Attribute), while another agent temporarily gains some user rights over that object.  This occurs in renting, loaning, or sharing of things."))

(defobject |(LOW-AMOUNT-FN RELATIVE-HUMIDITY)|
   (Scalar-Interval |(LOW-AMOUNT-FN RELATIVE-HUMIDITY)|)
   (Relative-Humidity |(LOW-AMOUNT-FN RELATIVE-HUMIDITY)|)
   (Skolem-Object |(LOW-AMOUNT-FN RELATIVE-HUMIDITY)|))

(defrelation Cleaning-Device
             (Name-In-Cyc Cleaning-Device "#$CleaningDevice")
             (Existing-Object-Type Cleaning-Device)
             (Subclass-Of Cleaning-Device Solid-Tangible-Product)
             (Subclass-Of Cleaning-Device Physical-Device)
             (Set-Or-Collection Cleaning-Device)
             (Arity Cleaning-Device 1)
             (Documentation Cleaning-Device
              "A collection of devices.  An instance of Cleaning-Device is any device, manually powered or otherwise, whose Primary-Function is to be used in cleaning things.  Instances include each Mop, each Regular-Windshield-Wiper, each  Facial-Tissue, each Shoe-Brush, each Clothes-Washer, each Dishwasher, etc."))

(defrelation Translation-Flow
             (The-Partition Translation-Flow Translation-Complete
              |(THE-PARTITION TRANSLATION-FLOW TRANSLATION-COMPLETE)|)
             (Name-In-Cyc Translation-Flow "#$Translation-Flow")
             (Script-Type Translation-Flow)
             (Temporal-Stuff-Type Translation-Flow)
             (Subclass-Of Translation-Flow Movement-Translation-Event)
             (Set-Or-Collection Translation-Flow)
             (Arity Translation-Flow 1)
             (Documentation Translation-Flow
              "A collection of translational motion events; hence a subset of Movement-Translation-Event. In any element of Translation-Flow, the Object-Moving is a Fluid-Tangible-Thing (i.e., a portion of some fluid, such as a quart of milk) rather than a discrete solid object.  At least some of the Object-Moving leaves the From-Location and some arrives at the To-Location; but it is not necessary that all of the Object-Moving go from the origin (From-Location) to the destination (To-Location).  Such fluid flows include rivers flowing or winds blowing or air filling your lungs when you take a breath.
Note: also intended to be included here are flows of ``fluids'' such as sand, drifting snow, etc., which are composed of multiple solid particles.  So a borderline case would be using a bulldozer to spread out a pile of rocks and gravel over a parking lock; depending on one's context (sensors, purposes, etc.) that might or might not be considered a Translation-Flow event."))

(defrelation Stream
             (Name-In-Cyc Stream "#$Stream")
             (Existing-Object-Type Stream)
             (Subclass-Of Stream Body-Of-Water)
             (Set-Or-Collection Stream)
             (Arity Stream 1)
             (Documentation Stream
              "Stream is the generic collection for natural, flowing bodies of water, including everything from great rivers to tiny creeks.  Every stream flows in (see In-Cont-Open) some conduit (see Fluid-Conduit) such as a streambed or riverbed. Examples: Amazon-River, Little-Missouri-River, Wounded-Knee-Creek.  Cf. River, Creek.  Note that riverbanks are not streams nor are they part of streams, but rather mark the edge of a stream."))

(defrelation Allergic-Reaction
             (Name-In-Cyc Allergic-Reaction "#$AllergicReaction")
             (Physiological-Condition-Type Allergic-Reaction)
             (Subclass-Of Allergic-Reaction Ailment-Condition)
             (Set-Or-Collection Allergic-Reaction)
             (Arity Allergic-Reaction 1)
             (Documentation Allergic-Reaction
              "A collection of dynamic, physiological states.  An instance of Allergic-Reaction is an event in which an organism which is exposed to a particular substance (e.g., pollen, mold) develops some abnormality or impairment of its physiological condition as a result of interacting with the substance.  Allergic reactions to some types of substances occur widely in members of a species; e.g., Poison-Ivy-Poisoning in humans.  But other allergic reactions affect only a small proportion of a species, such as human allergies to penicillin.  This concept is the set of events in which allergic reactions are `taking place', not abstract unrealized potential situations such as `John is allergic to milk.'  I.e., if John were allergic to milk, and he drank some, and then proceeded to have a whopping bad allergic reaction, that latter event would be an element of Allergic-Reaction."))

(defrelation Making-Something-Available
             (Name-In-Cyc Making-Something-Available
              "#$MakingSomethingAvailable")
             (Temporal-Object-Type Making-Something-Available)
             (Default-Disjoint-Script-Type Making-Something-Available)
             (Subclass-Of Making-Something-Available Human-Activity)
             (Set-Or-Collection Making-Something-Available)
             (Arity Making-Something-Available 1)
             (Documentation Making-Something-Available
              "The collection of all activities in which an Agent makes it possible for another Agent to use (but not necessarily own) a good or service."))

(defobject |(VERY-LOW-AMOUNT-FN HARDNESS)|
   (Scalar-Interval |(VERY-LOW-AMOUNT-FN HARDNESS)|)
   (Hardness |(VERY-LOW-AMOUNT-FN HARDNESS)|)
   (Skolem-Object |(VERY-LOW-AMOUNT-FN HARDNESS)|))

(defrelation Tangible-Stuff-Composition-Type
             (Name-In-Cyc Tangible-Stuff-Composition-Type
              "#$TangibleStuffCompositionType")
             (Collection Tangible-Stuff-Composition-Type)
             (Subclass-Of Tangible-Stuff-Composition-Type Existing-Stuff-Type)
             (Set-Or-Collection Tangible-Stuff-Composition-Type)
             (Arity Tangible-Stuff-Composition-Type 1)
             (Documentation Tangible-Stuff-Composition-Type
              "A collection of collections.  Instances are collections of Tangible-Thing whose membership is based only on the physical and/or chemical composition of the elements, and not on any other property.  Thus Tangible-Stuff-Composition-Type does not have as elements any collections whose instances are determined by the physical state they are in.  For example, the collection Water is an instance of Tangible-Stuff-Composition-Type: instances of Water are all pieces of substance with the chemical composition H20.   On the other hand , the collection of all pieces of ice [i.e., (Solid-Fn Water)] is not a Tangible-Stuff-Composition-Type, because membership in the collection of ice depends not solely on the substance's composition, but also on its physical state.  More sample instances of Tangible-Stuff-Composition-Type:  the collections Nylon, Gasoline-Fuel, Cottage-Cheese, Fatty-Tissue, Baby-Powder, Nitrogen, and Glass."))

(deffunction Kilogram
   (Args-Isa Kilogram Real-Number)
   (Result-Instance-Of Kilogram Mass)
   (Result-Instance-Of Kilogram Scalar-Interval)
   (Name-In-Cyc Kilogram "#$Kilogram")
   (Unit-Of-Mass Kilogram)
   (Standard-Unit-Of-Measure Kilogram)
   (Mks-Unit-Of-Measure Kilogram)
   (Unit-Of-Measure-With-Prefix Kilogram)
   (Function Kilogram)
   (Documentation Kilogram
    "The measurement function used in Cyc to represent the basic unit of mass in the Metric system (and in Cyc).  See also MKS-Unit-Of-Measure, Unit-Of-Measure."))

(defrelation Listening-Deliberately
             (Name-In-Cyc Listening-Deliberately "#$ListeningDeliberately")
             (Temporal-Stuff-Type Listening-Deliberately)
             (Default-Disjoint-Script-Type Listening-Deliberately)
             (Subclass-Of Listening-Deliberately Hearing)
             (Subclass-Of Listening-Deliberately Accessing-An-Ibt)
             (Set-Or-Collection Listening-Deliberately)
             (Arity Listening-Deliberately 1)
             (Documentation Listening-Deliberately
              "The collection of events in which an Agent deliberately facilitates and does Hearing."))

(defrelation Self-Confidence
             (Name-In-Cyc Self-Confidence "#$SelfConfidence")
             (Feeling-Attribute-Type Self-Confidence)
             (Subclass-Of Self-Confidence Confidence)
             (Set-Or-Collection Self-Confidence)
             (Arity Self-Confidence 1)
             (Documentation Self-Confidence
              "Faith in oneself and one's powers without any suggestion of conceit or arrogance.   If one has a large portion of Self-Confidence, their state of mind is often marked by ease and freedom from uncertainty, diffidence, or embarrassment.  This is a collection; for an explanation of a typical Feeling-Attribute-Type, see Happiness.  A typical more specialized Feeling-Attribute-Type than Self-Confidence is Vanity."))

(defrelation Rate
             (Name-In-Cyc Rate "#$Rate")
             (Attribute-Type Rate)
             (Subclass-Of Rate Scalar-Interval)
             (Set-Or-Collection Rate)
             (Arity Rate 1)
             (Documentation Rate
              "A subset of Scalar-Interval, whose elements are an amount of some property, taken with respect to some unit of time.  Elements of Rate include, for example, the instances of Speed (e.g., 55 mph), Frequency (e.g., 55 kHz), Monetary-Flow-Rate (e.g., 55 cents per minute).  See Unit-Of-Rate for the units used by Cyc to measure rates (e.g., Dollars-Per-Year, Meters-Per-Second)."))

(defrelation Sales-Activity
             (Name-In-Cyc Sales-Activity "#$SalesActivity")
             (Temporal-Object-Type Sales-Activity)
             (Default-Disjoint-Script-Type Sales-Activity)
             (Subclass-Of Sales-Activity Purposeful-Action)
             (Subclass-Of Sales-Activity Commercial-Activity)
             (Subclass-Of Sales-Activity Business-Event)
             (Set-Or-Collection Sales-Activity)
             (Arity Sales-Activity 1)
             (Documentation Sales-Activity
              "A collection of events.  Each element of Sales-Activity is an event which the performing agent does in an effort to achieve a subsequent sale to a second agent.  Types (i.e., subsets) of Sales-Activity include Advertising, telemarketing, showing sample and/or actual products to customers in a show room or a store.  Elements of Sales-Activity which are successful lead to corresponding elements of Buying.  Note: Sales-Activity does NOT include manufacturing, accounting, and other such ancillary business activities."))

(defrelation Privately-Held-Corporation
             (Name-In-Cyc Privately-Held-Corporation
              "#$PrivatelyHeldCorporation")
             (Existing-Object-Type Privately-Held-Corporation)
             (Subclass-Of Privately-Held-Corporation Legal-Corporation)
             (Subclass-Of Privately-Held-Corporation Business)
             (Set-Or-Collection Privately-Held-Corporation)
             (Arity Privately-Held-Corporation 1)
             (Documentation Privately-Held-Corporation
              "An incorporated business whose stock, if it exists, is not

traded publicly on some stock exchange. Businesses that are traded publicly are instances of Publicly-Held-Corporation."))

(defrelation Sculpture
             (Name-In-Cyc Sculpture "#$Sculpture")
             (Existing-Object-Type Sculpture)
             (Subclass-Of Sculpture Artifact)
             (Subclass-Of Sculpture Art-Object)
             (Subclass-Of Sculpture Visual-Information-Source)
             (Set-Or-Collection Sculpture)
             (Arity Sculpture 1)
             (Documentation Sculpture
              "A collection of art objects.  Each element of Sculpture is a tangible three-dimensional work of art; buildings are NOT included, even though sculptural features of buildings (such as friezes) are.  Types of Sculpture include stone statues, friezes, wood carvings, pipes welded into abstract art sculptures, etc.  Examples: the Statue-Of-Liberty, the Mount-Rushmore-Monument, Michelangelo's David, the friezes on the Parthenon, the Buddhas at Longan."))

(defobject Continent-Of-Africa
   (Continent Continent-Of-Africa)
   (Entity Continent-Of-Africa)
   (Name-In-Cyc Continent-Of-Africa "#$ContinentOfAfrica")
   (Documentation Continent-Of-Africa
    "The second largest continent, located north and south of the Equator in the Eastern-Hemisphere-Region.  Africa is connected to Asia by the narrow Isthmus of Suez; it includes Madagascar and other offshore islands."))

(defrelation Separation-Complete
             (Name-In-Cyc Separation-Complete "#$Separation-Complete")
             (Temporal-Object-Type Separation-Complete)
             (Default-Disjoint-Script-Type Separation-Complete)
             (Subclass-Of Separation-Complete Separation-Event)
             (Subclass-Of Separation-Complete Physical-Event)
             (Set-Or-Collection Separation-Complete)
             (Arity Separation-Complete 1)
             (Documentation Separation-Complete
              "A collection of physical separation events.  In each Separation-Complete, one object is separated into two or more distinct pieces."))

(defobject Job-Capacity
   (Capacity-Attribute Job-Capacity)
   (Name-In-Cyc Job-Capacity "#$JobCapacity")
   (Documentation Job-Capacity
    "the attribute of performing something as a job"))

(defrelation Midday
             (Name-In-Cyc Midday "#$Midday")
             (Temporal-Object-Type Midday)
             (Subclass-Of Midday Qualitative-Time-Of-Day)
             (Set-Or-Collection Midday)
             (Arity Midday 1)
             (Documentation Midday
              "A Midday is the daily event where the Sun is near its `highest' position in the daily cycle.  A Midday overlaps the start of an Afternoon, and a Morning overlaps the start of a Midday."))

(defobject |(VERY-HIGH-AMOUNT-FN CORROSION-RESISTANCE)|
   (Scalar-Interval |(VERY-HIGH-AMOUNT-FN CORROSION-RESISTANCE)|)
   (Corrosion-Resistance |(VERY-HIGH-AMOUNT-FN CORROSION-RESISTANCE)|)
   (Skolem-Object |(VERY-HIGH-AMOUNT-FN CORROSION-RESISTANCE)|))

(defrelation Eye
             (Name-In-Cyc Eye "#$Eye")
             (Symmetric-Anatomical-Part-Type Eye)
             (Subclass-Of Eye Electro-Magnetic-Radiation-Sensor)
             (Subclass-Of Eye Organ)
             (Set-Or-Collection Eye)
             (Arity Eye 1)
             (Documentation Eye
              "The collection of all eyes of Animals. Eyes are the organs of Visual-Perception."))

(defrelation Decrypting
             (Name-In-Cyc Decrypting "#$Decrypting")
             (Temporal-Object-Type Decrypting)
             (Subclass-Of Decrypting Ibt-Recoding)
             (Set-Or-Collection Decrypting)
             (Arity Decrypting 1)
             (Documentation Decrypting
              "The collection of actions in which an encrypted IBO (Information-Bearing-Object) is transformed so that it can be accessed."))

(defrelation Rate-Of-Rotation
             (Name-In-Cyc Rate-Of-Rotation "#$RateOfRotation")
             (Measurable-Attribute-Type Rate-Of-Rotation)
             (Subclass-Of Rate-Of-Rotation Scalar-Interval)
             (Subclass-Of Rate-Of-Rotation Physical-Attribute)
             (Set-Or-Collection Rate-Of-Rotation)
             (Arity Rate-Of-Rotation 1)
             (Documentation Rate-Of-Rotation
              "A collection of scalar rates of rotation."))

(defobject Hemispheres-And-Calendars
   (Shared-Note Hemispheres-And-Calendars)
   (Name-In-Cyc Hemispheres-And-Calendars "#$HemispheresAndCalendars")
   (Documentation Hemispheres-And-Calendars
    "Calendar-Seasons are defined by the Gregorian calendar and are synchronized with the equinoxes and solstices.  Season-Of-Year instances are climatic seasons, events characterized by the weather in a given region.  The relationship between Season-Of-Year instances and Calendar-Seasons depends upon the hemisphere (or, more precisely, upon the lattitude.)  In the northern hemisphere, north of the tropics, a Calendar-Summer will significantly intersect with the a Summer-Season each year.   But in the southern hemisphere, that same Calendar-Summer (which is the same in both hemispheres) will intersect with what is locally, weatherwise, a Winter-Season."))

(defobject |(VERY-HIGH-AMOUNT-FN BIO-DETERIORATION-RESISTANCE)|
   (Scalar-Interval |(VERY-HIGH-AMOUNT-FN BIO-DETERIORATION-RESISTANCE)|)
   (Bio-Deterioration-Resistance
    |(VERY-HIGH-AMOUNT-FN BIO-DETERIORATION-RESISTANCE)|)
   (Skolem-Object |(VERY-HIGH-AMOUNT-FN BIO-DETERIORATION-RESISTANCE)|))

(deffunction Degree-Fahrenheit
   (Args-Isa Degree-Fahrenheit Real-Number)
   (Result-Instance-Of Degree-Fahrenheit Temperature)
   (Result-Instance-Of Degree-Fahrenheit Scalar-Interval)
   (Name-In-Cyc Degree-Fahrenheit "#$DegreeFahrenheit")
   (Unit-Of-Temperature Degree-Fahrenheit)
   (Unit-Of-Measure-No-Prefix Degree-Fahrenheit)
   (Function Degree-Fahrenheit)
   (Documentation Degree-Fahrenheit
    "The unit of measure on the Fahrenheit scale; mainly used in the USA"))

(defrelation Summer-Season
             (Name-In-Cyc Summer-Season "#$SummerSeason")
             (Temporal-Object-Type Summer-Season)
             (Subclass-Of Summer-Season Season-Of-Year)
             (Set-Or-Collection Summer-Season)
             (Arity Summer-Season 1)
             (Documentation Summer-Season
              "The collection of Summer seasons.  In the Temperate-Climate-Cycle, Summer is generally the time of greatest warmth.  Summer-Season represents the climatic aspects of summer.  For its purely temporal aspects, see Calendar-Summer."))

(deffunction Ohm
   (Args-Isa Ohm Real-Number)
   (Result-Instance-Of Ohm Scalar-Interval)
   (Name-In-Cyc Ohm "#$Ohm")
   (Mks-Unit-Of-Measure Ohm)
   (Standard-Unit-Of-Measure Ohm)
   (Function Ohm)
   (Documentation Ohm
    "The standard unit of electrical resistance.  The resistance of a circuit in which a 1-#$Volt Electrical-Potential-Difference produces a 1-#$Coulomb Electrical-Current."))

(defobject |(NO-AMOUNT-FN COMPRESSIBILITY)|
   (Scalar-Interval |(NO-AMOUNT-FN COMPRESSIBILITY)|)
   (Compressibility |(NO-AMOUNT-FN COMPRESSIBILITY)|)
   (Skolem-Object |(NO-AMOUNT-FN COMPRESSIBILITY)|)
   (Documentation |(NO-AMOUNT-FN COMPRESSIBILITY)|
    "essentially cannot be compressed"))

(defrelation Path-Between
             (Nth-Domain Path-Between 1 Path-Simple)
             (Nth-Domain Path-Between 2 Thing)
             (Nth-Domain Path-Between 3 Thing)
             (Name-In-Cyc Path-Between "#$pathBetween")
             (Ternary-Predicate Path-Between)
             (Relation Path-Between)
             (Arity Path-Between 3)
             (Documentation Path-Between
              "(Path-Between PATH X Y) means that the Path-Simple PATH goes between points (or places) X and Y, where X and Y do not 'overlap', and no further.  Both X and Y have to be on PATH (see Point-On-Path).  Note that (Path-Between PATH X Y) is more specific than (Path-Connects PATH X Y) because here the PATH cannot extend beyond X and Y.  Within a particular Path-System, a path's end points in the system are unique, and Path-Between-In-System is restricted to paths and points in the system.  When considered without a context of a path system, a path may have several different places at one end, such as Austin and Texas both being at the same end of some path along Highway I-35."))

(defrelation Maleficiary
             (Subrelation-Of Maleficiary Pre-Actors)
             (Domain Maleficiary Event)
             (Range Maleficiary Agent)
             (Name-In-Cyc Maleficiary "#$maleficiary")
             (Slot Maleficiary)
             (Relation Maleficiary)
             (Arity Maleficiary 2)
             (Binary-Relation Maleficiary)
             (Documentation Maleficiary
              "(Maleficiary ACT AGT) means that the Agent AGT is harmed by the occurrence of the action ACT.  That is, the interest or welfare of AGT is thwarted, blocked, or harmed in ACT."))

(defrelation Frying
             (Name-In-Cyc Frying "#$Frying")
             (Temporal-Object-Type Frying)
             (Default-Disjoint-Script-Type Frying)
             (Subclass-Of Frying Cooking-Food)
             (Set-Or-Collection Frying)
             (Arity Frying 1)
             (Documentation Frying
              "Cooking food by partial or total immersion in hot oil until desired level of doneness"))

(defrelation Physical-Contact-Situation
             (Name-In-Cyc Physical-Contact-Situation
              "#$PhysicalContactSituation")
             (Temporal-Stuff-Type Physical-Contact-Situation)
             (Subclass-Of Physical-Contact-Situation Situation)
             (Set-Or-Collection Physical-Contact-Situation)
             (Arity Physical-Contact-Situation 1)
             (Documentation Physical-Contact-Situation
              "The collection of all Situations in which two or more tangible objects are touching (Touches).  Includes an object rubbing against another, objects colliding, as well as static touching configurations.  Note that although most Physical-Events involve some kind of touching, not all of them should be specs of Physical-Contact-Situation.  Only on those in which contact is salient to what the event is about should be Physical-Contact-Situations."))

(defrelation Illocutionary-Force
             (Name-In-Cyc Illocutionary-Force "#$IllocutionaryForce")
             (Object-Type Illocutionary-Force)
             (Subclass-Of Illocutionary-Force Propositional-Information-Thing)
             (Subclass-Of Illocutionary-Force Supposed-To-Be-Microtheory)
             (Set-Or-Collection Illocutionary-Force)
             (Arity Illocutionary-Force 1)
             (Documentation Illocutionary-Force
              "A collection of pieces of information; a subset of Propositional-Information-Thing.  Each element of Illocutionary-Force is a specialized component of a communication; its function is to indicate how the speaker in a communication wants the agent(s) whom s/he is addressing to understand, and respond to, the situation--i.e., the state of affairs--described in that communication.  Isolating the `illocutionary force' of a communication allows us to characterize the intention of a speaker; e.g., whether s/he means to assert that the described state of affairs in fact holds; or to express a desire that such a state of affairs hold; or to command someone to make that state of affairs hold; or to offer to make the state of affairs hold.  S/he may even intend to make something true by stating it (e.g., ``I name this ship `The Intrepid'.''). 
Usually, apprehending a speaker's intention is important for understanding what s/he means and what s/he intends the hearer to do.  Although illocutionary forces can be represented propositionally, they are not generally communicated so explicitly.  For example, questions in English are typically communicated by inverting subject-object word order and raising one's intonation at the end of the utterance.  (The intonation marker so strongly indicates a question that it may suffice without the inverted word order, as in `You are going tonight' uttered with a rising intonation.)  Commands in English typically have an (unexpressed) understood subject and perhaps a forceful tone.  In every culture and language there are conventional sets of commonly used illocutionary forces which would be the subsets of Illocutionary-Force for that culture; e.g., in English, they include Inform contexts, Request, Offer, Promise, and Query.
Note: although in this comment Illocutionary-Force is explained in terms of utterances, it applies to communication generally; so `speaker' and `listener' should be broadly interpreted to mean, respectively, any Sender-Of-Info and Recipient-Of-Info.  See also Communicating, Communication-Act-Single.  The portion of a communication's information content that represents the illocutionary force is indicated using Component-IF."))

(defrelation Animal-Activity
             (Name-In-Cyc Animal-Activity "#$AnimalActivity")
             (Script-Type Animal-Activity)
             (Temporal-Object-Type Animal-Activity)
             (Subclass-Of Animal-Activity Action)
             (Subclass-Of Animal-Activity Composite-Physical-And-Mental-Event)
             (Set-Or-Collection Animal-Activity)
             (Arity Animal-Activity 1)
             (Documentation Animal-Activity
              "A collection of events.  Each element of Animal-Activity is an action whose performer(s) (see Done-By) belong to the collection Animal."))

(defrelation Inflatable-Boat
             (Name-In-Cyc Inflatable-Boat "#$InflatableBoat")
             (Existing-Object-Type Inflatable-Boat)
             (Subclass-Of Inflatable-Boat Boat-Water-Transportation-Device)
             (Set-Or-Collection Inflatable-Boat)
             (Arity Inflatable-Boat 1)
             (Documentation Inflatable-Boat
              "The collection of all inflatable boats, that is, boats (mostly small watercraft) that are composed of some fabric or membrane and are inflated with air to give them buoyancy in water."))

(deffunction Centimeters-Per-Second
   (Args-Isa Centimeters-Per-Second Real-Number)
   (Result-Instance-Of Centimeters-Per-Second Scalar-Interval)
   (Result-Instance-Of Centimeters-Per-Second Speed)
   (Result-Instance-Of Centimeters-Per-Second Vector-Interval)
   (Name-In-Cyc Centimeters-Per-Second "#$CentimetersPerSecond")
   (Unit-Of-Speed Centimeters-Per-Second)
   (Unit-Of-Measure-With-Prefix Centimeters-Per-Second)
   (Cgs-Unit-Of-Measure Centimeters-Per-Second)
   (Function Centimeters-Per-Second)
   (Documentation Centimeters-Per-Second
    "(Centimeters-Per-Second NUMBER) returns a dimensionless rate or speed of NUMBER centimeters per second.  Notice that this result is not presently thought of as incorporating a vector, although it might be modified to do so at some point in the future if this should prove appropriate."))

(defrelation Crime-Detection
             (Name-In-Cyc Crime-Detection "#$CrimeDetection")
             (Temporal-Object-Type Crime-Detection)
             (Script-Type Crime-Detection)
             (Subclass-Of Crime-Detection Purposeful-Action)
             (Subclass-Of Crime-Detection Human-Activity)
             (Set-Or-Collection Crime-Detection)
             (Arity Crime-Detection 1)
             (Documentation Crime-Detection
              "This is the actual act of detecting a crime."))

(defrelation Nurse
             (Name-In-Cyc Nurse "#$Nurse")
             (Medical-Specialty-Type Nurse)
             (Subclass-Of Nurse Medical-Care-Professional)
             (Set-Or-Collection Nurse)
             (Arity Nurse 1)
             (Documentation Nurse
              "The class of health professionals who provide various aspects of hands-on health care to patients.  Nurses do not usually diagnose or decide on treatments, but they administer medicines and treatments, perform medical tests, give regular care to hospitalized patients, etc."))

(defrelation Plant-Part
             (Name-In-Cyc Plant-Part "#$PlantPart")
             (Existing-Object-Type Plant-Part)
             (Subclass-Of Plant-Part Plant-Blo)
             (Subclass-Of Plant-Part Organism-Part)
             (Set-Or-Collection Plant-Part)
             (Arity Plant-Part 1)
             (Documentation Plant-Part
              "The collection of all physical parts of Plants of all kinds.
In the traditional view, plant organs are of four types: leaves, stems, roots and flowers.  It seems useful to have a category for smaller plant parts which display a similar level of organization (they have vascular tissue, ground tissue, and an epidermis) but have not been included in the traditional view."))

(defrelation Simple-Repairing
             (Name-In-Cyc Simple-Repairing "#$SimpleRepairing")
             (Script-Type Simple-Repairing)
             (Temporal-Object-Type Simple-Repairing)
             (Subclass-Of Simple-Repairing Intrinsic-State-Change-Event)
             (Subclass-Of Simple-Repairing Human-Activity)
             (Subclass-Of Simple-Repairing Action-On-Object)
             (Subclass-Of Simple-Repairing Purposeful-Action)
             (Set-Or-Collection Simple-Repairing)
             (Arity Simple-Repairing 1)
             (Documentation Simple-Repairing
              "The collection of events in which something gets fixed."))

(defrelation Inter-Actor-Slot
             (Name-In-Cyc Inter-Actor-Slot "#$InterActorSlot")
             (Predicate-Category Inter-Actor-Slot)
             (Subclass-Of Inter-Actor-Slot
              Extensional-Representation-Predicate)
             (Subclass-Of Inter-Actor-Slot Slot)
             (Set-Or-Collection Inter-Actor-Slot)
             (Arity Inter-Actor-Slot 1)
             (Documentation Inter-Actor-Slot
              "A collection of predicates.  Each element of Inter-Actor-Slot is a binary predicate used in assertions that state the relationship between two actors in some event, actual or implied.  The event in which the actors participate may or may not be explicitly represented in the KB.  For example, (Author-Of-Publication X Y) implies the existence of a Writing event in which X is the author and Y is the book written.  Examples: Agreeing-Agents, Artistic-Works-Created, Spouse, Worn-On."))

(defobject |(HIGH-AMOUNT-FN CORROSION-RESISTANCE)|
   (Scalar-Interval |(HIGH-AMOUNT-FN CORROSION-RESISTANCE)|)
   (Corrosion-Resistance |(HIGH-AMOUNT-FN CORROSION-RESISTANCE)|)
   (Skolem-Object |(HIGH-AMOUNT-FN CORROSION-RESISTANCE)|))

(defrelation Account-Type
             (Name-In-Cyc Account-Type "#$AccountType")
             (Temporal-Stuff-Type Account-Type)
             (Sibling-Disjoint-Collection Account-Type)
             (Subclass-Of Account-Type Existing-Object-Type)
             (Set-Or-Collection Account-Type)
             (Arity Account-Type 1)
             (Documentation Account-Type
              "A collection of collections.  Each element of Account-Type is a collection of financial accounts of some type.  Examples: Savings-Account, Credit-Card-Account, Retirement-Account, Social-Security-Account, Travel-Expense-Account.  Typically, accounts are denominated in units of Money."))

(defrelation Grounds-Of-Organization
             (Name-In-Cyc Grounds-Of-Organization "#$GroundsOfOrganization")
             (Existing-Object-Type Grounds-Of-Organization)
             (Subclass-Of Grounds-Of-Organization Outdoor-Location)
             (Subclass-Of Grounds-Of-Organization Geographical-Region)
             (Subclass-Of Grounds-Of-Organization Real-Estate)
             (Set-Or-Collection Grounds-Of-Organization)
             (Arity Grounds-Of-Organization 1)
             (Documentation Grounds-Of-Organization
              "A collection of smallish geographical regions.  Each element of Grounds-Of-Organization is an area which contains buildings inhabited by some organization.  Examples: the campus of the University-Of-Texas-At-Austin or the grounds of Seton-Northwest-Hospital.
Note that the `grounds' of an organization, especially an organization with urban locations, might not include a yard."))

(defrelation Plant-Blo
             (Name-In-Cyc Plant-Blo "#$PlantBLO")
             (Existing-Object-Type Plant-Blo)
             (Subclass-Of Plant-Blo Biological-Living-Object)
             (Set-Or-Collection Plant-Blo)
             (Arity Plant-Blo 1)
             (Documentation Plant-Blo
              "A subset of Biological-Living-Object.  Plant-BLO includes the elements of Plant and of Plant-Part."))

(defrelation Arm-Movement
             (Name-In-Cyc Arm-Movement "#$ArmMovement")
             (Temporal-Stuff-Type Arm-Movement)
             (Default-Disjoint-Script-Type Arm-Movement)
             (Subclass-Of Arm-Movement Body-Movement-Event)
             (Set-Or-Collection Arm-Movement)
             (Arity Arm-Movement 1)
             (Documentation Arm-Movement
              "The collection of any movements of an arm that are generated by the Animal whose arm it is, through nerve impulses to the arm.  Physically, an Arm-Movement involves movement of the upper arm or elbow in relation to the body to which it is attached."))

(defrelation Calendar-Decade
             (Name-In-Cyc Calendar-Decade "#$CalendarDecade")
             (Calendar-Covering-Type Calendar-Decade)
             (Subclass-Of Calendar-Decade Time-Interval)
             (Set-Or-Collection Calendar-Decade)
             (Arity Calendar-Decade 1)
             (Documentation Calendar-Decade
              "The collection of decades that make up the calendar; e.g., The1970s."))

(defrelation Text-Group
             (Synonymous-External-Concept Text-Group Sensus-Information1997
              "TEXT-GROUP")
             (Name-In-Cyc Text-Group "#$TextGroup")
             (Object-Type Text-Group)
             (Subclass-Of Text-Group Character-String)
             (Set-Or-Collection Text-Group)
             (Arity Text-Group 1)
             (Documentation Text-Group
              "A collection of Character-Strings. Each element of Text-Group is a Character-String which forms a 'natural' or meaningful group, above the  level of a word. Thus, 'er#q2' would be a character string, but not a text group, whereas the sentence you are now reading is a text group, as is a paragraph, etc. Note that a TextGroup is the abstract sequence of symbols, not the tangible encoding of them."))

(defobject |(VERY-HIGH-AMOUNT-FN HARDNESS)|
   (Scalar-Interval |(VERY-HIGH-AMOUNT-FN HARDNESS)|)
   (Hardness |(VERY-HIGH-AMOUNT-FN HARDNESS)|)
   (Skolem-Object |(VERY-HIGH-AMOUNT-FN HARDNESS)|))

(defrelation Unit-Of-Current
             (Name-In-Cyc Unit-Of-Current "#$UnitOfCurrent")
             (Interconvertible-Unit-Type Unit-Of-Current)
             (Subclass-Of Unit-Of-Current Unit-Of-Measure)
             (Set-Or-Collection Unit-Of-Current)
             (Arity Unit-Of-Current 1)
             (Documentation Unit-Of-Current
              "The collection of functions which return elements of Electrical-Current.  E.g., (Ampere 2) denotes an instance of Electrical-Current that would measure two amps."))

(defrelation Arresting-Someone
             (Name-In-Cyc Arresting-Someone "#$ArrestingSomeone")
             (Script-Type Arresting-Someone)
             (Temporal-Object-Type Arresting-Someone)
             (Subclass-Of Arresting-Someone Taking-Custody-Of-Animal)
             (Set-Or-Collection Arresting-Someone)
             (Arity Arresting-Someone 1)
             (Documentation Arresting-Someone
              "A collection of events.  In an instance of Arresting-Someone, a law enforcement officer arrests another person, who is thereupon taken into custody (In-Custody)."))

(defrelation Mental-Event
             (Synonymous-External-Concept Mental-Event Sensus-Information1997
              "MENTAL-PROCESS")
             (Name-In-Cyc Mental-Event "#$MentalEvent")
             (Script-Type Mental-Event)
             (Temporal-Object-Type Mental-Event)
             (Subclass-Of Mental-Event Event)
             (Set-Or-Collection Mental-Event)
             (Arity Mental-Event 1)
             (Documentation Mental-Event
              "A collection of events. Each event belonging to Mental-Event has some actor whose mental functions are involved (see Actors). Mental events include such things as theorizing about something, dreaming, perceiving, sensing, having a realization, designing something, making a decision, and consciously carrying out a task.  Some of those examples are actions as well as events (see Done-By).  For mental events that are also instances of Action, see the subset Mental-Activity."))

(defrelation Number-General
             (Synonymous-External-Concept Number-General Sensus-Information1997
              "NUMBER")
             (Name-In-Cyc Number-General "#$Number-General")
             (Object-Type Number-General)
             (Subclass-Of Number-General Mathematical-Object)
             (Set-Or-Collection Number-General)
             (Arity Number-General 1)
             (Documentation Number-General "A collection of mathematical
objects. This is the most general class of numbers,
including Real-Numbers, Complex-Numbers, various
values of infinity such as Aleph Null, and whatever else might count
as a number in mathematics."))

(defrelation Nuclear-Powered-Device
             (Name-In-Cyc Nuclear-Powered-Device "#$NuclearPoweredDevice")
             (Existing-Object-Type Nuclear-Powered-Device)
             (Subclass-Of Nuclear-Powered-Device Powered-Device)
             (Set-Or-Collection Nuclear-Powered-Device)
             (Arity Nuclear-Powered-Device 1)
             (Documentation Nuclear-Powered-Device
              "A collection of physical devices; a subset of Powered-Device.  An instance of Nuclear-Powered-Device is a device which uses nuclear fission or nuclear fusion reactions as a source of power.  Examples include elements of Nuclear-Submarine and Nuclear-Weapon."))

(defrelation Writing
             (Name-In-Cyc Writing "#$Writing")
             (Temporal-Object-Type Writing)
             (Default-Disjoint-Script-Type Writing)
             (Subclass-Of Writing Ibo-Creation)
             (Subclass-Of Writing Visual-Information-Conveying-Act)
             (Subclass-Of Writing Making-Something)
             (Set-Or-Collection Writing)
             (Arity Writing 1)
             (Documentation Writing
              "The collection of actions in which text is produced, either via writing by hand, with a typewriter, with a computer, etc.  Could be a single episode of writing, or a discontinuous set of episodes (as when one writes a letter over a few days).  Writing is not a Communicating, because there is not necessarily a successful transfer of information to some other agent.  Of course, instances of Writing can be Sub-Events of such transfers."))

(defrelation Love
             (Name-In-Cyc Love "#$Love")
             (Feeling-Attribute-Type Love)
             (Subclass-Of Love Affection)
             (Set-Or-Collection Love)
             (Arity Love 1)
             (Documentation Love
              "Strong affection for another agent arising out of kinship or personal ties.  Love may be felt towards things, too: warm attachment, enthusiasm, or devotion.  This does not, however, mean something as specialized/metaphorical as `Fred loves to eat ice cream' or `Ethel loves to get her way.'  Love is a collection, as further explained under Happiness.  Specialized forms of Love are Love-Romantic, platonic love, maternal love, infatuation, agape, etc."))

(defrelation Family-Social-Entity
             (Name-In-Cyc Family-Social-Entity "#$Family-SocialEntity")
             (Object-Type Family-Social-Entity)
             (Subclass-Of Family-Social-Entity Partially-Tangible)
             (Subclass-Of Family-Social-Entity Group)
             (Subclass-Of Family-Social-Entity Social-Being)
             (Set-Or-Collection Family-Social-Entity)
             (Arity Family-Social-Entity 1)
             (Documentation Family-Social-Entity
              "A collection of organizations.  Each element of Family-Social-Entity is a group of people or of animals related by birth and mating.  The kinship relation is closer than simply being members of the same species.  Such a family may function together as an Organization.  See also the specialization Family-Human."))

(defobject Note-About-Scalar-Interval-Max-And-Min
   (Shared-Note Note-About-Scalar-Interval-Max-And-Min)
   (Name-In-Cyc Note-About-Scalar-Interval-Max-And-Min
    "#$NoteAboutScalarIntervalMaxAndMin")
   (Documentation Note-About-Scalar-Interval-Max-And-Min
    "If there are two arguments to a Unit-Of-Measure function, as in (Meter 5 6), the first number is interpreted as the (inclusive) minimum, and the second number as the (inclusive) maximum.  Thus, (Meter 5 6) means `between 5 and 6 meters long, inclusive'.  If only one argument follows an element of Unit-Of-Measure, as in (Meter 3), it is interpreted as a shorthand for (Meter 3 3).  In other words, (Meter 3 3) means `exactly 3 meters'.  When a function belonging to Unit-Of-Measure is applied to a single argument, the value it returns must be an element of Scalar-Point-Value."))

(defobject |(LOW-AMOUNT-FN COMPRESSIBILITY)|
   (Scalar-Interval |(LOW-AMOUNT-FN COMPRESSIBILITY)|)
   (Compressibility |(LOW-AMOUNT-FN COMPRESSIBILITY)|)
   (Skolem-Object |(LOW-AMOUNT-FN COMPRESSIBILITY)|)
   (Documentation |(LOW-AMOUNT-FN COMPRESSIBILITY)|
    "can be compressed somewhat"))

(defrelation Real-Estate
             (Name-In-Cyc Real-Estate "#$RealEstate")
             (Existing-Object-Type Real-Estate)
             (Product-Type Real-Estate)
             (Subclass-Of Real-Estate Solid-Tangible-Product)
             (Set-Or-Collection Real-Estate)
             (Arity Real-Estate 1)
             (Documentation Real-Estate
              "A collection of tangible objects.  Each element of Real-Estate is either a parcel of land or a land-based property that can be bought, sold, or rented.  This includes buildings and parts of buildings such as office suites or condominiums, as well as parcels of land.  Some prominent examples: Guantanamo-Naval-Base, New-York-Hilton-At-Broadway, World-Trade-Center."))

(defrelation Ship
             (Name-In-Cyc Ship "#$Ship")
             (Existing-Object-Type Ship)
             (Subclass-Of Ship Boat-Water-Transportation-Device)
             (Set-Or-Collection Ship)
             (Arity Ship 1)
             (Documentation Ship
              "A subcollection of Boat-Water-Transportation-Device, whose instances are large, typically ocean-going vessels."))

(defrelation Single-Cell-Organism
             (Name-In-Cyc Single-Cell-Organism "#$SingleCellOrganism")
             (Existing-Object-Type Single-Cell-Organism)
             (Subclass-Of Single-Cell-Organism Organism-Whole)
             (Subclass-Of Single-Cell-Organism Cell)
             (Set-Or-Collection Single-Cell-Organism)
             (Arity Single-Cell-Organism 1)
             (Documentation Single-Cell-Organism
              "The collection of living things which are all elements of both Organism-Whole and Cell.  Each element of Single-Cell-Organism is an organism consisting of one self-reproducing living cell."))

(deffunction Gen-Value-Fn
   (Nth-Domain Gen-Value-Fn 1 Interval-Based-Quantity-Slot)
   (Nth-Domain Gen-Value-Fn 2 Collection)
   (Nth-Domain Gen-Value-Fn 3 Generic-Attribute)
   (Result-Instance-Of Gen-Value-Fn Scalar-Interval)
   (Name-In-Cyc Gen-Value-Fn "#$GenValueFn")
   (Reifiable-Function Gen-Value-Fn)
   (Individual-Denoting-Function Gen-Value-Fn)
   (Function Gen-Value-Fn)
   (Arity Gen-Value-Fn 3)
   (Function-Arity Gen-Value-Fn 2)
   (Documentation Gen-Value-Fn
    "Gen-Value-Fn is a Cyc function, in particular, an element of Individual-Denoting-Function.  It is used to denote an amount of a specified attribute that can be considered a generic value (very low, low, medium, high, or etc.) for members of the indicated group.  Thus, (Gen-Value-Fn PRED COL GEN) denotes the amount which can be considered the GEN value of PRED for members of the Collection COL.  Thus (Gen-Value-Fn Height-Of-Object Basket-Ball-Player High) denotes the amount of distance which is a high height among basketball players.  See also Generic-Attribute."))

(defrelation Purpose-In-Event
             (Overlapping-External-Concept Purpose-In-Event
              Sensus-Information1997 "PURPOSE")
             (Nth-Domain Purpose-In-Event 1 Agent)
             (Nth-Domain Purpose-In-Event 2 Purposeful-Action)
             (Nth-Domain Purpose-In-Event 3 Goal)
             (Name-In-Cyc Purpose-In-Event "#$purposeInEvent")
             (Modal-Relationship Purpose-In-Event)
             (Ternary-Predicate Purpose-In-Event)
             (Relation Purpose-In-Event)
             (Arity Purpose-In-Event 3)
             (Documentation Purpose-In-Event
              "(Purpose-In-Event AGT EVT G) means that the agent AGT is taking part in event EVT because (1) AGT wants G to become true, and also (2) AGT expects and believes that EVT occurring will (help) make G true."))

(defrelation Legal-Agent
             (Name-In-Cyc Legal-Agent "#$LegalAgent")
             (Existing-Object-Type Legal-Agent)
             (Subclass-Of Legal-Agent Social-Being)
             (Set-Or-Collection Legal-Agent)
             (Arity Legal-Agent 1)
             (Documentation Legal-Agent
              "The collection of all legal agents; a subset of Agent.  A legal agent is one that has some legal status in a particular legal system.  At the very least, such an agent is recognized by some legal authority as having some kinds of rights and/or responsibilities as an agent (e.g., Citizens of Germany), or as being subject to certain restrictions and penalties (e.g., a company that has been blacklisted by Iraq).  Thus, instances of Legal-Agent include agents that may have property rights, may be taxed, may have a government identification number, may be sued, may have an address, etc. 
Note: membership in this collection is very much dependent upon context.  In some societies, only adult males and various kinds of state-run organizations would be included in Legal-Agents."))

(defrelation Social-Being
             (Name-In-Cyc Social-Being "#$SocialBeing")
             (Existing-Object-Type Social-Being)
             (Subclass-Of Social-Being Intelligent-Agent)
             (Set-Or-Collection Social-Being)
             (Arity Social-Being 1)
             (Documentation Social-Being
              "The collection of beings whose existence is accepted by some social system.  (Thus, the elements of Social-Being will vary with social contexts.)  Social beings are entities able to perform social roles in the system that recognizes them.  Social-Being includes elements of Organization (e.g., the Queens-Guard) as well as the elements of Legal-Agent (in that system), so, for example, in modern industrial social systems, the elements of Legal-Corporation and Person are instances of Social-Being. "))

(defrelation |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "NON-ADDRESSEE-ORIENTED-VERBAL-PROCESS")|
             (Skolem-Object
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "NON-ADDRESSEE-ORIENTED-VERBAL-PROCESS")|)
             (Script-Type
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "NON-ADDRESSEE-ORIENTED-VERBAL-PROCESS")|)
             (Temporal-Stuff-Type
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "NON-ADDRESSEE-ORIENTED-VERBAL-PROCESS")|)
             (Subclass-Of
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "NON-ADDRESSEE-ORIENTED-VERBAL-PROCESS")|
              Communicating)
             (Set-Or-Collection
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "NON-ADDRESSEE-ORIENTED-VERBAL-PROCESS")|)
             (Arity
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "NON-ADDRESSEE-ORIENTED-VERBAL-PROCESS")|
              1))

(defrelation Chain-Organization
             (Name-In-Cyc Chain-Organization "#$ChainOrganization")
             (Existing-Object-Type Chain-Organization)
             (Subclass-Of Chain-Organization Business)
             (Subclass-Of Chain-Organization Legal-Corporation)
             (Set-Or-Collection Chain-Organization)
             (Arity Chain-Organization 1)
             (Documentation Chain-Organization
              "A collection of organizations.  An element of Chain-Organization is a parent business which comes into contact with its customers or clients primarily through its geographically dispersed sub-organizations, which typically are (mostly) homogeneous in product line, style of physical quarters, local organizational structure, etc.  Examples include the parent organizations of McDonald's and Midas Muffler."))

(defobject Up-Side-Down
   (Orientation-Attribute Up-Side-Down)
   (Name-In-Cyc Up-Side-Down "#$UpSideDown")
   (Documentation Up-Side-Down
    "(Orientation OBJECT Up-Side-Down) means that OBJECT's intrinsic bottom (e.g., the hull of a ship) is above (Above-Directly) its intrinsic top (e.g., the masthead).  Many things don't work properly when upside down, e.g., sailboats, salad bowls, newspapers."))

(defrelation Pants
             (Name-In-Cyc Pants "#$Pants")
             (Product-Type Pants)
             (Existing-Object-Type Pants)
             (Subclass-Of Pants Clothing-Item)
             (Set-Or-Collection Pants)
             (Arity Pants 1)
             (Documentation Pants
              "A collection of objects.  Every element of Pants is a clothing item worn on the lower torso and legs.  The collection Pants includes the subsets Short-Pants and Long-Pants.  There are also very specialized subsets, e.g., Football-Pants."))

(deffunction Dollars-Per-Hour
   (Args-Isa Dollars-Per-Hour Real-Number)
   (Result-Instance-Of Dollars-Per-Hour Monetary-Flow-Rate)
   (Result-Instance-Of Dollars-Per-Hour Scalar-Interval)
   (Result-Instance-Of Dollars-Per-Hour Rate)
   (Name-In-Cyc Dollars-Per-Hour "#$DollarsPerHour")
   (Unit-Of-Monetary-Flow-Rate Dollars-Per-Hour)
   (Unit-Of-Measure-No-Prefix Dollars-Per-Hour)
   (Function Dollars-Per-Hour)
   (Documentation Dollars-Per-Hour
    "An element of Unit-Of-Monetary-Flow-Rate; the amount of Money in dollars earned, spent, or transferred in an hour."))

(defrelation Gaining-User-Rights
             (The-Covering Gaining-User-Rights Losing-User-Rights
              |(THE-COVERING GAINING-USER-RIGHTS LOSING-USER-RIGHTS)|)
             (Name-In-Cyc Gaining-User-Rights "#$GainingUserRights")
             (Temporal-Object-Type Gaining-User-Rights)
             (Subclass-Of Gaining-User-Rights Transfer-In)
             (Subclass-Of Gaining-User-Rights Change-In-User-Rights)
             (Set-Or-Collection Gaining-User-Rights)
             (Arity Gaining-User-Rights 1)
             (Documentation Gaining-User-Rights
              "A collection of events.  In an instance of Gaining-User-Rights, some Agent gains possession of something.  Thus, in such an event, that agent newly acquires a right (viz., some User-Rights-Attribute) to use some item.  The item in question is identified as the Object-Of-Possession-Transfer, and the agent is the To-Possessor (i.e., the one to whom the possession comes).  The Agent may or may not be a Deliberate-Actors in the event; e.g., buying a car is done on purpose, but receiving a car as a gift isn't.  If either of those two events happen to you, though, it is an element of the collection Gaining-User-Rights."))

(defrelation Situation-Type
             (Name-In-Cyc Situation-Type "#$SituationType")
             (Collection Situation-Type)
             (Subclass-Of Situation-Type Collection)
             (Set-Or-Collection Situation-Type)
             (Arity Situation-Type 1)
             (Documentation Situation-Type
              "A collection of collections.  Situation-Type is the collection of subsets of Situation."))

(defrelation Translation-No-Location-Change
             (Name-In-Cyc Translation-No-Location-Change
              "#$Translation-NoLocationChange")
             (Temporal-Object-Type Translation-No-Location-Change)
             (Subclass-Of Translation-No-Location-Change
              Movement-Translation-Event)
             (Set-Or-Collection Translation-No-Location-Change)
             (Arity Translation-No-Location-Change 1)
             (Documentation Translation-No-Location-Change
              "A collection of translational motion events; hence a subset of Movement-Translation-Event.  In any instance of Translation-No-Location-Change, the Object-Moving undergoes translational motion but ends up where it started --- i.e., there is no NET movement; i.e., its From-Location and To-Location are the same.  Between the beginning and the end of a Translation-No-Location-Change, the Object-Moving may visit the To-Location and the From-Location any number of times.   E.g., consider the motion of a person who is born in, and 80 years later dies in, the very same hospital, and has been there a few times in between for operations, visiting patients, etc.  A less dramatic example is the motion of your car on a particular day, as it gets moved around, crosses its own path a few times, etc., but ends the day in the same place it started.   Elements of Translation-No-Location-Change may be periodic or nonperiodic movements.  An important subset of Translation-No-Location-Change is Translation-Round-Trip."))

(defrelation Community-Organization
             (Name-In-Cyc Community-Organization "#$CommunityOrganization")
             (Existing-Object-Type Community-Organization)
             (Subclass-Of Community-Organization Organization)
             (Set-Or-Collection Community-Organization)
             (Arity Community-Organization 1)
             (Documentation Community-Organization
              "A collection of organizations.  An element of Community-Organization is a group that consists of residents of a Neighborhood or apartment building or condominium complex, and which is concerned with issues affecting the Neighborhood or complex."))

(defrelation Feeling-Attribute-Type
             (Name-In-Cyc Feeling-Attribute-Type "#$FeelingAttributeType")
             (Collection Feeling-Attribute-Type)
             (Subclass-Of Feeling-Attribute-Type Primitive-Attribute-Type)
             (Subclass-Of Feeling-Attribute-Type Attribute-Type)
             (Set-Or-Collection Feeling-Attribute-Type)
             (Arity Feeling-Attribute-Type 1)
             (Documentation Feeling-Attribute-Type
              "A collection of collections.  Each Feeling-Attribute-Type is a type of attribute that describes some sort of emotion and/or mental feeling.  Some elements of Feeling-Attribute-Type are:  Envy, Curiosity, Pride-Of-Accomplishment, etc.  See also Feeling-Attribute."))

(defobject |(HIGH-AMOUNT-FN COMPRESSIBILITY)|
   (Scalar-Interval |(HIGH-AMOUNT-FN COMPRESSIBILITY)|)
   (Compressibility |(HIGH-AMOUNT-FN COMPRESSIBILITY)|)
   (Skolem-Object |(HIGH-AMOUNT-FN COMPRESSIBILITY)|)
   (Documentation |(HIGH-AMOUNT-FN COMPRESSIBILITY)|
    "Can be compressed almost any amount"))

(defrelation Calm
             (Name-In-Cyc Calm "#$Calm")
             (Feeling-Attribute-Type Calm)
             (Subclass-Of Calm Relaxed-Emotion)
             (Set-Or-Collection Calm)
             (Arity Calm 1)
             (Documentation Calm
              "A feeling of calmness or serenity, being quiet and free from disturbance.  This is a Collection --- for an explanation of that, see Happiness.  A related Feeling-Attribute-Type is Calm."))

(defrelation Transporting-Goods
             (Name-In-Cyc Transporting-Goods "#$TransportingGoods")
             (Default-Disjoint-Script-Type Transporting-Goods)
             (Temporal-Stuff-Type Transporting-Goods)
             (Subclass-Of Transporting-Goods Handling-An-Object)
             (Subclass-Of Transporting-Goods Human-Activity)
             (Subclass-Of Transporting-Goods Transportation-Event)
             (Set-Or-Collection Transporting-Goods)
             (Arity Transporting-Goods 1)
             (Documentation Transporting-Goods
              "Moving some kind of material from one point to another.  Different from just mixing stuff or putting stuff with other stuff."))

(defrelation Removing-Something
             (Name-In-Cyc Removing-Something "#$RemovingSomething")
             (Temporal-Object-Type Removing-Something)
             (Script-Type Removing-Something)
             (Subclass-Of Removing-Something Translation-Complete)
             (Subclass-Of Removing-Something Translation-Location-Change)
             (Subclass-Of Removing-Something
              Causing-Another-Objects-Translational-Motion)
             (Set-Or-Collection Removing-Something)
             (Arity Removing-Something 1)
             (Documentation Removing-Something
              "A collection of events.  During an instance of Removing-Something, the Object-Removed is separated from an object or configuration to which it belonged prior to the removal event.  In different types of removals, either the Object-Removed or the thing it was associated with may be destroyed; or both may survive.  Examples of Removing-Something include: someone unwrapping a present, undressing, digging up a root, removing an appendix, and stripping wax off a floor."))

(defrelation Disgust
             (Name-In-Cyc Disgust "#$Disgust")
             (Feeling-Attribute-Type Disgust)
             (Subclass-Of Disgust Dislike)
             (Set-Or-Collection Disgust)
             (Arity Disgust 1)
             (Documentation Disgust
              "A feeling of repulsion or aversion towards something considered distasteful or repugnant.  This is a Collection --- for an explanation of that, see Happiness.  Some more specialized Feeling-Attribute-Types than Disgust include feelings of Abhorrence."))

(defrelation Dress
             (Name-In-Cyc Dress "#$Dress")
             (Product-Type Dress)
             (Existing-Object-Type Dress)
             (Subclass-Of Dress Clothing-Item)
             (Subclass-Of Dress Womens-Clothing)
             (Set-Or-Collection Dress)
             (Arity Dress 1)
             (Documentation Dress
              "The collection of all dresses, a kind of women's clothing"))

(defrelation Inter-Arg-Isa2-4
             (Nth-Domain Inter-Arg-Isa2-4 1 Predicate)
             (Nth-Domain Inter-Arg-Isa2-4 2 Collection)
             (Nth-Domain Inter-Arg-Isa2-4 3 Collection)
             (Name-In-Cyc Inter-Arg-Isa2-4 "#$interArgIsa2-4")
             (Ternary-Predicate Inter-Arg-Isa2-4)
             (Relation Inter-Arg-Isa2-4)
             (Arity Inter-Arg-Isa2-4 3)
             (Documentation Inter-Arg-Isa2-4
              "(Inter-Arg-Isa2-4 PRED INDEPENDENT-ARG-COL DEPENDENT-ARG-COL) Base-KB) means that, when an instance of INDEPENDENT-ARG-COL appears as the second argument to PRED, the fourth argument in that assertion is constrained to be an instance of DEPENDENT-ARG-COL."))

(defobject |(HIGH-AMOUNT-FN FLAMMABILITY)|
   (Scalar-Interval |(HIGH-AMOUNT-FN FLAMMABILITY)|)
   (Flammability |(HIGH-AMOUNT-FN FLAMMABILITY)|)
   (Skolem-Object |(HIGH-AMOUNT-FN FLAMMABILITY)|))

(defrelation Spoken-Communicating
             (Synonymous-External-Concept Spoken-Communicating
              Sensus-Information1997 "SPEECH-ACT")
             (Name-In-Cyc Spoken-Communicating "#$SpokenCommunicating")
             (Temporal-Stuff-Type Spoken-Communicating)
             (Script-Type Spoken-Communicating)
             (Subclass-Of Spoken-Communicating Audio-Communicating)
             (Subclass-Of Spoken-Communicating Human-Activity)
             (Set-Or-Collection Spoken-Communicating)
             (Arity Spoken-Communicating 1)
             (Documentation Spoken-Communicating
              "A collection of information transfer events; a subset of Audio-Communicating.  Each element of Spoken-Communicating is a transmission of sound-borne verbal information by spoken words between two (or more) agents.  The communication may be one-way or two-way (or multi-way); see Communicating.  Examples of Spoken-Communicating: a telephone conversation, a classroom discussion, the Gettysburg-Address-Speech.  Note that the collection Speaking contains events in which a person generates spoken language but doesn't necessarily communicate it; e.g., a person practicing a speech alone.  If someone who is speaking is also communicating, then her speaking is a Sub-Events of some element of Spoken-Communicating.  Every element of Spoken-Communicating has at least one Communication-Token which is an element of Utterance."))

(defrelation Transaction
             (Name-In-Cyc Transaction "#$Transaction")
             (Temporal-Object-Type Transaction)
             (Default-Disjoint-Script-Type Transaction)
             (Subclass-Of Transaction Purposeful-Action)
             (Subclass-Of Transaction Social-Occurrence)
             (Set-Or-Collection Transaction)
             (Arity Transaction 1)
             (Documentation Transaction
              "Transaction is the collection of events performed by Agents cooperating (willingly) under some Agreement, each performing actions in exchange for the actions of the other. 
Note:  Attack/counterattack in warfare is not a Transaction.  Neither is fortuitous cooperation without agreement, such as a set of investors who, unknown to each other, all buy the same stock almost at once, and end up driving its price up.  On the other hand, if you see agents acting to mutual benefit, it's not a bad strategy to guess that there is some agreement between them.
Note: The word 'transaction' often means an exchange of user rights (to goods and/or money) between agents; see Exchange-Of-User-Rights for that concept.  Transaction is a more general concept, and is a superset of Exchange-Of-User-Rights."))

(defrelation Semiconductor-Stuff
             (Name-In-Cyc Semiconductor-Stuff "#$SemiconductorStuff")
             (Existing-Stuff-Type Semiconductor-Stuff)
             (Subclass-Of Semiconductor-Stuff Tangible-Thing)
             (Set-Or-Collection Semiconductor-Stuff)
             (Arity Semiconductor-Stuff 1)
             (Documentation Semiconductor-Stuff
              "The collection of those elements of Tangible-Thing that can, under varying electrical fields, behave as an electrical insulator at times and an electrical conductor at other times."))

(defrelation Extensional-Representation-Predicate
             (Name-In-Cyc Extensional-Representation-Predicate
              "#$ExtensionalRepresentationPredicate")
             (Predicate-Category Extensional-Representation-Predicate)
             (Subclass-Of Extensional-Representation-Predicate Predicate)
             (Set-Or-Collection Extensional-Representation-Predicate)
             (Arity Extensional-Representation-Predicate 1)
             (Documentation Extensional-Representation-Predicate
              "A collection of predicates.  Each element of Extensional-Representation-Predicate is a predicate used to form assertions about the properties of individual objects. These predicates implement the extensional structure of the Cyc ontology; e.g., Attorneys, Object-Taken-Care-Of, Actor-Parts-Affected, Vested-Interest."))

(defobject True
   (Individual True)
   (Truth-Value True)
   (Thing True)
   (Name-In-Cyc True "#$True")
   Documentation
   True
   "A primitive logical constant in KIF.  Defined on p. 16 of version 3.0."
   (Documentation True
    "An element of Truth-Value.  True is logical truth in Cyc; this is the abstract logical notion--not to be confused with Lisp's T, nor with the English word `true'."))

(defobject |(LOW-AMOUNT-FN DUCTILITY)|
   (Scalar-Interval |(LOW-AMOUNT-FN DUCTILITY)|)
   (Ductility |(LOW-AMOUNT-FN DUCTILITY)|)
   (Skolem-Object |(LOW-AMOUNT-FN DUCTILITY)|))

(defrelation Goals
             (Subrelation-Of Goals Desires)
             (Domain Goals Agent)
             (Range Goals Goal)
             (Name-In-Cyc Goals "#$goals")
             (Propositional-Attitude-Slot Goals)
             (Slot Goals)
             (Relation Goals)
             (Arity Goals 2)
             (Binary-Relation Goals)
             (Documentation Goals
              "(Goals AGT G) means that the Agent AGT has the Goal G.  That is, G is one of their goals.  This implies (Desires AGT G), but Goals is stronger than Desires, in that an agent will take action (or at least intend to take action, and plan accordingly) to make their Goals true, while their Desires may include things s/he merely wishes were true, but about which s/he has no intention of undertaking action.  Additionally, Goals are generally about the future, whereas Desires can be about the present, future, or even the past.  For further information about goals, see Goal.  Also see Intends."))

(defrelation Proper-Noun
             (Name-In-Cyc Proper-Noun "#$ProperNoun")
             (Linguistic-Object-Type Proper-Noun)
             (Subclass-Of Proper-Noun Speech-Part)
             (Set-Or-Collection Proper-Noun)
             (Arity Proper-Noun 1)
             (Documentation Proper-Noun
              "The collection of all proper nouns. Proper nouns are usually capitalized, and they usually denote some particular person, place, or thing.  Many proper nouns cannot be preceded by a determiner, and many have no plural form.  Example: `Dallas'."))

(defrelation Biological-Subkingdom
             (Name-In-Cyc Biological-Subkingdom "#$BiologicalSubkingdom")
             (Biological-Taxon-Type Biological-Subkingdom)
             (Subclass-Of Biological-Subkingdom Biological-Taxon)
             (Set-Or-Collection Biological-Subkingdom)
             (Arity Biological-Subkingdom 1)
             (Documentation Biological-Subkingdom
              "The collection of biological subkingdoms, the biological taxonomic divisions of organisms immediately below Biological-Kingdom."))

(defrelation Plant-Physiological-Attribute
             (Name-In-Cyc Plant-Physiological-Attribute
              "#$PlantPhysiologicalAttribute")
             (Attribute-Type Plant-Physiological-Attribute)
             (Subclass-Of Plant-Physiological-Attribute
              Physiological-Attribute)
             (Set-Or-Collection Plant-Physiological-Attribute)
             (Arity Plant-Physiological-Attribute 1)
             (Documentation Plant-Physiological-Attribute
              "The collection of attributes referring to the physiological properties of plants.  At the very least, these include seasonal stages, physical properties, and plant health.  These attributes apply to entire Plants rather than just to certain parts of them."))

(defrelation Party-Celebration
             (Name-In-Cyc Party-Celebration "#$Party-Celebration")
             (Script-Type Party-Celebration)
             (Subclass-Of Party-Celebration Social-Gathering)
             (Set-Or-Collection Party-Celebration)
             (Arity Party-Celebration 1)
             (Documentation Party-Celebration
              "The collection of party events and other similar celebrations such as baby showers.  Persons gather intentionally at a location in order to communicate or share some experience, and to enjoy themselves, but (unlike a Meeting-Taking-Place) business is rarely transacted at a Party-Celebration, or at least is beside the official point of the party.
Note: as with most collection worth naming, there are borderline cases here; e.g., Tupperware parties."))

(defrelation Simple-Whole-Body-Movement
             (Name-In-Cyc Simple-Whole-Body-Movement
              "#$SimpleWholeBodyMovement")
             (Script-Type Simple-Whole-Body-Movement)
             (Temporal-Stuff-Type Simple-Whole-Body-Movement)
             (Subclass-Of Simple-Whole-Body-Movement Body-Movement-Event)
             (Set-Or-Collection Simple-Whole-Body-Movement)
             (Arity Simple-Whole-Body-Movement 1)
             (Documentation Simple-Whole-Body-Movement
              "A collection of common bodily movements (e.g., walking, jumping) in which the whole body is involved in the movement."))

(defrelation Object-Paid-For
             (Subrelation-Of Object-Paid-For Object-Of-Possession-Transfer)
             (Domain Object-Paid-For Monetary-Exchange-Of-User-Rights)
             (Range Object-Paid-For Something-Existing)
             (Name-In-Cyc Object-Paid-For "#$objectPaidFor")
             (Actor-Slot Object-Paid-For)
             (Slot Object-Paid-For)
             (Relation Object-Paid-For)
             (Arity Object-Paid-For 2)
             (Binary-Relation Object-Paid-For)
             (Documentation Object-Paid-For
              "(Object-Paid-For EVENT OBJECT) means that in the Monetary-Exchange-Of-User-Rights EVENT, the right to possess OBJECT is transferred from one Agent to another.  OBJ is not the Object-Tendered but the goods that are bought or rented."))

(defrelation One-Story-Building
             (Name-In-Cyc One-Story-Building "#$OneStoryBuilding")
             (Existing-Object-Type One-Story-Building)
             (Subclass-Of One-Story-Building Building)
             (Set-Or-Collection One-Story-Building)
             (Arity One-Story-Building 1)
             (Documentation One-Story-Building
              "Collection of all one story buildings."))

(defrelation Advertising
             (Name-In-Cyc Advertising "#$Advertising")
             (Script-Type Advertising)
             (Temporal-Object-Type Advertising)
             (Subclass-Of Advertising Communication-Act-Single)
             (Set-Or-Collection Advertising)
             (Arity Advertising 1)
             (Documentation Advertising
              "A collection of Communication-Act-Singles.  In an Advertising event, someone is communicating, to potential customers of an Agent, the desire of that agent to do business with those customers (either to `do business' in general or to sell them something specific."))

(defrelation Entity
             (Name-In-Cyc Entity "#$Entity")
             (Temporal-Object-Type Entity)
             (Subclass-Of Entity Something-Existing)
             (Set-Or-Collection Entity)
             (Arity Entity 1)
             (Documentation Entity
              "?X is an Entity if it is a `maximal' Something-Existing.  What we mean by that is that there cannot be another Something-Existing of which ?X is merely a subabstraction (see Sub-Abstrac).  So AlbertEinstein is an entity, but AlbertEinsteinWhileAtPrinceton is not.  In other words, an Entity represents the entire existence of a thing, not just one or more `temporal chunks' or Time-Slices of a thing."))

(defrelation Audio-Communicating
             (Name-In-Cyc Audio-Communicating "#$AudioCommunicating")
             (Temporal-Stuff-Type Audio-Communicating)
             (Default-Disjoint-Script-Type Audio-Communicating)
             (Subclass-Of Audio-Communicating Communicating)
             (Set-Or-Collection Audio-Communicating)
             (Arity Audio-Communicating 1)
             (Documentation Audio-Communicating
              "A collection of information transfer events; a subset of Communicating.  Each element of Audio-Communicating is a transmission of sound-borne information between two (or more) agents; e.g., talking, clapping, or performing music."))

(defobject Continent-Of-South-America
   (Entity Continent-Of-South-America)
   (Continent Continent-Of-South-America)
   (Name-In-Cyc Continent-Of-South-America "#$ContinentOfSouthAmerica")
   (Documentation Continent-Of-South-America
    "The continent in the western and southern hemisphere."))

(defobject |(NO-AMOUNT-FN RIGIDITY)|
   (Scalar-Interval |(NO-AMOUNT-FN RIGIDITY)|)
   (Rigidity |(NO-AMOUNT-FN RIGIDITY)|)
   (Skolem-Object |(NO-AMOUNT-FN RIGIDITY)|))

(defrelation Biological-Genus
             (Name-In-Cyc Biological-Genus "#$BiologicalGenus")
             (Biological-Taxon-Type Biological-Genus)
             (Subclass-Of Biological-Genus Biological-Taxon)
             (Set-Or-Collection Biological-Genus)
             (Arity Biological-Genus 1)
             (Documentation Biological-Genus
              "The collection of biological taxonomic subdivisions below Biological-Family and above Biological-Species.  Sometimes, hybrids are possible between different instances of Biological-Species that belong to the same Biological-Genus."))

(defrelation Shear-Strength
             (Very-Low-Amount-Fn Shear-Strength
              |(VERY-LOW-AMOUNT-FN SHEAR-STRENGTH)|)
             (Medium-Amount-Fn Shear-Strength
              |(MEDIUM-AMOUNT-FN SHEAR-STRENGTH)|)
             (High-Amount-Fn Shear-Strength |(HIGH-AMOUNT-FN SHEAR-STRENGTH)|)
             (Low-Amount-Fn Shear-Strength |(LOW-AMOUNT-FN SHEAR-STRENGTH)|)
             (Very-High-Amount-Fn Shear-Strength
              |(VERY-HIGH-AMOUNT-FN SHEAR-STRENGTH)|)
             (Name-In-Cyc Shear-Strength "#$ShearStrength")
             (Primitive-Attribute-Type Shear-Strength)
             (Subclass-Of Shear-Strength Physical-Attribute)
             (Subclass-Of Shear-Strength Scalar-Interval)
             (Set-Or-Collection Shear-Strength)
             (Arity Shear-Strength 1)
             (Documentation Shear-Strength
              "A collection of attributes; a subset of Physical-Attribute.  Each element of Shear-Strength represents a specific capacity of some physical object to resist the slipping of one segment in relation to another.  Shear strengths are designated using a Generic-Value-Function; higher value means more resistance to slippage.  Shear strengths of objects are indicated with the predicate Shear-Strength-Of-Object."))

(defrelation Gen-Format
             (Nth-Domain Gen-Format 1 Relationship)
             (Nth-Domain Gen-Format 2 String)
             (Nth-Domain Gen-Format 3 Cyc-System-List)
             (Name-In-Cyc Gen-Format "#$genFormat")
             (Ternary-Predicate Gen-Format)
             (Relation Gen-Format)
             (Arity Gen-Format 3))

(defrelation Control-Device
             (Name-In-Cyc Control-Device "#$ControlDevice")
             (Product-Type Control-Device)
             (Existing-Object-Type Control-Device)
             (Subclass-Of Control-Device Physical-Device)
             (Set-Or-Collection Control-Device)
             (Arity Control-Device 1)
             (Documentation Control-Device
              "A collection of physical devices.  An instance of Control-Device is a device whose Primary-Function is to control the behavior/functioning/properties of another thing (usually another instance of Physical-Device).  Obvious instances of Control-Device include: the remote control for your TV (an instance of Remote-Control-Device), the brake pedal on your car (an instance of Pedal-Control-Device), the light switch on your bedroom wall (an instance of Electrical-Switch); a less obvious instance of Control-Device is Hoover-Dam (an instance of Dam)."))

(defrelation Mixture
             (Name-In-Cyc Mixture "#$Mixture")
             (Existing-Stuff-Type Mixture)
             (Subclass-Of Mixture Tangible-Thing)
             (Set-Or-Collection Mixture)
             (Arity Mixture 1)
             (Documentation Mixture
              "A collection of tangible stuffs.  Every instance of Mixture is a tangible stuff composed of two or more different Constituents which have been mixed.  The stuffs which were inputs to the mixing do not form chemical bonds between them, and at a later time the mixture may be resolved by some Separation-Event.  Examples include all elements of the collections Blood, Mud, Air, and Carbonated-Beverage.  A mixture has a composition but not a structure; thus, the following are NOT mixtures, since all have some structure: a wet sponge, a person, or a portion of plywood.
Note: By default, mixtures are assumed to be stable, i.e., they won't separate on their own.  Use Separating-Constituent to override this default for a constituent that does separate out spontaneously (e.g. a Carbonated-Beverage going flat)."))

(defobject |(VERY-LOW-AMOUNT-FN FRAGILITY)|
   (Scalar-Interval |(VERY-LOW-AMOUNT-FN FRAGILITY)|)
   (Fragility |(VERY-LOW-AMOUNT-FN FRAGILITY)|)
   (Skolem-Object |(VERY-LOW-AMOUNT-FN FRAGILITY)|))

(defrelation Relaxed-Emotion
             (Name-In-Cyc Relaxed-Emotion "#$Relaxed-Emotion")
             (Feeling-Attribute-Type Relaxed-Emotion)
             (Subclass-Of Relaxed-Emotion Feeling-Attribute)
             (Set-Or-Collection Relaxed-Emotion)
             (Arity Relaxed-Emotion 1)
             (Documentation Relaxed-Emotion
              "The feeling of being emotionally relaxed, of having no pressing troubles or duties weighing on one, of being at ease and untroubled.  This is a Collection --- for an explanation of that, see Happiness.  A related Feeling-Attribute-Type is Calm."))

(defrelation Business
             (Name-In-Cyc Business "#$Business")
             (Existing-Object-Type Business)
             (Subclass-Of Business Commercial-Organization)
             (Set-Or-Collection Business)
             (Arity Business 1)
             (Documentation Business
              "The collection of Organizations intended to make profits, i.e., make money for agents that own them.  All Businesses are Commercial-Organizations (they must buy or sell something), but not all Commercial-Organizations are Businesses.  In a franchise Organization, the Parent-Company is regarded as a Business, while the Sub-Organizations are merely instances of Commercial-Organization.  Businesses are typically Legal-Agents, while Commercial-Organizations need not be."))

(defobject False
   (Individual False)
   (Truth-Value False)
   (Thing False)
   (Name-In-Cyc False "#$False")
   Documentation
   False
   "A primitive logical constant in KIF.  Defined on p. 16 of version 3.0."
   (Documentation False
    "An element of Truth-Value.  False is logical falsehood in Cyc; this is the abstract logical notion--not to be confused with Lisp's NIL, nor with the English word `false'."))

(defrelation Publicly-Held-Corporation
             (Name-In-Cyc Publicly-Held-Corporation
              "#$PubliclyHeldCorporation")
             (Existing-Object-Type Publicly-Held-Corporation)
             (Subclass-Of Publicly-Held-Corporation Business)
             (Subclass-Of Publicly-Held-Corporation Legal-Corporation)
             (Set-Or-Collection Publicly-Held-Corporation)
             (Arity Publicly-Held-Corporation 1)
             (Documentation Publicly-Held-Corporation
              "A collection of businesses; a subset of Legal-Corporation.  An element of Publicly-Held-Corporation is an incorporated business whose Stock is traded publicly on some stock exchange or another public securities market.  Businesses that are not traded publicly are instances of Privately-Held-Corporation."))

(defrelation Freezing
             (Name-In-Cyc Freezing "#$Freezing")
             (Temporal-Object-Type Freezing)
             (Default-Disjoint-Script-Type Freezing)
             (Subclass-Of Freezing Physical-State-Change-Event)
             (Subclass-Of Freezing Translocation)
             (Set-Or-Collection Freezing)
             (Arity Freezing 1)
             (Documentation Freezing
              "A collection of events.  In each instance of this collection, an object is cooled to (and then below) its Freezing-Point and is thereby changed from a Liquid-State-Of-Matter to a Solid-State-Of-Matter."))

(defobject Note-About-Predicate-Categories
   (Shared-Note Note-About-Predicate-Categories)
   (Name-In-Cyc Note-About-Predicate-Categories
    "#$NoteAboutPredicateCategories")
   (Documentation Note-About-Predicate-Categories
    "Predicates in Cyc are organized into collections.  While some, like :Slot, are logically well-founded and are referenced in axioms and in the code which implements Cyc, others, though based on some intuitively plausible criteria, are involved in few (if any) axioms and are therefore not integral to Cyc's ontology.  Collections which fall into the latter class are generally under review at this time and are flagged with this Shared-Notes."))

(defrelation Cyc-System-Atom-With-Value
             (Name-In-Cyc Cyc-System-Atom-With-Value
              "#$CycSystemAtomWithValue")
             (Object-Type Cyc-System-Atom-With-Value)
             (Subclass-Of Cyc-System-Atom-With-Value Cyc-System-Atom)
             (Set-Or-Collection Cyc-System-Atom-With-Value)
             (Arity Cyc-System-Atom-With-Value 1)
             (Documentation Cyc-System-Atom-With-Value
              "A sub-collection of the atomic data belonging to the CycL substrate of the Cyc System.  Each element of Cyc-System-Atom-With-Value is an atomic datum that has a value (e.g., 2) associated with it."))

(defrelation |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "ABSTRACT-OBJECT")|
             (Skolem-Object
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "ABSTRACT-OBJECT")|)
             (Collection
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "ABSTRACT-OBJECT")|)
             (Subclass-Of
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "ABSTRACT-OBJECT")|
              Individual)
             (Set-Or-Collection
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "ABSTRACT-OBJECT")|)
             (Arity
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "ABSTRACT-OBJECT")|
              1))

(defrelation Chest-Body-Part
             (Name-In-Cyc Chest-Body-Part "#$Chest-BodyPart")
             (Unique-Anatomical-Part-Type Chest-Body-Part)
             (Animal-Body-Part-Type Chest-Body-Part)
             (Subclass-Of Chest-Body-Part Biological-Living-Object)
             (Subclass-Of Chest-Body-Part Animal-Body-Part)
             (Set-Or-Collection Chest-Body-Part)
             (Arity Chest-Body-Part 1)
             (Documentation Chest-Body-Part
              "The collection of the chests of Animals.  The animal's chest is its Animal-Body-Part region located between its neck and its abdomen.  For people and many other types of animals, the chest is bounded by (defined by, given shape by) the animal's ribcage."))

(defrelation Visibility
             (High-Amount-Fn Visibility |(HIGH-AMOUNT-FN VISIBILITY)|)
             (Low-Amount-Fn Visibility |(LOW-AMOUNT-FN VISIBILITY)|)
             (Name-In-Cyc Visibility "#$Visibility")
             (Primitive-Attribute-Type Visibility)
             (Subclass-Of Visibility Physical-Attribute)
             (Subclass-Of Visibility Scalar-Interval)
             (Set-Or-Collection Visibility)
             (Arity Visibility 1)
             (Documentation Visibility
              "A collection of attributes; a subset of Scalar-Interval.  Each element of Visibility is a characterization of how clear the ambient fluid at a location is.  Higher values indicate one can see farther (than one could have at lower values at the same location).  Different degrees of visibility may be designated using a Generic-Value-Function.  Visibility at a location is expressed with the predicate Ambient-Visibility."))

(defobject Powdery
   (Physical-Structural-Attribute Powdery)
   (Subattribute-Of Powdery Granular)
   (Subattribute-Of Powdery Pourable)
   (Name-In-Cyc Powdery "#$Powdery")
   (Documentation Powdery
    "A physical attribute.  Powdery is the Physical-Structural-Attribute which describes a solid that has the form of a powder.  Powdery stuff is Pourable and composed of multiple granules of solids."))

(defobject Continent-Of-North-America
   (Entity Continent-Of-North-America)
   (Continent Continent-Of-North-America)
   (Name-In-Cyc Continent-Of-North-America "#$ContinentOfNorthAmerica")
   (Documentation Continent-Of-North-America
    "The continent in the northern and Western-Hemisphere-Region. North America includes Central-America-Region as well as the West-Indies-Archipelago as Geographical-Sub-Regions."))

(defrelation Corporate-Officer
             (Name-In-Cyc Corporate-Officer "#$CorporateOfficer")
             (Occupation-Type Corporate-Officer)
             (Subclass-Of Corporate-Officer Leader)
             (Subclass-Of Corporate-Officer Administrator)
             (Set-Or-Collection Corporate-Officer)
             (Arity Corporate-Officer 1)
             (Documentation Corporate-Officer
              "A collection of people.  An instance of Corporate-Officer is a person who is recognized as an officer of a corporation, as officially recorded in the corporate records of that corporation.  Common types of Corporate-Officer include Company-President, Company-Vice-President, Secretary and Treasurer of a corporation."))

(defrelation Army
             (Name-In-Cyc Army "#$Army")
             (Existing-Object-Type Army)
             (Subclass-Of Army Military-Organization)
             (Set-Or-Collection Army)
             (Arity Army 1)
             (Documentation Army
              "A collection of military organizations.  An element of Army is a military organization, modern or historical, composed mainly of ground forces, which may include infantry, cavalry, artillery, tank and miscellaneous mechanized units, and special forces.  Its personnel may also include support workers such as engineers and medical staff."))

(defrelation |(WAVE-EMISSION-FN AUDIBLE-SOUND)|
             (Skolem-Object |(WAVE-EMISSION-FN AUDIBLE-SOUND)|)
             (Script-Type |(WAVE-EMISSION-FN AUDIBLE-SOUND)|)
             (Temporal-Stuff-Type |(WAVE-EMISSION-FN AUDIBLE-SOUND)|)
             (Subclass-Of |(WAVE-EMISSION-FN AUDIBLE-SOUND)| Emitting-A-Wave)
             (Set-Or-Collection |(WAVE-EMISSION-FN AUDIBLE-SOUND)|)
             (Arity |(WAVE-EMISSION-FN AUDIBLE-SOUND)| 1))

(defrelation Government-Coc
             (Name-In-Cyc Government-Coc "#$GovernmentCOC")
             (Existing-Object-Type Government-Coc)
             (Microtheory-Type Government-Coc)
             (Subclass-Of Government-Coc Formal-Coc)
             (Set-Or-Collection Government-Coc)
             (Arity Government-Coc 1)
             (Documentation Government-Coc
              "A collection of microtheories; a subset of Formal-COC (the set of formal codes of conduct).  Each instance of Government-COC is a formal regulation of behavior imposed upon agents -- including citizens, tourists, businesses, government entities, etc., in so far as they are subject to it -- who are located within the legal jurisdiction where that code of conduct holds.  Government-COC includes both individual laws and whole legal codes.  Some examples of Government-COC include: the Napoleonic Code, the United States Constitution and all Federal, State, and local laws of the United States, and the particular laws against stealing found in most, if not all, countries.  Enforcement of a particular instance of Government-COC is authorized by the government associated with that code and carried out by its agents within their jurisdiction(s).  See also Legal-Code and Law."))

(defrelation Self-Employed-Worker
             (Name-In-Cyc Self-Employed-Worker "#$SelfEmployedWorker")
             (Occupation-Type Self-Employed-Worker)
             (Subclass-Of Self-Employed-Worker Professional)
             (Set-Or-Collection Self-Employed-Worker)
             (Arity Self-Employed-Worker 1)
             (Documentation Self-Employed-Worker
              "A collection of persons; a subset of Professional.  Each element of Self-Employed-Worker is a worker who earns a living from funds paid directly to him/her by customers, or who is paid by a company s/he owns.  An instance of Self-Employed-Worker has no boss but him/herself."))

(defrelation Golf-Cart
             (Name-In-Cyc Golf-Cart "#$GolfCart")
             (Product-Type Golf-Cart)
             (Existing-Object-Type Golf-Cart)
             (Subclass-Of Golf-Cart Transportation-Device-Vehicle)
             (Subclass-Of Golf-Cart Land-Transportation-Device)
             (Set-Or-Collection Golf-Cart)
             (Arity Golf-Cart 1)
             (Documentation Golf-Cart
              "The collection of all motorized vehicles that are designed for golfers to use to drive around on Golf-Courses while they are playing Golf-Games.  GolfCarts drive very slowly compared with Automobiles."))

(defrelation School-Institution-K-Through12
             (Name-In-Cyc School-Institution-K-Through12
              "#$SchoolInstitution-KThrough12")
             (Existing-Object-Type School-Institution-K-Through12)
             (Subclass-Of School-Institution-K-Through12
              Educational-Organization)
             (Set-Or-Collection School-Institution-K-Through12)
             (Arity School-Institution-K-Through12 1)
             (Documentation School-Institution-K-Through12
              "A collection of school organizations.  An element of School-Institution-K-Through12 is an educational institution which provides instruction in all or some of the grades from kindergarten (K) through high school (12th-grade) education.  Commonly, individual schools teach some subset of those grades; see also the specializations Elementary-School-Institution, Middle-School-Institution, and High-School-Institution."))

(defrelation Intrinsic-State-Change-Event
             (Synonymous-External-Concept Intrinsic-State-Change-Event
              Sensus-Information1997 "CHANGE-STATE")
             (Name-In-Cyc Intrinsic-State-Change-Event
              "#$IntrinsicStateChangeEvent")
             (Temporal-Object-Type Intrinsic-State-Change-Event)
             (Subclass-Of Intrinsic-State-Change-Event Event)
             (Set-Or-Collection Intrinsic-State-Change-Event)
             (Arity Intrinsic-State-Change-Event 1)
             (Documentation Intrinsic-State-Change-Event
              "The collection of Events which are characterized primarily by a change in some intrinsic property of one main entity involved in the event (i.e., one of the Actors).  Such intrinsic changes may include changes of a thing's color, temperature, device state, size, and so on.  Events where the main change is extrinsic (such as a change in location or ownership) are not Intrinsic-State-Change-Events.  In events which have more than one actor, the event may be an Intrinsic-State-Change-Event for one actor but not for another.  For example, in a Fastening-Safety-Belt event, the Safety-Seat-Belt (the device used) goes from unconnected to connected (to itself), which is an intrinsic change; however, the agent who does the fastening (i.e., who is Handling-A-Device) does not change intrinsically, but only in its configuration to the belt, an external object.  Another example: in a Hair-Cutting-Event, the hair that is barbered undergoes an Intrinsic-State-Change-Event due to its role in that kind of event, but the barber undergoes no intrinsic change due to the hair cutting.

Note: Some events, such as an ice cube melting into a small puddle of water, could be represented in Cyc either as an Intrinsic-State-Change-Event or as a Transformation-Event but not (within a single micro-theory) as both; see the comments on those constants."))

(defobject |(VERY-LOW-AMOUNT-FN RELATIVE-HUMIDITY)|
   (Scalar-Interval |(VERY-LOW-AMOUNT-FN RELATIVE-HUMIDITY)|)
   (Relative-Humidity |(VERY-LOW-AMOUNT-FN RELATIVE-HUMIDITY)|)
   (Skolem-Object |(VERY-LOW-AMOUNT-FN RELATIVE-HUMIDITY)|))

(defrelation Invertebrate
             (Synonymous-External-Concept Invertebrate Sensus-Information1997
              "INVERTEBRATE")
             (The-Partition Invertebrate Vertebrate
              |(THE-PARTITION INVERTEBRATE VERTEBRATE)|)
             (Name-In-Cyc Invertebrate "#$Invertebrate")
             (Organism-Classification-Type Invertebrate)
             (Subclass-Of Invertebrate Animal)
             (Subclass-Of Invertebrate Non-Person-Animal)
             (Set-Or-Collection Invertebrate)
             (Arity Invertebrate 1)
             (Documentation Invertebrate
              "A collection of animals; every element of Invertebrate is an animal that has no backbone.  Invertebrate includes insects, molluscs, sea squirts, worms (in a large variety of worm phyla), and many others. 

Note: Although Invertebrate is a scientific category, it is not a standard taxon in the biological taxonomy, hence it is not an instance of Biological-Taxon."))

(defrelation Cyc-Expression
             (Name-In-Cyc Cyc-Expression "#$CycExpression")
             (Linguistic-Object-Type Cyc-Expression)
             (Collection Cyc-Expression)
             (Subclass-Of Cyc-Expression Abstract-Information)
             (Subclass-Of Cyc-Expression Computational-Object)
             (Subclass-Of Cyc-Expression Individual)
             (Set-Or-Collection Cyc-Expression)
             (Arity Cyc-Expression 1)
             (Documentation Cyc-Expression
              "The collection of all syntactically legal CycL expressions.  Note that CycL is NOT just first-order:  this collection includes sets and propositions, as well as individuals and predicates."))

(defrelation January
             (Name-In-Cyc January "#$January")
             (Month-Of-Year-Type January)
             (Subclass-Of January Calendar-Month)
             (Set-Or-Collection January)
             (Arity January 1))

(defrelation Crevice
             (Name-In-Cyc Crevice "#$Crevice")
             (Existing-Object-Type Crevice)
             (Subclass-Of Crevice Cavity)
             (Set-Or-Collection Crevice)
             (Arity Crevice 1)
             (Documentation Crevice
              "The collection of all long, slender cavities or cracks or furrows in otherwise solid objects."))

(defrelation N-Tuple-Interval
             (Name-In-Cyc N-Tuple-Interval "#$NTupleInterval")
             (Object-Type N-Tuple-Interval)
             (Subclass-Of N-Tuple-Interval Tuple)
             (Subclass-Of N-Tuple-Interval Attribute-Value)
             (Set-Or-Collection N-Tuple-Interval)
             (Arity N-Tuple-Interval 1)
             (Documentation N-Tuple-Interval
              "A collection of mathematical objects; a subset of Tuple.  Each element of N-Tuple-Interval is a tuple (an ordered list of items) whose items are intervals.  For example, vectors and complex numbers, as well as scalar intervals (which are one-tuples).  Note that intervals in Cyc may be numerical, or they may be intervals along any scale with distinguishable gradations (e.g., riskiness, alertness, roughness of texture)."))

(defrelation Tumor
             (Name-In-Cyc Tumor "#$Tumor")
             (Existing-Object-Type Tumor)
             (Subclass-Of Tumor Biological-Living-Object)
             (Set-Or-Collection Tumor)
             (Arity Tumor 1)
             (Documentation Tumor
              "Each element of this collection is an abnormal tissue mass found in an animal.  Instances of Tumor include both malignant (cancerous -- see Cancer) and benign (non-cancerous) growths which have no normal physiological cause or function within the animal's body."))

(deffunction Minute-Unit-Of-Angular-Measure
   (Args-Isa Minute-Unit-Of-Angular-Measure Real-Number)
   (Result-Instance-Of Minute-Unit-Of-Angular-Measure Physical-Attribute)
   (Result-Instance-Of Minute-Unit-Of-Angular-Measure Scalar-Interval)
   (Name-In-Cyc Minute-Unit-Of-Angular-Measure "#$Minute-UnitOfAngularMeasure")
   (Unit-Of-Measure-No-Prefix Minute-Unit-Of-Angular-Measure)
   (Unit-Of-Angular-Distance Minute-Unit-Of-Angular-Measure)
   (Function Minute-Unit-Of-Angular-Measure)
   (Documentation Minute-Unit-Of-Angular-Measure
    "A unit to measure the size of angles, in the Imperial system of measurement.  60 minutes = 1 degree (Degree-Unit-Of-Angular-Measure)"))

(defrelation Biological-Division
             (Name-In-Cyc Biological-Division "#$BiologicalDivision")
             (Biological-Taxon-Type Biological-Division)
             (Subclass-Of Biological-Division Biological-Taxon)
             (Set-Or-Collection Biological-Division)
             (Arity Biological-Division 1)
             (Documentation Biological-Division
              "The collection of main taxonomic subdivisions of Biological-Kingdom (or Biological-Subkingdom) for the members of the Monera-Kingdom (i.e., prokaryotes), Fungus Kingdom, Plant Kingdom, and for the plant-like organisms within the Protista-Kingdom.  In the Animal Kingdom, however, the main taxonomic subdivisions are elements of Biological-Phylum (q.v.) rather than Biological-Division."))

(defrelation Ibo-Creation
             (Name-In-Cyc Ibo-Creation "#$IBOCreation")
             (Temporal-Object-Type Ibo-Creation)
             (Script-Type Ibo-Creation)
             (Subclass-Of Ibo-Creation Ibt-Generation)
             (Subclass-Of Ibo-Creation Creation-Event)
             (Subclass-Of Ibo-Creation Information-Transfer-Event)
             (Subclass-Of Ibo-Creation Human-Activity)
             (Set-Or-Collection Ibo-Creation)
             (Arity Ibo-Creation 1)
             (Documentation Ibo-Creation
              "A collection of events; a subset of IBT-Generation.  Each element of IBO-Creation is an event which creates a new IBO (i.e., an element of Information-Bearing-Object).  An IBO is a relatively long-lasting instance of Information-Bearing-Thing.  Examples of IBO-Creation include publishing a book, making a film, printing a photograph, molding a plastic credit card, painting a billboard, minting a coin.  When an IBO is created, its content may be either original or be copied from a prior IBO.  For creation of IBOs with new content, e.g., a personal letter, see the subset IBT-Generation-Original; for creation of IBOs with pre-existing content, e.g., reprinting a photograph, see IBT-Generation-Replication."))

(defobject |(MEDIUM-AMOUNT-FN COMPRESSIBILITY)|
   (Scalar-Interval |(MEDIUM-AMOUNT-FN COMPRESSIBILITY)|)
   (Compressibility |(MEDIUM-AMOUNT-FN COMPRESSIBILITY)|)
   (Skolem-Object |(MEDIUM-AMOUNT-FN COMPRESSIBILITY)|)
   (Documentation |(MEDIUM-AMOUNT-FN COMPRESSIBILITY)|
    "Can be compressed to less than half its volume"))

(defrelation Variable-Arity-Relation
             (Name-In-Cyc Variable-Arity-Relation "#$VariableArityRelation")
             (Relationship-Type Variable-Arity-Relation)
             (Collection Variable-Arity-Relation)
             (Subclass-Of Variable-Arity-Relation Relationship)
             (Set-Or-Collection Variable-Arity-Relation)
             (Arity Variable-Arity-Relation 1)
             (Documentation Variable-Arity-Relation
              "A collection of relationships.  Each element of Variable-Arity-Relation is a relationship that can take a variable number of arguments, making it unlike most relationships, which have a fixed number of argument places.  Examples of Variable-Arity-Relation include conjunction (:and) and functions such as addition (Plus-Fn) that accept a variable number of arguments."))

(defrelation Inter-Arg-Isa3-4
             (Nth-Domain Inter-Arg-Isa3-4 1 Predicate)
             (Nth-Domain Inter-Arg-Isa3-4 2 Collection)
             (Nth-Domain Inter-Arg-Isa3-4 3 Collection)
             (Name-In-Cyc Inter-Arg-Isa3-4 "#$interArgIsa3-4")
             (Ternary-Predicate Inter-Arg-Isa3-4)
             (Relation Inter-Arg-Isa3-4)
             (Arity Inter-Arg-Isa3-4 3)
             (Documentation Inter-Arg-Isa3-4
              "(Inter-Arg-Isa3-4 PRED INDEPENDENT-ARG-COL DEPENDENT-ARG-COL) Base-KB) means that, when an instance of INDEPENDENT-ARG-COL appears as the third argument to PRED, the fourth argument in that assertion is constrained to be an instance of DEPENDENT-ARG-COL."))

(defrelation Perceiving-Voluntary
             (Synonymous-External-Concept Perceiving-Voluntary
              Sensus-Information1997 "VOLUNTARY-PERCEPTUAL-EVENT")
             (Name-In-Cyc Perceiving-Voluntary "#$Perceiving-Voluntary")
             (Script-Type Perceiving-Voluntary)
             (Temporal-Stuff-Type Perceiving-Voluntary)
             (Subclass-Of Perceiving-Voluntary Purposeful-Action)
             (Subclass-Of Perceiving-Voluntary Perceiving)
             (Set-Or-Collection Perceiving-Voluntary)
             (Arity Perceiving-Voluntary 1)
             (Documentation Perceiving-Voluntary
              "A collection of mental events, a subset of Perceiving.
Each element of this collection is a perceptual event in which
the agent does not merely passively receive sensory information,
but is actively filtering or directing how he is perceiving.
Thus, searching for a set of lost keys would be an element
of this collection, as would straining to hear something, but
merely hearing a balloon pop next to you would not."))

(deffunction Megabyte
   (Args-Isa Megabyte Real-Number)
   (Result-Instance-Of Megabyte Physical-Attribute)
   (Result-Instance-Of Megabyte Scalar-Interval)
   (Name-In-Cyc Megabyte "#$Megabyte")
   (Unit-Of-Measure-With-Prefix Megabyte)
   (Function Megabyte)
   (Documentation Megabyte
    "The measurement function used in Cyc to represent a common unit of computer memory and disk capacity.  The value of (Megabyte 1) equals approximately one million (8-bit) bytes.  See also Unit-Of-Measure."))

(defrelation Bookkeeping-Predicate
             (Name-In-Cyc Bookkeeping-Predicate "#$BookkeepingPredicate")
             (Predicate-Category Bookkeeping-Predicate)
             (Collection Bookkeeping-Predicate)
             (Subclass-Of Bookkeeping-Predicate Predicate)
             (Set-Or-Collection Bookkeeping-Predicate)
             (Arity Bookkeeping-Predicate 1)
             (Documentation Bookkeeping-Predicate
              "A collection of predicates.  Each element of Bookkeeping-Predicate is a predicate used to form assertions about the creation and internal representation of a Cyc constant.  Bookkeeping predicates neither specify nor constrain the semantics of Cyc constants.  Examples:  My-Creator, My-Creation-Time, Term-Of-Unit, Multiplication-Units, Quotient-Units."))

(defrelation Political-Party
             (Name-In-Cyc Political-Party "#$PoliticalParty")
             (Existing-Object-Type Political-Party)
             (Subclass-Of Political-Party Organization)
             (Subclass-Of Political-Party Political-Organization)
             (Set-Or-Collection Political-Party)
             (Arity Political-Party 1)
             (Documentation Political-Party
              "A collection of political organizations.  An element of Political-Party is an organization that primarily seeks to elect candidates to public office or have members continue holding public office, and which are identified as party affiliations by persons holding or seeking public office."))

(defrelation Smell-Perception
             (Name-In-Cyc Smell-Perception "#$SmellPerception")
             (Temporal-Stuff-Type Smell-Perception)
             (Default-Disjoint-Script-Type Smell-Perception)
             (Subclass-Of Smell-Perception Perceiving)
             (Set-Or-Collection Smell-Perception)
             (Arity Smell-Perception 1)
             (Documentation Smell-Perception
              "The collection of sensory Perceivings in which a Perceptual-Agent Smells something and thereby acquires information about it."))

(defrelation Unit-Of-Volume
             (Name-In-Cyc Unit-Of-Volume "#$UnitOfVolume")
             (Interconvertible-Unit-Type Unit-Of-Volume)
             (Subclass-Of Unit-Of-Volume Unit-Of-Measure)
             (Set-Or-Collection Unit-Of-Volume)
             (Arity Unit-Of-Volume 1)
             (Documentation Unit-Of-Volume
              "The collection of functions which return elements of Volume.  E.g., (Liter 5) denotes 5 liters."))

(defrelation Religious-Holiday
             (Name-In-Cyc Religious-Holiday "#$ReligiousHoliday")
             (Script-Type Religious-Holiday)
             (Temporal-Object-Type Religious-Holiday)
             (Subclass-Of Religious-Holiday Holiday)
             (Set-Or-Collection Religious-Holiday)
             (Arity Religious-Holiday 1)
             (Documentation Religious-Holiday
              "Each Religious-Holiday is a Holiday which is specified by some religious tradition.  Note that individuals may observe or otherwise participate in a Religious-Holiday without being members of the associated Religion."))

(defrelation Unit-Of-Angular-Distance
             (Name-In-Cyc Unit-Of-Angular-Distance "#$UnitOfAngularDistance")
             (Interconvertible-Unit-Type Unit-Of-Angular-Distance)
             (Subclass-Of Unit-Of-Angular-Distance Unit-Of-Measure)
             (Set-Or-Collection Unit-Of-Angular-Distance)
             (Arity Unit-Of-Angular-Distance 1)
             (Documentation Unit-Of-Angular-Distance
              "The collection of functions which return elements of Angular-Distance.  E.g., (Radian 5) denotes 5 radians."))

(defrelation Exhaling
             (Name-In-Cyc Exhaling "#$Exhaling")
             (Temporal-Stuff-Type Exhaling)
             (Default-Disjoint-Script-Type Exhaling)
             (Subclass-Of Exhaling Translation-Single-Path)
             (Subclass-Of Exhaling Emitting-An-Object)
             (Set-Or-Collection Exhaling)
             (Arity Exhaling 1)
             (Documentation Exhaling "Expelling air from the lungs"))

(defobject |(VERY-LOW-AMOUNT-FN MALLEABILITY)|
   (Scalar-Interval |(VERY-LOW-AMOUNT-FN MALLEABILITY)|)
   (Malleability |(VERY-LOW-AMOUNT-FN MALLEABILITY)|)
   (Skolem-Object |(VERY-LOW-AMOUNT-FN MALLEABILITY)|))

(defrelation Inter-Arg-Isa1-5
             (Nth-Domain Inter-Arg-Isa1-5 1 Predicate)
             (Nth-Domain Inter-Arg-Isa1-5 2 Collection)
             (Nth-Domain Inter-Arg-Isa1-5 3 Collection)
             (Name-In-Cyc Inter-Arg-Isa1-5 "#$interArgIsa1-5")
             (Ternary-Predicate Inter-Arg-Isa1-5)
             (Relation Inter-Arg-Isa1-5)
             (Arity Inter-Arg-Isa1-5 3)
             (Documentation Inter-Arg-Isa1-5
              "(Inter-Arg-Isa1-5 PRED INDEPENDENT-ARG-COL DEPENDENT-ARG-COL) Base-KB) means that, when an instance of INDEPENDENT-ARG-COL appears as the first argument to PRED, the fifth argument in that assertion is constrained to be an instance of DEPENDENT-ARG-COL."))

(defrelation Starvation
             (Name-In-Cyc Starvation "#$Starvation")
             (Script-Type Starvation)
             (Temporal-Stuff-Type Starvation)
             (Subclass-Of Starvation Single-Doer-Action)
             (Subclass-Of Starvation Destruction-Event)
             (Set-Or-Collection Starvation)
             (Arity Starvation 1)
             (Documentation Starvation
              "A collection of events.  Each instance of Starvation is an event in which
an Animal is so hungry as to be Starving.  If prolonged, it results in death.  NB:  Note that this is a Single-Doer-Action (q.v.), so it doesn't cover cases wherein one creature withholds food from another."))

(defrelation Transportation-Company
             (Name-In-Cyc Transportation-Company "#$TransportationCompany")
             (Existing-Object-Type Transportation-Company)
             (Subclass-Of Transportation-Company
              Commercial-Service-Organization)
             (Subclass-Of Transportation-Company Business)
             (Set-Or-Collection Transportation-Company)
             (Arity Transportation-Company 1)
             (Documentation Transportation-Company
              "A collection of organizations; a subset of Service-Organizations.  An element of Transportation-Company is an organization that provide transportation (of goods or persons) to customers for a fee."))

(defrelation Modal
             (Name-In-Cyc Modal "#$Modal")
             (Linguistic-Object-Type Modal)
             (Subclass-Of Modal Verb)
             (Set-Or-Collection Modal)
             (Arity Modal 1)
             (Documentation Modal
              "The collection of all modal auxiliary verbs. Modals have only tensed forms, do not inflect for person and number, and can take contracted negation. Example: `should'."))

(defrelation Path-Generic
             (Name-In-Cyc Path-Generic "#$Path-Generic")
             (Collection Path-Generic)
             (Subclass-Of Path-Generic Thing)
             (Set-Or-Collection Path-Generic)
             (Arity Path-Generic 1)
             (Documentation Path-Generic
              "A collection of Things that are paths or can be considered paths.  Each Path-Generic is either a Path-Simple or a Path-Cyclic, i.e., either a non-self-crossing path or a cycle.  A Path-Generic may be abstract (as in Graph Theory), or it may be concrete such as a Path-Customary, for example a road, railroad, sea-lane, cowpath, pipe, blood vessel, fiber or wire, or on the other hand it could be anything that is used as a path in some Path-System.  If a Path-Generic is a Path-Customary, then it may or may not have a specified Path-System in which it is a path; if the Path-Generic is not a Path-Customary, then it can only be a path in some given Path-System.  For example, an orange is not a customary path, but it can be a path for ants in a specified ant path system.  For any Path-Generic, there can be a Traversal of something moving along that path; a single Traversal can cross itself, double back along itself, and/or go back and forth along some part of a Path-Generic any number of times."))

(defrelation Resides-In-Region
             (Subrelation-Of Resides-In-Region Cotemporal)
             (Domain Resides-In-Region Animal)
             (Range Resides-In-Region Geographical-Region)
             (Name-In-Cyc Resides-In-Region "#$residesInRegion")
             (Cotemporal-Objects-Slot Resides-In-Region)
             (Slot Resides-In-Region)
             (Relation Resides-In-Region)
             (Arity Resides-In-Region 2)
             (Binary-Relation Resides-In-Region)
             (Documentation Resides-In-Region
              "(Resides-In-Region X REG) means the individual Animal or Person X lives or resides primarily in the Geographical-Region REG.  Notice that everyone (every first argument X) is likely to have many different regions REG that make the assertion (Resides-In-Region X REG) true.  E.g., Karen resides in Austin, in Texas, in the United States, in North America, etc.  See also Resides-In-Dwelling."))

(defrelation In-Region
             (Domain In-Region Spatial-Thing)
             (Range In-Region Spatial-Thing)
             (Name-In-Cyc In-Region "#$inRegion")
             (Anti-Symmetric-Binary-Predicate In-Region)
             (Transitive-Binary-Predicate In-Region)
             (Extensional-Representation-Predicate In-Region)
             (Slot In-Region)
             (Relation In-Region)
             (Arity In-Region 2)
             (Binary-Relation In-Region)
             (Documentation In-Region
              "(In-Region OBJECT AREA) means that all points in OBJECT are found within the boundaries of AREA, which is another spatial thing (of which OBJECT may or may not be a part).  OBJECT is totally included spatially within the region demarcated by AREA.  







Note, regarding whether OBJECT is a part of AREA: Two subordinate, but contrasting, predicates are Physical-Decompositions (a :Slot-Inverse of In-Region) and Object-Found-In-Location (a Subrelation-Of of In-Region).  (1) OBJECT is a Physical-Decompositions of AREA if the set of points occupied by OBJECT is a subset of the points actually occupied by AREA; i.e., OBJECT is spatially a part of AREA.  (2) On the other hand, if OBJECT is merely present in AREA, but is not a part of it, then Object-Found-In-Location applies."))

(defrelation Frequency-Of-Action-Type
             (Nth-Domain Frequency-Of-Action-Type 1 Collection)
             (Nth-Domain Frequency-Of-Action-Type 2 Collection)
             (Nth-Domain Frequency-Of-Action-Type 3 Actor-Slot)
             (Nth-Domain Frequency-Of-Action-Type 4 Frequency)
             (Nth-Domain-Subclass-Of Frequency-Of-Action-Type 1 Situation)
             (Name-In-Cyc Frequency-Of-Action-Type "#$frequencyOfActionType")
             (Quaternary-Predicate Frequency-Of-Action-Type)
             (Functional-Predicate Frequency-Of-Action-Type)
             (Type-Predicate Frequency-Of-Action-Type)
             (Relation Frequency-Of-Action-Type)
             (Arity Frequency-Of-Action-Type 4)
             (Documentation Frequency-Of-Action-Type
              "(Frequency-Of-Action-Type ?X ?Y ?R ?F) indicates that instances of ?Y play the role ?R in a number of instances of ?X, and they occur with the frequency ?F.  One axiom in Cyc that uses this predicate expresses the rule of thumb that each military typically wages war about once a generation: (Frequency-Of-Action-Type  Waging-War Military-Organization Performed-By Once-A-Generation).  Another use of it is to express the fact that animals are virtually always breathing:  (Frequency-Of-Action-Type Breathing Vertebrate Bodily-Doer Continuously).  Even more interesting examples of this predicate express the the rules of thumb that in a modern Western personal... context a person engages in a toothbrushing event about once a day, while as the recipient of professional service that happens 0.5 - 4 times per year, while as the provider of such a service that happens 4 - 20 times per day.  Those three axioms would be written -- in the appropriate contexts of course -- (Frequency-Of-Action-Type Teeth-Cleaning Person Performed-By (Times-Per-Day 1)) and (Frequency-Of-Action-Type Teeth-Cleaning Person Recipient-Of-Service (Times-Per-Year 0.5 4)) and (Frequency-Of-Action-Type Teeth-Cleaning Person Provider-Of-Service (Times-Per-Day 4 20)).   Two additional notes are in order about this predicate:
Note that ?X must be a set of Situations [there is an argument constraint on this predicate that enforces this, namely (Arg1-Genl Frequency-Of-Action-Type Situation)],.
Note that this predicate is functional in its fourth argument position.  That is, given a legal set of values for ?X, ?Y, and ?R, there is one and only one meaningful value for the frequency ?F [this is specified by the Cyc axiom (Functional-In-The-Nth-Arg Frequency-Of-Action-Type 4)]."))

(defrelation Inter-Arg-Isa4-5
             (Nth-Domain Inter-Arg-Isa4-5 1 Predicate)
             (Nth-Domain Inter-Arg-Isa4-5 2 Collection)
             (Nth-Domain Inter-Arg-Isa4-5 3 Collection)
             (Name-In-Cyc Inter-Arg-Isa4-5 "#$interArgIsa4-5")
             (Ternary-Predicate Inter-Arg-Isa4-5)
             (Relation Inter-Arg-Isa4-5)
             (Arity Inter-Arg-Isa4-5 3)
             (Documentation Inter-Arg-Isa4-5
              "(Inter-Arg-Isa4-5 PRED INDEPENDENT-ARG-COL DEPENDENT-ARG-COL) Base-KB) means that, when an instance of INDEPENDENT-ARG-COL appears as the fourth argument to PRED, the fifth argument in that assertion is constrained to be an instance of DEPENDENT-ARG-COL."))

(defrelation Biological-Taxon
             (Name-In-Cyc Biological-Taxon "#$BiologicalTaxon")
             (Biological-Taxon-Type Biological-Taxon)
             (Subclass-Of Biological-Taxon Conventional-Classification-Type)
             (Subclass-Of Biological-Taxon Organism-Classification-Type)
             (Set-Or-Collection Biological-Taxon)
             (Arity Biological-Taxon 1)
             (Documentation Biological-Taxon
              "The collection of ranked categories accepted by biologists for the biological classification of organisms according to their suspected evolutionary relationships.  Includes all levels of taxons.  See also Biological-Taxon-Type and Organism-Classification-Type."))

(defrelation Warplane
             (Name-In-Cyc Warplane "#$Warplane")
             (Product-Type Warplane)
             (Existing-Object-Type Warplane)
             (Subclass-Of Warplane Military-Aircraft)
             (Subclass-Of Warplane Airplane)
             (Subclass-Of Warplane Weapon)
             (Set-Or-Collection Warplane)
             (Arity Warplane 1)
             (Documentation Warplane
              "The collection of all Airplanes which are designed (and often used) as weapons of war."))

(defobject |(HIGH-AMOUNT-FN MALLEABILITY)|
   (Scalar-Interval |(HIGH-AMOUNT-FN MALLEABILITY)|)
   (Malleability |(HIGH-AMOUNT-FN MALLEABILITY)|)
   (Skolem-Object |(HIGH-AMOUNT-FN MALLEABILITY)|))

(defobject Semi-Solid-State-Of-Matter
   (State-Of-Matter-Solid-Liquid-Gaseous Semi-Solid-State-Of-Matter)
   (Name-In-Cyc Semi-Solid-State-Of-Matter "#$SemiSolidStateOfMatter")
   (Documentation Semi-Solid-State-Of-Matter
    "One of the basic physical states of matter.  Semi-solid objects are characterized at the macroscopic level by (a) their ability to flow under the application of pressure, combined with (b) their high viscosity.  Examples of things that are typically in this State-Of-Matter: a squirt of toothpaste on your brush, or a lump of bread dough, at normal room temperatures.  At higher temperatures:  a lava flow, a lump of molten glass about to be blown into a vase, etc."))

(defrelation President-Head-Of-Government-Or-Head-Of-State
             (Name-In-Cyc President-Head-Of-Government-Or-Head-Of-State
              "#$President-HeadOfGovernmentOrHeadOfState")
             (Occupation-Type President-Head-Of-Government-Or-Head-Of-State)
             (Subclass-Of President-Head-Of-Government-Or-Head-Of-State
              Head-Of-State)
             (Set-Or-Collection President-Head-Of-Government-Or-Head-Of-State)
             (Arity President-Head-Of-Government-Or-Head-Of-State 1)
             (Documentation President-Head-Of-Government-Or-Head-Of-State
              "A collection of persons.  Each element of President-Head-Of-Government-Or-Head-Of-State is a person who holds the title of president of some element of Country, whether that title belongs to a position which is Head-Of-State or Head-Of-Government (or both). Examples: Boris Yeltsin, Bill-Clinton, Jiang Zemin, Lee Dung-Hui."))

(defrelation Convex-Tangible-Object
             (Name-In-Cyc Convex-Tangible-Object "#$ConvexTangibleObject")
             (Existing-Object-Type Convex-Tangible-Object)
             (Subclass-Of Convex-Tangible-Object Tangible-Thing)
             (Set-Or-Collection Convex-Tangible-Object)
             (Arity Convex-Tangible-Object 1)
             (Documentation Convex-Tangible-Object
              "The collection of all Tangible-Things that are Convex, i.e. have no significant Concave surfaces, cavities or Crevices.  A Convex-Tangible-Object occupies about the same space as its convex hull; see Convex-Hull-Fn and Convex-Hull-Space-Fn.  A solid physical sphere or cube are Convex-Tangible-Objects but a cup or doughnut cannot be.  The size of allowable minor concavities depends on the context."))

(defrelation Inter-Arg-Isa5-2
             (Nth-Domain Inter-Arg-Isa5-2 1 Quintary-Predicate)
             (Nth-Domain Inter-Arg-Isa5-2 2 Collection)
             (Nth-Domain Inter-Arg-Isa5-2 3 Collection)
             (Name-In-Cyc Inter-Arg-Isa5-2 "#$interArgIsa5-2")
             (Ternary-Predicate Inter-Arg-Isa5-2)
             (Relation Inter-Arg-Isa5-2)
             (Arity Inter-Arg-Isa5-2 3)
             (Documentation Inter-Arg-Isa5-2
              "(Inter-Arg-Isa5-2 PRED INDEPENDENT-ARG-COL DEPENDENT-ARG-COL) Base-KB) means that, when an instance of INDEPENDENT-ARG-COL appears as the fifth argument to PRED, the second argument in that assertion is constrained to be an instance of DEPENDENT-ARG-COL."))

(defrelation Food-Or-Drink-Composite
             (Name-In-Cyc Food-Or-Drink-Composite "#$FoodOrDrinkComposite")
             (Product-Type Food-Or-Drink-Composite)
             (Existing-Stuff-Type Food-Or-Drink-Composite)
             (Subclass-Of Food-Or-Drink-Composite Artifact)
             (Subclass-Of Food-Or-Drink-Composite Edible-Stuff)
             (Set-Or-Collection Food-Or-Drink-Composite)
             (Arity Food-Or-Drink-Composite 1)
             (Documentation Food-Or-Drink-Composite
              "A collection of edible stuff.  Each element of Food-Or-Drink-Composite is an edible substance that is made up of two or more foodstuffs as constituents.  Typically, some recipe is, explicitly or implicitly, associated with the production of such substances.  Food-Or-Drink-Composite includes both some instances of Food-Ingredient-Only (e.g., a dollop of ketchup) and some instances of Food-And-Drink (e.g., a slice of a cheese pizza)."))

(defrelation |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "SPATIAL-LOCATING")|
             (Skolem-Object
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "SPATIAL-LOCATING")|)
             (Slot
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "SPATIAL-LOCATING")|)
             (Relation
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "SPATIAL-LOCATING")|)
             (Arity
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "SPATIAL-LOCATING")|
              2)
             (Binary-Relation
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "SPATIAL-LOCATING")|))

(defrelation Causing-Another-Objects-Translational-Motion
             (Name-In-Cyc Causing-Another-Objects-Translational-Motion
              "#$CausingAnotherObjectsTranslationalMotion")
             (Temporal-Object-Type
              Causing-Another-Objects-Translational-Motion)
             (Script-Type Causing-Another-Objects-Translational-Motion)
             (Subclass-Of Causing-Another-Objects-Translational-Motion
              Action-On-Object)
             (Subclass-Of Causing-Another-Objects-Translational-Motion
              Translation-Complete)
             (Subclass-Of Causing-Another-Objects-Translational-Motion
              Translation-Location-Change)
             (Set-Or-Collection Causing-Another-Objects-Translational-Motion)
             (Arity Causing-Another-Objects-Translational-Motion 1)
             (Documentation Causing-Another-Objects-Translational-Motion
              "A collection of events.  In an instance of Causing-Another-Objects-Translational-Motion, one object causes another object to undergo a translational motion.  The object causing the motion is the Provider-Of-Motive-Force.  The object which is caused to move is the Object-Acted-On (and also the Object-Moving) in the event.  One way to cause another object's motion is by carrying it along with one (see the subset Carrying-While-Locomoting), but there are many others, such as throwing, kicking, or knocking it away.  Examples: a train transporting passengers; a person pushing a coin into a vending machine; the release of a bowstring which propels an arrow; a magnet attracting a nail."))

(defrelation Doctor-Medical
             (Name-In-Cyc Doctor-Medical "#$Doctor-Medical")
             (Medical-Specialty-Type Doctor-Medical)
             (Subclass-Of Doctor-Medical Prescriber)
             (Subclass-Of Doctor-Medical Medical-Care-Professional)
             (Subclass-Of Doctor-Medical Scientist)
             (Set-Or-Collection Doctor-Medical)
             (Arity Doctor-Medical 1)
             (Documentation Doctor-Medical
              "The collection of all medical doctors - MDs and Osteopaths."))

(defrelation Vegetable-Plant
             (Name-In-Cyc Vegetable-Plant "#$Vegetable-Plant")
             (Existing-Object-Type Vegetable-Plant)
             (Subclass-Of Vegetable-Plant Plant-Non-Woody)
             (Set-Or-Collection Vegetable-Plant)
             (Arity Vegetable-Plant 1)
             (Documentation Vegetable-Plant
              "A collection of plants that play a special role in human nutrition.  Each element of Vegetable-Plant is a plant that produces the edible things that we normally call `vegetables' (which can include fruits, seeds, stalks, leaves, or other parts, or even the whole plant).  The elements of Vegetable-Plant grow in gardens and produce the vegetables that are eaten; vegetable plants are not necessarily also elements of Food.  See Vegetable-Food for the collection of vegetables--plants or (more usually) plant parts--that are eaten by humans."))

(defrelation Desires
             (Overlapping-External-Concept Desires Sensus-Information1997
              "WANTING")
             (Domain Desires Intelligent-Agent)
             (Range Desires Cyc-Formula)
             (Name-In-Cyc Desires "#$desires")
             (Propositional-Attitude-Slot Desires)
             (Slot Desires)
             (Relation Desires)
             (Arity Desires 2)
             (Binary-Relation Desires)
             (Documentation Desires
              "(Desires AGT PROP) means that the Agent AGT desires that the world be as the proposition PROP (represented by a Cyc-Formula) describes it to be.  Desires is implied by Goals, but is weaker:  PROP might be some desirable state of affairs that the agent is not actively working, or planning, to make/keep true; e.g., World-Peace.  See also Goals and Intends."))

(defrelation Biological-Taxon-Type
             (Name-In-Cyc Biological-Taxon-Type "#$BiologicalTaxonType")
             (Disjoint-Set-Or-Collection Biological-Taxon-Type)
             (Sibling-Disjoint-Collection Biological-Taxon-Type)
             (Subclass-Of Biological-Taxon-Type
              Conventional-Classification-Type)
             (Subclass-Of Biological-Taxon-Type Sibling-Disjoint-Collection)
             (Set-Or-Collection Biological-Taxon-Type)
             (Arity Biological-Taxon-Type 1)
             (Documentation Biological-Taxon-Type
              "A collection of collections; Biological-Taxon-Type contains the classes of organism types (i.e., taxons) that biologists recognize, including Biological-Species, Biological-Phylum, etc.   The naive classes that non-biologists use may be instances of some element of Biological-Taxon-Type, though often they are not.  When they coincide, the commonsense class of organism (e.g., Person) is an instance of some Biological-Taxon-Type (Biological-Species, for example).  See also Organism-Classification-Type."))

(defrelation Portal-Connects-Regions
             (Nth-Domain Portal-Connects-Regions 1 Portal)
             (Nth-Domain Portal-Connects-Regions 2 Partially-Tangible)
             (Nth-Domain Portal-Connects-Regions 3 Partially-Tangible)
             (Name-In-Cyc Portal-Connects-Regions "#$portalConnectsRegions")
             (Ternary-Predicate Portal-Connects-Regions)
             (Relation Portal-Connects-Regions)
             (Arity Portal-Connects-Regions 3)
             (Documentation Portal-Connects-Regions
              "(Portal-Connects-Regions PORTAL HERE THERE) means that the regions HERE and THERE each contain PORTAL as a physical part."))

(defrelation Series
             (Name-In-Cyc Series "#$Series")
             (Collection Series)
             (Subclass-Of Series Situation)
             (Set-Or-Collection Series)
             (Arity Series 1)
             (Documentation Series
              "The collection of situations in which 2 or more ''parts'' or ''members'' are ordered in some linear fashion.  For example, the line of people at a ticket booth, an alphabetized set of words, or the series of pitches in a baseball game."))

(defrelation Battle
             (Name-In-Cyc Battle "#$Battle")
             (Script-Type Battle)
             (Temporal-Object-Type Battle)
             (Subclass-Of Battle Hostile-Social-Action)
             (Set-Or-Collection Battle)
             (Arity Battle 1)
             (Documentation Battle
              "The collection of events in which two or more large groups of Persons meet and fight one another, each group seeking to vanquish (some of) the others.  Battles are often conducted by Military-Organizations, and they may influence the outcomes of Waging-War.  A Battle will have as Sub-Events at least two Physically-Attacking-An-Agent events, in which one of the fighting groups attacks the other."))

(defrelation Type-Predicate
             (Name-In-Cyc Type-Predicate "#$TypePredicate")
             (Relationship-Type Type-Predicate)
             (Subclass-Of Type-Predicate Predicate)
             (Set-Or-Collection Type-Predicate)
             (Arity Type-Predicate 1)
             (Documentation Type-Predicate
              "A collection of predicates.  Each element of Type-Predicate is a predicate used in asserting relations between Collections, or between Individuals and Collections, which in turn imply further assertions involving instances of the Collections.  Examples: Primary-Activity-Type, Insured-Event-Types, Anatomical-Part-Type-Affected, Frequency-Of-Action-Type, Object-Types-Collected."))

(defrelation Ritual
             (Name-In-Cyc Ritual "#$Ritual")
             (Script-Type Ritual)
             (Subclass-Of Ritual Purposeful-Action)
             (Set-Or-Collection Ritual)
             (Arity Ritual 1)
             (Documentation Ritual
              "The collection of highly stylized or formalized actions (or series of actions) performed by Persons (alone or in groups), usually performed with some solemnity.  
Note: as further explained in the comment for Social-Ritual, a Wedding-Ceremony or Inauguration is `more than' just a Ritual, but following the `script' for such a ceremony, and actually carrying it out, is a Ritual."))

(defrelation |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "INTERPERSONAL-THING")|
             (Skolem-Object
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "INTERPERSONAL-THING")|)
             (Collection
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "INTERPERSONAL-THING")|)
             (Subclass-Of
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "INTERPERSONAL-THING")|
              Intangible-Individual)
             (Set-Or-Collection
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "INTERPERSONAL-THING")|)
             (Arity
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "INTERPERSONAL-THING")|
              1))

(defrelation Relation-Type-Min
             (Nth-Domain Relation-Type-Min 1 Slot)
             (Nth-Domain Relation-Type-Min 2 Collection)
             (Nth-Domain Relation-Type-Min 3 Collection)
             (Nth-Domain Relation-Type-Min 4 Non-Negative-Integer)
             (Name-In-Cyc Relation-Type-Min "#$relationTypeMin")
             (Quaternary-Predicate Relation-Type-Min)
             (Relation Relation-Type-Min)
             (Arity Relation-Type-Min 4)
             (Documentation Relation-Type-Min
              "(Relation-Type-Min SLOT COL1 COL2 NUM) means that, for every instance of COL1 (INS1) there are at least NUM instances of COL2 (INS2, INS3, ...) such that (SLOT INS1 INS2), (SLOT INS1 INS3), ..., hold.  Thus (Relation-Type-Min Sub-Events Eating-Event Swallowing 1) would mean `every eating event has at least one swallowing sub-event'."))

(defobject Conducts-Heat-Well
   (Thermal-Conductivity Conducts-Heat-Well)
   (Name-In-Cyc Conducts-Heat-Well "#$ConductsHeatWell")
   (Documentation Conducts-Heat-Well
    "A measurable physical attribute.  Conducts-Heat-Well is the element of Thermal-Conductivity that represents the level of thermal conductivity in an object that conducts heat very quickly."))

(defrelation Terrestrial-Direction
             (Name-In-Cyc Terrestrial-Direction "#$TerrestrialDirection")
             (Object-Type Terrestrial-Direction)
             (Subclass-Of Terrestrial-Direction Unit-Vector-Interval)
             (Set-Or-Collection Terrestrial-Direction)
             (Arity Terrestrial-Direction 1)
             (Documentation Terrestrial-Direction
              "The collection of directions used to describe the orientation of objects on or near the surface of the Earth.  Includes terrestrial directions related to compass points (e.g., East-Directly) and to the gravitational vector (e.g., Down-Directly, Vertical-Direction).  Note that assertions in different terrestrial contexts can be inconsistent in a neutral context: East in China points in a different direction than East in New York!"))

(defrelation Digestion-Event
             (Name-In-Cyc Digestion-Event "#$DigestionEvent")
             (Default-Disjoint-Script-Type Digestion-Event)
             (Subclass-Of Digestion-Event Single-Doer-Action)
             (Subclass-Of Digestion-Event Biological-Decomposition-Event)
             (Subclass-Of Digestion-Event Body-Movement-Event)
             (Set-Or-Collection Digestion-Event)
             (Arity Digestion-Event 1)
             (Documentation Digestion-Event
              "A collection of events.  For most animals, a Digestion-Event starts at the mouth and, for most vertebrates, end at the anus.  This concept should not be confused with Digesting-In-Stomach, whose instances occur only in an organism's Stomach.  A Digestion-Event spans the whole Digestive-System, from start to finish."))

(defrelation Sadness
             (Name-In-Cyc Sadness "#$Sadness")
             (Feeling-Attribute-Type Sadness)
             (Subclass-Of Sadness Feeling-Attribute)
             (Set-Or-Collection Sadness)
             (Arity Sadness 1)
             (Documentation Sadness
              "Emotion felt when one is unhappy or low-spirited. This is a collection; for more details, see Happiness.  Some more specialized Feeling-Attribute-Types are Remorse, Gloominess, Disappointment, Depression-Emotion, Grief, Misery, Despair, Anguish, etc."))

(defrelation Changing-Device-State
             (Name-In-Cyc Changing-Device-State "#$ChangingDeviceState")
             (Default-Disjoint-Script-Type Changing-Device-State)
             (Temporal-Object-Type Changing-Device-State)
             (Subclass-Of Changing-Device-State Intrinsic-State-Change-Event)
             (Subclass-Of Changing-Device-State Physical-Event)
             (Subclass-Of Changing-Device-State Action)
             (Set-Or-Collection Changing-Device-State)
             (Arity Changing-Device-State 1)
             (Documentation Changing-Device-State
              "The collection of actions in which a device goes from one state (the From-State) to another state (the To-State).  A change of Device-State may be due to an outside Agent adjusting a device, or it may happen automatically due to the behavior of a device.  The two most general state changes (for powered devices) are from Device-On to Device-Off, and vice versa.  Many other states peculiar to specific devices can be identified; for example, the states of a Dishwasher: Device-State-Washing and Device-State-Rinsing; or the states that a trapping device may be in: Trap-Armed, Trap-Tripped, Trap-Idle.  Note that a change in the state of a device is an intrinsic change in the device; i.e., Changing-Device-State is a subset of Intrinsic-State-Change-Event."))

(defrelation |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "TIME-INTERVAL")|
             (Skolem-Object
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "TIME-INTERVAL")|)
             (Collection
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "TIME-INTERVAL")|)
             (Subclass-Of
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "TIME-INTERVAL")|
              Time-Interval)
             (Set-Or-Collection
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "TIME-INTERVAL")|)
             (Arity
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "TIME-INTERVAL")|
              1))

(defrelation Taxonomic-Slot-For-Any-Unit
             (Name-In-Cyc Taxonomic-Slot-For-Any-Unit
              "#$TaxonomicSlotForAnyUnit")
             (Predicate-Category Taxonomic-Slot-For-Any-Unit)
             (Subclass-Of Taxonomic-Slot-For-Any-Unit Taxonomic-Slot)
             (Set-Or-Collection Taxonomic-Slot-For-Any-Unit)
             (Arity Taxonomic-Slot-For-Any-Unit 1)
             (Documentation Taxonomic-Slot-For-Any-Unit
              "A collection of predicates; a subset of Taxonomic-Slot.  Each element of Taxonomic-Slot-For-Any-Unit is a binary predicate that may be used to define the taxonomy of instances; i.e., the collection of binary predicates applicable to any term.  Examples: :Direct-Types, Generalizations."))

(defrelation Physical-Series
             (Name-In-Cyc Physical-Series "#$PhysicalSeries")
             (Existing-Object-Type Physical-Series)
             (Subclass-Of Physical-Series Partially-Tangible)
             (Subclass-Of Physical-Series Group)
             (Subclass-Of Physical-Series Series)
             (Set-Or-Collection Physical-Series)
             (Arity Physical-Series 1)
             (Documentation Physical-Series
              "Each Physical-Series is a Group of Partially-Tangibles which is ordered in a linear fashion, most likely according to some spatial relationship.  For example, a group of people in line at a ticket booth, or the vertebrae in one person's spine."))

(defrelation Calendar-Winter
             (Name-In-Cyc Calendar-Winter "#$CalendarWinter")
             (Calendar-Season-Type Calendar-Winter)
             (Subclass-Of Calendar-Winter Calendar-Season)
             (Set-Or-Collection Calendar-Winter)
             (Arity Calendar-Winter 1)
             (Documentation Calendar-Winter
              "The calendar season that begins at winter solstice and runs until vernal equinox."))

(defrelation Blue-Collar-Worker
             (Name-In-Cyc Blue-Collar-Worker "#$BlueCollarWorker")
             (Occupation-Type Blue-Collar-Worker)
             (Subclass-Of Blue-Collar-Worker Professional)
             (Set-Or-Collection Blue-Collar-Worker)
             (Arity Blue-Collar-Worker 1)
             (Documentation Blue-Collar-Worker
              "A collection of persons; a subset of Professional.  Each element of Blue-Collar-Worker is a person whose occupation is manual-labor intensive, sometimes demanding physical strength and, in some jobs, considerable skill, practical judgment, and work experience.  Types of blue-collar workers include miners, truck drivers, steelworkers, construction workers, agricultural workers, laborers, mechanics, garbage collectors, assembly line workers, janitorial workers, etc.  Their jobs may require some specialized training or apprenticeship but don't require a college degree."))

(defrelation Administrator
             (Name-In-Cyc Administrator "#$Administrator")
             (Occupation-Type Administrator)
             (Subclass-Of Administrator Desk-Worker)
             (Set-Or-Collection Administrator)
             (Arity Administrator 1)
             (Documentation Administrator
              "A collection of persons; a subset of Professional.  Each element of Administrator is an employee of an organization who is responsible for managing its organizational affairs.  Elements of Administrator may or may not also be required to manage people.  If so, then they are also Managers (q.v.)."))

(defrelation Capacity-Attribute
             (Name-In-Cyc Capacity-Attribute "#$CapacityAttribute")
             (Unordered-Attribute-Type Capacity-Attribute)
             (Subclass-Of Capacity-Attribute Attribute-Value)
             (Set-Or-Collection Capacity-Attribute)
             (Arity Capacity-Attribute 1)
             (Documentation Capacity-Attribute
              "A collection of attributes.  Each element of Capacity-Attribute is an attribute representing a specific capacity in which an agent does an action.  For example, an action might be done as an agent's job (Job-Capacity) or hobby (Hobby-Capacity), as its main function (Main-Function) or an auxiliary function (Support-Function)."))

(defrelation Time-Interval
             (Synonymous-External-Concept Time-Interval Sensus-Information1997
              "TEMPORAL")
             (Name-In-Cyc Time-Interval "#$TimeInterval")
             (Temporal-Stuff-Type Time-Interval)
             (Subclass-Of Time-Interval Intangible-Individual)
             (Subclass-Of Time-Interval Temporal-Thing)
             (Set-Or-Collection Time-Interval)
             (Arity Time-Interval 1)
             (Documentation Time-Interval
              "Time-Interval is a subset of Temporal-Thing.  Each Time-Interval can be characterized fully just by specifying its temporal attributes.  Anything which has a temporal extent is an instance of Temporal-Thing, but if that is essentially ALL that it has, then it is also a Time-Interval.  For example, `the year 1967' is a just a Time-Interval: although many interesting things happened during that year, the year itself is completely defined by its temporal extent.  `Neil Armstrong Walking on the Moon' is an Event, not a Time-Interval, since it would be defined by many non-temporal assertions. And of course, `Neil Armstrong' is a Something-Existing, not a Time-Interval, but like all instances of Something-Existing, he does have temporal extent and is therefore a Temporal-Thing.  One could, in principle, separately reify (name) the Time-Interval which is the period of existence of any Something-Existing, or the period of time during which any Event occurred, but in practice that is rarely useful.  Since they all have an implicit Time-Interval associated with them, any predicates which one might apply to time intervals can also be applied to a football game, a football, etc.  E.g., we can talk about the Starting-Point of a football game, or for that matter the Starting-Point of the football itself (the moment of its creation)."))

(defrelation Rst-Relation
             (Name-In-Cyc Rst-Relation "#$RSTRelation")
             (Predicate-Category Rst-Relation)
             (Subclass-Of Rst-Relation Intangible-Object-Predicate)
             (Set-Or-Collection Rst-Relation)
             (Arity Rst-Relation 1)
             (Documentation Rst-Relation
              "A set of predicates describing possible relations between text constituents. These predicates are roughly adopted from work in Rhetorical Structure Theory (Mann & Thompson) and the SENSUS ontology (Hovy). Typically, these relations serve as necessary coherence links between segments of a text."))

(defrelation El-Relation
             (Name-In-Cyc El-Relation "#$ELRelation")
             (Collection El-Relation)
             (Subclass-Of El-Relation Thing)
             (Set-Or-Collection El-Relation)
             (Arity El-Relation 1)
             (Documentation El-Relation
              "A subset of Relationship such that instances are only permitted at
the EL; that is, the canonicalizer will transform expressions that
reference instances of EL-Relation into equivalent expressions that do not
reference instances of EL-Relation; this transformation is guided by the
value (arg2) of Expansion for each EL-Relation"))

(defrelation Political-Organization
             (Name-In-Cyc Political-Organization "#$PoliticalOrganization")
             (Existing-Object-Type Political-Organization)
             (Subclass-Of Political-Organization Organization)
             (Set-Or-Collection Political-Organization)
             (Arity Political-Organization 1)
             (Documentation Political-Organization
              "A collection of organizations.  An element of Political-Organization is an organization whose members share some common political, social, or economic values and goals, and the Main-Function of their organization is to achieve those goals by influencing governmental powers or by helping persons who favor their views and interests to win elections or otherwise obtain governmental power.  The collection Political-Organization includes instances of Political-Party and also of Political-Interest-Group.
Note that governmental bodies (such as a City-Council) are not considered Political-Organizations.  Although such governmental bodies often act in political arenas, that is not their primary function."))

(defrelation Neutron
             (Name-In-Cyc Neutron "#$Neutron")
             (Existing-Object-Type Neutron)
             (Subclass-Of Neutron Nucleon)
             (Set-Or-Collection Neutron)
             (Arity Neutron 1)
             (Documentation Neutron
              "A collection of objects; a subset of Nucleon.  Each instance of Neutron is a nucleon which has an Electrical-Charge of 0."))

(defobject |(MEDIUM-AMOUNT-FN CORROSION-RESISTANCE)|
   (Scalar-Interval |(MEDIUM-AMOUNT-FN CORROSION-RESISTANCE)|)
   (Corrosion-Resistance |(MEDIUM-AMOUNT-FN CORROSION-RESISTANCE)|)
   (Skolem-Object |(MEDIUM-AMOUNT-FN CORROSION-RESISTANCE)|))

(defrelation Gesture
             (Name-In-Cyc Gesture "#$Gesture")
             (Temporal-Stuff-Type Gesture)
             (Subclass-Of Gesture Situation)
             (Subclass-Of Gesture Visual-Information-Source)
             (Set-Or-Collection Gesture)
             (Arity Gesture 1)
             (Documentation Gesture
              "A collection of configurations; a subset of Visual-Information-Source.  Each element of Gesture is a configuration of animal body parts that has some meaning to an observer with an understanding of the interpretive convention.  A gesture may include some tool or prop.  Gestures may be fleeting (e.g., a hello wave) or may last a long time (e.g., the gesture embodied in the Statue-Of-Liberty).  Note that, as defined in Cyc, a gesture is a meaningful configuration of body parts, NOT the actions producing the arrangement; for representation of the actions, see Making-A-Gesture."))

(defobject A-Few-Months-Duration
   (Time-Quantity A-Few-Months-Duration)
   (Order-Of-Magnitude-Interval A-Few-Months-Duration)
   (Name-In-Cyc A-Few-Months-Duration "#$AFewMonthsDuration")
   (Documentation A-Few-Months-Duration "A few months 2-10"))

(defrelation Thermal-Conductivity
             (Name-In-Cyc Thermal-Conductivity "#$ThermalConductivity")
             (Primitive-Attribute-Type Thermal-Conductivity)
             (Subclass-Of Thermal-Conductivity Physical-Attribute)
             (Subclass-Of Thermal-Conductivity Scalar-Interval)
             (Set-Or-Collection Thermal-Conductivity)
             (Arity Thermal-Conductivity 1)
             (Documentation Thermal-Conductivity
              "A collection of attributes; a subset of Physical-Attribute.  Each element of Thermal-Conductivity represents a specific ability of some physical object to conduct heat; e.g., Conducts-Heat-Poorly, Conducts-Some-Heat, Conducts-Heat-Well.  An individual object's Thermal-Conductivity is indicated with the predicate Thermal-Conductivity-Of-Object."))

(defrelation Reproductive-System
             (Name-In-Cyc Reproductive-System "#$ReproductiveSystem")
             (Animal-Body-Part-Type Reproductive-System)
             (Subclass-Of Reproductive-System Animal-Body-Part)
             (Set-Or-Collection Reproductive-System)
             (Arity Reproductive-System 1)
             (Documentation Reproductive-System
              "The collection of all animals' reproductive systems.  A Reproductive-System is a system of organs used by the Animal for reproduction; i.e., for creating an offspring, a new member of that species.  
Note:  Strictly speaking, it might be more accurate to describe a Reproductive-System as containing the above sorts of systems for a mated male and female of a sexual species, as only that combined system is capable of actually producing an offspring.  But most of the things one wants to say about a Reproductive-System really do only make sense for one single animal at a time.  So think of reproduction as a cooperative activity, such as having a conversation, where we still refer to each animal's incomplete reproductive system as a Reproductive-System."))

(defrelation Specified-Information-Bearing-Thing-Type
             (Name-In-Cyc Specified-Information-Bearing-Thing-Type
              "#$SpecifiedInformationBearingThingType")
             (Collection Specified-Information-Bearing-Thing-Type)
             (Subclass-Of Specified-Information-Bearing-Thing-Type
              Existing-Object-Type)
             (Set-Or-Collection Specified-Information-Bearing-Thing-Type)
             (Arity Specified-Information-Bearing-Thing-Type 1)
             (Documentation Specified-Information-Bearing-Thing-Type
              "A collection of collections.  Each element of Specified-Information-Bearing-Thing-Type is a subset of Information-Bearing-Thing, all of whose instances have in common all (or nearly all) of their information content and their primary media form.  For example, the collection specified by `the book War and Peace' is an element of Specified-Information-Bearing-Thing-Type; so is the collection described by `the movie Jaws' (even though both the novel `War and Peace' and the film `Jaws' were issued in slightly different variants).  Heterogeneous collections, however, such as those defined by `books written by Mark Twain', or by `the Jaws story in all its forms [movie, book, comic book, tape]', are NOT elements of Specified-Information-Bearing-Thing-Type, although they are subsets of Information-Bearing-Thing.  Examples of Specified-Information-Bearing-Thing-Type: Adventures-Of-Huckleberry-Finn-The-Book, OS-2, Lotus123, Peloponnesian-War-History-By-Thucydides-The-Book, Citizen-Kane-The-Movie."))

(defrelation Social-Status-Attribute
             (Name-In-Cyc Social-Status-Attribute "#$SocialStatusAttribute")
             (Composite-Attribute-Type Social-Status-Attribute)
             (Social-Status-Attribute-Type Social-Status-Attribute)
             (Subclass-Of Social-Status-Attribute Attribute-Value)
             (Set-Or-Collection Social-Status-Attribute)
             (Arity Social-Status-Attribute 1)
             (Documentation Social-Status-Attribute
              "The collection of Attribute-Values that pertain to human social status; role or rank (formal or informal) in the surrounding culture.  Most assertions should be made in terms of some specialization of this collection (or an instance of some specialization of this collection).  Members of this collection include: Lower-Middle-Class, Good-Looking, Fourth-Grade-Level, etc."))

(defobject |(NO-AMOUNT-FN MALLEABILITY)|
   (Scalar-Interval |(NO-AMOUNT-FN MALLEABILITY)|)
   (Malleability |(NO-AMOUNT-FN MALLEABILITY)|)
   (Skolem-Object |(NO-AMOUNT-FN MALLEABILITY)|))

(defrelation Fluid-Reservoir
             (Name-In-Cyc Fluid-Reservoir "#$FluidReservoir")
             (Product-Type Fluid-Reservoir)
             (Existing-Object-Type Fluid-Reservoir)
             (Subclass-Of Fluid-Reservoir Container-Product)
             (Set-Or-Collection Fluid-Reservoir)
             (Arity Fluid-Reservoir 1)
             (Documentation Fluid-Reservoir
              "A collection of open-ended containers; a subset of Container-Product.  An instance of Fluid-Reservoir is a container which was designed to hold liquids.  These include elements of the collections Spoon, Toilet-Bowl, Glass-Bottle, etc.  Note a special negative case: natural `reservoirs', such as Lakes, are not Container-Products -- though the Dams that create them are artifacts, the reservoir water is contained in the natural landscape -- and hence such reservoirs are not subsets of Fluid-Reservoir."))

(defrelation Rule-Macro-Predicate
             (Name-In-Cyc Rule-Macro-Predicate "#$RuleMacroPredicate")
             (Predicate-Category Rule-Macro-Predicate)
             (Subclass-Of Rule-Macro-Predicate Predicate)
             (Set-Or-Collection Rule-Macro-Predicate)
             (Arity Rule-Macro-Predicate 1)
             (Documentation Rule-Macro-Predicate
              "Instances of Rule-Macro-Predicate are predicates that have, implicit in their definition, the schema for a class of quantified formulas.  A ground assertion (GAF) using one of these predicates is in fact shorthand for a rule fitting this schema.  For example, :Direct-Superclasses is a Rule-Macro-Predicate and its implicit schema would be (:=> (:Direct-Types ?X ARG1) (:Direct-Types ?X ARG2)).  Therefore, (:Direct-Superclasses Poodle Dog) is shorthand for the rule (:=> (:Direct-Types ?X Poodle) (:Direct-Types ?X Dog)).  Rule-Macro-Predicates may be supported by system code, as is :Direct-Superclasses, or they may be defined with an Expansion-Axiom.  In general, one should only introduce a new RuleMacroPredicate if 1) there is a plan to eventually provide code support for efficient reasoning with its uses, and/or 2) using it enables useful type-level reasoning."))

(defrelation Default-Disjoint-Script-Type
             (Name-In-Cyc Default-Disjoint-Script-Type
              "#$DefaultDisjointScriptType")
             (Sibling-Disjoint-Collection Default-Disjoint-Script-Type)
             (Subclass-Of Default-Disjoint-Script-Type Script-Type)
             (Set-Or-Collection Default-Disjoint-Script-Type)
             (Arity Default-Disjoint-Script-Type 1)
             (Documentation Default-Disjoint-Script-Type
              "This is a  Sibling-Disjoint-Collection (qv).  So the elements of Default-Disjoint-Script-Type are kinds of actions (subsets of Event) that can be assumed to be mutually disjoint from each other (unless one is known to be a subset of the other, or there is a known common subset.)"))

(defrelation Biological-Family
             (Name-In-Cyc Biological-Family "#$BiologicalFamily")
             (Biological-Taxon-Type Biological-Family)
             (Subclass-Of Biological-Family Biological-Taxon)
             (Set-Or-Collection Biological-Family)
             (Arity Biological-Family 1)
             (Documentation Biological-Family
              "The collection of biological taxonomic subdivisions below Biological-Order and above Biological-Genus.  Especially important in Botanical classification."))

(defrelation Biological-Living-Object
             (Name-In-Cyc Biological-Living-Object "#$BiologicalLivingObject")
             (Existing-Object-Type Biological-Living-Object)
             (Subclass-Of Biological-Living-Object Organic-Stuff)
             (Subclass-Of Biological-Living-Object
              Composite-Tangible-And-Intangible-Object)
             (Set-Or-Collection Biological-Living-Object)
             (Arity Biological-Living-Object 1)
             (Documentation Biological-Living-Object
              "A collection of all structures that are composed of one or more living cells (see Cell).  Biological living objects (BLOs) may be either elements of Organism-Whole (like dogs or pine trees) or are components of such whole organisms (like noses, tails, and pine needles).  The healthy leg of a living person is a BLO (as is the person), but an amputated leg is not a BLO.  Every element of Biological-Living-Object is either capable of biological reproduction itself or has components which are capable of biological reproduction (such as the cells in a living arm)."))

(defrelation Social-Attribute-Type
             (Name-In-Cyc Social-Attribute-Type "#$SocialAttributeType")
             (Collection Social-Attribute-Type)
             (Subclass-Of Social-Attribute-Type Attribute-Type)
             (Set-Or-Collection Social-Attribute-Type)
             (Arity Social-Attribute-Type 1)
             (Documentation Social-Attribute-Type
              "This is a collection of collections.  Each Social-Attribute-Type is itself a coherent collection of attributes that pertain to human behavior.  This definition is very broad, and embraces attributes of behavior (personal and social) one might read about in a sociology, psychology, cultural anthropology, economics, political science, or social philosophy course -- in short, in the (human) `behavioral' sciences.  A more specialized concept is Social-Status-Attribute-Type, which limits the focus to status-related attributes.  This is a superset of that, much more general collection which includes, as elements, Acquaintance-Attribute, Inter-Agent-Relation-Attribute, etc., as well as all the elements of Social-Status-Attribute-Type (qv)."))

(defrelation |(TRANSPORT-FN SOLID-TANGIBLE-THING)|
             (Skolem-Object |(TRANSPORT-FN SOLID-TANGIBLE-THING)|)
             (Script-Type |(TRANSPORT-FN SOLID-TANGIBLE-THING)|)
             (Subclass-Of |(TRANSPORT-FN SOLID-TANGIBLE-THING)|
              Transporting-Goods)
             (Set-Or-Collection |(TRANSPORT-FN SOLID-TANGIBLE-THING)|)
             (Arity |(TRANSPORT-FN SOLID-TANGIBLE-THING)| 1))

(defrelation Law-Enforcement-Organization
             (Name-In-Cyc Law-Enforcement-Organization
              "#$LawEnforcementOrganization")
             (Existing-Object-Type Law-Enforcement-Organization)
             (Subclass-Of Law-Enforcement-Organization
              Legal-Government-Organization)
             (Set-Or-Collection Law-Enforcement-Organization)
             (Arity Law-Enforcement-Organization 1)
             (Documentation Law-Enforcement-Organization
              "The collection of all law enforcement organizations.  An element of Law-Enforcement-Organization is any organization which is legally empowered to enforce laws.  This collection includes police forces, national bureaux of investigation, some forest services, park police, hunting and game commission officers, Border-Police-Organizations, governmental executive protection services, military police, etc."))

(defobject Feminine
   (Gender-Of-Living-Thing Feminine)
   (Linguistic-Object Feminine)
   (Name-In-Cyc Feminine "#$Feminine")
   (Documentation Feminine
    "Feminine is a gender, indicating either that an Animal or Plant is female, or that a word has what is called feminine gender."))

(defrelation Cloudiness
             (Name-In-Cyc Cloudiness "#$Cloudiness")
             (Primitive-Attribute-Type Cloudiness)
             (Subclass-Of Cloudiness Weather-Attribute)
             (Subclass-Of Cloudiness Physical-Attribute)
             (Subclass-Of Cloudiness Scalar-Interval)
             (Set-Or-Collection Cloudiness)
             (Arity Cloudiness 1)
             (Documentation Cloudiness
              "A collection of attributes; a subset of Scalar-Interval.  The elements of Cloudiness characterize the amount of cloud cover at an Outdoor-Location.  A higher value indicates more clouds or more dense cover.  Degrees of cloudiness may be represented qualitatively (e.g., Partial-Cloud-Cover, Complete-Cloud-Cover), or using Generic-Value-Functions.  The cloudiness of a location can be described with the predicate Cloudiness-Of-Region."))

(defobject North-Directly
   (Geographical-Direction North-Directly)
   (Unit-Vector-Precise North-Directly)
   (Subattribute-Of North-Directly North-Generally)
   (Name-In-Cyc North-Directly "#$North-Directly")
   (Documentation North-Directly
    "Due North, an element of Terrestrial-Direction."))

(defrelation Lexical-Word
             (Synonymous-External-Concept Lexical-Word Sensus-Information1997
              "WORD")
             (Name-In-Cyc Lexical-Word "#$LexicalWord")
             (Linguistic-Object-Type Lexical-Word)
             (Subclass-Of Lexical-Word Lexical-Item)
             (Subclass-Of Lexical-Word Linguistic-Object)
             (Set-Or-Collection Lexical-Word)
             (Arity Lexical-Word 1)
             (Documentation Lexical-Word
              "The collection of all words. A lexical word is a free morpheme; it need not be bound to another lexical item.  Note that inflectional forms of a word, if there are such, do not constitute distinct words.  Examples of Lexical-Word: Aluminum-The-Word, Confetti-The-Word, To-The-Word, Confetti-The-Word, Hang-Glide-MWW."))

(defrelation Furniture-Piece
             (Name-In-Cyc Furniture-Piece "#$FurniturePiece")
             (Existing-Object-Type Furniture-Piece)
             (Subclass-Of Furniture-Piece Hoc-Object)
             (Subclass-Of Furniture-Piece Physical-Device)
             (Subclass-Of Furniture-Piece Solid-Tangible-Product)
             (Set-Or-Collection Furniture-Piece)
             (Arity Furniture-Piece 1)
             (Documentation Furniture-Piece
              "A collection of durable artifacts which are used in Human-Shelter-Constructions to make human dwelling places more comfortable.  An instance of Furniture-Piece is a whole piece of furniture, such as a table, chair, or chest of drawers; an arm of a sofa is not a Furniture-Piece.  Its subsets can be classified according to the main functions their elements serve:  (1) providing support for people's bodies while they are seated or reclining (e.g., Bed-Piece-Of-Furniture, Sofa-Piece-Of-Furniture, Foot-Stool, Fixed-Theatre-Seat); (2) providing work/action surfaces (e.g., Desk-Piece-Of-Furniture, Dining-Room-Table); (3) providing organized and/or protective storage for people's stuff (e.g., Dresser-Piece-Of-Furniture, Bookcase-Piece-Of-Furniture); (4) providing extra illumination or some other function in living and work areas (e.g., Electric-Lamp).  Most pieces of furniture belong to the collection Non-Powered-Device (q.v.) in that they don't need any energy input in order to do their function.  
Note: Yes, of course lamps, fancy console TVs, hospital beds, etc. are exceptions to that last rule -- they require power. But in a sense they are really objects performing multiple independent functions.  A fancy console TV is a piece of furniture even when it's turned off; it just so happens to fulfill two roles, one as a piece of furniture and one as an appliance.  When it's turned on, in fact, its users are intended to stop noticing it as a piece of furniture.)"))

(defobject Full-Time
   (Work-Status Full-Time)
   (Name-In-Cyc Full-Time "#$FullTime")
   (Documentation Full-Time "Attribute of being a full-time worker."))

(defobject Vertical-Orientation
   (Orientation-Attribute Vertical-Orientation)
   (Name-In-Cyc Vertical-Orientation "#$VerticalOrientation")
   (Documentation Vertical-Orientation
    "(Orientation OBJECT Vertical-Orientation) means that OBJECT is vertical with respect to the current instance of Frame-Of-Reference.  A linear (Long-And-Thin) object is vertical if and only if its longest dimension is perpendicular to horizontal (Horizontal-Direction).  A planar (Sheet-Shaped) object has Vertical-Orientation if and only if its planar surface is perpendicular to the current horizontal plane.  Typically, vertical objects include window panes, skyscrapers, trees, radio towers, and walls."))

(defrelation Elasticity
             (High-Amount-Fn Elasticity |(HIGH-AMOUNT-FN ELASTICITY)|)
             (Low-Amount-Fn Elasticity |(LOW-AMOUNT-FN ELASTICITY)|)
             (Medium-Amount-Fn Elasticity |(MEDIUM-AMOUNT-FN ELASTICITY)|)
             (No-Amount-Fn Elasticity |(NO-AMOUNT-FN ELASTICITY)|)
             (Name-In-Cyc Elasticity "#$Elasticity")
             (Material-Strength-Type Elasticity)
             (Subclass-Of Elasticity Physical-Attribute)
             (Subclass-Of Elasticity Scalar-Interval)
             (Set-Or-Collection Elasticity)
             (Arity Elasticity 1)
             (Documentation Elasticity
              "A collection of attributes; a subset of Physical-Attribute.  Each element of Elasticity represents a specific ability of a physical material to quickly and completely return to its original shape after deformation that does not induce breakage, without permanent change to its original dimensions.  For example, billiard balls have a high degree of elasticity in this sense.  Elasticities of objects are indicated with the predicate Elasticity-Of-Object."))

(defrelation Taste-Perception
             (Name-In-Cyc Taste-Perception "#$TastePerception")
             (Temporal-Stuff-Type Taste-Perception)
             (Default-Disjoint-Script-Type Taste-Perception)
             (Subclass-Of Taste-Perception Perceiving)
             (Set-Or-Collection Taste-Perception)
             (Arity Taste-Perception 1)
             (Documentation Taste-Perception
              "The collection of sensory Perceivings in which a Perceptual-Agent Tastes some object, by means of the appropriate Sensor, and thereby acquires information about it."))

(defrelation Holdings
             (Name-In-Cyc Holdings "#$Holdings")
             (Existing-Object-Type Holdings)
             (Subclass-Of Holdings Group)
             (Set-Or-Collection Holdings)
             (Arity Holdings 1)
             (Documentation Holdings
              "A collection of sets of objects, tangible or intangible, which have some special financial, scientific, cultural, or educational value.  An instance of Holdings is a set of objects kept and usually maintained by some agent for their value, or to preserve the objects, or to make them available for public display or use (as in a museum's `holdings' or a library's `holdings').  The elements in a group of holdings may or may not be all of a similar type (e.g., books, paintings).  An agent's holdings may or may not all be kept in the same location."))

(defrelation |(MAKING-FN VISUAL-IMAGE)|
             (Skolem-Object |(MAKING-FN VISUAL-IMAGE)|)
             (Temporal-Object-Type |(MAKING-FN VISUAL-IMAGE)|)
             (Script-Type |(MAKING-FN VISUAL-IMAGE)|)
             (Subclass-Of |(MAKING-FN VISUAL-IMAGE)| Making-Something)
             (Set-Or-Collection |(MAKING-FN VISUAL-IMAGE)|)
             (Arity |(MAKING-FN VISUAL-IMAGE)| 1))

(defrelation Four-Way-Junction-In-System
             (Subrelation-Of Four-Way-Junction-In-System Junction-In-System)
             (Name-In-Cyc Four-Way-Junction-In-System
              "#$fourWayJunctionInSystem")
             (Asymmetric-Binary-Predicate Four-Way-Junction-In-System)
             (Relation Four-Way-Junction-In-System)
             (Documentation Four-Way-Junction-In-System
              "(Four-Way-Junction-In-System JUNCT SYS) means that JUNCT is a 4-way junction in the specified Path-System SYS.  (See also Four-Way-Junction-Of-Paths for the general case.)  Formally, a 4-way junction in SYS is any point (actually, a node) X in SYS such that either there are exactly 4 links and no loops in SYS that X is on, or there are exactly 2 loops and no links in SYS that X is on, or there are exactly 2 links and 1 loop in SYS that X is on.  See Junction-In-System."))

(deffunction Coulomb
   (Args-Isa Coulomb Real-Number)
   (Result-Instance-Of Coulomb Electrical-Charge)
   (Result-Instance-Of Coulomb Scalar-Interval)
   (Name-In-Cyc Coulomb "#$Coulomb")
   (Standard-Unit-Of-Measure Coulomb)
   (Mks-Unit-Of-Measure Coulomb)
   (Unit-Of-Charge Coulomb)
   (Unit-Of-Measure-No-Prefix Coulomb)
   (Function Coulomb)
   (Documentation Coulomb
    "This is the basic unit of measure for charge in the metric system and in CYC."))

(defrelation Cutting-Device
             (Name-In-Cyc Cutting-Device "#$CuttingDevice")
             (Existing-Object-Type Cutting-Device)
             (Subclass-Of Cutting-Device Physical-Device)
             (Set-Or-Collection Cutting-Device)
             (Arity Cutting-Device 1)
             (Documentation Cutting-Device
              "A collection of devices.  An instance of Cutting-Device is a device whose Primary-Function is to (enable its user to) cut another object.  Subsets of Cutting-Device include the collections Razors, Scissors, Lawn-Mowers,and more."))

(defrelation Organ
             (Name-In-Cyc Organ "#$Organ")
             (Animal-Body-Part-Type Organ)
             (Subclass-Of Organ Solid-Tangible-Thing)
             (Subclass-Of Organ Animal-Body-Part)
             (Set-Or-Collection Organ)
             (Arity Organ 1)
             (Documentation Organ
              "The collection of all the Organs of Animals; i.e., the Animal-Body-Parts that have specialized physiological functions and which are more or less localized in the animal.  For example: a heart, a kidney, etc.  A borderline case of this is a person's (whole) skin; in some contexts, it is treated as a sense organ, and in some contexts it is excluded because it is distributed over their entire body."))

(defrelation Enjoyment
             (Name-In-Cyc Enjoyment "#$Enjoyment")
             (Feeling-Attribute-Type Enjoyment)
             (Subclass-Of Enjoyment Feeling-Attribute)
             (Set-Or-Collection Enjoyment)
             (Arity Enjoyment 1)
             (Documentation Enjoyment
              "The agreeable emotion of taking pleasure or satisfaction in an experience.  This is a collection; for an explanation of a typical Feeling-Attribute-Type, see Happiness.  Some more specialized Feeling-Attribute-Types are Delight, Celebratory-Emotion, etc."))

(defrelation Agreement-Forbids
             (Nth-Domain Agreement-Forbids 1 Agreement)
             (Nth-Domain Agreement-Forbids 2 Agent)
             (Nth-Domain Agreement-Forbids 3 Script-Type)
             (Name-In-Cyc Agreement-Forbids "#$agreementForbids")
             (Ternary-Predicate Agreement-Forbids)
             (Relation Agreement-Forbids)
             (Arity Agreement-Forbids 3)
             (Documentation Agreement-Forbids
              "The predicate Agreement-Forbids is used to indicate types of actions that a particular agent is forbidden from performing under the terms of a particular agreement.  (Agreement-Forbids AGR AGENT ACT-TYPE) means that the Agreement AGR forbids the Agent AGENT from ACT-TYPE activities.  For example, an instance of Peace-Accord Agreement-Forbids the governments who signed it from Waging-War against one another; or, a business contract may forbid one agent from competing with another after s/he sells rights to a product, design, or practice to the second agent."))

(defrelation Rigidity
             (Low-Amount-Fn Rigidity |(LOW-AMOUNT-FN RIGIDITY)|)
             (Very-Low-Amount-Fn Rigidity |(VERY-LOW-AMOUNT-FN RIGIDITY)|)
             (Medium-Amount-Fn Rigidity |(MEDIUM-AMOUNT-FN RIGIDITY)|)
             (No-Amount-Fn Rigidity |(NO-AMOUNT-FN RIGIDITY)|)
             (High-Amount-Fn Rigidity |(HIGH-AMOUNT-FN RIGIDITY)|)
             (Very-High-Amount-Fn Rigidity |(VERY-HIGH-AMOUNT-FN RIGIDITY)|)
             (Name-In-Cyc Rigidity "#$Rigidity")
             (Primitive-Attribute-Type Rigidity)
             (Subclass-Of Rigidity Physical-Attribute)
             (Subclass-Of Rigidity Scalar-Interval)
             (Set-Or-Collection Rigidity)
             (Arity Rigidity 1)
             (Documentation Rigidity
              "A collection of attributes; a subset of Physical-Attribute.  Each element of Rigidity is a property of rigidity belonging to physical objects.  Rigidities in Cyc are measured using a Generic-Value-Function.  Rigidities of objects are reported using the predicate Rigidity-Of-Object."))

(defrelation Corrosion-Resistance
             (Medium-Amount-Fn Corrosion-Resistance
              |(MEDIUM-AMOUNT-FN CORROSION-RESISTANCE)|)
             (High-Amount-Fn Corrosion-Resistance
              |(HIGH-AMOUNT-FN CORROSION-RESISTANCE)|)
             (Very-High-Amount-Fn Corrosion-Resistance
              |(VERY-HIGH-AMOUNT-FN CORROSION-RESISTANCE)|)
             (Name-In-Cyc Corrosion-Resistance "#$CorrosionResistance")
             (Primitive-Attribute-Type Corrosion-Resistance)
             (Subclass-Of Corrosion-Resistance Scalar-Interval)
             (Subclass-Of Corrosion-Resistance Physical-Attribute)
             (Set-Or-Collection Corrosion-Resistance)
             (Arity Corrosion-Resistance 1)
             (Documentation Corrosion-Resistance
              "A collection of attributes; a subset of Physical-Attribute. Each element of Corrosion-Resistance represents a specific level of resistance to corrosion of some tangible object.  Degrees of Corrosion-Resistance may be represented using Generic-Value-Functions.  Indicate a particular object's Corrosion-Resistance with the predicate Resistance-To-Corrosion."))

(defrelation Admiration
             (Name-In-Cyc Admiration "#$Admiration")
             (Feeling-Attribute-Type Admiration)
             (Subclass-Of Admiration Respect)
             (Set-Or-Collection Admiration)
             (Arity Admiration 1)
             (Documentation Admiration
              "A feeling of strong approval.  An intense positive attitude towards another person(s) or group.  May be accompanied by emulation.  Admiration is different than Respect (qv).  This is a collection --- see Happiness for an explanation.  Some more specialized Feeling-Attribute-Types than Admiration are Wonder-Admiration, Adulation, Awe, etc. "))

(defrelation Appropriate-Emotion
             (Nth-Domain Appropriate-Emotion 1 Situation)
             (Nth-Domain Appropriate-Emotion 2 Role)
             (Nth-Domain Appropriate-Emotion 3 Feeling-Attribute-Type)
             (Nth-Domain Appropriate-Emotion 4 Generic-Attribute)
             (Nth-Domain-Subclass-Of Appropriate-Emotion 3 Feeling-Attribute)
             (Name-In-Cyc Appropriate-Emotion "#$appropriateEmotion")
             (Quaternary-Predicate Appropriate-Emotion)
             (Relation Appropriate-Emotion)
             (Arity Appropriate-Emotion 4)
             (Documentation Appropriate-Emotion
              "(Appropriate-Emotion SIT ROLE EMOTYPE DEGREE) means that in the Situation SIT, an intelligent agent filling the Role ROLE would be expected to feel an emotion of Feeling-Attribute-Type EMOTYPE with the intensity DEGREE.  If such an agent did not feel that emotion, s/he would generally be considered rude or strange. E.g., a High degree of Grief is an Appropriate-Emotion for someone in the audience at a funeral (but not for the workers, the deceased, etc.)"))

(defrelation Device-Used
             (Subrelation-Of Device-Used Instrument-Generic)
             (Domain Device-Used Event)
             (Range Device-Used Physical-Device)
             (Name-In-Cyc Device-Used "#$deviceUsed")
             (Actor-Slot Device-Used)
             (Slot Device-Used)
             (Relation Device-Used)
             (Arity Device-Used 2)
             (Binary-Relation Device-Used)
             (Documentation Device-Used
              "The predicate Device-Used indicates that a particular device is used in a particular event. (Device-Used EVENT OBJECT) means that the Physical-Device OBJECT plays an instrumental role in the Event EVENT.  (See also Instrument-Generic.) OBJECT is intentionally used in EVENT, and standardly (e.g., in the Human-Activities-Mt) OBJECT's role in EVENT is consistent with the object's Primary-Function."))

(defrelation Tank-Vehicle
             (Name-In-Cyc Tank-Vehicle "#$Tank-Vehicle")
             (Product-Type Tank-Vehicle)
             (Existing-Object-Type Tank-Vehicle)
             (Subclass-Of Tank-Vehicle Transportation-Device-Vehicle)
             (Subclass-Of Tank-Vehicle Weapon)
             (Subclass-Of Tank-Vehicle Land-Transportation-Device)
             (Set-Or-Collection Tank-Vehicle)
             (Arity Tank-Vehicle 1)
             (Documentation Tank-Vehicle
              "The collection of all tanks, armored vehicles designed for military purposes, with mounted guns, heavy armor, and often tracked wheels."))

(defrelation Shape-Function
             (Name-In-Cyc Shape-Function "#$ShapeFunction")
             (Relationship-Type Shape-Function)
             (Subclass-Of Shape-Function Non-Predicate-Function)
             (Set-Or-Collection Shape-Function)
             (Arity Shape-Function 1)
             (Documentation Shape-Function
              "A collection of Cyc functions.  Each element of Shape-Function is a function which returns an element of Abstract-Shape, an abstract physical region with a specific shape and dimensions.  Elements of Shape-Function include Rectangle-Fn, Ellipse-Fn, Circle-Fn, Rectangular-Solid-Fn, Cylinder-Fn, etc.  Each shape function takes as argument(s) the dimension(s) of Distance needed to determine a geometric shape of that kind, then returns a shape which has those dimensions.  For example, (Cylinder-Fn L D) denotes an abstract cylinder of length L and diameter D."))

(defrelation Dog
             (Name-In-Cyc Dog "#$Dog")
             (Biological-Species Dog)
             (Subclass-Of Dog Carnivore)
             (Subclass-Of Dog Mammal)
             (Subclass-Of Dog Domestic-Pet)
             (Set-Or-Collection Dog)
             (Arity Dog 1)
             (Documentation Dog
              "The collection of all dogs of all breeds.  Elements of Dog may be members of Domestic-Pet or of Wild-Animal; e.g., Dog includes the dingo dogs of Australia.  However, Dog excludes the members of Wolf, Fox, and the other non-dog subsets of Canine-Animal.  Dog is an instance of Biological-Species, Canis familiaris."))

(deffunction Liter
   (Args-Isa Liter Real-Number)
   (Result-Instance-Of Liter Volume)
   (Result-Instance-Of Liter Scalar-Interval)
   (Name-In-Cyc Liter "#$Liter")
   (Unit-Of-Volume Liter)
   (Standard-Unit-Of-Measure Liter)
   (Mks-Unit-Of-Measure Liter)
   (Unit-Of-Measure-No-Prefix Liter)
   (Function Liter)
   (Documentation Liter
    "The measurement function used in Cyc to represent the standard unit of capacity in the Metric system (and also in Cyc). See also Unit-Of-Volume, MKS-Unit-Of-Measure, Unit-Of-Measure."))

(defrelation Anesthesia
             (Name-In-Cyc Anesthesia "#$Anesthesia")
             (Script-Type Anesthesia)
             (Subclass-Of Anesthesia Drug-Therapy)
             (Set-Or-Collection Anesthesia)
             (Arity Anesthesia 1)
             (Documentation Anesthesia
              "A collection of events; a subset of Drug-Therapy (q.v.).  In an instance of Anesthesia, a Biological-Living-Object undergoes the effect of some instance of Anesthetic, the effect of which is to eliminate the perception of pain.  Anesthesia events occur in connection with other medical care events, so that a patient will not feel the pain or discomfort that would otherwise be associated with those medical procedures.  Anesthetics are of various chemical kinds, work in various ways, and can be administered in various ways.  They may topically numb an area, they may poison the central nervous system to the point where the animal loses consciousness, etc.  The resulting anesthetic therapies thus may differ, according to the type of anesthetic used; for example, the patient may or may not be conscious during an instance of Anesthesia.  See also Administering-A-Drug."))

(defrelation Pure-Time
             (Synonymous-External-Concept Pure-Time Sensus-Information1997
              "TIME")
             (Name-In-Cyc Pure-Time "#$PureTime")
             (Stuff-Type Pure-Time)
             (Subclass-Of Pure-Time Intangible-Individual)
             (Set-Or-Collection Pure-Time)
             (Arity Pure-Time 1)
             (Documentation Pure-Time
              "Abstract time itself, including all time from the past, present and future, irrespective of any defining (relevant) Events, or containing no (relevant) Events.   Elements are always intangible, abstract featureless times, either all of time or some temporal event-free or relevant-event-free subpart thereof.  An instance of Pure-Time need not have any starting or ending points, either defined or implicit.  Pure-Time is 'empty' of relevant or salient Events;  what is relevant or salient depends on the context.   In a physics context, the background buzz of atoms may be relevant events, whereas that would not be relevant during a non-state-change of an electronic device, or a boring wait for a train.  See also Time-Interval."))

(defobject Bangladesh
   (Entity Bangladesh)
   (Independent-Country Bangladesh)
   (Name-In-Cyc Bangladesh "#$Bangladesh"))

(defobject West-Directly
   (Geographical-Direction West-Directly)
   (Unit-Vector-Precise West-Directly)
   (Subattribute-Of West-Directly West-Generally)
   (Name-In-Cyc West-Directly "#$West-Directly")
   (Documentation West-Directly
    "Due West, an element of Terrestrial-Direction."))

(defrelation Ductility
             (Low-Amount-Fn Ductility |(LOW-AMOUNT-FN DUCTILITY)|)
             (Very-Low-Amount-Fn Ductility |(VERY-LOW-AMOUNT-FN DUCTILITY)|)
             (No-Amount-Fn Ductility |(NO-AMOUNT-FN DUCTILITY)|)
             (Name-In-Cyc Ductility "#$Ductility")
             (Material-Strength-Type Ductility)
             (Subclass-Of Ductility Physical-Attribute)
             (Subclass-Of Ductility Scalar-Interval)
             (Set-Or-Collection Ductility)
             (Arity Ductility 1)
             (Documentation Ductility
              "A collection of attributes; a subset of Physical-Attribute.  Each element of Ductility describes a specific capacity of a physical material to be stretched, drawn, or hammered thin without breaking.  Different degrees of ductility may be represented using a Generic-Value-Function.  Ductilities of objects are indicated with the predicate Ductility-Of-Object."))

(deffunction Radians-Per-Second-Per-Second
   (Args-Isa Radians-Per-Second-Per-Second Real-Number)
   (Result-Instance-Of Radians-Per-Second-Per-Second Angular-Acceleration-Rate)
   (Result-Instance-Of Radians-Per-Second-Per-Second Scalar-Interval)
   (Name-In-Cyc Radians-Per-Second-Per-Second "#$RadiansPerSecondPerSecond")
   (Unit-Of-Measure-No-Prefix Radians-Per-Second-Per-Second)
   (Unit-Of-Angular-Acceleration Radians-Per-Second-Per-Second)
   (Mks-Unit-Of-Measure Radians-Per-Second-Per-Second)
   (Standard-Unit-Of-Measure Radians-Per-Second-Per-Second)
   (Function Radians-Per-Second-Per-Second)
   (Documentation Radians-Per-Second-Per-Second
    "The basic measure of angular acceleration"))

(defrelation Physical-Feature-Describing-Predicate
             (Name-In-Cyc Physical-Feature-Describing-Predicate
              "#$PhysicalFeatureDescribingPredicate")
             (Relationship-Type Physical-Feature-Describing-Predicate)
             (Subclass-Of Physical-Feature-Describing-Predicate Predicate)
             (Set-Or-Collection Physical-Feature-Describing-Predicate)
             (Arity Physical-Feature-Describing-Predicate 1)
             (Documentation Physical-Feature-Describing-Predicate
              "A collection of predicates.  Each element of Physical-Feature-Describing-Predicate is a predicate used in assertions that describe spatiophysical aspects of individual objects.  Examples: Above-Directly, Physically-Contains, Touches-Directly, Color-Of-Object, Temperature-Of-Object, Spans-Bridgelike."))

(defrelation Relief-The-Emotion
             (Name-In-Cyc Relief-The-Emotion "#$Relief-TheEmotion")
             (Feeling-Attribute-Type Relief-The-Emotion)
             (Subclass-Of Relief-The-Emotion Feeling-Attribute)
             (Set-Or-Collection Relief-The-Emotion)
             (Arity Relief-The-Emotion 1)
             (Documentation Relief-The-Emotion
              "Emotion aroused by the removal or lightening of something oppressive, distressing, or painful.  This is a collection; for an explanation of a typical Feeling-Attribute-Type, see Happiness."))

(defrelation Edible-Stuff
             (Name-In-Cyc Edible-Stuff "#$EdibleStuff")
             (Existing-Stuff-Type Edible-Stuff)
             (Subclass-Of Edible-Stuff Tangible-Thing)
             (Subclass-Of Edible-Stuff Consumable-Product)
             (Set-Or-Collection Edible-Stuff)
             (Arity Edible-Stuff 1)
             (Documentation Edible-Stuff
              "A collection of tangible stuff.  Each instance of Edible-Stuff is, by default, an item that is ingestible and palatable by most macroscopic animals.  Edible-Stuff includes food and drink, but also other things, such as nutrients, drugs, etc.  Edible-Stuff presupposes digestion processes resembling those of most terrestrial macroscopic animals.  For inferencing about the diets of people (or koalas or oil-eating microbes), the collection Edible-Stuff may have additions and deletions.  See also Edible-Part-Fn, Food-And-Drink."))

(defrelation Device-Running
             (Name-In-Cyc Device-Running "#$DeviceRunning")
             (Temporal-Stuff-Type Device-Running)
             (Default-Disjoint-Script-Type Device-Running)
             (Subclass-Of Device-Running Physical-Event)
             (Set-Or-Collection Device-Running)
             (Arity Device-Running 1)
             (Documentation Device-Running
              "A collection of events.  An instance of Device-Running is an event in which some device is running.  This collection includes events which are complete cycles of a device's normal function (see Single-Complete-Run-Of-A-Device) as well as random time slices (Time-Slices) of them running.  Examples include instances of the collections Airplane-Take-Off, Skate-Boarding, Riding-A-Motorcycle, etc.  Some stranger examples --- which are not instances of Single-Complete-Run-Of-A-Device --- include: all the the ignition phases of the firing of my Honda's engine during November of 1996; my TV when it was on and showing a commercial this year; my TV when it was on and I was watching it this week."))

(defrelation Head-Of-State
             (Name-In-Cyc Head-Of-State "#$HeadOfState")
             (Occupation-Type Head-Of-State)
             (Subclass-Of Head-Of-State Politician)
             (Subclass-Of Head-Of-State Leader)
             (Set-Or-Collection Head-Of-State)
             (Arity Head-Of-State 1)
             (Documentation Head-Of-State
              "A collection of persons.  Each element of Head-Of-State is a person who holds a political position as the titular leader of some element of Country.  Titles that such a person might hold include President, Premier, Chairman, Sultan, King or Queen, Regent.  Examples of Head-Of-State: Bill-Clinton, Queen-Elizabeth-II, Yasser Arafat, Hirohito, Jiang Zemin.  See also Title-Of-Head-Of-State.  Cf. Head-Of-Government."))

(defrelation Teeth-Cleaning
             (Name-In-Cyc Teeth-Cleaning "#$TeethCleaning")
             (Temporal-Object-Type Teeth-Cleaning)
             (Default-Disjoint-Script-Type Teeth-Cleaning)
             (Subclass-Of Teeth-Cleaning Medical-Care-Event)
             (Subclass-Of Teeth-Cleaning Diagnosing-And-Repairing-Something)
             (Subclass-Of Teeth-Cleaning Cleaning)
             (Subclass-Of Teeth-Cleaning Single-Doer-Action)
             (Set-Or-Collection Teeth-Cleaning)
             (Arity Teeth-Cleaning 1)
             (Documentation Teeth-Cleaning
              "A collection of events.  In each Teeth-Cleaning event, an animal's teeth are cleaned.  In order to distinguish, e.g., professional teeth cleaning by a dental technician from daily personal care, different microtheories are used.  Consider just the frequencies of performing this action: in the Human-Activities-Mt, where a person brushes their own teeth as a subevent of Daily-Personal-Cleaning, this occurs once or twice per day.  In the Provider-Of-Service-Perspective-Mt, that is from the dental hygienist's point of view, it occurs about ten times per day.  In the Recipient-Of-Service-Perspective-Mt, that is from the point of view of someone going to get their teeth cleaned at a dentist's office, it happens a couple times per year."))

(defobject Set-The-Format
   (Format Set-The-Format)
   (Name-In-Cyc Set-The-Format "#$SetTheFormat")
   (Documentation Set-The-Format
    "Any argument place of a Cyc predicate may have a specified format that constrains its possible value(s).  If an argument position has Set-The-Format as its entry format, then --- given some fixed set of values for the other arguments to that predicate --- any number of assertions can still be true in the KB with different terms in that argument position.  E.g., the Arg1-Format for Mother is Set-The-Format, since a woman can have any number of children.  See also Format, and contrast with Single-Entry."))

(defrelation |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "NOTCONTAINED")|
             (Skolem-Object
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "NOTCONTAINED")|)
             (Slot
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "NOTCONTAINED")|)
             (Relation
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "NOTCONTAINED")|)
             (Arity
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "NOTCONTAINED")| 2)
             (Binary-Relation
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "NOTCONTAINED")|))

(defrelation Vector-Interval
             (Name-In-Cyc Vector-Interval "#$VectorInterval")
             (Object-Type Vector-Interval)
             (Subclass-Of Vector-Interval N-Tuple-Interval)
             (Subclass-Of Vector-Interval Attribute-Value)
             (Set-Or-Collection Vector-Interval)
             (Arity Vector-Interval 1)
             (Documentation Vector-Interval
              "The collection Vector-Interval is a subset of N-Tuple-Interval.  Each element of Vector-Interval is an n-tuple of intervals (where n > 1), one of which is a direction.  Like the elements of Scalar-Interval, the intervals in an element of Vector-Interval may be point-valued or cover a range of values.  The minimal interval (i.e., point-valued) type of vector interval is exemplified by a vector such as `10 meters due east'.   Vectors may also cover a range of values; e.g., `at least 10 feet away and in a horizontal direction'; `between ten to twelve miles NNW'."))

(defrelation Microtheory-Predicate
             (Name-In-Cyc Microtheory-Predicate "#$MicrotheoryPredicate")
             (Relationship-Type Microtheory-Predicate)
             (Subclass-Of Microtheory-Predicate Predicate)
             (Set-Or-Collection Microtheory-Predicate)
             (Arity Microtheory-Predicate 1)
             (Documentation Microtheory-Predicate
              "A collection of predicates.  Each element of Microtheory-Predicate is a predicate used to describe the properties and relationships of instances of Microtheory.  Examples: Domain-Assumptions, Mt-Time, Subcontext-Of, Adheres-To-Code-Of-Conduct, Ist-Agreement, Ist-Obligation."))

(defrelation Multiplication-Units
             (Nth-Domain Multiplication-Units 1 Unit-Of-Measure)
             (Nth-Domain Multiplication-Units 2 Unit-Of-Measure)
             (Nth-Domain Multiplication-Units 3 Unit-Of-Measure)
             (Name-In-Cyc Multiplication-Units "#$multiplicationUnits")
             (Ternary-Predicate Multiplication-Units)
             (Bookkeeping-Predicate Multiplication-Units)
             (Relation Multiplication-Units)
             (Arity Multiplication-Units 3)
             (Documentation Multiplication-Units
              "The Cyc predicate Multiplication-Units is used to state what measurement units should be used for the product of two physical quantities, given the units measuring each of the quantities multiplied.  (Multiplication-Units UM-1 UM-2 PROD-UM) means that the value of (Times-Fn (UM-1 x) (UM-2 y)) should be given in the units PROD-UM.  For example, (Multiplication-Units Mile Mile Square-Mile).  See also Unit-Of-Measure, Times-Fn."))

(defrelation From-Location
             (Synonymous-External-Concept From-Location Sensus-Information1997
              "SOURCE")
             (Subrelation-Of From-Location
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "SOURCE-DESTINATION")|)
             (Subrelation-Of From-Location Pre-Actors)
             (Domain From-Location Translocation)
             (Range From-Location Partially-Tangible)
             (Name-In-Cyc From-Location "#$fromLocation")
             (Actor-Slot From-Location)
             (Asymmetric-Binary-Predicate From-Location)
             (Irreflexive-Binary-Predicate From-Location)
             (Slot From-Location)
             (Relation From-Location)
             (Arity From-Location 2)
             (Binary-Relation From-Location)
             (Documentation From-Location
              "The predicate From-Location is used to indicate the starting point of a particular movement.  (From-Location MOVE LOC) means that LOC is where the Object-Moving in the Movement-Translation-Event MOVE is found at the beginning of MOVE and is where it begins this motion.  The Object-Moving may or may not be Stationary at LOC.  If MOVE is a single-pathway translation (see Translation-Single-Path), then every Object-Moving is found at LOC when MOVE starts.  If MOVE has multiple movers and multiple pathways (see Translation-Multi-Path), then at least some of the Object-Moving(s) can be found at LOC at the start of MOVE.  If MOVE is a flow (including rivers flowing, winds blowing, tornado, typhoon, clouds moving and even air filling your lungs when you take breath, see Translation-Flow), then at least some portion of the fluid Object-Moving can be found at LOC at the start of MOVE.  See also Pathway-Complete, Path-Connects."))

(defrelation Breathing
             (Name-In-Cyc Breathing "#$Breathing")
             (Temporal-Stuff-Type Breathing)
             (Default-Disjoint-Script-Type Breathing)
             (Subclass-Of Breathing Body-Movement-Event)
             (Subclass-Of Breathing Air-Respiration)
             (Set-Or-Collection Breathing)
             (Arity Breathing 1)
             (Documentation Breathing
              "A collection of activities constituting a natural Physiological-Function; Breathing is the collection of Air-Respiration events in which the respiring organism takes air into its internal Lungs, where the gas exchange occurs.  See also Respiration."))

(defrelation Organizational-Transfer
             (Name-In-Cyc Organizational-Transfer "#$OrganizationalTransfer")
             (Script-Type Organizational-Transfer)
             (Temporal-Object-Type Organizational-Transfer)
             (Subclass-Of Organizational-Transfer Purposeful-Action)
             (Subclass-Of Organizational-Transfer Social-Occurrence)
             (Subclass-Of Organizational-Transfer Generalized-Transfer)
             (Set-Or-Collection Organizational-Transfer)
             (Arity Organizational-Transfer 1)
             (Documentation Organizational-Transfer "A collection of events.  An
Organizational-Transfer occurs when some Intelligent-Agent changes
affiliation with some Organization.  This can involve becoming a
member of the organization, ceasing to be a member of it, or switching
from one organization to another.  An Organizational-Transfer may be
voluntarily undertaken by the transferee but may also be Performed-By
some other agent.  Examples include: joining a club, being transferred
from one division of a company to another, and being excommunicated.
Negative examples include: transfer of objects or information between
organizations (since these aren't Intelligent-Agents), and changes of
Nationality (since neither Nationality nor Country is currently
a kind of Organization)."))

(defrelation Existing-Stuff-Type
             (Name-In-Cyc Existing-Stuff-Type "#$ExistingStuffType")
             (Collection Existing-Stuff-Type)
             (Subclass-Of Existing-Stuff-Type Temporal-Stuff-Type)
             (Subclass-Of Existing-Stuff-Type Stuff-Type)
             (Set-Or-Collection Existing-Stuff-Type)
             (Arity Existing-Stuff-Type 1)
             (Documentation Existing-Stuff-Type
              "A collection of collections.  Each element of Existing-Stuff-Type is a collection of things (including portions of things) which are temporally and spatially stufflike; they may also be stufflike in other ways, e.g., in some physical property.  Division in time or space does not destroy the stufflike quality of the object.  For example, every piece of wood is temporally stufflike: if W-168 is a piece of wood during 1996, then it's also a piece of wood for the one-minute time-slice 9:05am 7/7/96.  It's also spatially stufflike: if we take that piece of wood W-168 and cut it in half, we have two things which are both pieces of wood.  The fact that every piece of wood is both temporally and spatially stufflike is represented in Cyc by the assertion (:Direct-Types Wood Existing-Stuff-Type).  Other examples of Existing-Stuff-Type: Apple-Juice, Ice-Cream, Diamond, Waxed-Paper, Striated-Muscle. See the comment for Stuff-Type to learn more about the distinctions between, and the need for, these four collections: Stuff-Type, Object-Type, Existing-Stuff-Type, and Existing-Object-Type."))

(defrelation Weather-Attribute
             (Name-In-Cyc Weather-Attribute "#$WeatherAttribute")
             (Unordered-Attribute-Type Weather-Attribute)
             (Subclass-Of Weather-Attribute Attribute-Value)
             (Set-Or-Collection Weather-Attribute)
             (Arity Weather-Attribute 1)
             (Documentation Weather-Attribute
              "A collection of attributes.  Each element of Weather-Attribute is an attribute that can be used to describe the weather occurring in a geographic region.  Examples: Snowy, Foggy.  See also Weather-Attributes."))

(defrelation Occurrences-Per-Period
             (Nth-Domain Occurrences-Per-Period 1 Temporal-Object-Type)
             (Nth-Domain Occurrences-Per-Period 2 Temporal-Object-Type)
             (Nth-Domain Occurrences-Per-Period 3 Integer)
             (Name-In-Cyc Occurrences-Per-Period "#$occurrencesPerPeriod")
             (Ternary-Predicate Occurrences-Per-Period)
             (Relation Occurrences-Per-Period)
             (Arity Occurrences-Per-Period 3)
             (Documentation Occurrences-Per-Period
              "(Occurrences-Per-Period ?X ?Y ?N) indicates that ?N instances of ?X occur during each instance of ?Y.  For example, to indicate that there are seven calendar days in each calendar week, we would write the axiom (Occurrences-Per-Period Calendar-Day Calendar-Week 7)."))

(defrelation Train-Engine
             (Name-In-Cyc Train-Engine "#$TrainEngine")
             (Existing-Object-Type Train-Engine)
             (Product-Type Train-Engine)
             (Subclass-Of Train-Engine Powered-Device)
             (Subclass-Of Train-Engine Mechanical-Device)
             (Subclass-Of Train-Engine Land-Transportation-Device)
             (Set-Or-Collection Train-Engine)
             (Arity Train-Engine 1)
             (Documentation Train-Engine
              "The collection of all train engines, each being a fuel-powered, non-steerable, wheeled vehicle that runs on Railway tracks, and has enough power to pull or push a group of Train-Cars with it."))

(defrelation Window-The-Portal-Covering
             (Name-In-Cyc Window-The-Portal-Covering
              "#$WindowThePortalCovering")
             (Existing-Object-Type Window-The-Portal-Covering)
             (Subclass-Of Window-The-Portal-Covering Portal-Covering)
             (Subclass-Of Window-The-Portal-Covering Part-Of-Building)
             (Set-Or-Collection Window-The-Portal-Covering)
             (Arity Window-The-Portal-Covering 1)
             (Documentation Window-The-Portal-Covering
              "The physical object which 'covers' or fills in the Window-Portal. It is a physical barrier, but because it is made primarily of glass, it allows light to enter."))

(defrelation |(TRANSPORT-VIA-FN TRANSPORTATION-DEVICE-VEHICLE)|
             (Skolem-Object |(TRANSPORT-VIA-FN TRANSPORTATION-DEVICE-VEHICLE)|)
             (Temporal-Stuff-Type
              |(TRANSPORT-VIA-FN TRANSPORTATION-DEVICE-VEHICLE)|)
             (Script-Type |(TRANSPORT-VIA-FN TRANSPORTATION-DEVICE-VEHICLE)|)
             (Subclass-Of |(TRANSPORT-VIA-FN TRANSPORTATION-DEVICE-VEHICLE)|
              Transportation-Event)
             (Subclass-Of |(TRANSPORT-VIA-FN TRANSPORTATION-DEVICE-VEHICLE)|
              |(TRANSPORT-VIA-FN TRANSPORTATION-DEVICE)|)
             (Subclass-Of |(TRANSPORT-VIA-FN TRANSPORTATION-DEVICE-VEHICLE)|
              |(TRANSPORT-VIA-FN TRANSPORTATION-DEVICE-VEHICLE)|)
             (Set-Or-Collection
              |(TRANSPORT-VIA-FN TRANSPORTATION-DEVICE-VEHICLE)|)
             (Arity |(TRANSPORT-VIA-FN TRANSPORTATION-DEVICE-VEHICLE)| 1))

(defrelation Possesses
             (Domain Possesses Agent)
             (Range Possesses Something-Existing)
             (Name-In-Cyc Possesses "#$possesses")
             (Predicate Possesses)
             (Slot Possesses)
             (Relation Possesses)
             (Arity Possesses 2)
             (Binary-Relation Possesses)
             (Documentation Possesses
              "(Possesses AGENT OBJECT) means that OBJECT is in the physical possession of AGENT.  Compare with Owns."))

(defobject A-Few-Hours-Duration
   (Time-Quantity A-Few-Hours-Duration)
   (Order-Of-Magnitude-Interval A-Few-Hours-Duration)
   (Name-In-Cyc A-Few-Hours-Duration "#$AFewHoursDuration")
   (Documentation A-Few-Hours-Duration "Duration of 2 to 10 hours"))

(defrelation Point-Of-Contact
             (Nth-Domain Point-Of-Contact 1 Agent)
             (Nth-Domain Point-Of-Contact 2 Contact-Location-Type)
             (Nth-Domain Point-Of-Contact 3 Contact-Location)
             (Nth-Domain-Subclass-Of Point-Of-Contact 2 Contact-Location)
             (Name-In-Cyc Point-Of-Contact "#$pointOfContact")
             (Ternary-Predicate Point-Of-Contact)
             (Relation Point-Of-Contact)
             (Arity Point-Of-Contact 3)
             (Documentation Point-Of-Contact
              "The predicate Point-Of-Contact (Point-Of-Contact AGENT LOCTYPE LOC) means the Agent AGENT has as its LOCTYPE (a Contact-Location-Type such as Workplace, Human-Residence, Billing-Location, etc.) a particular Contact-Location LOC, where that agent can be contacted.  Typically, LOC is a complete address, i.e., it is not a generic location such as Austin, TX."))

(defrelation Cyc-Formula
             (Name-In-Cyc Cyc-Formula "#$CycFormula")
             (Linguistic-Object-Type Cyc-Formula)
             (Collection Cyc-Formula)
             (Subclass-Of Cyc-Formula Proposition)
             (Subclass-Of Cyc-Formula Linguistic-Object)
             (Subclass-Of Cyc-Formula Cyc-Expression)
             (Set-Or-Collection Cyc-Formula)
             (Arity Cyc-Formula 1)
             (Documentation Cyc-Formula
              "The collection of all well-formed CycL formulas.  Every Cyc formula is a Cyc expression and a proposition; Cyc-Formula is a subset of both Cyc-Expression and Proposition.  Example: (:and (:Direct-Types Pittman Human-Cyclist) (Resides-In-Region Pittman City-Of-Austin-TX)).   For a thorough discussion of what constitutes a well-formed CycL formula, see the Cyc documentation."))

(deffunction Axis-Fn
   (Nth-Domain Axis-Fn 1 Partially-Tangible)
   (Nth-Domain Axis-Fn 2 Region-Type)
   (Nth-Domain Axis-Fn 3 Region-Type)
   (Nth-Domain-Subclass-Of Axis-Fn 2 Side)
   (Nth-Domain-Subclass-Of Axis-Fn 3 Side)
   (Result-Instance-Of Axis-Fn Intrinsic-Axis-Of-Object)
   (Name-In-Cyc Axis-Fn "#$AxisFn")
   (Reifiable-Function Axis-Fn)
   (Individual-Denoting-Function Axis-Fn)
   (Function Axis-Fn)
   (Arity Axis-Fn 3)
   (Function-Arity Axis-Fn 2)
   (Documentation Axis-Fn
    "(Axis-Fn OBJ REGIONTYP REGIONTYP) is a function that, applied to an individual object OBJ and two types of region of such an object, returns the axis through the object, determined by running the axis through the individual regions (of those types) of the object.  Thus Axis-Fn is an  Individual-Denoting-Function that returns a particular axis of an individual object. (Axis-Fn OBJ FROM-SIDE TO-SIDE) denotes a directional axis, pointing from FROM-SIDE to TO-SIDE of OBJ and extending through it. For example, (Axis-Fn `Chair37' Back-Side Front-Side) would denote the back-to-front axis of Chair37. See also Intrinsic-Axis-Of-Object."))

(defrelation Abstract-Programming-Language
             (Name-In-Cyc Abstract-Programming-Language
              "#$AbstractProgrammingLanguage")
             (Object-Type Abstract-Programming-Language)
             (Subclass-Of Abstract-Programming-Language Language)
             (Subclass-Of Abstract-Programming-Language
              Mathematical-Or-Computational-Thing)
             (Set-Or-Collection Abstract-Programming-Language)
             (Arity Abstract-Programming-Language 1)
             (Documentation Abstract-Programming-Language
              "The collection of languages invented for use by computers. This includes both command languages and others which one doesn't really `program' in."))

(defrelation Ibt-Recoding
             (Name-In-Cyc Ibt-Recoding "#$IBTRecoding")
             (Script-Type Ibt-Recoding)
             (Temporal-Object-Type Ibt-Recoding)
             (Subclass-Of Ibt-Recoding Ibt-Generation-Replication)
             (Set-Or-Collection Ibt-Recoding)
             (Arity Ibt-Recoding 1)
             (Documentation Ibt-Recoding
              "A collection of events; a subset of IBT-Generation-Replication.  Each element of IBT-Recoding is an event which generates a new IBT (i.e., an element of Information-Bearing-Thing), by taking information from a source IBT (see Information-Origin), encoding it a new way, and incorporating it into a new information-bearing thing (see Ibt-Generated).  Elements of IBT-Recoding may be done either by agents (e.g., people) or by non-agents (e.g., record players, or computers running translation software).  Recoding the content of a pre-existing IBT presupposes some instance of accessing it (i.e., of Accessing-An-IBT)."))

(defrelation To-Location
             (Synonymous-External-Concept To-Location Sensus-Information1997
              "DESTINATION")
             (Subrelation-Of To-Location
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "SOURCE-DESTINATION")|)
             (Subrelation-Of To-Location Post-Actors)
             (Domain To-Location Translocation)
             (Range To-Location Partially-Tangible)
             (Name-In-Cyc To-Location "#$toLocation")
             (Actor-Slot To-Location)
             (Slot To-Location)
             (Relation To-Location)
             (Arity To-Location 2)
             (Binary-Relation To-Location)
             (Documentation To-Location
              "The predicate To-Location is used to indicate the ending point of a particular movement.  (To-Location MOVE LOC) means that LOC is where the Object-Moving in MOVE (a Movement-Translation-Event) is found when the event MOVE ends; the final location of the Object-Moving in that event is LOC.  The Object-Moving may or may not be Stationary at LOC.  If MOVE is a single-pathway translation (see Translation-Single-Path), then every Object-Moving in it is found at LOC when MOVE ends.  If MOVE has multiple movers and multiple pathways (see Translation-Multi-Path), then at least some of the Object-Moving(s) can be found at LOC at the end of MOVE.  If MOVE is a fluid flow (see Translation-Flow), then at least some portion of the fluid Object-Moving can be found at location LOC at the end of MOVE.  See also Pathway-Complete, Path-Connects."))

(defrelation Nonintrusive-Junction
             (Name-In-Cyc Nonintrusive-Junction "#$NonintrusiveJunction")
             (Region-Type Nonintrusive-Junction)
             (Subclass-Of Nonintrusive-Junction Junction-Of-Paths)
             (Set-Or-Collection Nonintrusive-Junction)
             (Arity Nonintrusive-Junction 1)
             (Documentation Nonintrusive-Junction
              "The collection of junctions or crossings of Path-Generics in each of which: one path crosses, or its end joins the side of, another path of the same, or possibly a completely different, type, without so intruding upon or affecting the path as to cause it to be different in nature or name on either side of that junction. (Examples: A small side street joins a major boulevard and the boulevard does not change name or size at the junction.  A hallway ends at another hall, but only allows looking through a window into it.  A railroad crossing.  A small vein is one of the Side-Branches of a large vein and the name of the large vein doesn't change at that point.)"))

(defrelation Urge-To-Scratch
             (Name-In-Cyc Urge-To-Scratch "#$UrgeToScratch")
             (Physical-Urge-Type Urge-To-Scratch)
             (Subclass-Of Urge-To-Scratch Internal-Sensory-Attribute)
             (Subclass-Of Urge-To-Scratch Animal-Physiological-Attribute)
             (Set-Or-Collection Urge-To-Scratch)
             (Arity Urge-To-Scratch 1)
             (Documentation Urge-To-Scratch
              "This is a Collection of physical urges of a certain type, namely the urges that animals have to scratch an itch (and their accompanying internal sensations.)"))

(defrelation Generalized-Transfer
             (Name-In-Cyc Generalized-Transfer "#$GeneralizedTransfer")
             (Temporal-Object-Type Generalized-Transfer)
             (Default-Disjoint-Script-Type Generalized-Transfer)
             (Subclass-Of Generalized-Transfer Event)
             (Set-Or-Collection Generalized-Transfer)
             (Arity Generalized-Transfer 1)
             (Documentation Generalized-Transfer
              "This collection is a subset of Event.  Each element of Generalized-Transfer is a general kind of transfer event, in which something (tangible or intangible) is transferred from one `place' to another.  Generalized-Transfer includes changes in physical location, in ownership or possession, transfer of information, and propagation of wave phenomena through space.  See also the related predicate Transferred-Thing, and the specialized subsets of this collection."))

(defrelation Muscle-Powered-Device
             (Name-In-Cyc Muscle-Powered-Device "#$MusclePoweredDevice")
             (Existing-Object-Type Muscle-Powered-Device)
             (Subclass-Of Muscle-Powered-Device Kinetic-Energy-Powered-Device)
             (Set-Or-Collection Muscle-Powered-Device)
             (Arity Muscle-Powered-Device 1)
             (Documentation Muscle-Powered-Device
              "A collection of physical devices.  An instance of Muscle-Powered-Device is a device which is powered by animal muscle power (including human labor); e.g., hammers, horse-drawn carriages, etc."))

(defrelation Calendar-Week
             (Name-In-Cyc Calendar-Week "#$CalendarWeek")
             (Calendar-Covering-Type Calendar-Week)
             (Subclass-Of Calendar-Week Date)
             (Set-Or-Collection Calendar-Week)
             (Arity Calendar-Week 1)
             (Documentation Calendar-Week
              "The collection of weeks that make up the calendar.  This is a collection of disjoint but contiguous time intervals.  One of its elements is WeekOf2-14-1994."))

(defrelation Mental-Information
             (Name-In-Cyc Mental-Information "#$MentalInformation")
             (Stuff-Type Mental-Information)
             (Subclass-Of Mental-Information Abstract-Information)
             (Subclass-Of Mental-Information Mental-Object)
             (Subclass-Of Mental-Information Propositional-Information-Thing)
             (Set-Or-Collection Mental-Information)
             (Arity Mental-Information 1)
             (Documentation Mental-Information
              "A collection of information.  Each element of Mental-Information is the propositional content of a specific mental state of an individual person. Thus, this is information which is embodied in a person having a memory or sensory perception or other type of thought.  Note that elements of Mental-Information are the propositional content of memories, perceptions, judgments, etc.  For example, when I remember that my grandmother's eyes are blue, the mental information contained therein is `my [the rememberer's] grandmother's eyes are blue'; it is NOT `I remember that my grandmother's eyes are blue'.  As a consequence, mental information (as defined in Cyc) is not incorrigible."))

(defrelation Juvenile-Animal
             (Name-In-Cyc Juvenile-Animal "#$JuvenileAnimal")
             (Existing-Object-Type Juvenile-Animal)
             (Subclass-Of Juvenile-Animal Biological-Stage-Of-Development)
             (Subclass-Of Juvenile-Animal Portable-Object)
             (Subclass-Of Juvenile-Animal Animal)
             (Set-Or-Collection Juvenile-Animal)
             (Arity Juvenile-Animal 1)
             (Documentation Juvenile-Animal
              "An element of Life-Stage-Type.  Juvenile-Animal is the collection of all animals that are not fully grown nor fully mature."))

(defrelation Shape-Type
             (Name-In-Cyc Shape-Type "#$ShapeType")
             (Collection Shape-Type)
             (Subclass-Of Shape-Type Attribute-Type)
             (Subclass-Of Shape-Type Situation-Type)
             (Set-Or-Collection Shape-Type)
             (Arity Shape-Type 1)
             (Documentation Shape-Type
              "A collection of collections.  Each element of Shape-Type is a collection of abstract physical shapes.  These are shapes which, for example, a physical object can have when considered `in outline', as occupying a region of space which has certain dimensions and geometrical characteristics.  Elements of Shape-Type include Three-Dimensional-Shape, Two-Dimensional-Shape, Polygon, Square, Circle, Sphere-Shape, Cylinder-Shape, Pyramid-Shape, etc."))

(defrelation Leader
             (Name-In-Cyc Leader "#$Leader")
             (Position-Type Leader)
             (Subclass-Of Leader Person)
             (Subclass-Of Leader Intelligent-Agent)
             (Set-Or-Collection Leader)
             (Arity Leader 1)
             (Documentation Leader
              "A collection of persons.  Each element of Leader is a person who heads an instance of Organization.  Typically, a leader of an organization makes major decisions on behalf of the whole organization, has the authority to direct the organization's personnel to carry out those decisions, and is empowered to engage or negotiate with external agents to achieve the organization's goals.  This collection includes leaders of Sub-Organizations, such as department heads within larger organizations.  Also, a single person may be a leader in more than one organization.  In addition, see Has-Leaders, Manager, and Senior-Executives."))

(defrelation February
             (Name-In-Cyc February "#$February")
             (Month-Of-Year-Type February)
             (Subclass-Of February Calendar-Month)
             (Set-Or-Collection February)
             (Arity February 1))

(defrelation Character-String
             (Name-In-Cyc Character-String "#$CharacterString")
             (Stuff-Type Character-String)
             (Subclass-Of Character-String Abstract-Information)
             (Subclass-Of Character-String Intangible-Individual)
             (Subclass-Of Character-String List-Sequence)
             (Set-Or-Collection Character-String)
             (Arity Character-String 1)
             (Documentation Character-String
              "A collection of stuff.  Each element of the collection Character-String is a string of characters or an abstract sequence of symbols.  Note: it is NOT any particular physical, tangible representation; different encodings may represent the characters.  An element of Character-String has characters from some fixed character set.  The characters are instances of Character-Abstract. An element of Character-String may be any length, including zero (i.e., empty strings, which have no characters).  If elements of Character-String are concatenated, the result is also an element of Character-String.  The length of the resulting string is equal to the sum of the lengths of the concatenated strings.   Some types (subsets) of Character-String include E-Mail-Address, Area-Code, Phone-Number, Phone-Country-Code, etc."))

(defrelation Junction-In-System
             (Subrelation-Of Junction-In-System Point-In-System)
             (Domain Junction-In-System Thing)
             (Range Junction-In-System Thing)
             (Name-In-Cyc Junction-In-System "#$junctionInSystem")
             (Asymmetric-Binary-Predicate Junction-In-System)
             (Slot Junction-In-System)
             (Relation Junction-In-System)
             (Arity Junction-In-System 2)
             (Binary-Relation Junction-In-System)
             (Documentation Junction-In-System
              "(Junction-In-System JUNCTION SYS) means that JUNCTION is a junction in the Path-System SYS, i.e., a node in SYS that is an 'intersection' or 'branching point' of links or loops in SYS.  (For the case when no SYS is specified, see Junction-Of-Paths.)  Formally, a node X in SYS is a junction in SYS iff either there are three (different) links in SYS such that X is on all of them, or there are two (different) loops in SYS such that X is on both of them, or there is a link in SYS and there is a loop in SYS such that X is on both of them.  For different kinds of junctions in a path system, see Three-Way-Junction-In-System, Four-Way-Junction-In-System."))

(defrelation Part-Of-Building
             (Name-In-Cyc Part-Of-Building "#$PartOfBuilding")
             (Existing-Object-Type Part-Of-Building)
             (Subclass-Of Part-Of-Building Construction-Artifact)
             (Set-Or-Collection Part-Of-Building)
             (Arity Part-Of-Building 1)
             (Documentation Part-Of-Building
              "A collection of parts of a building that are 'built-in', that is, built with the intention of remaining as part of the building."))

(defrelation Rotation-Periodic
             (Name-In-Cyc Rotation-Periodic "#$Rotation-Periodic")
             (Temporal-Object-Type Rotation-Periodic)
             (Subclass-Of Rotation-Periodic Movement-Periodic)
             (Subclass-Of Rotation-Periodic Movement-Rotation)
             (Set-Or-Collection Rotation-Periodic)
             (Arity Rotation-Periodic 1)
             (Documentation Rotation-Periodic
              "A collection of rotational movements; a subset of Movement-Rotation.  In any instance of Rotation-Periodic, either partial rotation (e.g., rocking) or full rotation (e.g., spinning) occurs periodically.  Examples include the swinging of a clock pendulum and the rotation of the Earth on its axis.  Note that the accuracy and duration of the periodic rotation is context-dependent.  E.g., in a context spanning a long enough period of time, and/or if measured sufficiently accurately, the Earth's rotation does not have a fixed period.  In a context short enough, and `approximate' enough, a spinning Olympic ice skater is performing a Rotation-Periodic event, even though a few seconds later they slow down and stop rotating."))

(defrelation Commutative-Relation
             (Name-In-Cyc Commutative-Relation "#$CommutativeRelation")
             (Relationship-Type Commutative-Relation)
             (Collection Commutative-Relation)
             (Subclass-Of Commutative-Relation Relationship)
             (Set-Or-Collection Commutative-Relation)
             (Arity Commutative-Relation 1)
             (Documentation Commutative-Relation
              "An important subset of Relationship.  Each element of Commutative-Relation is a relationship whose argument order can be changed without changing the value or meaning of the expression; e.g., Plus-Fn, Times-Fn, :or, Borders-On, Temporally-Intersects, Teammates.  Most Relationships are NOT commutative: if (:Direct-Types EL COL) is true, it is rare that (:Direct-Types COL EL) is also true."))

(defrelation Angular-Acceleration-Rate
             (Name-In-Cyc Angular-Acceleration-Rate
              "#$AngularAccelerationRate")
             (Measurable-Attribute-Type Angular-Acceleration-Rate)
             (Subclass-Of Angular-Acceleration-Rate Scalar-Interval)
             (Subclass-Of Angular-Acceleration-Rate Physical-Attribute)
             (Set-Or-Collection Angular-Acceleration-Rate)
             (Arity Angular-Acceleration-Rate 1)
             (Documentation Angular-Acceleration-Rate
              "Angular-Acceleration-Rate is the rate at which the Rate-Of-Rotation of an object changes.It is a measurable physical quantity, measured in units such as radians per second per second."))

(defrelation Malleability
             (High-Amount-Fn Malleability |(HIGH-AMOUNT-FN MALLEABILITY)|)
             (Low-Amount-Fn Malleability |(LOW-AMOUNT-FN MALLEABILITY)|)
             (Very-Low-Amount-Fn Malleability
              |(VERY-LOW-AMOUNT-FN MALLEABILITY)|)
             (No-Amount-Fn Malleability |(NO-AMOUNT-FN MALLEABILITY)|)
             (Name-In-Cyc Malleability "#$Malleability")
             (Material-Strength-Type Malleability)
             (Subclass-Of Malleability Physical-Attribute)
             (Subclass-Of Malleability Scalar-Interval)
             (Set-Or-Collection Malleability)
             (Arity Malleability 1)
             (Documentation Malleability
              "A collection of attributes; a subset of Physical-Attribute.  Each element of Malleability represents a specific capacity of a physical material to be shaped or formed.  Different degrees of malleability may be designated using a Generic-Value-Function.  Malleability of objects is indicated with the predicate Malleability-Of-Object."))

(defrelation Fusion-Event
             (Name-In-Cyc Fusion-Event "#$FusionEvent")
             (Temporal-Object-Type Fusion-Event)
             (Default-Disjoint-Script-Type Fusion-Event)
             (Subclass-Of Fusion-Event Creation-Event)
             (Set-Or-Collection Fusion-Event)
             (Arity Fusion-Event 1)
             (Documentation Fusion-Event
              "A collection of events.  In each Fusion-Event, two or more objects fuse together, yielding a product."))

(defrelation United-States-President
             (Name-In-Cyc United-States-President "#$UnitedStatesPresident")
             (Occupation-Type United-States-President)
             (Subclass-Of United-States-President Politician)
             (Subclass-Of United-States-President Public-Official)
             (Subclass-Of United-States-President
              President-Head-Of-Government-Or-Head-Of-State)
             (Subclass-Of United-States-President United-States-Person)
             (Set-Or-Collection United-States-President)
             (Arity United-States-President 1)
             (Documentation United-States-President
              "A collection of persons.  Each element of United-States-President is a person who holds the office of United-States-President.  Examples: Bill-Clinton from January 1993 till the present (November 1996); Richard-Nixon from January 1969 till his resignation in 1974; Lyndon-Johnson from Novemeber 1963 till January 1969.  Note that ex-U.S. Presidents have, in recent journalistic practice, tended to retain the title `President', although those individuals are no longer members of the collection United-States-President after they leave office."))

(deffunction Times-Per-Day
   (Args-Isa Times-Per-Day Real-Number)
   (Result-Instance-Of Times-Per-Day Frequency)
   (Result-Instance-Of Times-Per-Day Rate)
   (Result-Instance-Of Times-Per-Day Scalar-Interval)
   (Name-In-Cyc Times-Per-Day "#$TimesPerDay")
   (Unit-Of-Measure-No-Prefix Times-Per-Day)
   (Unit-Of-Frequency Times-Per-Day)
   (Function Times-Per-Day)
   (Documentation Times-Per-Day "Times per day -- unit of frequency"))

(defobject |(LOW-AMOUNT-FN RAININESS)|
   (Scalar-Interval |(LOW-AMOUNT-FN RAININESS)|)
   (Raininess |(LOW-AMOUNT-FN RAININESS)|)
   (Skolem-Object |(LOW-AMOUNT-FN RAININESS)|)
   (Subattribute-Of |(LOW-AMOUNT-FN RAININESS)| Rainy))

(defrelation Junction-Of-Pipes
             (Name-In-Cyc Junction-Of-Pipes "#$JunctionOfPipes")
             (Region-Type Junction-Of-Pipes)
             (Subclass-Of Junction-Of-Pipes Junction-Of-Paths)
             (Set-Or-Collection Junction-Of-Pipes)
             (Arity Junction-Of-Pipes 1)
             (Documentation Junction-Of-Pipes
              "The collection of all junctions of pipes or tubes.  Each junction permits flow between any two Pipe-Generic-Conduits joined at that junction.  At any Junction-Of-Pipes, three or more Pipe-Generic-Conduit segments must be joined, although some joined pipes may loop back to the same junction."))

(defrelation Balcony-Level-In-A-Construction
             (Name-In-Cyc Balcony-Level-In-A-Construction
              "#$BalconyLevelInAConstruction")
             (Existing-Object-Type Balcony-Level-In-A-Construction)
             (Subclass-Of Balcony-Level-In-A-Construction Container-Product)
             (Subclass-Of Balcony-Level-In-A-Construction
              Level-Of-A-Construction)
             (Set-Or-Collection Balcony-Level-In-A-Construction)
             (Arity Balcony-Level-In-A-Construction 1)
             (Documentation Balcony-Level-In-A-Construction
              "This refers to those overhanging levels or balconies found in some churches, theatres, etc.  They ARE NOT the kind of balcony that protrude from a window or from an already existing level.  These levels are often a third the size of the floor or level below them, and therefore can be called legitimate levels themselves.  They usually contain a mob of seats."))

(defrelation Portable-Object
             (Name-In-Cyc Portable-Object "#$PortableObject")
             (Existing-Object-Type Portable-Object)
             (Subclass-Of Portable-Object Partially-Tangible)
             (Set-Or-Collection Portable-Object)
             (Arity Portable-Object 1)
             (Documentation Portable-Object "A collection of objects.  An 
instance of Portable-Object is something that is not 
`fastened down' and which is light enough for an average human 
(or more to the point: for its average intended user) to move 
it easily.  For many Portable-Objects, portability is 
important for them to fulfill their primary functions; 
for example, an article of clothing (a Something-To-Wear), 
a hand-guided tool (a #HandTool), a coin or dollar bill (an instance of Currency), a flashlight (a Flashlight), etc. would be pretty useless if they weren't portable.  In other cases, making a device portable, or making a portable version of a device, simply provides a convenience, as with the subsets Portable-Television and Portable-Stereo-System.  Note that Tool is not a subset of Portable-Object, since many tools are heavy and/or stationary.  A borderline example would be a heart/lung machine; although the beneficiary of its primary function is in no position to move it around, the physicians and nurses who also are `using' it can and do exactly that.  The same goes for a playpen; the kids in it had better NOT be able to move it around, but the adults who set it up and put them there can and do move it.   A borderline non-example would be a car; even though its user can make it move around, that is more a controlling action than a transporting action --- i.e., the car is doing the transporting in that case, not the driver.  A borderline example is a cat; even though it moves under its own power, it is light enough for its owner to pick it up and move around.  A borderline example is a bed or a dresser; though too heavy to lift, its owners can generally move it around (by sliding, disassembling and reassembling, etc.)"))

(defrelation Primitive-Attribute-Type
             (Overlapping-External-Concept Primitive-Attribute-Type
              Sensus-Information1997 "SCALABLE-QUALITY")
             (Name-In-Cyc Primitive-Attribute-Type "#$PrimitiveAttributeType")
             (Collection Primitive-Attribute-Type)
             (Subclass-Of Primitive-Attribute-Type Attribute-Type)
             (Set-Or-Collection Primitive-Attribute-Type)
             (Arity Primitive-Attribute-Type 1)
             (Documentation Primitive-Attribute-Type
              "A collection of collections.  Each element of Primitive-Attribute-Type is a collection of `primitive' attributes such as mass, distance, charge, and others which have a single (total) ordering on (usually) a real line.  Note: Primitive-Attribute-Type excludes the elements of Unordered-Attribute-Type (e.g., gender).  Cf. Composite-Attribute-Type."))

(defrelation Social-Occurrence
             (Name-In-Cyc Social-Occurrence "#$SocialOccurrence")
             (Script-Type Social-Occurrence)
             (Temporal-Object-Type Social-Occurrence)
             (Subclass-Of Social-Occurrence
              Composite-Physical-And-Mental-Event)
             (Subclass-Of Social-Occurrence Human-Activity)
             (Set-Or-Collection Social-Occurrence)
             (Arity Social-Occurrence 1)
             (Documentation Social-Occurrence
              "A collection of events; a subset of Composite-Physical-And-Mental-Event.  Each element of Social-Occurrence is an event in which two or more agents (and often many more than two) take part.  Often, elements of Social-Occurrence involve communication among the participating agents.   Usually there are some social occurrences in every culture that have very elaborate role structures (e.g., a lawsuit or a wedding), and some that are fairly simple (e.g., belching at the dinner table).  See also: Social-Participants."))

(defrelation Human-Residence
             (Name-In-Cyc Human-Residence "#$HumanResidence")
             (Product-Type Human-Residence)
             (Contact-Location-Type Human-Residence)
             (Subclass-Of Human-Residence Physical-Contact-Location)
             (Subclass-Of Human-Residence Human-Shelter-Construction)
             (Set-Or-Collection Human-Residence)
             (Arity Human-Residence 1)
             (Documentation Human-Residence
              "A collection of construction artifacts.  Each element of Human-Residence is a humanly constructed shelter (or a part of one) in which humans reside--as opposed to, say, their places of employment (though the two might be the same).  Human-Residence includes residential huts, igloos, longhouses, hotels, barracks, palaces, houseboats, mobile homes, as well as apartments, duplexes, and detached houses.  A person's residence is typically the place where she/he usually sleeps and keeps most personal effects."))

(defrelation Path-Artifact
             (Name-In-Cyc Path-Artifact "#$PathArtifact")
             (Existing-Object-Type Path-Artifact)
             (Subclass-Of Path-Artifact Path-Customary)
             (Subclass-Of Path-Artifact Construction-Artifact)
             (Set-Or-Collection Path-Artifact)
             (Arity Path-Artifact 1)
             (Documentation Path-Artifact
              "A collection of artifacts.  Each element of Path-Artifact is a path made by agents, whether animal or human.  Elements of Path-Artifact range from deer trails to superhighways.  Such paths connect places that animals or people are found in and/or between which they want to travel.  Examples: Erie-Canal, Welland-Ship-Canal, Champs-Elysee, Wall-Street, US-Highway80, Highway101CA."))

(defrelation Temporally-Cooriginating
             (Subrelation-Of Temporally-Cooriginating Temporally-Intersects)
             (Slot-Inverse Temporally-Cooriginating Temporally-Cooriginating)
             (Domain Temporally-Cooriginating Temporal-Thing)
             (Range Temporally-Cooriginating Temporal-Thing)
             (Name-In-Cyc Temporally-Cooriginating "#$temporallyCooriginating")
             (Complex-Temporal-Relation Temporally-Cooriginating)
             (Symmetric-Binary-Predicate Temporally-Cooriginating)
             (Reflexive-Binary-Predicate Temporally-Cooriginating)
             (Transitive-Binary-Predicate Temporally-Cooriginating)
             (Slot Temporally-Cooriginating)
             (Relation Temporally-Cooriginating)
             (Arity Temporally-Cooriginating 2)
             (Binary-Relation Temporally-Cooriginating)
             (Documentation Temporally-Cooriginating
              "(Temporally-Cooriginating ?X ?Y) means (Simultaneous-With (Start-Fn ?X) (Start-Fn ?Y)).  That is, the Starting-Point of ?X is the same as the Starting-Point of ?Y.  This implies that ?X and ?Y overlap, in at least one point (namely, their Starting-Points are the same.)"))

(defrelation Sales-Person
             (Name-In-Cyc Sales-Person "#$SalesPerson")
             (Occupation-Type Sales-Person)
             (Subclass-Of Sales-Person Business-Person)
             (Subclass-Of Sales-Person Professional)
             (Set-Or-Collection Sales-Person)
             (Arity Sales-Person 1)
             (Documentation Sales-Person
              "A collection of persons; a subset of Professional.  Each element of Sales-Person is someone whose principal job activity is negotiating with potential buyers, finding out what they want, describing what is available, taking orders, etc.  This collection includes door-to-door salespeople, Avon reprentatives, new and used car salespeople, sales representatives for the product lines of large industrial companies, and store clerks working on a sales commission."))

(defrelation |(GROUP-FN CURRENCY)|
             (Skolem-Object |(GROUP-FN CURRENCY)|)
             (Object-Type |(GROUP-FN CURRENCY)|)
             (Subclass-Of |(GROUP-FN CURRENCY)| Spatial-Thing)
             (Subclass-Of |(GROUP-FN CURRENCY)| Group)
             (Set-Or-Collection |(GROUP-FN CURRENCY)|)
             (Arity |(GROUP-FN CURRENCY)| 1))

(defrelation Narrative
             (Name-In-Cyc Narrative "#$Narrative")
             (Object-Type Narrative)
             (Subclass-Of Narrative Propositional-Information-Thing)
             (Set-Or-Collection Narrative)
             (Arity Narrative 1)
             (Documentation Narrative
              "A collection of pieces of information; a subset of Propositional-Information-Thing.  Each element of Narrative is a recounting of events, told in sequence (or so that their temporal order is decipherable) and involving some agent or members of a set of agents.  Narratives may be factual or fictional; thus, the agents involved may be real people or fictional characters.  Examples: the Peloponnesian-War-History-By-Thucydides, the Frankenstein-Novel of Mary Shelley, Mark Twain's Adventures-Of-Huckleberry-Finn."))

(defrelation Gratitude
             (Name-In-Cyc Gratitude "#$Gratitude")
             (Feeling-Attribute-Type Gratitude)
             (Subclass-Of Gratitude Feeling-Attribute)
             (Set-Or-Collection Gratitude)
             (Arity Gratitude 1)
             (Documentation Gratitude
              "A feeling of appreciation towards another agent for a benefit or favor received from him/her.  This is a Collection --- for an explanation of that, see Happiness."))

(defrelation Mens-Clothing
             (Name-In-Cyc Mens-Clothing "#$MensClothing")
             (Product-Type Mens-Clothing)
             (Existing-Object-Type Mens-Clothing)
             (Subclass-Of Mens-Clothing Sheet-Of-Some-Stuff)
             (Subclass-Of Mens-Clothing Something-To-Wear)
             (Set-Or-Collection Mens-Clothing)
             (Arity Mens-Clothing 1)
             (Documentation Mens-Clothing
              "A collection of objects.  Each element of Mens-Clothing is a clothing item worn usually by men, i.e., items normally found in the men's section of department stores.  Subsets include Tuxedos and Mens-Jockey-Underwear."))

(defobject Sleepy
   (Alertness Sleepy)
   (Subattribute-Of Sleepy Awake)
   (Name-In-Cyc Sleepy "#$Sleepy")
   (Documentation Sleepy
    "Sleepy is the Alertness attribute which is a specialization of Awake.  It is the state an animal normally passes through before Going-To-Sleep."))

(defrelation Unary-Predicate
             (Synonymous-External-Concept Unary-Predicate
              Sensus-Information1997 "ONE-PLACE-RELATION")
             (Name-In-Cyc Unary-Predicate "#$UnaryPredicate")
             (Predicate-Category Unary-Predicate)
             (Collection Unary-Predicate)
             (Subclass-Of Unary-Predicate Predicate)
             (Set-Or-Collection Unary-Predicate)
             (Arity Unary-Predicate 1)
             (Documentation Unary-Predicate
              "Unary-Predicate is the subset of Predicate whose elements take only a single argument.  Note, however, that most unary properties are implemented in Cyc as elements of Collection or of Attribute-Value, rather than of Unary-Predicate.  So there should not be very many instances of this collection."))

(defrelation Water-Transportation-Device
             (Transport-Via-Fn Water-Transportation-Device
              |(TRANSPORT-VIA-FN WATER-TRANSPORTATION-DEVICE)|)
             (Name-In-Cyc Water-Transportation-Device
              "#$WaterTransportationDevice")
             (Existing-Object-Type Water-Transportation-Device)
             (Subclass-Of Water-Transportation-Device Transportation-Device)
             (Set-Or-Collection Water-Transportation-Device)
             (Arity Water-Transportation-Device 1)
             (Documentation Water-Transportation-Device
              "A collection of transportation devices.  An instance of Water-Transportation-Device is a vehicle used for transportation on or through water (not a device for transporting water).  Subsets of Water-Transportation-Device include the collections Ship, Boat-Water-Transportation-Device, Sailboard, Jet-Ski, etc."))

(defrelation Between
             (Overlapping-External-Concept Between Sensus-Information1997
              "BETWEEN")
             (Nth-Domain Between 1 Partially-Tangible)
             (Nth-Domain Between 2 Partially-Tangible)
             (Nth-Domain Between 3 Partially-Tangible)
             (Name-In-Cyc Between "#$between")
             (Ternary-Predicate Between)
             (Relation Between)
             (Arity Between 3)
             (Documentation Between
              "(Between THIS THAT MID-OBJ) means that MID-OBJ is spatially directly between THIS and THAT.  Depending on the context, MID-OBJ may lie on a great circle between THIS and THAT, or on a true Euclidian straight line between them.  Note that Between applies only to physical location.  To describe a relationship involving numbers or Scalar-Intervals, use Greater-Than or Following-Value.  To describe a 'between' relationship along some particular physical path (like: Austin is between Dallas and San Antonio on Highway I-35), or on some trajectory, see Between-On-Path."))

(defrelation Decomposition-Event
             (Name-In-Cyc Decomposition-Event "#$DecompositionEvent")
             (Temporal-Object-Type Decomposition-Event)
             (Default-Disjoint-Script-Type Decomposition-Event)
             (Subclass-Of Decomposition-Event Destruction-Event)
             (Subclass-Of Decomposition-Event Decomposition-Process)
             (Set-Or-Collection Decomposition-Event)
             (Arity Decomposition-Event 1)
             (Documentation Decomposition-Event
              "The collection of events in which one or more objects decompose more or less completely.  See also the more general concept Decomposition-Process, in whose instances objects at least partially decompose."))

(defrelation Gift-Giving
             (Name-In-Cyc Gift-Giving "#$GiftGiving")
             (Temporal-Object-Type Gift-Giving)
             (Default-Disjoint-Script-Type Gift-Giving)
             (Subclass-Of Gift-Giving Giving-Something)
             (Set-Or-Collection Gift-Giving)
             (Arity Gift-Giving 1)
             (Documentation Gift-Giving
              "A collection of events.  In an instance of Gift-Giving, one Agent intentionally gives all use rights over an object (see User-Rights-Attribute) to another Agent without taking payment in return."))

(defrelation Taxonomic-Slot-For-Collections
             (Name-In-Cyc Taxonomic-Slot-For-Collections
              "#$TaxonomicSlotForCollections")
             (Predicate-Category Taxonomic-Slot-For-Collections)
             (Subclass-Of Taxonomic-Slot-For-Collections Taxonomic-Slot)
             (Set-Or-Collection Taxonomic-Slot-For-Collections)
             (Arity Taxonomic-Slot-For-Collections 1)
             (Documentation Taxonomic-Slot-For-Collections
              "A collection of predicates; a subset of Taxonomic-Slot. Each element of Taxonomic-Slot-For-Collections is a binary predicate used to form assertions that define the taxonomy of Collections.  Examples: :Direct-Superclasses, Partitioned-Into, Co-Extensional, Covering, Disjoint-With."))

(defrelation System-Of-Government
             (Name-In-Cyc System-Of-Government "#$SystemOfGovernment")
             (Unordered-Attribute-Type System-Of-Government)
             (Subclass-Of System-Of-Government Attribute-Value)
             (Set-Or-Collection System-Of-Government)
             (Arity System-Of-Government 1)
             (Documentation System-Of-Government
              "A collection of attributes.  Each element of System-Of-Government is an attribute describing a type of government that a country might have.  Used with Government-Type.  Examples: Democratic-Government, Monarchy, Socialist-Government, Military-Government."))

(defobject |(HIGH-AMOUNT-FN ELASTICITY)|
   (Scalar-Interval |(HIGH-AMOUNT-FN ELASTICITY)|)
   (Elasticity |(HIGH-AMOUNT-FN ELASTICITY)|)
   (Skolem-Object |(HIGH-AMOUNT-FN ELASTICITY)|)
   (Documentation |(HIGH-AMOUNT-FN ELASTICITY)|
    "completely re-expands almost instantly after compression"))

(defobject Liquid-State-Of-Matter
   (State-Of-Matter-Solid-Liquid-Gaseous Liquid-State-Of-Matter)
   (Name-In-Cyc Liquid-State-Of-Matter "#$LiquidStateOfMatter")
   (Documentation Liquid-State-Of-Matter
    "A basic physical state of matter.  Liquid objects are characterized at the macroscopic level by special qualities of flow, such as being Pourable and conforming to the bottom of whatever container they occupy.  Examples of things that typically have this attribute are: a `piece' of the Pacific Ocean in the tropics; a lump of mercury at room temperature; the blood in the circulatory system of a living mammal; and some molten silver about to be poured into a teapot mold."))

(defrelation Electrical-Charge
             (Name-In-Cyc Electrical-Charge "#$ElectricalCharge")
             (Polar-Attribute-Type Electrical-Charge)
             (Fundamental-Numeric-Attribute-Type Electrical-Charge)
             (Subclass-Of Electrical-Charge Physical-Attribute)
             (Subclass-Of Electrical-Charge Scalar-Interval)
             (Set-Or-Collection Electrical-Charge)
             (Arity Electrical-Charge 1)
             (Documentation Electrical-Charge
              "A collection of physical attributes.  Each element of Electrical-Charge is an amount of net electrical charge (positive or negative) possessed by a particular instance of Partially-Tangible.  Elements of Electrical-Charge may be either a fixed interval, such as the charge on one electron, or a range, such as a usable charge on a flashlight battery; see Scalar-Interval.  Also see Unit-Of-Charge for the units used by Cyc to measure electrical charges."))

(defrelation Unit-Of-Angular-Acceleration
             (Name-In-Cyc Unit-Of-Angular-Acceleration
              "#$UnitOfAngularAcceleration")
             (Interconvertible-Unit-Type Unit-Of-Angular-Acceleration)
             (Subclass-Of Unit-Of-Angular-Acceleration Unit-Of-Measure)
             (Set-Or-Collection Unit-Of-Angular-Acceleration)
             (Arity Unit-Of-Angular-Acceleration 1)
             (Documentation Unit-Of-Angular-Acceleration
              "The collection of functions which return elements of Angular-Acceleration-Rate (i.e., the rate of change in the Rate-Of-Rotation)."))

(defrelation Receiving-A-Wave
             (Name-In-Cyc Receiving-A-Wave "#$ReceivingAWave")
             (Temporal-Stuff-Type Receiving-A-Wave)
             (Subclass-Of Receiving-A-Wave Receiving)
             (Set-Or-Collection Receiving-A-Wave)
             (Arity Receiving-A-Wave 1)
             (Documentation Receiving-A-Wave
              "A collection of events; a subset of Receiving.  Each element of Receiving-A-Wave is an event in which an instance of Wave-Propagation is received at a To-Location.  For example, my CD player receiving an infrared signal from the remote control; hearing a sound of distant thunder; a radio telescope receiving signals from a celestial body. See also Wave-Propagation."))

(defrelation Academic-Semester
             (Name-In-Cyc Academic-Semester "#$AcademicSemester")
             (Temporal-Object-Type Academic-Semester)
             (Subclass-Of Academic-Semester Time-Interval)
             (Set-Or-Collection Academic-Semester)
             (Arity Academic-Semester 1)
             (Documentation Academic-Semester
              "Each instance of this collection is a Time-Interval defined by some educational institution: one half of their Academic-Year. Since the start dates, end dates and duration may vary depending on the institution and year, instances will be time intervals such as ``StanfordSpringSemester1990-91''."))

(defrelation Experiencing-Hunger
             (Name-In-Cyc Experiencing-Hunger "#$ExperiencingHunger")
             (Temporal-Stuff-Type Experiencing-Hunger)
             (Default-Disjoint-Script-Type Experiencing-Hunger)
             (Subclass-Of Experiencing-Hunger
              Bodily-Function-Event-Involuntary)
             (Set-Or-Collection Experiencing-Hunger)
             (Arity Experiencing-Hunger 1)
             (Documentation Experiencing-Hunger "Being hungry"))

(defrelation Default-Disjoint-Food-Type
             (Name-In-Cyc Default-Disjoint-Food-Type
              "#$DefaultDisjointFoodType")
             (Sibling-Disjoint-Collection Default-Disjoint-Food-Type)
             (Subclass-Of Default-Disjoint-Food-Type Product-Type)
             (Set-Or-Collection Default-Disjoint-Food-Type)
             (Arity Default-Disjoint-Food-Type 1)
             (Documentation Default-Disjoint-Food-Type
              "A collection of collections.  Each instance of Default-Disjoint-Food-Type is a collection of beverages or foodstuffs (a subset of Food or Food-Ingredient-Only).  More to the point, this collection-of-collections is a Sibling-Disjoint-Collection (qv).  So every two instances of Default-Disjoint-Food-Type are either disjoint, or are in a known subset/superset relationship, or have some known (reified) common specialization.  Virtually every commonly-named type of food will be an element of this set-of-sets.  E.g., the collections Hot-Dog, Chicken-Soup, Cocoa-The-Powder, Prune, Toaster-Tart, Milk-Powder, and so on.  One could easily define a collection of foodstuff and beverages, such as The-Food-That-Was-Eaten-In-Dallas-Yesterday, that would not be a member of this set-of-sets, but most such collections are not worth naming and keeping around.  See the concept Sibling-Disjoint-Collection for more information about this sort of arrangement."))

(defrelation Going-To-Sleep
             (Name-In-Cyc Going-To-Sleep "#$GoingToSleep")
             (Temporal-Object-Type Going-To-Sleep)
             (Default-Disjoint-Script-Type Going-To-Sleep)
             (Subclass-Of Going-To-Sleep Intrinsic-State-Change-Event)
             (Subclass-Of Going-To-Sleep Single-Doer-Action)
             (Subclass-Of Going-To-Sleep Animal-Activity)
             (Set-Or-Collection Going-To-Sleep)
             (Arity Going-To-Sleep 1)
             (Documentation Going-To-Sleep
              "The collection of events in which an Animal goes from the state of being awake to being in a state of sleep."))

(defrelation Lexical-Item
             (Name-In-Cyc Lexical-Item "#$LexicalItem")
             (Linguistic-Object-Type Lexical-Item)
             (Subclass-Of Lexical-Item Linguistic-Object)
             (Set-Or-Collection Lexical-Item)
             (Arity Lexical-Item 1)
             (Documentation Lexical-Item
              "The collection of items which form the lexicon of a language. These include both free morphemes, like 'dog', and bound morphemes, like affixes."))

(defrelation Air-Respiration
             (Name-In-Cyc Air-Respiration "#$AirRespiration")
             (Temporal-Stuff-Type Air-Respiration)
             (Default-Disjoint-Script-Type Air-Respiration)
             (Subclass-Of Air-Respiration Respiration)
             (Set-Or-Collection Air-Respiration)
             (Arity Air-Respiration 1)
             (Documentation Air-Respiration
              "A collection of activities constituting a natural Physiological-Function; Air-Respiration is the collection of all Respiration events in which an organism trades some of the carbon dioxide in its tissues for oxygen from the atmosphere."))

(defrelation Canal
             (Name-In-Cyc Canal "#$Canal")
             (Existing-Object-Type Canal)
             (Subclass-Of Canal Stream)
             (Subclass-Of Canal Path-Simple)
             (Subclass-Of Canal Path-Artifact)
             (Set-Or-Collection Canal)
             (Arity Canal 1)
             (Documentation Canal
              "The collection of all canals, artificial waterways created to be paths for boats, or for irrigation (e.g., the Panama-Canal)."))

(defrelation Harbor
             (Name-In-Cyc Harbor "#$Harbor")
             (Existing-Object-Type Harbor)
             (Subclass-Of Harbor Outdoor-Location)
             (Subclass-Of Harbor Body-Of-Water)
             (Set-Or-Collection Harbor)
             (Arity Harbor 1)
             (Documentation Harbor
              "The collection of those parts of a Body-Of-Water, each of which is protected from the open sea and deep enough to furnish fairly safe anchorage."))

(defrelation Calendar-Season
             (Name-In-Cyc Calendar-Season "#$CalendarSeason")
             (Calendar-Covering-Type Calendar-Season)
             (Subclass-Of Calendar-Season Time-Interval)
             (Set-Or-Collection Calendar-Season)
             (Arity Calendar-Season 1)
             (Documentation Calendar-Season
              "This is the set of all calendar seasons.  Four of its largest subsets are Calendar-Winter, Calendar-Spring, Calendar-Summer, and Calendar-Autumn"))

(defobject Baked
   (Preparation-Attribute Baked)
   (Subattribute-Of Baked Cooked)
   (Name-In-Cyc Baked "#$Baked")
   (Documentation Baked
    "The attribute Baked is a specialized form of Cooked.  Food that is Baked has been prepared in an event of Baking-Food, using a $#RegularOven."))

(defrelation Receiving
             (Name-In-Cyc Receiving "#$Receiving")
             (Temporal-Object-Type Receiving)
             (Subclass-Of Receiving Transfer-In)
             (Set-Or-Collection Receiving)
             (Arity Receiving 1)
             (Documentation Receiving
              "A collection of events; a subset of Generalized-Transfer.  Each element of Receiving is an event in which something `comes in' to an object.  Typically, a receiving has associated with it an element of Translocation; a particular receiving and its associated translocation(s) are related by the predicate Transfer-In-Sub-Event.  If the thing which `comes in' is an instance of Partially-Tangible (such as a baseball, or a SCUD missile), then its reception belongs to the specialized subset, Receiving-An-Object (q.v.).  If the translocation associated with the receiving is an instance of Wave-Propagation (such as a radio broadcast, or heat radiation from the Sun), then the receiving belongs to the subset Receiving-A-Wave (q.v.)."))

(defrelation Short-Pants
             (Name-In-Cyc Short-Pants "#$ShortPants")
             (Product-Type Short-Pants)
             (Existing-Object-Type Short-Pants)
             (Subclass-Of Short-Pants Pants)
             (Set-Or-Collection Short-Pants)
             (Arity Short-Pants 1)
             (Documentation Short-Pants
              "A collection of objects; a subset of Pants.  Every element of Short-Pants has pantlegs that cover only the upper part of the wearer's legs, being typically knee-length or shorter."))

(defrelation Simple-Noun
             (Name-In-Cyc Simple-Noun "#$SimpleNoun")
             (Linguistic-Object-Type Simple-Noun)
             (Subclass-Of Simple-Noun Speech-Part)
             (Set-Or-Collection Simple-Noun)
             (Arity Simple-Noun 1)
             (Documentation Simple-Noun
              "The collection of all simple nouns, also called common nouns. Simple nouns can typically be preceded by a determiner, and in English they inflect for number. Example: 'dog'."))

(defrelation Omnivore
             (Name-In-Cyc Omnivore "#$Omnivore")
             (Existing-Object-Type Omnivore)
             (Subclass-Of Omnivore Organism-Whole)
             (Set-Or-Collection Omnivore)
             (Arity Omnivore 1)
             (Documentation Omnivore
              "The collection of organisms that feed on both plants and animals, and possibly other things.  Subsets of Omnivore include, for example, Person, Pig, and Bear."))

(defrelation Instructions
             (Name-In-Cyc Instructions "#$Instructions")
             (Object-Type Instructions)
             (Subclass-Of Instructions Propositional-Information-Thing)
             (Set-Or-Collection Instructions)
             (Arity Instructions 1)
             (Documentation Instructions
              "A collection of executable pieces of information; a subset of Propositional-Information-Thing.  Each element of Instructions outlines a sequence of tasks to be performed, such as instructions on a food package, verbal instructions, etc."))

(defrelation Boiling
             (Name-In-Cyc Boiling "#$Boiling")
             (Temporal-Object-Type Boiling)
             (Default-Disjoint-Script-Type Boiling)
             (Subclass-Of Boiling Physical-State-Change-Event)
             (Set-Or-Collection Boiling)
             (Arity Boiling 1)
             (Documentation Boiling
              "A collection of events.  In each Boiling, a piece of liquid matter is raised to its Boiling-Point and is thereby changed from being in the Liquid-State-Of-Matter to being in the Gaseous-State-Of-Matter.
Note:  this is not intended to cover the cases of heat/evacuation causing a solid to sublime directly into a gas."))

(defrelation |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "ORDERING-RELATION")|
             (Skolem-Object
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "ORDERING-RELATION")|)
             (Collection
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "ORDERING-RELATION")|)
             (Subclass-Of
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "ORDERING-RELATION")|
              Slot)
             (Set-Or-Collection
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "ORDERING-RELATION")|)
             (Arity
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "ORDERING-RELATION")|
              1))

(defrelation Satisfaction
             (Name-In-Cyc Satisfaction "#$Satisfaction")
             (Feeling-Attribute-Type Satisfaction)
             (Subclass-Of Satisfaction Feeling-Attribute)
             (Set-Or-Collection Satisfaction)
             (Arity Satisfaction 1)
             (Documentation Satisfaction
              "Feeling of appeasement, not only of one's desires or longings but also of his needs or requirements.  This is a collection; for an explanation of a typical Feeling-Attribute-Type, see Happiness.   Some more specialized Feeling-Attribute-Types than Satisfaction are:  Approval, Pride, Triumph-The-Feeling, etc. "))

(defrelation Writing-By-Hand
             (Name-In-Cyc Writing-By-Hand "#$WritingByHand")
             (Temporal-Stuff-Type Writing-By-Hand)
             (Default-Disjoint-Script-Type Writing-By-Hand)
             (Subclass-Of Writing-By-Hand Writing)
             (Subclass-Of Writing-By-Hand Handling-A-Device)
             (Subclass-Of Writing-By-Hand Marking-On-A-Surface)
             (Set-Or-Collection Writing-By-Hand)
             (Arity Writing-By-Hand 1)
             (Documentation Writing-By-Hand
              "Writing is the formation of characters or symbols on a suitable surface for transmitting information."))

(defrelation Mineral-Ore
             (Name-In-Cyc Mineral-Ore "#$MineralOre")
             (Tangible-Stuff-Composition-Type Mineral-Ore)
             (Subclass-Of Mineral-Ore Earth-Stuff)
             (Set-Or-Collection Mineral-Ore)
             (Arity Mineral-Ore 1)
             (Documentation Mineral-Ore
              "A collection of tangible things; a subset of Earth-Stuff.  Each element of Mineral-Ore is a piece of substance from which some useful Mineral can be extracted.  For example, elements of Iron-Ore, Bauxite-Ore, and Copper-Ore."))

(defrelation Hail-Process
             (Name-In-Cyc Hail-Process "#$HailProcess")
             (Temporal-Stuff-Type Hail-Process)
             (Subclass-Of Hail-Process Precipitation-Process)
             (Set-Or-Collection Hail-Process)
             (Arity Hail-Process 1)
             (Documentation Hail-Process
              "The collection of instances of Precipitation-Process in which solid particles or small chunks of water ice fall to the earth from clouds."))

(defrelation Hostile-Social-Action
             (Name-In-Cyc Hostile-Social-Action "#$HostileSocialAction")
             (Temporal-Stuff-Type Hostile-Social-Action)
             (Default-Disjoint-Script-Type Hostile-Social-Action)
             (Subclass-Of Hostile-Social-Action Purposeful-Action)
             (Subclass-Of Hostile-Social-Action Social-Occurrence)
             (Set-Or-Collection Hostile-Social-Action)
             (Arity Hostile-Social-Action 1)
             (Documentation Hostile-Social-Action
              "The collection of all hostile or pugnacious events, adverse to someone, in which multiple agents take part, at least one of whom is acting deliberately.  See also Purposeful-Action.  An element of this collection is Assassination-Of-President-Lincoln."))

(defrelation Purposeful-Action
             (Name-In-Cyc Purposeful-Action "#$PurposefulAction")
             (Temporal-Object-Type Purposeful-Action)
             (Script-Type Purposeful-Action)
             (Subclass-Of Purposeful-Action Mental-Activity)
             (Subclass-Of Purposeful-Action Action)
             (Set-Or-Collection Purposeful-Action)
             (Arity Purposeful-Action 1)
             (Documentation Purposeful-Action
              "Purposeful-Action is the collection of actions in which at least one actor is consciously, volitionally, purposefully doing the action (i.e., there is one or more Deliberate-Actors (q.v.))."))

(defrelation Propositional-Information-Thing
             (Name-In-Cyc Propositional-Information-Thing
              "#$PropositionalInformationThing")
             (Microtheory-Type Propositional-Information-Thing)
             (Object-Type Propositional-Information-Thing)
             (Subclass-Of Propositional-Information-Thing Mental-Object)
             (Subclass-Of Propositional-Information-Thing Microtheory)
             (Set-Or-Collection Propositional-Information-Thing)
             (Arity Propositional-Information-Thing 1)
             (Documentation Propositional-Information-Thing
              "A collection of intangible objects.  Each element of Propositional-Information-Thing is a chunk of abstract propositional information (`a PIT' abbreviates `a propositional information thing').  Such a chunk of information may consist of one or more propositions.  The propositional content of a PIT is not intrinsically encoded in any particular language, but it may be representable in many languages.  PITs are used to represent the meaningful contents of information bearing things.  Physical things--objects or events--which are elements of Information-Bearing-Thing are linked to the abstract PIT contents they embody, by using the predicate Contains-Information (q.v.).  An element of Propositional-Information-Thing may be something as simple as the information content of a command to stop one's vehicle, expressed verbally or symbolically in a road sign or in a traffic officer's gesture; or a PIT may be something as complex as the entire contemporary knowledge of Mathematics, which is embodied in many and various sources.  More examples: the story embodied in a showing of the movie `Citizen Kane', the information in my resume, the content of a conversation in American Sign Language, and the information contained in the Cyc-KB, may all be represented as PITs.
Note that the collection Propositional-Information-Thing is a subset of Microtheory, which makes the Cyc inference mechanisms for handling microtheories available to manage the propositional content of information bearing things.  See also Microtheory and Ist-Information."))

(defrelation Distribution-Event
             (Name-In-Cyc Distribution-Event "#$DistributionEvent")
             (Temporal-Object-Type Distribution-Event)
             (Default-Disjoint-Script-Type Distribution-Event)
             (Subclass-Of Distribution-Event Transfer-Out)
             (Set-Or-Collection Distribution-Event)
             (Arity Distribution-Event 1)
             (Documentation Distribution-Event
              "A collection of events.  Each element of Distribution-Event is an event in which tangible or intangible objects are distributed from a source to various destinations via some distribution network."))

(defrelation Law-Enforcement-Officer
             (Name-In-Cyc Law-Enforcement-Officer "#$LawEnforcementOfficer")
             (Occupation-Type Law-Enforcement-Officer)
             (Subclass-Of Law-Enforcement-Officer Public-Sector-Employee)
             (Subclass-Of Law-Enforcement-Officer Professional)
             (Set-Or-Collection Law-Enforcement-Officer)
             (Arity Law-Enforcement-Officer 1)
             (Documentation Law-Enforcement-Officer
              "A collection of persons; a subset of Professional.  Each element of Law-Enforcement-Officer is a person whose job is to prevent, detect, stop, and/or punish people committing illegal activities.  The collection Law-Enforcement-Officer includes local, state, and special police (e.g., transit police), and federal agents (e.g., border patrol, national security agents).  An instance of Law-Enforcement-Officer typically also belongs to one of the following collections: State-Employee, Local-Government-Employee, or National-Government-Employee (see Public-Sector-Employee)."))

(defrelation Artificial-Material
             (Name-In-Cyc Artificial-Material "#$ArtificialMaterial")
             (Existing-Stuff-Type Artificial-Material)
             (Subclass-Of Artificial-Material Artifact)
             (Set-Or-Collection Artificial-Material)
             (Arity Artificial-Material 1)
             (Documentation Artificial-Material
              "A collection of substances; a subset of Artifact.  An instance of Artificial-Material is a portion of artificial stuff that was intentionally made by some agent(s), such as Plastic or Sweet-N-Low. Since Artificial-Materials are intentionally produced, this class does not normally include materials which are merely By-Products or Waste-Products of an intentional process.  However, what is a byproduct at one time or in one context may be a useful material that would count as an instance of Artificial-Material in another."))

(defobject Main-Function
   (Capacity-Attribute Main-Function)
   (Subattribute-Of Main-Function Intended-Function)
   (Documentation Main-Function
    "One of the attributes which characterize the capacity in which some agent does a kind of action.  Main-Function indicates that an agent does a certain type of action (Script-Type) as its main function (rather than, say, as a hobby).  Main-Function can be used to indicate the function that an organization was created to do; e.g., the Main-Function of the US-Border-Patrol is Patrolling the U.S. border.  See Acts-In-Capacity.")
   (Documentation Main-Function
    "An element of Capacity-Attribute.  The attribute Main-Function characterizes an entity participating in a situation as doing so in its main function.  It is frequently used to indicate a device employed in doing its Primary-Function, or an organization engaged in the work it was created to do.")
   (Name-In-Cyc Main-Function "#$MainFunction")
   (Documentation Main-Function
    "An element of Capacity-Attribute.  The attribute Main-Function characterizes an entity participating in a situation as doing so in its main function.  It is frequently used to indicate a device employed in doing its Primary-Function, or an organization engaged in the work it was created to do."))

(defrelation Earth-Stuff
             (Solid-Fn Earth-Stuff |(SOLID-FN EARTH-STUFF)|)
             (Name-In-Cyc Earth-Stuff "#$EarthStuff")
             (Tangible-Stuff-Composition-Type Earth-Stuff)
             (Subclass-Of Earth-Stuff Natural-Tangible-Stuff)
             (Set-Or-Collection Earth-Stuff)
             (Arity Earth-Stuff 1)
             (Documentation Earth-Stuff
              "A collection of tangible things.  Each element in Earth-Stuff is a portion of the stuff that the ground of Earth (at or near its land surface) is made of, including rocks, boulders, sand grains, soil, mud, etc., and mixtures of those things (such as islands or whole continents).  Examples: Australia, Cape-Cod, Zion-Hill, Great-Smoky-Mountains."))

(defrelation |(MOB-FN PARTICLE)|
             (Skolem-Object |(MOB-FN PARTICLE)|)
             (Collection |(MOB-FN PARTICLE)|)
             (Existing-Stuff-Type |(MOB-FN PARTICLE)|)
             (Subclass-Of |(MOB-FN PARTICLE)| Mob)
             (Set-Or-Collection |(MOB-FN PARTICLE)|)
             (Arity |(MOB-FN PARTICLE)| 1))

(defrelation Recorded-Video-Product
             (Name-In-Cyc Recorded-Video-Product "#$RecordedVideoProduct")
             (Existing-Object-Type Recorded-Video-Product)
             (Product-Type Recorded-Video-Product)
             (Subclass-Of Recorded-Video-Product Published-Material)
             (Subclass-Of Recorded-Video-Product Partially-Tangible-Product)
             (Set-Or-Collection Recorded-Video-Product)
             (Arity Recorded-Video-Product 1)
             (Documentation Recorded-Video-Product
              "A collection of information bearing objects (IBOs); a subset of Published-Material.  Each element of Recorded-Video-Product is a video recording which is one of a class of similar recordings with the same information content.  Typically, Recorded-Video-Product includes video recordings (on videotape, laserdiscs, etc.) prepared and duplicated for sale as a product.  See also Video-Recording."))

(defrelation Overlapping-External-Concept
             (Nth-Domain Overlapping-External-Concept 1 Thing)
             (Nth-Domain Overlapping-External-Concept 2 Indexed-Info-Source)
             (Nth-Domain Overlapping-External-Concept 3 Character-String)
             (Name-In-Cyc Overlapping-External-Concept
              "#$overlappingExternalConcept")
             (Ternary-Predicate Overlapping-External-Concept)
             (Relation Overlapping-External-Concept)
             (Arity Overlapping-External-Concept 3)
             (Documentation Overlapping-External-Concept
              "(Overlapping-External-Concept ?TERM ?SOURCE ?STRING) means that the Cyc
concept ?TERM overlaps semantically with the concept named by ?STRING in the
external data source ?SOURCE."))

(defrelation Friendliness
             (Name-In-Cyc Friendliness "#$Friendliness")
             (Feeling-Attribute-Type Friendliness)
             (Subclass-Of Friendliness Affection)
             (Subclass-Of Friendliness Feeling-Attribute)
             (Set-Or-Collection Friendliness)
             (Arity Friendliness 1)
             (Documentation Friendliness
              "Emotion manifested by interest in another person (or, more rarely, in some nonhuman agent), good will towards that individual, and an inclination to favor him or her (or it).  This is a Collection --- for an explanation of that, see Happiness.  Some more specialized Feeling-Attribute-Types than Friendliness are Love and Love-Romantic."))

(defrelation Humid-Climate-Cycle
             (Name-In-Cyc Humid-Climate-Cycle "#$HumidClimateCycle")
             (Climate-Cycle-Type Humid-Climate-Cycle)
             (Subclass-Of Humid-Climate-Cycle Annual-Climate-Cycle)
             (Set-Or-Collection Humid-Climate-Cycle)
             (Arity Humid-Climate-Cycle 1)
             (Documentation Humid-Climate-Cycle
              "A collection of annual climate cycles.  Each element of Humid-Climate-Cycle is a year-long event consisting of weather occurring (typically) in various continental and subtropical regions.  Characteristics of a humid climate include copious precipitation and high humidity."))

(defrelation Level-Of-Discomfort
             (Name-In-Cyc Level-Of-Discomfort "#$LevelOfDiscomfort")
             (Sensory-Reaction-Type Level-Of-Discomfort)
             (Subclass-Of Level-Of-Discomfort Animal-Physiological-Attribute)
             (Subclass-Of Level-Of-Discomfort Internal-Sensory-Attribute)
             (Set-Or-Collection Level-Of-Discomfort)
             (Arity Level-Of-Discomfort 1)
             (Documentation Level-Of-Discomfort
              "An Attribute-Type whose elements represent the various levels of discomfort that may be felt by a perceptual agent.  Typically, the agent must be a living entity.  Typically, the sensation is an internal feeling, and is more of a long-lasting dull ache than a sharp pain (see: Level-Of-Pain)."))

(defrelation |(SOLID-FN WATER)|
             (Skolem-Object |(SOLID-FN WATER)|)
             (Tangible-Stuff-State-Type |(SOLID-FN WATER)|)
             (Subclass-Of |(SOLID-FN WATER)| Water)
             (Subclass-Of |(SOLID-FN WATER)| Solid-Tangible-Thing)
             (Set-Or-Collection |(SOLID-FN WATER)|)
             (Arity |(SOLID-FN WATER)| 1))

(defrelation Cargo-Ship
             (Name-In-Cyc Cargo-Ship "#$CargoShip")
             (Product-Type Cargo-Ship)
             (Existing-Object-Type Cargo-Ship)
             (Subclass-Of Cargo-Ship Ship)
             (Set-Or-Collection Cargo-Ship)
             (Arity Cargo-Ship 1)
             (Documentation Cargo-Ship
              "The collection of all cargo ships, i.e., ships that by design can transport large amount of goods."))

(defrelation Primate
             (Name-In-Cyc Primate "#$Primate")
             (Biological-Order Primate)
             (Subclass-Of Primate Mammal)
             (Subclass-Of Primate Terrestrial-Organism)
             (Set-Or-Collection Primate)
             (Arity Primate 1)
             (Documentation Primate
              "The collection of all primates.  The collection Primate includes the subsets Person, Ape, Monkey, etc.  Primate is an instance of Biological-Order in the Biological-Class Mammal."))

(defobject Sensus-Information1997
   (Knowledge-Base Sensus-Information1997)
   (Meaning-In-System-Fn Sensus-Information1997 "LANGUAGE-RELATED-OBJECT"
    |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "LANGUAGE-RELATED-OBJECT")|)
   (Meaning-In-System-Fn Sensus-Information1997 "LANGUAGE"
    |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "LANGUAGE")|)
   (Meaning-In-System-Fn Sensus-Information1997 "SENSE-AND-MEASURE-QUALITY"
    |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "SENSE-AND-MEASURE-QUALITY")|)
   (Meaning-In-System-Fn Sensus-Information1997 "AMBIENT-PROCESS"
    |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "AMBIENT-PROCESS")|)
   (Meaning-In-System-Fn Sensus-Information1997 "AREA"
    |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "AREA")|)
   (Meaning-In-System-Fn Sensus-Information1997 "CAUSE-EFFECT"
    |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "CAUSE-EFFECT")|)
   (Meaning-In-System-Fn Sensus-Information1997 "SOURCE-DESTINATION"
    |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "SOURCE-DESTINATION")|)
   (Meaning-In-System-Fn Sensus-Information1997 "LINEAR-SIZE"
    |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "LINEAR-SIZE")|)
   (Meaning-In-System-Fn Sensus-Information1997 "SIZE-PROPERTY-ASCRIPTION"
    |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "SIZE-PROPERTY-ASCRIPTION")|)
   (Meaning-In-System-Fn Sensus-Information1997 "GENERALIZED-POSSESSION"
    |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "GENERALIZED-POSSESSION")|)
   (Meaning-In-System-Fn Sensus-Information1997 "LESS-THAN-COMPARISON"
    |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "LESS-THAN-COMPARISON")|)
   (Meaning-In-System-Fn Sensus-Information1997 "OWNED-BY"
    |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "OWNED-BY")|)
   (Meaning-In-System-Fn Sensus-Information1997 "NOTCONTAINED"
    |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "NOTCONTAINED")|)
   (Meaning-In-System-Fn Sensus-Information1997
    "ADDRESSEE-ORIENTED-VERBAL-PROCESS"
    |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "ADDRESSEE-ORIENTED-VERBAL-PROCESS")|)
   (Meaning-In-System-Fn Sensus-Information1997 "GAS-MATERIAL"
    |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "GAS-MATERIAL")|)
   (Meaning-In-System-Fn Sensus-Information1997 "LIQUID-MATERIAL"
    |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "LIQUID-MATERIAL")|)
   (Meaning-In-System-Fn Sensus-Information1997 "NON-DIRECTED-ACTION"
    |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "NON-DIRECTED-ACTION")|)
   (Meaning-In-System-Fn Sensus-Information1997 "CAUSAL-RELATION"
    |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "CAUSAL-RELATION")|)
   (Meaning-In-System-Fn Sensus-Information1997 "PHYSICAL-MATERIAL"
    |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "PHYSICAL-MATERIAL")|)
   (Meaning-In-System-Fn Sensus-Information1997 "ELEMENT"
    |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "ELEMENT")|)
   (Meaning-In-System-Fn Sensus-Information1997 "SUBJECT-MATTER"
    |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "SUBJECT-MATTER")|)
   (Meaning-In-System-Fn Sensus-Information1997 "DECOMPOSABLE-OBJECT"
    |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "DECOMPOSABLE-OBJECT")|)
   (Meaning-In-System-Fn Sensus-Information1997 "ABSTRACT-OBJECT"
    |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "ABSTRACT-OBJECT")|)
   (Meaning-In-System-Fn Sensus-Information1997 "ORDERING-RELATION"
    |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "ORDERING-RELATION")|)
   (Meaning-In-System-Fn Sensus-Information1997 "SEPARABLE-ENTITY"
    |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "SEPARABLE-ENTITY")|)
   (Meaning-In-System-Fn Sensus-Information1997 "INTERPERSONAL-THING"
    |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "INTERPERSONAL-THING")|)
   (Meaning-In-System-Fn Sensus-Information1997 "SOLID-MATERIAL"
    |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "SOLID-MATERIAL")|)
   (Meaning-In-System-Fn Sensus-Information1997 "SPATIAL-LOCATING"
    |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "SPATIAL-LOCATING")|)
   (Meaning-In-System-Fn Sensus-Information1997 "ORDERED-SET"
    |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "ORDERED-SET")|)
   (Meaning-In-System-Fn Sensus-Information1997 "TEMPORAL-NONINCLUSIVE"
    |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "TEMPORAL-NONINCLUSIVE")|)
   (Meaning-In-System-Fn Sensus-Information1997 "ELEMENT-OF"
    |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "ELEMENT-OF")|)
   (Meaning-In-System-Fn Sensus-Information1997 "NAMED-OBJECT"
    |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "NAMED-OBJECT")|)
   (Meaning-In-System-Fn Sensus-Information1997 "DISTANCE"
    |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "DISTANCE")|)
   (Meaning-In-System-Fn Sensus-Information1997 "TIME-INTERVAL"
    |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "TIME-INTERVAL")|)
   (Meaning-In-System-Fn Sensus-Information1997 "STRIVING"
    |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "STRIVING")|)
   (Meaning-In-System-Fn Sensus-Information1997 "NONDECOMPOSABLE-OBJECT"
    |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "NONDECOMPOSABLE-OBJECT")|)
   (Meaning-In-System-Fn Sensus-Information1997 "INTENSIVE"
    |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "INTENSIVE")|)
   (Meaning-In-System-Fn Sensus-Information1997 "MISC-STUFF"
    |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "MISC-STUFF")|)
   (Meaning-In-System-Fn Sensus-Information1997 "DIRECTED-ACTION"
    |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "DIRECTED-ACTION")|)
   (Meaning-In-System-Fn Sensus-Information1997 "CARDINALITY"
    |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "CARDINALITY")|)
   (Meaning-In-System-Fn Sensus-Information1997
    "NON-ADDRESSEE-ORIENTED-VERBAL-PROCESS"
    |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "NON-ADDRESSEE-ORIENTED-VERBAL-PROCESS")|)
   (Meaning-In-System-Fn Sensus-Information1997 "SET"
    |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "SET")|)
   (Meaning-In-System-Fn Sensus-Information1997 "SIZE"
    |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "SIZE")|)
   (Meaning-In-System-Fn Sensus-Information1997 "REPRESENTATIONAL-OBJECT"
    |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "REPRESENTATIONAL-OBJECT")|)
   (Meaning-In-System-Fn Sensus-Information1997 "NON-CONSCIOUS-BEING"
    |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "NON-CONSCIOUS-BEING")|)
   (Meaning-In-System-Fn Sensus-Information1997 "LOCATING"
    |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "LOCATING")|)
   (Meaning-In-System-Fn Sensus-Information1997 "ONE-OR-TWO-D-LOCATION"
    |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "ONE-OR-TWO-D-LOCATION")|)
   (Meaning-In-System-Fn Sensus-Information1997 "CONTAINED"
    |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "CONTAINED")|)
   (Name-In-Cyc Sensus-Information1997 "#$SENSUS-Information1997")
   (Documentation Sensus-Information1997
    "SENSUS is a Knowledge-Base, created by the Information Sciences Institute at USC.  An earlier version of it was knownas Pangloss, and it was devloped primarily in order tosupport machine translation."))

(defrelation Tree-Ordered-Set
             (Name-In-Cyc Tree-Ordered-Set "#$TreeOrderedSet")
             (Object-Type Tree-Ordered-Set)
             (Subclass-Of Tree-Ordered-Set Partially-Ordered-Set)
             (Set-Or-Collection Tree-Ordered-Set)
             (Arity Tree-Ordered-Set 1)
             (Documentation Tree-Ordered-Set
              "The collection of all sets with abstract rooted tree structures, in which there is a single root-element and all other elements are reachable along branches from the root-element via a 'successor' ordering relation, such that one element may have multiple successors, but no two elements have the same successor.  A Tree-Ordered-Set is a special case of Partially-Ordered-Set in which no element has multiple 'parent' nodes.  There are no cycles of relations in a Tree-Ordered-Set: from every element, there is exactly one path to the root-element.  Many, but not all, taxonomic hierarchies are Tree-Ordered-Sets.  The end or 'bottom' nodes are sometime called 'leaf nodes'.  A Totally-Ordered-Set or directed chain is a special case of a Tree-Ordered-Set that happens to have no branchings.  (Note that Tree-Ordered-Set requires a single root node and therefore excludes mathematical 'forests' consisting of multiple, disconnected Tree-Ordered-Sets.)"))

(defrelation Connected-By-Path-Type
             (Nth-Domain Connected-By-Path-Type 1 Thing)
             (Nth-Domain Connected-By-Path-Type 2 Partially-Tangible)
             (Nth-Domain Connected-By-Path-Type 3 Partially-Tangible)
             (Name-In-Cyc Connected-By-Path-Type "#$connectedByPathType")
             (Ternary-Predicate Connected-By-Path-Type)
             (Spatial-Predicate Connected-By-Path-Type)
             (Relation Connected-By-Path-Type)
             (Arity Connected-By-Path-Type 3)
             (Documentation Connected-By-Path-Type
              "(Connected-By-Path-Type PATHTYPE THING1 THING2) means that there is some path of PATHTYPE links connecting THING1 and THING2, where PATHTYPE is some type of linking object that can link two things, like a road, wire, tie-rod, tube, nerve, rope, etc.  This means that the two are connected somehow by one or more paths consisting of links of type PATHTYPE, and that there is no permanent barrier or gap preventing all forms of access along all of those paths."))

(defrelation Incurring-An-Injury
             (Name-In-Cyc Incurring-An-Injury "#$IncurringAnInjury")
             (Script-Type Incurring-An-Injury)
             (Subclass-Of Incurring-An-Injury Single-Doer-Action)
             (Subclass-Of Incurring-An-Injury Animal-Activity)
             (Subclass-Of Incurring-An-Injury Incurring-Damage)
             (Set-Or-Collection Incurring-An-Injury)
             (Arity Incurring-An-Injury 1)
             (Documentation Incurring-An-Injury
              "A collection of events.  An instance of Incurring-An-Injury is an event in which an animal becomes injured.  In such events, the animal which is hurt is the Bodily-Acted-On in the event.  The condition which results of an instance of Incurring-An-Injury would be an instance of Injury-Condition (q.v.).  Also see the comment on Ailment-Condition."))

(defrelation Tanker-Ship
             (Name-In-Cyc Tanker-Ship "#$TankerShip")
             (Product-Type Tanker-Ship)
             (Existing-Object-Type Tanker-Ship)
             (Subclass-Of Tanker-Ship Transportation-Device-Vehicle)
             (Subclass-Of Tanker-Ship Cargo-Ship)
             (Set-Or-Collection Tanker-Ship)
             (Arity Tanker-Ship 1)
             (Documentation Tanker-Ship
              "The subcollection of CargoShip that contains all tankers, i.e., ships that by design can transport large amount of liquid or gas materials."))

(defobject Sanskrit-Language
   (Living-Language Sanskrit-Language)
   (Dead-Language Sanskrit-Language)
   (Name-In-Cyc Sanskrit-Language "#$SanskritLanguage")
   (Documentation Sanskrit-Language
    "This language was originally spoken in the Indic area and is now a dead language. Its sacred literature, however, was  transmitted orally and eventually written in the then-current Devanagari script"))

(defrelation Territory
             (Name-In-Cyc Territory "#$Territory")
             (Existing-Object-Type Territory)
             (Subclass-Of Territory Controlled-Land)
             (Subclass-Of Territory Country-Subsidiary)
             (Set-Or-Collection Territory)
             (Arity Territory 1)
             (Documentation Territory
              "A collection of geopolitical entities.  Each element of Territory is a geopolitical region which is distinct from, but dependent on and controlled by, another geopolitical entity.  Examples: Puerto-Rico, British-Antarctic-Territory, Galapagos-Islands, Ryukyu-Islands."))

(defrelation Affection
             (Name-In-Cyc Affection "#$Affection")
             (Feeling-Attribute-Type Affection)
             (Subclass-Of Affection Feeling-Attribute)
             (Set-Or-Collection Affection)
             (Arity Affection 1)
             (Documentation Affection
              "A feeling of fondness for someone or something.  Sympathy, liking, warmth, tenderness.  This is a Collection --- for an explanation of that, see Happiness.  Some more specialized Feeling-Attribute-Types than Affection are Love, Passion, etc."))

(defrelation Annual-Climate-Cycle
             (Name-In-Cyc Annual-Climate-Cycle "#$AnnualClimateCycle")
             (Script-Type Annual-Climate-Cycle)
             (Subclass-Of Annual-Climate-Cycle Weather-Event)
             (Set-Or-Collection Annual-Climate-Cycle)
             (Arity Annual-Climate-Cycle 1)
             (Documentation Annual-Climate-Cycle
              "A collection of events.  Each element of Annual-Climate-Cycle is an extended event, one year in length, which encompasses Sub-Events describing the changing of the seasons.  Subsets include Temperate-Climate-Cycle, Humid-Subtropical-Climate-Cycle, etc.  See also the comments on Climate-Cycle-Type, Has-Climate-Type."))

(defrelation |(THE-PARTITION CORNER-2D CORNER-3D)|
             (Skolem-Object |(THE-PARTITION CORNER-2D CORNER-3D)|)
             (Disjoint-Set-Or-Collection |(THE-PARTITION CORNER-2D CORNER-3D)|)
             (Set-Mathematical |(THE-PARTITION CORNER-2D CORNER-3D)|)
             (Subclass-Of |(THE-PARTITION CORNER-2D CORNER-3D)| Thing)
             (Set-Or-Collection |(THE-PARTITION CORNER-2D CORNER-3D)|)
             (Arity |(THE-PARTITION CORNER-2D CORNER-3D)| 1))

(defobject Base-Kb
   (Broad-Microtheory Base-Kb)
   (Subcontext-Of Base-Kb Base-Kb)
   (Name-In-Cyc Base-Kb "#$BaseKB")
   (Documentation Base-Kb
    "Base-KB is the most general Microtheory currently in use.  Assertions in this context are `accessible' from any other Microtheory via the Subcontext-Of relation.  In the partial order of microtheories, all microtheories have access to Base-KB.  An assertion which is true here will by default be true in every context.  The `content' of Base-KB consists of very general assertions which are expected to be usable in most or all applications of Cyc, as well as Cyc's most fundamental assertions that it uses in inference, and all completely universal, timeless truths."))

(defrelation Radiation-Resistance
             (Name-In-Cyc Radiation-Resistance "#$RadiationResistance")
             (Primitive-Attribute-Type Radiation-Resistance)
             (Subclass-Of Radiation-Resistance Scalar-Interval)
             (Subclass-Of Radiation-Resistance Physical-Attribute)
             (Set-Or-Collection Radiation-Resistance)
             (Arity Radiation-Resistance 1)
             (Documentation Radiation-Resistance
              "A collection of attributes; a subset of Physical-Attribute.  Each element of Radiation-Resistance represents a specific capacity of a tangible object to resist radiation.  Degrees of Radiation-Resistance may be represented using Generic-Value-Functions.  Indicate a particular object's Radiation-Resistance with the predicate Resistance-To-Radiation."))

(defrelation Physical-Contact-Location
             (Name-In-Cyc Physical-Contact-Location
              "#$PhysicalContactLocation")
             (Contact-Location-Type Physical-Contact-Location)
             (Subclass-Of Physical-Contact-Location Contact-Location)
             (Subclass-Of Physical-Contact-Location Human-Shelter-Construction)
             (Set-Or-Collection Physical-Contact-Location)
             (Arity Physical-Contact-Location 1)
             (Documentation Physical-Contact-Location
              "A collection of locations; a subset of Human-Shelter-Construction.  An instance of Physical-Contact-Location is the principal place(s) where an Agent can be physically found.  For people, that would (probably) be their home and/or office.   For an organization, it would be the location of their place of business, their headquarters, etc.  Note that a purely procedural method for getting in touch with someone, such as their Post Office Box number in a certain city, is not a Physical-Contact-Location."))

(defrelation Transformation-Process
             (Name-In-Cyc Transformation-Process "#$TransformationProcess")
             (Temporal-Stuff-Type Transformation-Process)
             (Default-Disjoint-Script-Type Transformation-Process)
             (Subclass-Of Transformation-Process Transformation-Event)
             (Set-Or-Collection Transformation-Process)
             (Arity Transformation-Process 1)
             (Documentation Transformation-Process
              "The collection of Transformation-Events that also are elements of Temporal-Stuff-Type.  That is, each of their temporal parts is also a Transformation-Event, in which something is destroyed and something created.  
Note:  It is often the case that a Transformation-Event is NOT a Transformation-Process --- e.g., there may be several preparation stages, and then at the end everything is brought together and the foaming starts, or the butterfly emerges, or whatever transformation occurs.  So Transformation-Process is a small subset of Transformation-Event (qv)."))

(defobject Intended-Function
   (Capacity-Attribute Intended-Function)
   (Name-In-Cyc Intended-Function "#$IntendedFunction")
   (Documentation Intended-Function
    "An element of Capacity-Attribute.  The attribute Intended-Function characterizes an entity participating in a situation as doing so in its intended function."))

(defrelation |(JUVENILE-FN PERSON)|
             (Skolem-Object |(JUVENILE-FN PERSON)|)
             (Existing-Object-Type |(JUVENILE-FN PERSON)|)
             (Subclass-Of |(JUVENILE-FN PERSON)| Person)
             (Subclass-Of |(JUVENILE-FN PERSON)| Juvenile-Animal)
             (Set-Or-Collection |(JUVENILE-FN PERSON)|)
             (Arity |(JUVENILE-FN PERSON)| 1))

(deffunction Volt
   (Args-Isa Volt Real-Number)
   (Result-Instance-Of Volt Physical-Attribute)
   (Result-Instance-Of Volt Scalar-Interval)
   (Name-In-Cyc Volt "#$Volt")
   (Unit-Of-Voltage Volt)
   (Unit-Of-Measure-No-Prefix Volt)
   (Mks-Unit-Of-Measure Volt)
   (Standard-Unit-Of-Measure Volt)
   (Function Volt)
   (Documentation Volt
    "The basic unit of electrical potential in the MKS system.  It is defined as one watt per ampere."))

(defrelation Eating-Event
             (Name-In-Cyc Eating-Event "#$EatingEvent")
             (Temporal-Stuff-Type Eating-Event)
             (Default-Disjoint-Script-Type Eating-Event)
             (Subclass-Of Eating-Event Destruction-Event)
             (Subclass-Of Eating-Event Single-Doer-Action)
             (Subclass-Of Eating-Event Consuming-Food-Or-Drink)
             (Set-Or-Collection Eating-Event)
             (Arity Eating-Event 1)
             (Documentation Eating-Event
              "A collection of events.  Each element of Eating-Event is an event which involves the consumption of a substantial portion of food by a single individual (human or other animal).   An instance of Eating-Event is a meal or snack taken in its entirety; it is a series of individual Eating-A-Morsel events.
Note:  If a group of people gets together and eats lunch, that activity is represented by an instance of Having-A-Meal; during that `super-event' each participant engages in his/her own instance of Eating-Event, and all of those are Sub-Events of the Having-A-Meal event."))

(defobject Insulator-Resistance
   (Electrical-Resistance Insulator-Resistance)
   (Name-In-Cyc Insulator-Resistance "#$InsulatorResistance")
   (Documentation Insulator-Resistance
    "A measurable physical attribute.  Insulator-Resistance is the element of Electrical-Resistance that represents a very high level of electrical resistance.  An object having Insulator-Resistance conducts no electricity at all.  See also Resistance-Of-Object."))

(defrelation Captive-Animal
             (Name-In-Cyc Captive-Animal "#$CaptiveAnimal")
             (Existing-Object-Type Captive-Animal)
             (Subclass-Of Captive-Animal Animal)
             (Set-Or-Collection Captive-Animal)
             (Arity Captive-Animal 1)
             (Documentation Captive-Animal
              "The collection of all animals that are caged, tied, kept in an animal container, or otherwise held captive.  There is some intersection here with Domestic-Pet, but not complete.   Some elements of Person are members of Captive-Animal, e.g., political detainees, imprisoned criminals, kidnap victims."))

(defrelation Inter-Arg-Isa1-4
             (Nth-Domain Inter-Arg-Isa1-4 1 Predicate)
             (Nth-Domain Inter-Arg-Isa1-4 2 Collection)
             (Nth-Domain Inter-Arg-Isa1-4 3 Collection)
             (Name-In-Cyc Inter-Arg-Isa1-4 "#$interArgIsa1-4")
             (Ternary-Predicate Inter-Arg-Isa1-4)
             (Relation Inter-Arg-Isa1-4)
             (Arity Inter-Arg-Isa1-4 3)
             (Documentation Inter-Arg-Isa1-4
              "(Inter-Arg-Isa1-4 PRED INDEPENDENT-ARG-COL DEPENDENT-ARG-COL) Base-KB) means that, when an instance of INDEPENDENT-ARG-COL appears as the first argument to PRED, the fourth argument in that assertion is constrained to be an instance of DEPENDENT-ARG-COL."))

(defrelation |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "LOCATING")|
             (Skolem-Object
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "LOCATING")|)
             (Slot |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "LOCATING")|)
             (Relation
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "LOCATING")|)
             (Arity |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "LOCATING")|
              2)
             (Binary-Relation
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "LOCATING")|))

(defrelation Partially-Ordered-Set
             (Name-In-Cyc Partially-Ordered-Set "#$PartiallyOrderedSet")
             (Object-Type Partially-Ordered-Set)
             (Subclass-Of Partially-Ordered-Set Quasi-Ordered-Set)
             (Set-Or-Collection Partially-Ordered-Set)
             (Arity Partially-Ordered-Set 1)
             (Documentation Partially-Ordered-Set
              "The collection of all partially ordered sets (also called ordered sets, partial orders, or posets), each being a Set-With-Structure consisting of a set together with an ordering relation on that set.   Mathematical directed chains, trees, forests, and lattices are special cases of Partially-Ordered-Set.  The ordering relation is defined on the associated set, and is transitive on that set, reflexive on that set, and antisymmetric on that set.   Sometimes the members of the Partially-Ordered-Set are called its nodes, and the non-redundant (transitively reduced) pairwise relations between the nodes are called the links.  A Partially-Ordered-Set may be finite or infinite, and connected or unconnected.  (Note: A Partially-Ordered-Set is not a Set-Or-Collection, rather it is a Set-With-Structure that has an associated Set-Or-Collection.)"))

(defrelation Scalar-Point-Value
             (Name-In-Cyc Scalar-Point-Value "#$ScalarPointValue")
             (Object-Type Scalar-Point-Value)
             (Collection Scalar-Point-Value)
             (Subclass-Of Scalar-Point-Value Scalar-Interval)
             (Set-Or-Collection Scalar-Point-Value)
             (Arity Scalar-Point-Value 1)
             (Documentation Scalar-Point-Value
              "The collection of minimal scalar intervals.  That is, each element of Scalar-Point-Value is a scalar interval which has no `width'.  Scalar intervals include both pure numbers, such as 3.14, and linear measurements such as 3.14 meters, which in CycL would be written `(Meter 3.14)'."))

(defrelation Shell-Animal-Body-Part
             (Name-In-Cyc Shell-Animal-Body-Part "#$Shell-AnimalBodyPart")
             (Unique-Anatomical-Part-Type Shell-Animal-Body-Part)
             (Animal-Body-Part-Type Shell-Animal-Body-Part)
             (Subclass-Of Shell-Animal-Body-Part Biological-Living-Object)
             (Subclass-Of Shell-Animal-Body-Part Skeletal-System)
             (Set-Or-Collection Shell-Animal-Body-Part)
             (Arity Shell-Animal-Body-Part 1)
             (Documentation Shell-Animal-Body-Part
              "The collection of all animal shells.  An animal's shell is one of its Animal-Body-Parts, and functions as a hard protective outer covering for the animal."))

(defrelation Level-Of-Pain
             (Name-In-Cyc Level-Of-Pain "#$LevelOfPain")
             (Sensory-Reaction-Type Level-Of-Pain)
             (Subclass-Of Level-Of-Pain Level-Of-Discomfort)
             (Set-Or-Collection Level-Of-Pain)
             (Arity Level-Of-Pain 1)
             (Documentation Level-Of-Pain
              "An Attribute-Type whose elements represent the qualitative levels of pain that may be felt by a perceptual agent.  Although the agent is often a living entity, this is not required.  The source of the pain could be either external or internal; in either case, the subjective feeling is generally `sharper' and hopefully shorter-lived than just `a feeling of discomfort' (see: Level-Of-Discomfort.)"))

(defrelation Shoe
             (Name-In-Cyc Shoe "#$Shoe")
             (Product-Type Shoe)
             (Existing-Object-Type Shoe)
             (Subclass-Of Shoe Clothing-Item)
             (Set-Or-Collection Shoe)
             (Arity Shoe 1)
             (Documentation Shoe
              "A collection of objects.  Every element of Shoe is a shoe or shoelike thing worn on the feet.  Important subsets include Boot-Footwear, Sandal, Slipper, and Casual-Shoe.  Elements of the collection Shoe are single shoes.  Pairs of shoes are elements of the collection denoted by (Pair-Fn Shoe)."))

(defrelation Agent
             (Name-In-Cyc Agent "#$Agent")
             (Existing-Object-Type Agent)
             (Subclass-Of Agent Composite-Tangible-And-Intangible-Object)
             (Set-Or-Collection Agent)
             (Arity Agent 1)
             (Documentation Agent
              "An agent is something which can show independent action, whether conscious or not.  Agent represents the collection of all agents.  Most animals are considered agents, in most contexts; so are most organizations.   Most plants are not agents, in most contexts.  Inanimate devices are sometimes considered agents, in certain contexts.  This is one of those concepts which is important yet very hard to define precisely.  Here is some elaboration, to help convey the intended meaning of the basic criterion for agenthood:  It must seem that a kind of decision-making is going on, even if it's down at the `mindless' level of the reflex reaction of a spider leg to heat, or the reflex reaction of a Human Resources Department rejecting an applicant with no formal degree.  It generally `sounds right' or `feels  natural' to assign causality to agents, rather than some larger or smaller entity.  E.g., it is more natural to say `Fred wrote an essay' than to say `Fred's left hand wrote an essay' or, at the other extreme, to say `The Solar System wrote an essay'.  Similarly, we might very well talk about `Microsoft' buying IBM, but it would be unnatural and even incorrect to talk about a much larger entity (`corporate America') or smaller entity (`the Microsoft lawyers') as the performer of that buying action."))

(defrelation |(TRANSPORT-VIA-FN TRAIN-TRANSPORTATION-DEVICE)|
             (Skolem-Object |(TRANSPORT-VIA-FN TRAIN-TRANSPORTATION-DEVICE)|)
             (Script-Type |(TRANSPORT-VIA-FN TRAIN-TRANSPORTATION-DEVICE)|)
             (Temporal-Stuff-Type
              |(TRANSPORT-VIA-FN TRAIN-TRANSPORTATION-DEVICE)|)
             (Subclass-Of |(TRANSPORT-VIA-FN TRAIN-TRANSPORTATION-DEVICE)|
              Transportation-Event)
             (Subclass-Of |(TRANSPORT-VIA-FN TRAIN-TRANSPORTATION-DEVICE)|
              |(TRANSPORT-VIA-FN TRANSPORTATION-DEVICE)|)
             (Subclass-Of |(TRANSPORT-VIA-FN TRAIN-TRANSPORTATION-DEVICE)|
              |(TRANSPORT-VIA-FN TRANSPORTATION-DEVICE-VEHICLE)|)
             (Subclass-Of |(TRANSPORT-VIA-FN TRAIN-TRANSPORTATION-DEVICE)|
              |(TRANSPORT-VIA-FN LAND-TRANSPORTATION-DEVICE)|)
             (Subclass-Of |(TRANSPORT-VIA-FN TRAIN-TRANSPORTATION-DEVICE)|
              |(TRANSPORT-VIA-FN TRAIN-TRANSPORTATION-DEVICE)|)
             (Set-Or-Collection
              |(TRANSPORT-VIA-FN TRAIN-TRANSPORTATION-DEVICE)|)
             (Arity |(TRANSPORT-VIA-FN TRAIN-TRANSPORTATION-DEVICE)| 1))

(defrelation Politician
             (Name-In-Cyc Politician "#$Politician")
             (Person-By-Activity-Type Politician)
             (Subclass-Of Politician Person)
             (Subclass-Of Politician Public-Sector-Employee)
             (Set-Or-Collection Politician)
             (Arity Politician 1)
             (Documentation Politician
              "A collection of persons.  Each element of Politician is a person who is involved in politics.  Subsets of Politician include Head-Of-State, Presidential-Candidate, and Head-Of-Political-Party."))

(defrelation Temporal-Object-Type
             (Name-In-Cyc Temporal-Object-Type "#$TemporalObjectType")
             (Collection Temporal-Object-Type)
             (Subclass-Of Temporal-Object-Type Object-Type)
             (Set-Or-Collection Temporal-Object-Type)
             (Arity Temporal-Object-Type 1)
             (Documentation Temporal-Object-Type
              "A collection of collections.  Each element of each element of Temporal-Object-Type is temporally object-like.  Take an element of Temporal-Object-Type -- say COL.  Take an element of that -- say OBJ.  Imagine making a videotape of OBJ.  Now play back just a small piece of that videotape.  It won't be an element of COL.  E.g., COL could be the set of events in which an orange is cut into quarters.  Say a videotape of that has been made of one such event, which lasted thirty seconds.  Now imagine some 5-second excerpt of that videotape.  That, in turn, is not a videotape of someone cutting up an orange into four pieces.  So the collection of all orange-quartering events is itself an element of Temporal-Object-Type; it is NOT an element of Temporal-Stuff-Type (q.v.).



If a collection COL :Direct-Types Temporal-Object-Type, it is reasonable to state axioms about temporally extrinsic properties of COL's instances -- properties such as duration, distance, cost, etc.  E.g., it makes sense to talk about the Duration of a particular Event in which an orange is quartered."))

(defrelation Consuming-Food-Or-Drink
             (Name-In-Cyc Consuming-Food-Or-Drink "#$ConsumingFoodOrDrink")
             (Temporal-Stuff-Type Consuming-Food-Or-Drink)
             (Default-Disjoint-Script-Type Consuming-Food-Or-Drink)
             (Subclass-Of Consuming-Food-Or-Drink Directed-Translation)
             (Subclass-Of Consuming-Food-Or-Drink Destruction-Event)
             (Set-Or-Collection Consuming-Food-Or-Drink)
             (Arity Consuming-Food-Or-Drink 1)
             (Documentation Consuming-Food-Or-Drink
              "A collection of events.  Each element of Consuming-Food-Or-Drink is an event in which a person or other animal ingests some portion of food or drink through its mouth.  This collection generically covers eating or drinking, by a single person, of a meal- or snack-sized portion of food.  For more detail, see the subsets Eating-Event and Drinking-Event.  For eating or drinking with a social group, see Having-A-Meal.  Note: Consuming-Food-Or-Drink does NOT include intravenous infusion of nutrients or chewing of gum."))

(defrelation Restaurant
             (Name-In-Cyc Restaurant "#$Restaurant")
             (Existing-Object-Type Restaurant)
             (Subclass-Of Restaurant Single-Site-Organization)
             (Subclass-Of Restaurant Service-Establishment)
             (Subclass-Of Restaurant Food-Service-Organization)
             (Subclass-Of Restaurant Business)
             (Subclass-Of Restaurant Local-Customer-Contact-Point)
             (Set-Or-Collection Restaurant)
             (Arity Restaurant 1)
             (Documentation Restaurant
              "A collection of organizations; a subset of both Food-Service-Organization and Service-Establishment.  Every element of Restaurant has particular locations (one or more) which serve meals in exchange for money.  Subsets of Restaurant include Fine-Restaurant and Fast-Food-Restaurant, among others."))

(defrelation Partnership
             (Name-In-Cyc Partnership "#$Partnership")
             (Existing-Object-Type Partnership)
             (Subclass-Of Partnership Legal-Agent)
             (Subclass-Of Partnership Business)
             (Set-Or-Collection Partnership)
             (Arity Partnership 1)
             (Documentation Partnership
              "A collection of businesses.  An element of Partnership is a business which is owned and operated by more than one person but generally fewer than fifty; these owners have the relation Business-Partners (q.v.) to one another.  Commonly, the partners are workers in the enterprise.  The partners typically have equal shares in the assets and liablities (except for limited partners), and the partners jointly decide the firm's actions, perhaps by vote."))

(defrelation |(THE-PARTITION DUSK DAWN)|
             (Skolem-Object |(THE-PARTITION DUSK DAWN)|)
             (Disjoint-Set-Or-Collection |(THE-PARTITION DUSK DAWN)|)
             (Set-Mathematical |(THE-PARTITION DUSK DAWN)|)
             (Subclass-Of |(THE-PARTITION DUSK DAWN)| Thing)
             (Set-Or-Collection |(THE-PARTITION DUSK DAWN)|)
             (Arity |(THE-PARTITION DUSK DAWN)| 1))

(defrelation Baking-Food
             (Name-In-Cyc Baking-Food "#$BakingFood")
             (Temporal-Object-Type Baking-Food)
             (Default-Disjoint-Script-Type Baking-Food)
             (Subclass-Of Baking-Food Cooking-Food)
             (Set-Or-Collection Baking-Food)
             (Arity Baking-Food 1)
             (Documentation Baking-Food
              "A collection of events in which food is baked in a Regular-Oven.  After an event of Baking-Food, the food involved has been Baked."))

(defrelation Mutually-Disjoint-Interval-Collection
             (Name-In-Cyc Mutually-Disjoint-Interval-Collection
              "#$MutuallyDisjointIntervalCollection")
             (Collection Mutually-Disjoint-Interval-Collection)
             (Subclass-Of Mutually-Disjoint-Interval-Collection Collection)
             (Set-Or-Collection Mutually-Disjoint-Interval-Collection)
             (Arity Mutually-Disjoint-Interval-Collection 1)
             (Documentation Mutually-Disjoint-Interval-Collection
              "A collection of collections.  Any element, X, which is an element of Mutually-Disjoint-Interval-Collection is a collection of interval types X1, X2, X3,..., whose instances are Temporally-Disjoint; that is, each instance of X1 has no temporal intersection with any instance of X2 or X3 or...; each instance of X2 has no temporal intersection with any instance of X1 or X3 or...; etc.  For example, consider Day-Of-Week-Type, whose instances are Monday, Tuesday,...   It is true that (:Direct-Types Day-Of-Week-Type Mutually-Disjoint-Interval-Collection), because no Monday can temporally intersect any Tuesday or Wednesday or....; no Tuesday can temporally intersect any Monday or Wednesday or...; etc.  Other elements of Mutually-Disjoint-Interval-Collection include Day-Of-Week-Type, Calendar-Season-Type, Hour-Of-Day-Type, and so on.  See also Temporally-Disjoint-Interval-Type."))

(defrelation Ibt-Generation-Replication
             (Name-In-Cyc Ibt-Generation-Replication
              "#$IBTGeneration-Replication")
             (Temporal-Object-Type Ibt-Generation-Replication)
             (Subclass-Of Ibt-Generation-Replication Ibt-Generation)
             (Set-Or-Collection Ibt-Generation-Replication)
             (Arity Ibt-Generation-Replication 1)
             (Documentation Ibt-Generation-Replication
              "A collection events; a subset of IBT-Generation.  Each element of IBT-Generation-Replication is an event in which a new IBT (i.e., an Information-Bearing-Thing) is created whose content is based on that of a preexisting IBT (which is the Information-Origin of the generation event).  The new IBT contains at least part of the information content of the original IBT.  It may use the same or a different way of encoding the information."))

(defrelation Hail-Stone
             (Name-In-Cyc Hail-Stone "#$HailStone")
             (Existing-Object-Type Hail-Stone)
             (Subclass-Of Hail-Stone |(SOLID-FN WATER)|)
             (Subclass-Of Hail-Stone Precipitation-Particle)
             (Set-Or-Collection Hail-Stone)
             (Arity Hail-Stone 1)
             (Documentation Hail-Stone
              "The collection of solid particles or small chunks of ice emitted from clouds in instances of Hail-Process."))

(defrelation Format
             (Name-In-Cyc Format "#$Format")
             (Collection Format)
             (Subclass-Of Format Intangible-Individual)
             (Subclass-Of Format Individual)
             (Set-Or-Collection Format)
             (Arity Format 1)
             (Documentation Format
              "Elements of the collection Format are attributes that are used to constrain the multi-valued nature of a Predicate.  Consider a predicate PRED which takes five arguments, and fix any four of those arguments -- say arguments 1, 2, 4, and 5.  The number of different legal values there can be for the third argument (given that we've already chosen the other four) is determined by which Format attribute has been specified for the 3rd argument place of PRED..





(1) If the Arg3-Format for PRED is Single-Entry, then there can be at most one single term that's legal (and thus at most one assertion), for those given values of arguments 1, 2, 4, and 5.  To illustrate, let's consider a predicate with a lower Arity, say (Mother CHILD MOM), which says that the mother of CHILD is MOM.  The Arg2-Format for Mother should be Single-Entry, since an animal can have only one biological mother.





(2) If the Arg3-Format of PRED is Set-The-Format, then there may be any number of assertions with different terms in the third argument position, but sharing the same values for arguments 1, 2, 4, and 5.  E.g., the Arg1-Format for Mother should be Set-The-Format, since a female can have multiple children.





(3) If the Arg3-Format of PRED is Interval-Entry, then there may be multiple assertions sharing the values of 1, 2, 4, and 5, but with different terms in the 3rd argument; however, all the values for the 3rd argument must be overlapping elements of Scalar-Interval (q.v.).  E.g., the height of a person might be specified in several ways, with slightly different margins of error (or approximation), which is fine, but all those alternate values had better have SOME overlap since the person really just has one particular true height at any given time."))

(defobject Gaseous-State-Of-Matter
   (State-Of-Matter-Solid-Liquid-Gaseous Gaseous-State-Of-Matter)
   (Name-In-Cyc Gaseous-State-Of-Matter "#$GaseousStateOfMatter")
   (Documentation Gaseous-State-Of-Matter
    "A basic physical state of matter.  Gaseous objects are characterized at the macroscopic level by having diffuse boundaries (when outside of containers) and by great expandability and compressibility and (in some cases) combustability.  Examples  of things that typically have this attribute are: the Earth's ionosphere; the helium in a child's balloon; the highly compressed air in a diver's scuba tank."))

(deffunction Skolem-Func-N-Fn
   (Nth-Domain Skolem-Func-N-Fn 1 Cyc-System-List)
   (Nth-Domain Skolem-Func-N-Fn 2 Cyc-System-Symbol)
   (Nth-Domain Skolem-Func-N-Fn 3 Non-Negative-Scalar-Interval)
   (Result-Instance-Of Skolem-Func-N-Fn Thing)
   (Name-In-Cyc Skolem-Func-N-Fn "#$SkolemFuncNFn")
   (Function-The-Mathematical-Type Skolem-Func-N-Fn)
   (Function Skolem-Func-N-Fn)
   (Arity Skolem-Func-N-Fn 3)
   (Function-Arity Skolem-Func-N-Fn 2))

(defrelation Physical-Attribute
             (Synonymous-External-Concept Physical-Attribute
              Sensus-Information1997 "MATERIAL-WORLD-QUALITY")
             (Name-In-Cyc Physical-Attribute "#$PhysicalAttribute")
             (Attribute-Type Physical-Attribute)
             (Subclass-Of Physical-Attribute Attribute-Value)
             (Set-Or-Collection Physical-Attribute)
             (Arity Physical-Attribute 1)
             (Documentation Physical-Attribute "A collection of attribute
values.  Each element of Physical-Attribute is an attribute
value could in theory be measured using physical instruments. 
Subsets of this collection include Density, Speed, 
Rigidity, Mass, etc. Elements include Cold-To-Bitterly-Cold,
(Medium-Amount-Fn Visibility), and A-Few-Years-Duration."))

(defobject Cloudless
   (Cloudiness Cloudless)
   (Name-In-Cyc Cloudless "#$Cloudless")
   (Documentation Cloudless
    "Cloudless is a Weather-Attribute representing a specific degree of Cloudiness.  (Cloudiness-Of-Region LOC Cloudless) means that the Outdoor-Location LOC has no cloud cover."))

(defrelation |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "AMBIENT-PROCESS")|
             (Skolem-Object
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "AMBIENT-PROCESS")|)
             (Script-Type
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "AMBIENT-PROCESS")|)
             (Subclass-Of
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "AMBIENT-PROCESS")|
              Physical-Event)
             (Set-Or-Collection
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "AMBIENT-PROCESS")|)
             (Arity
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "AMBIENT-PROCESS")|
              1))

(defobject City-Of-Washington-Dc
   (Us-City City-Of-Washington-Dc)
   (Entity City-Of-Washington-Dc)
   (Country-Subsidiary City-Of-Washington-Dc)
   (Capital-City-Of-Region City-Of-Washington-Dc)
   (Name-In-Cyc City-Of-Washington-Dc "#$CityOfWashingtonDC")
   (Documentation City-Of-Washington-Dc
    "The present (though not the original) capital city of the United-States-Of-America, seat of its Federal government, which is located in the specially created Federal district between the States of Maryland and Virginia."))

(defrelation Pipe-End-To-Cavity-Junction
             (Name-In-Cyc Pipe-End-To-Cavity-Junction
              "#$PipeEndToCavityJunction")
             (Region-Type Pipe-End-To-Cavity-Junction)
             (Subclass-Of Pipe-End-To-Cavity-Junction Configuration)
             (Subclass-Of Pipe-End-To-Cavity-Junction Portal)
             (Set-Or-Collection Pipe-End-To-Cavity-Junction)
             (Arity Pipe-End-To-Cavity-Junction 1)
             (Documentation Pipe-End-To-Cavity-Junction
              "The collection of junctions, in each of which some Pipe-Generic-Conduit ends at a Cavity of larger diameter than the pipe, allowing flow or access between them.  The flange where a water pipe enters a water tank is one example, as is the junction of the esophagus and the stomach in animals.  See also the predicate Pipe-Ends-At-Cavity."))

(defrelation Inverse-Relation-Type-Max
             (Nth-Domain Inverse-Relation-Type-Max 1 Slot)
             (Nth-Domain Inverse-Relation-Type-Max 2 Collection)
             (Nth-Domain Inverse-Relation-Type-Max 3 Collection)
             (Nth-Domain Inverse-Relation-Type-Max 4 Non-Negative-Integer)
             (Name-In-Cyc Inverse-Relation-Type-Max "#$inverseRelationTypeMax")
             (Quaternary-Predicate Inverse-Relation-Type-Max)
             (Relation Inverse-Relation-Type-Max)
             (Arity Inverse-Relation-Type-Max 4)
             (Documentation Inverse-Relation-Type-Max
              "(Inverse-Relation-Type-Max SLOT COL1 COL2 NUM) means that, for every instance of COL2 (INS2) there are at most NUM instances of COL1 (INS1, INS3, ...) such that (SLOT INS1 INS2), (SLOT INS3 INS2), ..., hold.  Thus (Inverse-Relation-Type-Max Physical-Parts Hand Finger 1) means `every finger is part of at most one hand'."))

(defrelation Fundamental-Numeric-Attribute-Type
             (Name-In-Cyc Fundamental-Numeric-Attribute-Type
              "#$FundamentalNumericAttributeType")
             (Collection Fundamental-Numeric-Attribute-Type)
             (Subclass-Of Fundamental-Numeric-Attribute-Type
              Measurable-Attribute-Type)
             (Set-Or-Collection Fundamental-Numeric-Attribute-Type)
             (Arity Fundamental-Numeric-Attribute-Type 1)
             (Documentation Fundamental-Numeric-Attribute-Type
              "A collection of collections.  Each element of Fundamental-Numeric-Attribute-Type is a collection of measurable attributes, including Distance, Time, Currency, Mass, etc.  The types of attributes in this collection are `fundamental' when contrasted with other attributes which are derived from them (such as Volume, Speed, etc.).  Cf. Derived-Numeric-Attribute-Type."))

(defrelation Grasping-Something-With-A-Tool
             (Name-In-Cyc Grasping-Something-With-A-Tool
              "#$GraspingSomethingWithATool")
             (Temporal-Stuff-Type Grasping-Something-With-A-Tool)
             (Default-Disjoint-Script-Type Grasping-Something-With-A-Tool)
             (Subclass-Of Grasping-Something-With-A-Tool Handling-A-Device)
             (Set-Or-Collection Grasping-Something-With-A-Tool)
             (Arity Grasping-Something-With-A-Tool 1)
             (Documentation Grasping-Something-With-A-Tool
              "A collection of the events in which a tool is used to grasp some object."))

(defobject The-Start-Of-The-Common-Era
   (Time-Point The-Start-Of-The-Common-Era)
   (Name-In-Cyc The-Start-Of-The-Common-Era "#$TheStartOfTheCommonEra")
   (Documentation The-Start-Of-The-Common-Era
    "This is the instant of time between the years BC and AD."))

(defrelation Light-Source
             (Nth-Domain Light-Source 1 Partially-Tangible)
             (Nth-Domain Light-Source 2 Partially-Tangible)
             (Nth-Domain Light-Source 3 Illumination-Mode-Attribute)
             (Name-In-Cyc Light-Source "#$lightSource")
             (Ternary-Predicate Light-Source)
             (Relation Light-Source)
             (Arity Light-Source 3)
             (Documentation Light-Source
              "The predicate Light-Source is used to indicate the source of an illumination falling on a particular object.  (Light-Source OBJ SOURCE MODE) means that OBJ is illuminated by SOURCE with the type of illumination (Illumination-Mode-Attribute) MODE."))

(defrelation Inter-Arg-Isa4-3
             (Nth-Domain Inter-Arg-Isa4-3 1 Predicate)
             (Nth-Domain Inter-Arg-Isa4-3 2 Collection)
             (Nth-Domain Inter-Arg-Isa4-3 3 Collection)
             (Name-In-Cyc Inter-Arg-Isa4-3 "#$interArgIsa4-3")
             (Ternary-Predicate Inter-Arg-Isa4-3)
             (Relation Inter-Arg-Isa4-3)
             (Arity Inter-Arg-Isa4-3 3)
             (Documentation Inter-Arg-Isa4-3
              "(Inter-Arg-Isa4-3 PRED INDEPENDENT-ARG-COL DEPENDENT-ARG-COL) Base-KB) means that, when an instance of INDEPENDENT-ARG-COL appears as the fourth argument to PRED, the third argument in that assertion is constrained to be an instance of DEPENDENT-ARG-COL."))

(defrelation Capital-City-Of-Region
             (Name-In-Cyc Capital-City-Of-Region "#$CapitalCityOfRegion")
             (Existing-Object-Type Capital-City-Of-Region)
             (Subclass-Of Capital-City-Of-Region City)
             (Set-Or-Collection Capital-City-Of-Region)
             (Arity Capital-City-Of-Region 1)
             (Documentation Capital-City-Of-Region
              "A collection of cities.  Each element of Capital-City-Of-Region is an element of City (q.v.) that is the capital of its surrounding region.  This includes both capitals of countries and capitals of subregions.  Examples: City-Of-Rome-Italy, City-Of-Cardiff-Wales, City-Of-Austin-TX, City-Of-Abidjan-Ivory-Coast, City-Of-Llasa-Tibet, City-Of-Columbus-OH (Franklin-County-Ohio).  See also Capital-City, Capital-City-Of-This-State."))

(deffunction Day-Fn
   (Nth-Domain Day-Fn 1 Positive-Integer)
   (Nth-Domain Day-Fn 2 Calendar-Month)
   (Result-Instance-Of Day-Fn Calendar-Day)
   (Name-In-Cyc Day-Fn "#$DayFn")
   (Individual-Denoting-Function Day-Fn)
   (Non-Predicate-Function Day-Fn)
   (Function Day-Fn)
   (Arity Day-Fn 2)
   (Function-Arity Day-Fn 1)
   (Binary-Relation Day-Fn)
   (Documentation Day-Fn
    "(Day-Fn ?D ?MNTH) denotes a Calendar-Day -- in particular, the day number ?D of month ?MNTH.  For example, (Day-Fn 14 (Month-Fn February (Year-Fn 1966))) denotes Feb. 14th, 1966"))

(defobject |(NO-AMOUNT-FN VOLATILITY)|
   (Scalar-Interval |(NO-AMOUNT-FN VOLATILITY)|)
   (Volatility |(NO-AMOUNT-FN VOLATILITY)|)
   (Skolem-Object |(NO-AMOUNT-FN VOLATILITY)|))

(defrelation Quantity-Slot
             (Name-In-Cyc Quantity-Slot "#$QuantitySlot")
             (Predicate-Category Quantity-Slot)
             (Subclass-Of Quantity-Slot Prothetic-Slot)
             (Set-Or-Collection Quantity-Slot)
             (Arity Quantity-Slot 1)
             (Documentation Quantity-Slot
              "A collection of predicates.  Each element of Quantity-Slot is a binary predicate that takes a quantity as the value of its second argument.  In Cyc, those quantities are elements of Scalar-Interval (q.v.).  Examples of Quantity-Slot: Distance-Translated, Spatial-Extent, Density-Of-Object.  See also Interval-Based-Quantity-Slot."))

(defrelation Marking-On-A-Surface
             (Name-In-Cyc Marking-On-A-Surface "#$MarkingOnASurface")
             (Temporal-Stuff-Type Marking-On-A-Surface)
             (Default-Disjoint-Script-Type Marking-On-A-Surface)
             (Subclass-Of Marking-On-A-Surface Ibo-Creation)
             (Subclass-Of Marking-On-A-Surface Handling-An-Object)
             (Set-Or-Collection Marking-On-A-Surface)
             (Arity Marking-On-A-Surface 1)
             (Documentation Marking-On-A-Surface
              "A collection of events.  In a Marking-On-A-Surface event, visible markings are placed on a surface by an Agent.  The marking may be done by adding material to or removing material from the surface; e.g., by painting or by engraving the surface."))

(defrelation Portal-Covering
             (Name-In-Cyc Portal-Covering "#$PortalCovering")
             (Existing-Object-Type Portal-Covering)
             (Product-Type Portal-Covering)
             (Subclass-Of Portal-Covering Solid-Tangible-Thing)
             (Subclass-Of Portal-Covering Sheet-Of-Some-Stuff)
             (Set-Or-Collection Portal-Covering)
             (Arity Portal-Covering 1)
             (Documentation Portal-Covering
              "A collection of tangible objects.  Each element of Portal-Covering is something that covers a portal (e.g., window, door, hatch).  Portal coverings may be either flexible or rigid; they may be either fixed in place or removable.  Examples include windows (in buildings or automobiles), doors, shutters, screens, draperies, window blinds, convertible tops, lids, corks."))

(defrelation Personality-Attribute
             (Name-In-Cyc Personality-Attribute "#$PersonalityAttribute")
             (Unordered-Attribute-Type Personality-Attribute)
             (Subclass-Of Personality-Attribute Mental-Attribute)
             (Set-Or-Collection Personality-Attribute)
             (Arity Personality-Attribute 1)
             (Documentation Personality-Attribute
              "The collection of attributes which describe aspects of a person's personality.  E.g., Dependability.  
Note that Gentleness, Viciousness, and other emotive traits common to both humans and other animals, appear under Temperament-Attribute, which is a superset of Personality-Attribute."))

(defobject Gusty
   (Weather-Attribute Gusty)
   (Name-In-Cyc Gusty "#$Gusty")
   (Documentation Gusty
    "A Weather-Attribute indicating that the wind at an Outdoor-Location is subject to sudden changes in direction and intensity."))

(defrelation Service-Establishment
             (Name-In-Cyc Service-Establishment "#$ServiceEstablishment")
             (Existing-Object-Type Service-Establishment)
             (Subclass-Of Service-Establishment Local-Customer-Contact-Point)
             (Subclass-Of Service-Establishment
              Commercial-Service-Organization)
             (Subclass-Of Service-Establishment Business)
             (Set-Or-Collection Service-Establishment)
             (Arity Service-Establishment 1)
             (Documentation Service-Establishment
              "A collection of organizations.  Each element of Service-Establishment is a local service organization at a single physical location.  What an individual retail store or outlet is for tangible products, a service establishment is for services.  Examples: Threadgills restaurant; Daytona-Speedway; Brake Check store at 35th and Lamar Blvd., Capital Medical Clinic in Medical Park Towers, and the U.S. Post Office on West 6th Street in Austin, TX."))

(defrelation Reptile
             (Name-In-Cyc Reptile "#$Reptile")
             (Biological-Class Reptile)
             (Subclass-Of Reptile Vertebrate)
             (Subclass-Of Reptile Non-Person-Animal)
             (Set-Or-Collection Reptile)
             (Arity Reptile 1)
             (Documentation Reptile
              "The collection of reptiles; a subset of Vertebrate.  Each element of Reptile is an air-breathing, cold-blooded animal which has a body covered by scales or bony plates.  The collection Reptile includes the subsets Snake, Turtle, Lizard, etc.  Members of most species of Reptile lay eggs; none has milk, hair, feathers, or postembryonic gills.  Reptile is an instance of Biological-Class."))

(defrelation Handling-A-Device
             (Name-In-Cyc Handling-A-Device "#$HandlingADevice")
             (Temporal-Stuff-Type Handling-A-Device)
             (Default-Disjoint-Script-Type Handling-A-Device)
             (Subclass-Of Handling-A-Device Human-Activity)
             (Subclass-Of Handling-A-Device Handling-An-Object)
             (Set-Or-Collection Handling-A-Device)
             (Arity Handling-A-Device 1)
             (Documentation Handling-A-Device
              "A collection of Events; a subset of Handling-An-Object.  An instance of Handling-A-Device is an event in which a device is manipulated (with the operator holding and touching the device) in order to use it for its Primary-Function.  Instances include elements of the subsets Pruning, Playing-A-Musical-Instrument, Operating-A-Household-Appliance, Pumping-Gas-Event, Writing-By-Hand, and many more.  Just carrying pruning shears around is not a Handling-A-Device event."))

(defrelation Legal-Professional
             (Name-In-Cyc Legal-Professional "#$LegalProfessional")
             (Occupation-Type Legal-Professional)
             (Subclass-Of Legal-Professional Professional)
             (Set-Or-Collection Legal-Professional)
             (Arity Legal-Professional 1)
             (Documentation Legal-Professional
              "A collection of persons; a subset of Professional.  Each element of Legal-Professional is a person working in the field of law. This collection includes lawyers, judges, paralegals, and law clerks."))

(defrelation Gender-Of-Living-Thing
             (Name-In-Cyc Gender-Of-Living-Thing "#$GenderOfLivingThing")
             (Unordered-Attribute-Type Gender-Of-Living-Thing)
             (Sibling-Disjoint-Attribute-Type Gender-Of-Living-Thing)
             (Subclass-Of Gender-Of-Living-Thing Attribute-Value)
             (Set-Or-Collection Gender-Of-Living-Thing)
             (Arity Gender-Of-Living-Thing 1)
             (Documentation Gender-Of-Living-Thing
              "The collection of genders that organisms can have."))

(defobject Atlantic-Ocean
   (Ocean Atlantic-Ocean)
   (Entity Atlantic-Ocean)
   (Name-In-Cyc Atlantic-Ocean "#$AtlanticOcean")
   (Documentation Atlantic-Ocean
    "The main body of salt water in the Western-Hemisphere-Region, bordering on five continents (Western coasts of Europe and Africa, Antarctica, Eastern coasts of North and South Americas)."))

(defrelation |(SOLID-FN GLASS)|
             (Skolem-Object |(SOLID-FN GLASS)|)
             (Tangible-Stuff-State-Type |(SOLID-FN GLASS)|)
             (Subclass-Of |(SOLID-FN GLASS)| Glass)
             (Subclass-Of |(SOLID-FN GLASS)| Solid-Tangible-Thing)
             (Set-Or-Collection |(SOLID-FN GLASS)|)
             (Arity |(SOLID-FN GLASS)| 1))

(deffunction Paths-Concatenated-Fn
   (Nth-Domain Paths-Concatenated-Fn 1 Path-Simple)
   (Nth-Domain Paths-Concatenated-Fn 2 Path-Simple)
   (Result-Instance-Of Paths-Concatenated-Fn Path-Simple)
   (Name-In-Cyc Paths-Concatenated-Fn "#$PathsConcatenatedFn")
   (Non-Predicate-Function Paths-Concatenated-Fn)
   (Function Paths-Concatenated-Fn)
   (Arity Paths-Concatenated-Fn 2)
   (Function-Arity Paths-Concatenated-Fn 1)
   (Binary-Relation Paths-Concatenated-Fn)
   (Documentation Paths-Concatenated-Fn
    "A function joining two paths end-to-end in series.  For each path PATH1 between X and Y, and each path PATH2 between Y and Z, if every point A on both paths satisfies the conditions (Path-Between PATH1 X A) and (Path-Between PATH2 A Z), then (Paths-Concatenated-Fn PATH1 PATH2) denotes the path obtained by concatenating PATH1 and PATH2, i.e., the path that is a super path of both PATH1 and PATH2 and is between X and Z.  Note that when you use (Paths-Concatenated-Fn PATH1 PATH2), PATH1 and PATH2 cannot intersect, i.e., no point is on both paths except their end-points.  This function is not defined on the cartesian product Path-Simple x Path-Simple.  It is rather defined on a proper subset of it."))

(defrelation Heating-Device
             (Name-In-Cyc Heating-Device "#$HeatingDevice")
             (Existing-Object-Type Heating-Device)
             (Subclass-Of Heating-Device Physical-Device)
             (Set-Or-Collection Heating-Device)
             (Arity Heating-Device 1)
             (Documentation Heating-Device
              "A collection of physical devices.  The set of Physical-Devices whose Primary-Function is to generate heat to raise the temperature of something else.  The stuff being heated might be gaseous (air in a room or a hair dryer), liquid (water in a pool or hot water tank), or solid (food in an oven, hair with a curling iron, plastic during its shaping, etc.)  An instance of Heating-Device typically has some energy input, some way of converting that energy to heat, and some way of delivering the heat to the object(s) to be heated.  A borderline positive example of this is a device which absorbs heat during warm periods such as daytimes, and radiates it back out again during cool periods such as nighttimes.  Note that heating must be a primary function of the device; no matter how little you think of your personal computer, it is not a Heating-Device."))

(defrelation Sensory-Reaction-Type
             (Name-In-Cyc Sensory-Reaction-Type "#$SensoryReactionType")
             (Collection Sensory-Reaction-Type)
             (Subclass-Of Sensory-Reaction-Type Primitive-Attribute-Type)
             (Subclass-Of Sensory-Reaction-Type Attribute-Type)
             (Set-Or-Collection Sensory-Reaction-Type)
             (Arity Sensory-Reaction-Type 1)
             (Documentation Sensory-Reaction-Type
              "A collection of collections.  Each element of Sensory-Reaction-Type is an Attribute-Type, describing one natural kind of sensation (e.g., pain, pressure, pleasure, warmth, etc.) that may be felt by Perceptual-Agents.  Some examples of Sensory-Reaction-Type are Level-Of-Dizziness, Level-Of-Soreness, Level-Of-Cold-Sensation, etc."))

(defrelation Polar-Attribute-Type
             (Synonymous-External-Concept Polar-Attribute-Type
              Sensus-Information1997 "POLAR-QUALITY")
             (Name-In-Cyc Polar-Attribute-Type "#$PolarAttributeType")
             (Collection Polar-Attribute-Type)
             (Subclass-Of Polar-Attribute-Type Primitive-Attribute-Type)
             (Set-Or-Collection Polar-Attribute-Type)
             (Arity Polar-Attribute-Type 1)
             (Documentation Polar-Attribute-Type
              "A collection of collections, a subset of Primitive-Attribute-Type.
Each element of Polar-Attribute-Type is a collection of 
attributes which can be possessed either to a positive or
to a negative degree. Thus, Electrical-Charge would be an
instance of this collection, whereas Wetness and Bed-Size
would not be."))

(defrelation Indexical-Concept
             (Overlapping-External-Concept Indexical-Concept
              Sensus-Information1997 "RELATIVE-SPATIAL-TEMPORAL")
             (Name-In-Cyc Indexical-Concept "#$IndexicalConcept")
             (Collection Indexical-Concept)
             (Subclass-Of Indexical-Concept Thing)
             (Set-Or-Collection Indexical-Concept)
             (Arity Indexical-Concept 1)
             (Documentation Indexical-Concept "Indexical-Concepts are those 
whose referent essentially depends on the occasion of use and 
the user, e.g., Now, I, Here. When I use the concept 'I,' I 
am referring to myself (O-Keefe), but 'I' does not mean 
O-Keefe, but refers to whomever the user is. Similarly, Now denotes the moment in which it used."))

(defrelation Non-Published-Text
             (Name-In-Cyc Non-Published-Text "#$NonPublishedText")
             (Existing-Object-Type Non-Published-Text)
             (Subclass-Of Non-Published-Text Textual-Material)
             (Set-Or-Collection Non-Published-Text)
             (Arity Non-Published-Text 1)
             (Documentation Non-Published-Text
              "A collection of information bearing things (IBTs).  Non-Published-Text is that subset of Textual-Material whose elements are text that has not yet been published (such as a rejected book manuscript) and may not even be intended for publication (such as a memo or personal letter)."))

(defrelation Translation-Round-Trip
             (Name-In-Cyc Translation-Round-Trip "#$Translation-RoundTrip")
             (Temporal-Object-Type Translation-Round-Trip)
             (Subclass-Of Translation-Round-Trip
              Translation-No-Location-Change)
             (Set-Or-Collection Translation-Round-Trip)
             (Arity Translation-Round-Trip 1)
             (Documentation Translation-Round-Trip
              "A collection of events, Translation-Round-Trip is a subset of Translation-No-Location-Change.  Each element of Translation-Round-Trip represents one round trip event.  That is, an instance of Translation-Round-Trip is a complete translational movement that begins and ends in the same place (thus, the From-Location and To-Location are identical).  However, a round trip is usually a discontinuous motion (cf. Movement-Translation-Process).  In the simplest case, it has exactly one Outbound-Leg-Of-Round-Trip and exactly one Inbound-Leg-Of-Round-Trip, and the trip breaks at the Destination-Round-Trip, which is the place that the traveller visits in between the two legs of the journey.  Thus, in addition to a From-Location and To-Location, an instance of Translation-Round-Trip also has an Origin-Round-Trip and Destination-Round-Trip.  The Origin-Round-Trip is just the same as the From-Location and To-Location. 
For example, in Doug and Mary's trip to Antarctica, the Origin-Round-Trip was City-Of-Austin-TX, the Destination-Round-Trip was the Continent-Of-Antarctica.  Thus, the City-Of-Austin-TX was both the From-Location and the To-Location of the WHOLE (round) trip, and it was also the To-Location of the homeward leg of their trip (Inbound-Leg-Of-Round-Trip).   The Continent-Of-Antarctica was the To-Location for their Outbound-Leg-Of-Round-Trip and the From-Location of their homeward leg (i.e., their Inbound-Leg-Of-Round-Trip).
Note: to describe a multi-stop `round trip',  instead of using Translation-Round-Trip one can represent it as a circuit composed of a series of one-way legs."))

(defrelation Skeletal-System
             (Name-In-Cyc Skeletal-System "#$SkeletalSystem")
             (Unique-Anatomical-Part-Type Skeletal-System)
             (Animal-Body-Part-Type Skeletal-System)
             (Subclass-Of Skeletal-System Biological-Living-Object)
             (Subclass-Of Skeletal-System Animal-Body-Part)
             (Set-Or-Collection Skeletal-System)
             (Arity Skeletal-System 1)
             (Documentation Skeletal-System
              "The collection of all animals' skeletal systems.  A Skeletal-System is a system of body parts used to support, separate, and protect the other parts of the body, especially the torso and the soft, vulnerable internal organs of the animal.  It can be an external Exoskeleton (see also: Shell-Animal-Body-Part) or an internal interlinking of numerous parts composed of Bone-Body-Part and Cartilage."))

(defrelation Non-Verbal-Communicating
             (Synonymous-External-Concept Non-Verbal-Communicating
              Sensus-Information1997 "NON-VERBAL-COMMUNICATIVE-ACT")
             (Name-In-Cyc Non-Verbal-Communicating "#$NonVerbalCommunicating")
             (Temporal-Stuff-Type Non-Verbal-Communicating)
             (Default-Disjoint-Script-Type Non-Verbal-Communicating)
             (Subclass-Of Non-Verbal-Communicating Communicating)
             (Set-Or-Collection Non-Verbal-Communicating)
             (Arity Non-Verbal-Communicating 1)
             (Documentation Non-Verbal-Communicating
              "A collection of information
transfer events; a subset of Communicating.  Each element of
Non-Verbal-Communicating is a transmission of information by means of
some bodily movement other than speaking.  Subsets include
Shaking-Hands and Cuddling, since such actions by definition are
communications involving two actors.  (Note that Making-A-Gesture
(q.v.) is NOT a subset of Non-Verbal-Communicating; instances of
Making-A-Gesture are merely information-encodings.  They may or may
not be Sub-Events of Non-Verbal-Communicating events.)"))

(defobject Simple-Contact-Acquaintance
   (Acquaintance-Attribute Simple-Contact-Acquaintance)
   (Name-In-Cyc Simple-Contact-Acquaintance "#$SimpleContactAcquaintance")
   (Documentation Simple-Contact-Acquaintance
    "The attribute which specifies that persons X and Y have met each other at least once, and probably would be able to recall this, and even recognize each other, if they meet again.  I.e., (Acquaintances X Y Simple-Contact-Acquaintance) implies (Acquaintances Y X Simple-Contact-Acquaintance); that is, if X has met Y, then Y has met X.  This assumes that there was a meeting event in which (earlier subabstractions of) X and Y interacted, that both were minimally conscious, etc."))

(defrelation Academic-Trimester
             (Name-In-Cyc Academic-Trimester "#$AcademicTrimester")
             (Temporal-Object-Type Academic-Trimester)
             (Subclass-Of Academic-Trimester Time-Interval)
             (Set-Or-Collection Academic-Trimester)
             (Arity Academic-Trimester 1)
             (Documentation Academic-Trimester
              "Each instance of this collection is a Time-Interval defined by some educational institution: one third of their Academic-Year. Since the start dates, end dates, and duration may all vary depending on the institution and year, instances of this collection must unfortunately be time intervals like UCLASpringTrimester1990-91."))

(defrelation Info-Transferred
             (Synonymous-External-Concept Info-Transferred
              Sensus-Information1997 "SAYING")
             (Domain Info-Transferred Information-Transfer-Event)
             (Range Info-Transferred Abstract-Information)
             (Name-In-Cyc Info-Transferred "#$infoTransferred")
             (Role Info-Transferred)
             (Slot Info-Transferred)
             (Relation Info-Transferred)
             (Arity Info-Transferred 2)
             (Binary-Relation Info-Transferred)
             (Documentation Info-Transferred
              "The predicate Info-Transferred is used to indicate the propositional content of a particular transferral of information.  (Info-Transferred TRANSFER INFO) means that INFO is information that is transferred due to the Information-Transfer-Event TRANSFER.  INFO originates from some agent or IBT (i.e., element of Information-Bearing-Thing).  After TRANSFER, INFO is contained in another IBT or agent; INFO may persist in the source as well.  For example, when I read the front page of the newspaper, some information about current world events is transferred from the newspaper to me.   See also Information-Origin, Information-Destination."))

(defrelation Calendar-Season-Type
             (Name-In-Cyc Calendar-Season-Type "#$CalendarSeasonType")
             (Cyclical-Interval-Group-Type Calendar-Season-Type)
             (Subclass-Of Calendar-Season-Type Annual-Event-Type)
             (Subclass-Of Calendar-Season-Type
              Temporally-Disjoint-Interval-Type)
             (Set-Or-Collection Calendar-Season-Type)
             (Arity Calendar-Season-Type 1)
             (Documentation Calendar-Season-Type
              "This is the collection whose four elements are Calendar-Winter, Calendar-Spring, Calendar-Summer, and Calendar-Autumn."))

(deffunction Days-Duration
   (Args-Isa Days-Duration Real-Number)
   (Result-Instance-Of Days-Duration Scalar-Interval)
   (Result-Instance-Of Days-Duration Time-Quantity)
   (Name-In-Cyc Days-Duration "#$DaysDuration")
   (Unit-Of-Time Days-Duration)
   (Unit-Of-Measure-No-Prefix Days-Duration)
   (Unit-Of-Measure Days-Duration)
   (Function Days-Duration)
   (Documentation Days-Duration
    "This is a function that takes one or two numbers and returns, as its value, some amount of Time.  An expression of the form (Days-Duration ?min ?max) denotes a quantity of Time that is at least ?min Days and at most ?max Days.  (Days-Duration ?num) denotes a quantity of Time that is exactly ?num days."))

(defrelation Translation-Multi-Path
             (Name-In-Cyc Translation-Multi-Path "#$Translation-MultiPath")
             (Temporal-Object-Type Translation-Multi-Path)
             (Subclass-Of Translation-Multi-Path Movement-Translation-Event)
             (Set-Or-Collection Translation-Multi-Path)
             (Arity Translation-Multi-Path 1)
             (Documentation Translation-Multi-Path
              "A collection of translational motion events; a subset of Movement-Translation-Event.  In any element of Translation-Multi-Path, motion may occur simultaneously along two or more instances of Path-Generic (which are not related by subpath/superpath relationships.)  Therefore, there must be at least two Object-Movings in such an event.  There may be more than one From-Location and/or more than one To-Location.  Elements of Translation-Multi-Path include scattering, distributing, and collecting things.  E.g., all of the following exhibit multi-pathway translation movements: a rainshower or snowfall; an exploding firework; water being ejected from a sprinkling system; the surrounding objects being sucked up by a tornado; participants running a 100K footrace; pool balls during the opening break.  For non-examples of this, see Translation-Single-Path."))

(defrelation Public-Official
             (Name-In-Cyc Public-Official "#$PublicOfficial")
             (Position-Type Public-Official)
             (Subclass-Of Public-Official Public-Sector-Employee)
             (Set-Or-Collection Public-Official)
             (Arity Public-Official 1)
             (Documentation Public-Official
              "A collection of persons; a subset of Public-Sector-Employee.  Each element of Public-Official is a person who holds a position that is directly involved with some aspect of governing a country (or a sub-region of it).  Many public offices in democratically governed countries are filled by election; some are filled by appointment.  In other countries, public offices are sometimes filled by succession or by military decree.
Note: Cyc represents a public office, such as Mayor or United-States-President, as the collection of officials who have held that office, together with axioms describing their responsibilities.  Public-Official is a Position-Type."))

(defrelation Script-Type
             (Name-In-Cyc Script-Type "#$ScriptType")
             (Collection Script-Type)
             (Subclass-Of Script-Type Situation-Type)
             (Subclass-Of Script-Type Collection)
             (Set-Or-Collection Script-Type)
             (Arity Script-Type 1)
             (Documentation Script-Type
              "Script-Type is the collection of subsets of Event.  Classifying events and (especially) actions by type allows Cyc to reason about the general characteristics of different kinds of occurrences."))

(defrelation |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "NONDECOMPOSABLE-OBJECT")|
             (Skolem-Object
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "NONDECOMPOSABLE-OBJECT")|)
             (Collection
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "NONDECOMPOSABLE-OBJECT")|)
             (Subclass-Of
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "NONDECOMPOSABLE-OBJECT")|
              Individual)
             (Set-Or-Collection
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "NONDECOMPOSABLE-OBJECT")|)
             (Arity
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "NONDECOMPOSABLE-OBJECT")|
              1))

(defrelation Disappointment
             (Name-In-Cyc Disappointment "#$Disappointment")
             (Feeling-Attribute-Type Disappointment)
             (Subclass-Of Disappointment Dissatisfaction)
             (Subclass-Of Disappointment Surprise)
             (Subclass-Of Disappointment Sadness)
             (Set-Or-Collection Disappointment)
             (Arity Disappointment 1)
             (Documentation Disappointment
              "The emotion or state of feeling defeated in expectation or hope.  This is a collection; for an explanation of a typical Feeling-Attribute-Type, see Happiness."))

(defrelation Microscopic-Scale-Object
             (Name-In-Cyc Microscopic-Scale-Object "#$MicroscopicScaleObject")
             (Existing-Object-Type Microscopic-Scale-Object)
             (Subclass-Of Microscopic-Scale-Object Tangible-Thing)
             (Set-Or-Collection Microscopic-Scale-Object)
             (Arity Microscopic-Scale-Object 1)
             (Documentation Microscopic-Scale-Object
              "A collection of objects.  Every instance of Microscopic-Scale-Object is a material object which is so small that human beings cannot perceive it, except (perhaps) with the use of special devices such as electron microscopes.  Some types of Microscopic-Scale-Object include its subsets Molecule, Atom, Sub-Atomic-Particle, Chloroplast, and Mitochondrion."))

(defrelation Solution
             (Name-In-Cyc Solution "#$Solution")
             (Existing-Stuff-Type Solution)
             (Subclass-Of Solution Mixture)
             (Set-Or-Collection Solution)
             (Arity Solution 1)
             (Documentation Solution
              "A collection of tangible stuffs; a subset of Mixture.  Each instance of Solution is a Mixture of two or more chemically distinct substances.  Solutions are homogeneous, meaning that the composition at any one point in the Mixture is the same as that at any other point.  In contrast, a Suspension is a Mixture in which small discontinuous particles are surrounded by a continuous fluid.  Under normal conditions, the Solvent of every Solution has the State-Of-Matter Liquid-State-Of-Matter.  Thus Solutions also normally exhibit the properties of a liquid, since Solvents are Main-Constituents.  Exceptions to this include Gels, in which 'solid-like' properties of the Solution arise from the highly structured orientation of the Solute.  Examples of Solutions: a cup of coffee, a tincture of iodine, some vanilla extract."))

(defrelation Between-On-Path
             (Nth-Domain Between-On-Path 1 Thing)
             (Nth-Domain Between-On-Path 2 Thing)
             (Nth-Domain Between-On-Path 3 Thing)
             (Nth-Domain Between-On-Path 4 Path-Simple)
             (Name-In-Cyc Between-On-Path "#$betweenOnPath")
             (Quaternary-Predicate Between-On-Path)
             (Relation Between-On-Path)
             (Arity Between-On-Path 4)
             (Documentation Between-On-Path
              "(Between-On-Path X Y Z PATH) means that X, Y and Z are points on the path PATH and X is between Y and Z.  Note that this gives no ordering of Y and Z; it just claims that X is between them.  Note: Given a Path-Customary PATH and points or places on PATH, Between-On-Path does not in general determine a linear order (Totally-Ordered-Set) on the set of all points on PATH when PATH is not part of a specified Path-System.  However, in a Path-System SYS, Between-On-Path does determine a linear order on the set of all points on PATH in SYS."))

(defrelation Text-Microtheory
             (Name-In-Cyc Text-Microtheory "#$TextMicrotheory")
             (Object-Type Text-Microtheory)
             (Microtheory-Type Text-Microtheory)
             (Subclass-Of Text-Microtheory Propositional-Information-Thing)
             (Set-Or-Collection Text-Microtheory)
             (Arity Text-Microtheory 1)
             (Documentation Text-Microtheory
              "The collection of Microtheories each of which contains assertions that convey the information content of a particular text.  The propositional content of a text is a Propositional-Information-Thing, and it forms a Text-Microtheory."))

(defrelation |(THE-PARTITION FEMALE-PERSON MALE-PERSON)|
             (Skolem-Object |(THE-PARTITION FEMALE-PERSON MALE-PERSON)|)
             (Disjoint-Set-Or-Collection
              |(THE-PARTITION FEMALE-PERSON MALE-PERSON)|)
             (Set-Mathematical |(THE-PARTITION FEMALE-PERSON MALE-PERSON)|)
             (Subclass-Of |(THE-PARTITION FEMALE-PERSON MALE-PERSON)| Thing)
             (Set-Or-Collection |(THE-PARTITION FEMALE-PERSON MALE-PERSON)|)
             (Arity |(THE-PARTITION FEMALE-PERSON MALE-PERSON)| 1))

(defrelation General-Microtheory
             (Name-In-Cyc General-Microtheory "#$GeneralMicrotheory")
             (Object-Type General-Microtheory)
             (Microtheory-Type General-Microtheory)
             (Subclass-Of General-Microtheory Microtheory)
             (Set-Or-Collection General-Microtheory)
             (Arity General-Microtheory 1)
             (Documentation General-Microtheory
              "The collection consisting of every Microtheory intended to contain general axioms useful for multiple purposes.  This excludes microtheories which deal with specific situations, such as instances of Problem-Solving-Cntxt, microtheories that represent the information content of one specific Information-Bearing-Object such as the US Declaration of Independence.  Examples of this collection are Human-Social-Life-Mt, Buying-Mt, and Naive-Animals-Mt."))

(defrelation Ocean
             (Name-In-Cyc Ocean "#$Ocean")
             (Spatially-Disjoint-Region-Type Ocean)
             (Subclass-Of Ocean Sea)
             (Set-Or-Collection Ocean)
             (Arity Ocean 1)
             (Documentation Ocean
              "A collection of topographical features.  Each instance of Ocean is one of the oceans of the world.  This includes The-Ocean-Sea, the interconnected expanse of salt water covering 71% of the Earth's surface, and of which the other oceans are subregions.  Examples: Atlantic-Ocean, Arctic-Ocean, Indian-Ocean, Pacific-Ocean."))

(defrelation Aquatic-Organism
             (Name-In-Cyc Aquatic-Organism "#$AquaticOrganism")
             (Organism-Type-By-Habitat Aquatic-Organism)
             (Subclass-Of Aquatic-Organism Organism-Whole)
             (Set-Or-Collection Aquatic-Organism)
             (Arity Aquatic-Organism 1)
             (Documentation Aquatic-Organism
              "The collection of organisms adapted to life underwater, which spend all or most of their time immersed in water.  This includes the elements of Fish, also many instances of Mollusk, Sea-Mammal, etc."))

(defrelation Inference-Related-Bookkeeping-Predicate
             (Name-In-Cyc Inference-Related-Bookkeeping-Predicate
              "#$InferenceRelatedBookkeepingPredicate")
             (Predicate-Category Inference-Related-Bookkeeping-Predicate)
             (Collection Inference-Related-Bookkeeping-Predicate)
             (Subclass-Of Inference-Related-Bookkeeping-Predicate
              Bookkeeping-Predicate)
             (Set-Or-Collection Inference-Related-Bookkeeping-Predicate)
             (Arity Inference-Related-Bookkeeping-Predicate 1)
             (Documentation Inference-Related-Bookkeeping-Predicate
              "A collection of predicates.  Each element of Inference-Related-Bookkeeping-Predicate is a predicate involved in assertions used by the Cyc application to direct inferencing.  Examples: Defn-Iff, Defn-Sufficient, Term-Of-Unit, After-Adding."))

(defrelation Molecular-Stuff
             (Name-In-Cyc Molecular-Stuff "#$MolecularStuff")
             (Tangible-Stuff-Composition-Type Molecular-Stuff)
             (Subclass-Of Molecular-Stuff Tangible-Thing)
             (Set-Or-Collection Molecular-Stuff)
             (Arity Molecular-Stuff 1)
             (Documentation Molecular-Stuff
              "A collection of tangible stuff.  Every instance of Molecular-Stuff is a portion of stuff composed of covalently-bonded molecules.  Thus, Water and DNA are subsets of Molecular-Stuff; each of their instances consists of covalently bonded molecules.  But instances of Salt-Na-Cl are not examples of Molecular-Stuff.  Also, Oxygen is not a subset of Molecular-Stuff, since Oxygen denotes anything composed of that element, not just O2 (molecular oxygen) and O3 (ozone). "))

(defrelation Layer
             (Name-In-Cyc Layer "#$Layer")
             (Existing-Object-Type Layer)
             (Subclass-Of Layer Sheet-Of-Some-Stuff)
             (Set-Or-Collection Layer)
             (Arity Layer 1)
             (Documentation Layer
              "The collection of all layers of things, each layer being a Sheet-Of-Some-Stuff that is Sheet-Surface-Connected, or situated adjacent, surface-to-surface, to at least one surface or layer or region on one side, and possibly to other layers or surfaces on both sides.  A layer may be part of a larger object, or it may be an independent whole object such as a hide confined in a stack of hides.  A Layer is not a Free-Sheet.  See the One-Sided-Vs-Two-Sided-Object-Note."))

(defrelation X-Ray
             (Name-In-Cyc X-Ray "#$XRay")
             (Wave-Propagation-Type X-Ray)
             (Subclass-Of X-Ray Electromagnetic-Radiation)
             (Set-Or-Collection X-Ray)
             (Arity X-Ray 1)
             (Documentation X-Ray
              "A collection of events; a subset of Electromagnetic-Radiation.  Each element of X-Ray is an instance of electromagnetic radiation that has a Wavelength range from about 1 Angstrom to 1x10^-3 Angstroms.  Includes X-rays produced both naturally and artificially."))

(defrelation Making-Travel-Arrangements
             (Name-In-Cyc Making-Travel-Arrangements
              "#$MakingTravelArrangements")
             (Temporal-Object-Type Making-Travel-Arrangements)
             (Default-Disjoint-Script-Type Making-Travel-Arrangements)
             (Subclass-Of Making-Travel-Arrangements Purposeful-Action)
             (Set-Or-Collection Making-Travel-Arrangements)
             (Arity Making-Travel-Arrangements 1)
             (Documentation Making-Travel-Arrangements
              "The collection of all events in which an agent arranges for some kind of travel event."))

(defrelation Information-Adding
             (Name-In-Cyc Information-Adding "#$InformationAdding")
             (Temporal-Stuff-Type Information-Adding)
             (Subclass-Of Information-Adding Information-Updating)
             (Set-Or-Collection Information-Adding)
             (Arity Information-Adding 1)
             (Documentation Information-Adding
              "A collection of events; a subset of Information-Updating.  Each element of Information-Adding is an event in which information is added to the information content of an IBO (i.e., an element of Information-Bearing-Object).  After the action, the IBO which is the Information-Destination of the update `has' the new information (i.e., Info-Added).  The resulting information content of that IBO includes both its content immediately prior to the addition, plus the newly added information.  Examples of Information-Adding: recording a check in the check register of one's checkbook; taking the next photograph on a roll of film; adding a new constant to the Cyc-KB."))

(defrelation Commercial-Fishing-Boat
             (Name-In-Cyc Commercial-Fishing-Boat "#$CommercialFishingBoat")
             (Existing-Object-Type Commercial-Fishing-Boat)
             (Product-Type Commercial-Fishing-Boat)
             (Subclass-Of Commercial-Fishing-Boat
              Boat-Water-Transportation-Device)
             (Set-Or-Collection Commercial-Fishing-Boat)
             (Arity Commercial-Fishing-Boat 1)
             (Documentation Commercial-Fishing-Boat
              "The subcollection of Boat-WaterTransportationDevice that contains all fishing boats, including trawlers, seiners, junks etc. that are marine-life-catching devices, and the main purpose of the fishing is commercial.  Note that not all instances of CommercialFishingBoat have to be used exclusively in the ocean--they can also be used in rivers and lakes, etc."))

(defrelation Subway-Station
             (Name-In-Cyc Subway-Station "#$SubwayStation")
             (Existing-Object-Type Subway-Station)
             (Subclass-Of Subway-Station Human-Occupation-Construct)
             (Set-Or-Collection Subway-Station)
             (Arity Subway-Station 1)
             (Documentation Subway-Station
              "The collection of all subway (underground railroad) stations.  These are usually located at least partly underground, on subway tracks, and their primary purpose is to be a place where subway trains discharge and receive passengers."))

(defrelation To-Possessor
             (Synonymous-External-Concept To-Possessor Sensus-Information1997
              "RECIPIENT")
             (Subrelation-Of To-Possessor Post-Actors)
             (Domain To-Possessor Gaining-User-Rights)
             (Range To-Possessor Agent)
             (Name-In-Cyc To-Possessor "#$toPossessor")
             (Process-Predicate To-Possessor)
             (Actor-Slot To-Possessor)
             (Slot To-Possessor)
             (Relation To-Possessor)
             (Arity To-Possessor 2)
             (Binary-Relation To-Possessor)
             (Documentation To-Possessor
              "This predicate identifies an Agent who gains some right to use an object.  (To-Possessor GAIN AGENT) means that after the event GAIN (a Gaining-User-Rights), AGENT enjoys some User-Rights-Attribute over the Object-Of-Possession-Transfer which that agent did not have at the start of GAIN."))

(defrelation Surface-On-Tangible-Object
             (Name-In-Cyc Surface-On-Tangible-Object
              "#$SurfaceOnTangibleObject")
             (Region-Type Surface-On-Tangible-Object)
             (Subclass-Of Surface-On-Tangible-Object Sheet-Of-Some-Stuff)
             (Subclass-Of Surface-On-Tangible-Object Surface-Physical)
             (Set-Or-Collection Surface-On-Tangible-Object)
             (Arity Surface-On-Tangible-Object 1)
             (Documentation Surface-On-Tangible-Object
              "The collection of all physical surfaces (or portions or patches of surfaces) of Tangible-Things."))

(defrelation Resembles-In-Attribute
             (Overlapping-External-Concept Resembles-In-Attribute
              Sensus-Information1997 "SIMILARITY")
             (Nth-Domain Resembles-In-Attribute 1 Thing)
             (Nth-Domain Resembles-In-Attribute 2 Thing)
             (Nth-Domain Resembles-In-Attribute 3 Attribute-Type)
             (Name-In-Cyc Resembles-In-Attribute "#$resemblesInAttribute")
             (Ternary-Predicate Resembles-In-Attribute)
             (Relation Resembles-In-Attribute)
             (Arity Resembles-In-Attribute 3)
             (Documentation Resembles-In-Attribute
              "(Resembles-In-Attribute THING1 THING2 ATTRIBUTE) means that the two things THING1 and THING2 resemble each other in their values of the Attribute-Type ATTRIBUTE.  Here 'resembles' means has a 'close' or similar value in that attribute -- what this means, and what the standard of closeness or similarity is, depends on the context.  See also Identical-In-Attribute and Different-In-Attribute."))

(defrelation Mineral
             (Name-In-Cyc Mineral "#$Mineral")
             (Existing-Stuff-Type Mineral)
             (Subclass-Of Mineral Solid-Tangible-Thing)
             (Subclass-Of Mineral Natural-Tangible-Stuff)
             (Subclass-Of Mineral Inorganic-Stuff)
             (Set-Or-Collection Mineral)
             (Arity Mineral 1)
             (Documentation Mineral
              "A collection of tangible things.  Each element of Mineral is a piece of homogeneous inorganic physical substance that has a crystalline structure.  For example, instances of Diamond, Turquoise-Gem, Jade-Gem, Corundum."))

(defobject |(MEDIUM-AMOUNT-FN BIO-DETERIORATION-RESISTANCE)|
   (Scalar-Interval |(MEDIUM-AMOUNT-FN BIO-DETERIORATION-RESISTANCE)|)
   (Bio-Deterioration-Resistance
    |(MEDIUM-AMOUNT-FN BIO-DETERIORATION-RESISTANCE)|)
   (Skolem-Object |(MEDIUM-AMOUNT-FN BIO-DETERIORATION-RESISTANCE)|))

(defrelation Edge-On-Object
             (Name-In-Cyc Edge-On-Object "#$EdgeOnObject")
             (Region-Type Edge-On-Object)
             (Subclass-Of Edge-On-Object Path-Simple)
             (Subclass-Of Edge-On-Object Partially-Tangible)
             (Set-Or-Collection Edge-On-Object)
             (Arity Edge-On-Object 1)
             (Documentation Edge-On-Object
              "The collection of all edges on objects.  For a two-dimensional object, its boundaries other than corners are it edges.  For a three dimensional object the edges are the outer portions of those extremities, excluding any corners (Corner-2or3d), that are much more acute in cross section in one direction than in most other directions at the same point.  Some objects, like spheres, hairs, poles and typical burrs, have no edges.  A discus has one, round, edge; a typical sheet has four edges.  A mountain ridge might have only a single edge.  A solid polyhedron has six or more edges."))

(defrelation Different-In-Attribute
             (Nth-Domain Different-In-Attribute 1 Thing)
             (Nth-Domain Different-In-Attribute 2 Thing)
             (Nth-Domain Different-In-Attribute 3 Attribute-Type)
             (Name-In-Cyc Different-In-Attribute "#$differentInAttribute")
             (Ternary-Predicate Different-In-Attribute)
             (Relation Different-In-Attribute)
             (Arity Different-In-Attribute 3)
             (Documentation Different-In-Attribute
              "(Different-In-Attribute THING1 THING2 ATTRIBUTE) means that the two things THING1 and THING2 do not have the same values of the Attribute-Type ATTRIBUTE.  Here 'the same' could mean means complete identity or close resemblance -- what this 'different' means, and what the standard of closeness or identity is, depends on the context, but Different-In-Attribute and Identical-In-Attribute cannot both be correctly asserted of the same two things.  See also Resembles-In-Attribute, and Different-In-Attribute."))

(defrelation Above-Ground-Level-In-A-Construction
             (Name-In-Cyc Above-Ground-Level-In-A-Construction
              "#$AboveGroundLevelInAConstruction")
             (Existing-Object-Type Above-Ground-Level-In-A-Construction)
             (Subclass-Of Above-Ground-Level-In-A-Construction
              Level-Of-A-Construction)
             (Subclass-Of Above-Ground-Level-In-A-Construction
              Container-Product)
             (Set-Or-Collection Above-Ground-Level-In-A-Construction)
             (Arity Above-Ground-Level-In-A-Construction 1)
             (Documentation Above-Ground-Level-In-A-Construction
              "This refers to first floor and up. We created this to make the distinction between basements and non-basements.  We'd like to be able to talk about, count, etc. the levels above ground."))

(defrelation Social-Gathering
             (Name-In-Cyc Social-Gathering "#$SocialGathering")
             (Script-Type Social-Gathering)
             (Subclass-Of Social-Gathering Human-Activity)
             (Subclass-Of Social-Gathering Purposeful-Action)
             (Subclass-Of Social-Gathering Social-Occurrence)
             (Set-Or-Collection Social-Gathering)
             (Arity Social-Gathering 1)
             (Documentation Social-Gathering
              "The collection of intentional social gatherings of people who have the same or similar purposes in attending, and in which there is communication between the participants.  E.g., a party, a conference, a wedding, etc.
Note:  A group of people waiting to board an elevator is not typically a Social-Gathering, even though they share a common purpose, since they are not expected to talk to each other."))

(defrelation Cooling-Process
             (Name-In-Cyc Cooling-Process "#$CoolingProcess")
             (Temporal-Stuff-Type Cooling-Process)
             (Default-Disjoint-Script-Type Cooling-Process)
             (Subclass-Of Cooling-Process Temperature-Changing-Process)
             (Set-Or-Collection Cooling-Process)
             (Arity Cooling-Process 1)
             (Documentation Cooling-Process
              "Cooling-Process is a collection of events, and a subset of Temperature-Changing-Process.  During each Cooling-Process event, the temperature of the Object-Of-State-Change is decreased by removing heat from the object."))

(defrelation Cyc-System-Symbol
             (Name-In-Cyc Cyc-System-Symbol "#$CycSystemSymbol")
             (Object-Type Cyc-System-Symbol)
             (Collection Cyc-System-Symbol)
             (Subclass-Of Cyc-System-Symbol Cyc-System-Atom)
             (Subclass-Of Cyc-System-Symbol Individual)
             (Set-Or-Collection Cyc-System-Symbol)
             (Arity Cyc-System-Symbol 1)
             (Documentation Cyc-System-Symbol
              "A collection of symbolic atomic terms, namely, all those things that satisfy the  definition of a symbol in the Cyc system.  Every element of Cyc-System-Symbol satisfies the Heuristic Level (SubL) Defn-Iff SYMBOLP.  Such terms cannot include numbers or strings (i.e., they must be symbolic), nor can they include lists, non-reified function terms, or axioms (i.e., they must be atomic)."))

(deffunction Difference-Fn
   (Nth-Domain Difference-Fn 1 Scalar-Interval)
   (Nth-Domain Difference-Fn 2 Scalar-Interval)
   (Result-Instance-Of Difference-Fn Scalar-Interval)
   (Name-In-Cyc Difference-Fn "#$DifferenceFn")
   (Function-From-Quantities-To-Quantities Difference-Fn)
   (Non-Predicate-Function Difference-Fn)
   (Evaluatable-Function Difference-Fn)
   (Function Difference-Fn)
   (Arity Difference-Fn 2)
   (Function-Arity Difference-Fn 1)
   (Binary-Relation Difference-Fn)
   (Documentation Difference-Fn
    "Difference-Fn is Cyc's subtraction operator; it is a binary mathematical function.  (Difference-Fn MINUEND SUBTRAHEND) yields a new quantity that is the result of subtracting SUBTRAHEND from MINUEND.  Both arguments to Difference-Fn must be elements of Scalar-Interval, as is its result.  Examples: (Difference-Fn 88 11) returns 77; (Difference-Fn (Kilogram 4.2) (Kilogram 3)) returns (Kilogram 1.2)."))

(defrelation Fog
             (Name-In-Cyc Fog "#$Fog")
             (Existing-Stuff-Type Fog)
             (Subclass-Of Fog Cloud-Of-H2o)
             (Subclass-Of Fog Gaseous-Tangible-Thing)
             (Set-Or-Collection Fog)
             (Arity Fog 1)
             (Documentation Fog
              "The collection of clouds (instances of Cloud-Of-H2O) that cover a Geographical-Region at ground-level."))

(defrelation Sunrise
             (Name-In-Cyc Sunrise "#$Sunrise")
             (Script-Type Sunrise)
             (Temporal-Object-Type Sunrise)
             (Subclass-Of Sunrise Qualitative-Time-Of-Day)
             (Set-Or-Collection Sunrise)
             (Arity Sunrise 1)
             (Documentation Sunrise
              "Each Sunrise is an Event where, at a given location, the Sun appears to clear the horizon as it `rises'.  This event is construed to occur regardless of the visibility of the Sun due to obscuring objects such as clouds.  Every Sunrise is Contiguous-After a Dawn, and every Daytime-Hours is Temporally-Started-By a Sunrise."))

(defrelation |(THE-COVERING ORGANIZATIONAL-TRANSFER-IN ORGANIZATIONAL-TRANSFER-OUT)|
             (Skolem-Object
              |(THE-COVERING ORGANIZATIONAL-TRANSFER-IN ORGANIZATIONAL-TRANSFER-OUT)|)
             (Set-Mathematical
              |(THE-COVERING ORGANIZATIONAL-TRANSFER-IN ORGANIZATIONAL-TRANSFER-OUT)|)
             (Subclass-Of
              |(THE-COVERING ORGANIZATIONAL-TRANSFER-IN ORGANIZATIONAL-TRANSFER-OUT)|
              Thing)
             (Set-Or-Collection
              |(THE-COVERING ORGANIZATIONAL-TRANSFER-IN ORGANIZATIONAL-TRANSFER-OUT)|)
             (Arity
              |(THE-COVERING ORGANIZATIONAL-TRANSFER-IN ORGANIZATIONAL-TRANSFER-OUT)|
              1))

(defrelation Inorganic-Stuff
             (Name-In-Cyc Inorganic-Stuff "#$InorganicStuff")
             (Existing-Stuff-Type Inorganic-Stuff)
             (Subclass-Of Inorganic-Stuff Inanimate-Thing)
             (Subclass-Of Inorganic-Stuff Tangible-Thing)
             (Set-Or-Collection Inorganic-Stuff)
             (Arity Inorganic-Stuff 1)
             (Documentation Inorganic-Stuff
              "A collection of tangible things.  Each element of Inorganic-Stuff is a tangible thing which is wholly composed of one or more types of inorganic Molecule.  Instances of Inorganic-Stuff usually didn't originate as parts or products of living things."))

(defrelation Navigating
             (Name-In-Cyc Navigating "#$Navigating")
             (Temporal-Stuff-Type Navigating)
             (Script-Type Navigating)
             (Subclass-Of Navigating Purposeful-Action)
             (Subclass-Of Navigating Thinking)
             (Set-Or-Collection Navigating)
             (Arity Navigating 1)
             (Documentation Navigating
              "The collection of all events in which the performer determines the location of an object in some frame of reference, and determines the direction the object should travel to reach some destination.  Navigating usually involves using some devices (compass, clock, etc.) as aids"))

(defrelation Speaking
             (Name-In-Cyc Speaking "#$Speaking")
             (Temporal-Stuff-Type Speaking)
             (Default-Disjoint-Script-Type Speaking)
             (Subclass-Of Speaking Making-An-Oral-Sound)
             (Subclass-Of Speaking Ibt-Generation)
             (Set-Or-Collection Speaking)
             (Arity Speaking 1)
             (Documentation Speaking "The collection of actions generating 
Utterances which are speech. A subset of Talking: hence,
Speaking normally includes
only those Utterances using Language as a communication convention, unlike
other Utterances, such as Booing and Cheering."))

(defrelation Paper
             (Name-In-Cyc Paper "#$Paper")
             (Tangible-Stuff-Composition-Type Paper)
             (Product-Type Paper)
             (Subclass-Of Paper Tangible-Product)
             (Subclass-Of Paper Solid-Tangible-Thing)
             (Set-Or-Collection Paper)
             (Arity Paper 1)
             (Documentation Paper "A collection of tangible things.  
Each element of Paper is a portion of paper, considered
as a 'stuff' out of which things can be made, like
metal or plastic.  Thus, this collection includes
the collection Sheet-Of-Paper, but is wider.
Important sources from which paper may be Derived-From 
include wood pulp, cotton, papyrus, rice.  
Examples: business stationery, Maxi-Pads, paper currency, 
toilet paper, newsprint, paper coffee filters, notebook paper."))

(defrelation Path-Simple
             (Name-In-Cyc Path-Simple "#$Path-Simple")
             (Collection Path-Simple)
             (Subclass-Of Path-Simple Path-Generic)
             (Set-Or-Collection Path-Simple)
             (Arity Path-Simple 1)
             (Documentation Path-Simple
              "A collection of non-cyclic paths, broadly conceived.  Each instance of Path-Simple has two ends and it forms a Path-Between them.  It can be a road, railroad, air lane, sea lane, channel, blood vessel, part of an electric circuit, part of a pipe system, or even some abstract chain of connections among people or a 'path' in Graph Theory.  A Path-Simple cannot cross itself, return to the same point, nor double back along itself.  Each Path-Simple has two distinct ends that do not 'overlap' each other.  But in general a path may have more than two things that are its 'end-points' -- for example, a path between Austin and Pittsburgh can also be a path between Texas and Pennsylvania.  In such an example Texas and Pennsylvania are required to be spatially disjoint.   (To prohibit multiple things being an end-point of a path simultaneously, specify a Path-System, because in a specified Path-System a path's two end points in the system are unique.  The predicate Path-Between-In-System is restricted to a set of paths and points specified for the particular Path-System.)  For a Path-Simple any points on it (e.g., Point-On-Path X PATH) are connected: 'Path-Connects' is true of them.  Any number of intersections may occur along a Path-Simple.   A path is different from a Traversal or a Trajectory: a traversal is the trace of an object moving along a path or in a Path-System, and the Traversal can cross itself and/or double back along itself any number of times.  While a path is fixed and may have no direction, a traversal has a particular direction.  Many distinct traversals may traverse the same underlying path (see Traversal and Traversal-In-System), since a traversal can go back and forth across the same part of a path any number of times.  A Trajectory (a trace of motion) along paths is a Traversal."))

(defrelation Bilaterally-Symmetric-Object
             (Name-In-Cyc Bilaterally-Symmetric-Object
              "#$BilaterallySymmetricObject")
             (Existing-Object-Type Bilaterally-Symmetric-Object)
             (Subclass-Of Bilaterally-Symmetric-Object Spatial-Thing)
             (Set-Or-Collection Bilaterally-Symmetric-Object)
             (Arity Bilaterally-Symmetric-Object 1)
             (Documentation Bilaterally-Symmetric-Object
              "The collection of objects which are symmetric on both sides of a bisecting axis, as are most vertebrates."))

(defrelation Connection-Predicate
             (Name-In-Cyc Connection-Predicate "#$ConnectionPredicate")
             (Relationship-Type Connection-Predicate)
             (Subclass-Of Connection-Predicate Cotemporal-Predicate)
             (Set-Or-Collection Connection-Predicate)
             (Arity Connection-Predicate 1)
             (Documentation Connection-Predicate
              "A collection of predicates.  Each element of Connection-Predicate is a predicate that specifies physical connections between objects.  Examples: Nailed-To, Riveted-To, Connected-To-Rigidly, Rotationally-Connected-To, Hangs-From, In-Embedded."))

(defrelation Natural-Tangible-Stuff
             (Name-In-Cyc Natural-Tangible-Stuff "#$NaturalTangibleStuff")
             (Existing-Stuff-Type Natural-Tangible-Stuff)
             (Subclass-Of Natural-Tangible-Stuff Tangible-Thing)
             (Set-Or-Collection Natural-Tangible-Stuff)
             (Arity Natural-Tangible-Stuff 1)
             (Documentation Natural-Tangible-Stuff
              "A collection of naturally occurring tangible things.  Each element of Natural-Tangible-Stuff is a naturally occurring tangible thing, including, for example, elements of its subsets Earth-Stuff, Wood, and Air.  Man-made materials are NOT included in Natural-Tangible-Stuff."))

(defrelation Partially-Intangible
             (Name-In-Cyc Partially-Intangible "#$PartiallyIntangible")
             (Object-Type Partially-Intangible)
             (Temporal-Stuff-Type Partially-Intangible)
             (Subclass-Of Partially-Intangible Something-Existing)
             (Set-Or-Collection Partially-Intangible)
             (Arity Partially-Intangible 1)
             (Documentation Partially-Intangible
              "The collection of things having an intangible component but which exist in time.  Some, but not all, elements of Partially-Intangible have a tangible component; some are just those elements of Intangible which do exist in time (Intangible-Existing-Thing), such as the laws of the state of Texas, your bank account, etc.  Since some elements of Intangible have no temporal aspect (e.g., the number 42), Intangible is NOT a subset of Partially-Intangible."))

(defrelation Unit-Of-Area
             (Name-In-Cyc Unit-Of-Area "#$UnitOfArea")
             (Interconvertible-Unit-Type Unit-Of-Area)
             (Subclass-Of Unit-Of-Area Unit-Of-Measure)
             (Set-Or-Collection Unit-Of-Area)
             (Arity Unit-Of-Area 1)
             (Documentation Unit-Of-Area
              "The collection of functions which return elements of Area; e.g., (Square-Yard 4) returns an area of 4 square yards."))

(defrelation Bus-Road-Vehicle
             (Transport-Via-Fn Bus-Road-Vehicle
              |(TRANSPORT-VIA-FN BUS-ROAD-VEHICLE)|)
             (Name-In-Cyc Bus-Road-Vehicle "#$Bus-RoadVehicle")
             (Product-Type Bus-Road-Vehicle)
             (Existing-Object-Type Bus-Road-Vehicle)
             (Subclass-Of Bus-Road-Vehicle Road-Vehicle)
             (Set-Or-Collection Bus-Road-Vehicle)
             (Arity Bus-Road-Vehicle 1)
             (Documentation Bus-Road-Vehicle
              "The collection of all buses, transport vehicles for ground transportation of many (they have room for at least 10, probably fewer than 60) people.  A bus usually is driven by a professional bus driver."))

(deffunction Gram
   (Args-Isa Gram Real-Number)
   (Result-Instance-Of Gram Mass)
   (Result-Instance-Of Gram Scalar-Interval)
   (Name-In-Cyc Gram "#$Gram")
   (Unit-Of-Mass Gram)
   (Unit-Of-Measure-No-Prefix Gram)
   (Cgs-Unit-Of-Measure Gram)
   (Function Gram)
   (Documentation Gram
    "The measurement function used in Cyc to represent the gram used within the Metric system to measure mass.  See also CGS-Unit-Of-Measure, Unit-Of-Measure."))

(defrelation Destruction-Event
             (Name-In-Cyc Destruction-Event "#$DestructionEvent")
             (Temporal-Object-Type Destruction-Event)
             (Script-Type Destruction-Event)
             (Subclass-Of Destruction-Event Creation-Or-Destruction-Event)
             (Set-Or-Collection Destruction-Event)
             (Arity Destruction-Event 1)
             (Documentation Destruction-Event
              "A collection of events.  In each element of Destruction-Event, at least one instance of Entity (the Inputs-Destroyed) ceases to exist."))

(defrelation Electromagnetic-Radiation
             (Name-In-Cyc Electromagnetic-Radiation
              "#$ElectromagneticRadiation")
             (Wave-Propagation-Type Electromagnetic-Radiation)
             (Default-Disjoint-Script-Type Electromagnetic-Radiation)
             (Subclass-Of Electromagnetic-Radiation Wave-Propagation)
             (Set-Or-Collection Electromagnetic-Radiation)
             (Arity Electromagnetic-Radiation 1)
             (Documentation Electromagnetic-Radiation
              "A collection of events; a subset of Wave-Propagation.  Each element of Electromagnetic-Radiation is an event that arises from the interaction of an electrical field and a magnetic field.  Examples include the elements of the collections Visible-Light, Radio-Waves, and X-Rays."))

(defobject |(VERY-LOW-AMOUNT-FN RIGIDITY)|
   (Scalar-Interval |(VERY-LOW-AMOUNT-FN RIGIDITY)|)
   (Rigidity |(VERY-LOW-AMOUNT-FN RIGIDITY)|)
   (Skolem-Object |(VERY-LOW-AMOUNT-FN RIGIDITY)|))

(defrelation Turning-On-Powered-Device
             (Name-In-Cyc Turning-On-Powered-Device "#$TurningOnPoweredDevice")
             (Temporal-Object-Type Turning-On-Powered-Device)
             (Default-Disjoint-Script-Type Turning-On-Powered-Device)
             (Subclass-Of Turning-On-Powered-Device Changing-Device-State)
             (Set-Or-Collection Turning-On-Powered-Device)
             (Arity Turning-On-Powered-Device 1)
             (Documentation Turning-On-Powered-Device
              "The collection of actions in which the Device-State of a Physical-Device changes from Device-Off to Device-On."))

(defrelation Ibt-Generation
             (Name-In-Cyc Ibt-Generation "#$IBTGeneration")
             (Temporal-Object-Type Ibt-Generation)
             (Subclass-Of Ibt-Generation Action)
             (Subclass-Of Ibt-Generation Transfer-Out)
             (Subclass-Of Ibt-Generation Information-Transfer-Event)
             (Set-Or-Collection Ibt-Generation)
             (Arity Ibt-Generation 1)
             (Documentation Ibt-Generation
              "A collection of information transfer events.  Each element of IBT-Generation is an event which creates some information-bearing thing--thus, an event in which some idea or information is expressed.  In elements of IBT-Generation, the particular IBT (i.e., element of Information-Bearing-Thing) which is created may be either a transient wave phenomenon (e.g., made of sound, light, or radio waves), or it may be a relatively long-lasting instance of Information-Bearing-Object (cf. IBO-Creation).  Humans frequently generate such IBTs as spoken language, gestures, and handwritten notes.  It is irrelevant for elements of IBT-Generation whether there is another agent who immediately (or, indeed, ever) accesses the resulting IBTs.  Note the difference: reading is NOT an IBT generation event, but writing (usually) is.  IBTs may be generated intentionally or unintentionally.  Also, every communication act starts with an instance of IBT-Generation.  See also: Communicating and its subsets, esp. Communication-Act-Single."))

(defrelation Night
             (Name-In-Cyc Night "#$Night")
             (Script-Type Night)
             (Temporal-Object-Type Night)
             (Subclass-Of Night Qualitative-Time-Of-Day)
             (Set-Or-Collection Night)
             (Arity Night 1)
             (Documentation Night
              "Night is the temporal complement of Daytime-Hours:  each Night is Contiguous-After one Daytime-Hours, and vice versa.  Each Night intersects two different Calendar-Days.  Each Night is Temporally-Started-By a Dusk, Temporally-Finished-By a Dawn, Contiguous-After a Sunset, and has a Sunrise which is Contiguous-After it."))

(defrelation Shelter-Construction
             (Name-In-Cyc Shelter-Construction "#$ShelterConstruction")
             (Existing-Object-Type Shelter-Construction)
             (Subclass-Of Shelter-Construction Artifact)
             (Set-Or-Collection Shelter-Construction)
             (Arity Shelter-Construction 1)
             (Documentation Shelter-Construction
              "A collection of artificial tangible objects.  Each element of Shelter-Construction is an artifact built by some entity or creature, including but not limited to humans, and intended for use as a shelter.  Elements of Shelter-Construction include bird nests, termite mounds, beaver dams, the Sydney-Opera-House, the Palace-Of-Fine-Arts-San-Francisco, and the New-York-Hilton-At-Broadway."))

(defrelation Something-Existing
             (Name-In-Cyc Something-Existing "#$SomethingExisting")
             (Temporal-Stuff-Type Something-Existing)
             (Subclass-Of Something-Existing Temporal-Thing)
             (Set-Or-Collection Something-Existing)
             (Arity Something-Existing 1)
             (Documentation Something-Existing
              "Something-Existing is the subset of Temporal-Thing whose elements are more or less static, at least compared to the highly dynamic elements of Event.   The clearest examples of Something-Existing are tangible things, like people, lakes, stars, the Earth's ionosphere, etc.  Some elements of Intangible, such as agreements and obligations, also exist stably in time over their lifetime (rather than `happening'), and thus both Agreement and Obligation are subsets of (i.e., have the :Direct-Superclasses) Something-Existing)."))

(defrelation Translation-Non-Periodic
             (Name-In-Cyc Translation-Non-Periodic "#$Translation-NonPeriodic")
             (Temporal-Object-Type Translation-Non-Periodic)
             (Subclass-Of Translation-Non-Periodic Movement-Translation-Event)
             (Subclass-Of Translation-Non-Periodic Movement-Non-Periodic)
             (Set-Or-Collection Translation-Non-Periodic)
             (Arity Translation-Non-Periodic 1)
             (Documentation Translation-Non-Periodic
              "The collection of all non-periodic translational movement
events, i.e., the intersection of Movement-Non-Periodic and
Movement-Translation-Event.  In each instance of
Translation-Non-Periodic, the Object-Moving is in translational
motion and does not move back the same position on the regular
temporal basis (it can visit the same location multiple times, just not regularly)."))

(defrelation Actor-Slot
             (Name-In-Cyc Actor-Slot "#$ActorSlot")
             (Predicate-Category Actor-Slot)
             (Subclass-Of Actor-Slot Extensional-Representation-Predicate)
             (Subclass-Of Actor-Slot Slot)
             (Subclass-Of Actor-Slot Role)
             (Set-Or-Collection Actor-Slot)
             (Arity Actor-Slot 1)
             (Documentation Actor-Slot
              "A collection of binary predicates.  Each element of Actor-Slot relates some instance of Event to a thing involved in that event (here called a `participant').  The first argument of every Actor-Slot is an instance of Event, and the second argument is an instance of Something-Existing, denoting a participant in that event.  Each specialized actor slot indicates HOW its participant participates in the event, i.e., in what role (e.g., Inputs, Outputs, Done-By).  `Participant' does NOT include the time of the event's occurrence, external representations of the event, and other more remotely related things that are not directly or indirectly `involved' in the occurrence of the event."))

(defrelation Muscle-Tissue
             (Name-In-Cyc Muscle-Tissue "#$MuscleTissue")
             (Existing-Stuff-Type Muscle-Tissue)
             (Subclass-Of Muscle-Tissue Biological-Living-Object)
             (Subclass-Of Muscle-Tissue Solid-Tangible-Thing)
             (Set-Or-Collection Muscle-Tissue)
             (Arity Muscle-Tissue 1)
             (Documentation Muscle-Tissue
              "The collection of all instances of muscle tissue, considered as an Organic-Stuff; that is, the collection of all tissue composing the biological organs that convert chemical energy into mechanical energy.  E.g., the elements of Biceps, Triceps, Heart, Stomach, all consist of some type of Muscle-Tissue."))

(defobject Brazil
   (Entity Brazil)
   (Independent-Country Brazil)
   (Name-In-Cyc Brazil "#$Brazil")
   (Documentation Brazil
    "Brazil throughout time, both political and physical aspects."))

(defrelation Object-Found-In-Location
             (not (Symmetric-Binary-Predicate Object-Found-In-Location))
             (not (Anti-Symmetric-Binary-Predicate Object-Found-In-Location))
             (not (Asymmetric-Binary-Predicate Object-Found-In-Location))
             (Subrelation-Of Object-Found-In-Location In-Region)
             (Subrelation-Of Object-Found-In-Location Cotemporal)
             (Domain Object-Found-In-Location Partially-Tangible)
             (Range Object-Found-In-Location Spatial-Thing)
             (Name-In-Cyc Object-Found-In-Location "#$objectFoundInLocation")
             (Reflexive-Binary-Predicate Object-Found-In-Location)
             (Transitive-Binary-Predicate Object-Found-In-Location)
             (Cotemporal-Objects-Slot Object-Found-In-Location)
             (Slot Object-Found-In-Location)
             (Relation Object-Found-In-Location)
             (Arity Object-Found-In-Location 2)
             (Binary-Relation Object-Found-In-Location)
             (Documentation Object-Found-In-Location
              "(Object-Found-In-Location OBJ LOC) means that OBJ has the location LOC. OBJ is not a part of LOC.  Examples: the Arc-De-Triomphe is located in the City-Of-Paris-France; the Alaskan-Pipeline is found in Alaska-State; the Town-Of-Gettysburg-PA is located in the Eastern region of Pennsylvania (note that the town's territory is part of Pennsylvania, but the town as a social organization is distinct).  See also the :Documentation on In-Region.  Cf., for cases where OBJ is a spatial part of LOC, Physical-Decompositions, Geographical-Sub-Regions."))

(defrelation External-Surface-Whole-Thing
             (Name-In-Cyc External-Surface-Whole-Thing
              "#$ExternalSurface-WholeThing")
             (Region-Type External-Surface-Whole-Thing)
             (Subclass-Of External-Surface-Whole-Thing
              Surface-On-Tangible-Object)
             (Set-Or-Collection External-Surface-Whole-Thing)
             (Arity External-Surface-Whole-Thing 1)
             (Documentation External-Surface-Whole-Thing
              "The collection of all entire outer physical surfaces of tangible objects.  Excludes mere patches or portions of the whole surface of an object."))

(defrelation Shattering-Event
             (Name-In-Cyc Shattering-Event "#$ShatteringEvent")
             (Script-Type Shattering-Event)
             (Subclass-Of Shattering-Event Separation-Complete)
             (Subclass-Of Shattering-Event Separation-Event)
             (Subclass-Of Shattering-Event Destruction-Event)
             (Set-Or-Collection Shattering-Event)
             (Arity Shattering-Event 1)
             (Documentation Shattering-Event
              "A collection of events.  In each Shattering-Event, something is destroyed by being broken into a mob of pieces. [A `mob' means `a large but indeterminate number']   Since the salient parts of the Inputs-Destroyed must be Brittle in order for this to happen, fluids (such as liquid water) and elastic stuff (such as rubber at room temperature) will generally not undergo any Shattering-Events.  Items which can be an Object-Acted-On in shattering events are typically made of glass, pottery, bone, plaster, etc.  Many substances, particularly solid metals and alloys, are extremely difficult to shatter."))

(defrelation Medical-Care-Institution
             (Name-In-Cyc Medical-Care-Institution "#$MedicalCareInstitution")
             (Existing-Object-Type Medical-Care-Institution)
             (Subclass-Of Medical-Care-Institution Medical-Care-Organization)
             (Set-Or-Collection Medical-Care-Institution)
             (Arity Medical-Care-Institution 1)
             (Documentation Medical-Care-Institution
              "Large organizations that provide medical or psychiatric care and have facilities for patients to stay at least overnight."))

(defrelation Island-Area
             (Name-In-Cyc Island-Area "#$IslandArea")
             (Existing-Object-Type Island-Area)
             (Subclass-Of Island-Area Islands-And-Island-Group)
             (Set-Or-Collection Island-Area)
             (Arity Island-Area 1))

(defrelation Inter-Arg-Isa2-1
             (Nth-Domain Inter-Arg-Isa2-1 1 Predicate)
             (Nth-Domain Inter-Arg-Isa2-1 2 Collection)
             (Nth-Domain Inter-Arg-Isa2-1 3 Collection)
             (Name-In-Cyc Inter-Arg-Isa2-1 "#$interArgIsa2-1")
             (Ternary-Predicate Inter-Arg-Isa2-1)
             (Meta-Relation Inter-Arg-Isa2-1)
             (Rule-Macro-Predicate Inter-Arg-Isa2-1)
             (Relation Inter-Arg-Isa2-1)
             (Arity Inter-Arg-Isa2-1 3)
             (Documentation Inter-Arg-Isa2-1
              "(Inter-Arg-Isa2-1 PRED INDEPENDENT-ARG-COL DEPENDENT-ARG-COL) means that, when an instance of INDEPENDENT-ARG-COL appears as the second argument to PRED, the first argument in that assertion is constrained to be an instance of DEPENDENT-ARG-COL."))

(defobject A-Few-Years-Duration
   (Time-Quantity A-Few-Years-Duration)
   (Order-Of-Magnitude-Interval A-Few-Years-Duration)
   (Name-In-Cyc A-Few-Years-Duration "#$AFewYearsDuration")
   (Documentation A-Few-Years-Duration "Duration of 2 to 10 years"))

(defrelation Dead-Language
             (Name-In-Cyc Dead-Language "#$DeadLanguage")
             (Object-Type Dead-Language)
             (Subclass-Of Dead-Language Natural-Language)
             (Set-Or-Collection Dead-Language)
             (Arity Dead-Language 1)
             (Documentation Dead-Language
              "A subset of Natural-Language.  Each element of Dead-Language is a natural language that is no longer spoken as a native language."))

(defrelation Noble-Gas
             (Name-In-Cyc Noble-Gas "#$NobleGas")
             (Tangible-Stuff-Composition-Type Noble-Gas)
             (Subclass-Of Noble-Gas Element-Stuff)
             (Set-Or-Collection Noble-Gas)
             (Arity Noble-Gas 1)
             (Documentation Noble-Gas
              "All pieces of all substances that are comprised of one type of noble gas"))

(defobject |(LOW-AMOUNT-FN RIGIDITY)|
   (Scalar-Interval |(LOW-AMOUNT-FN RIGIDITY)|)
   (Rigidity |(LOW-AMOUNT-FN RIGIDITY)|)
   (Skolem-Object |(LOW-AMOUNT-FN RIGIDITY)|))

(defrelation Independent-Organization
             (Name-In-Cyc Independent-Organization "#$IndependentOrganization")
             (Existing-Object-Type Independent-Organization)
             (Subclass-Of Independent-Organization Organization)
             (Set-Or-Collection Independent-Organization)
             (Arity Independent-Organization 1)
             (Documentation Independent-Organization
              "A collection of organizations.  An element of Independent-Organization is an organization which is not affiliated with any Chain-Organization and that is not a sub-organization of any other Organization.  An independent organization is neither the top-level organization of a chain, nor a lower level organization in a chain, nor is it an element of Chain-Organization.  Note, however, that an Independent-Organization may have several locations within a small geographical region; e.g., Texas French Bread (a single, independent business) has multiple locations in Austin, TX."))

(defrelation Authorized-Agreement
             (Name-In-Cyc Authorized-Agreement "#$AuthorizedAgreement")
             (Existing-Object-Type Authorized-Agreement)
             (Subclass-Of Authorized-Agreement Agreement)
             (Set-Or-Collection Authorized-Agreement)
             (Arity Authorized-Agreement 1)
             (Documentation Authorized-Agreement
              "The collection of generic agreements that are authorized by one of the agreeing parties (typically by the issuer of the document embodying the agreement).  Authorized-Agreements are generic in the sense that their authorizing agents are party to many similar agreements; for that reason, an Authorized-Agreement is typically given a unique identification number.  Examples: bank accounts, driver's licenses, stock certificates."))

(defrelation Continent
             (Name-In-Cyc Continent "#$Continent")
             (Existing-Object-Type Continent)
             (Subclass-Of Continent Land-Body)
             (Subclass-Of Continent Land-Topographical-Feature)
             (Set-Or-Collection Continent)
             (Arity Continent 1)
             (Documentation Continent
              "A collection of topographical features.  The elements of Continent are the seven main land masses on the surface of the earth (plus Eurasia added as a super-region of Europe and Asia).  Elements: Continent-Of-Africa, Continent-Of-Antarctica, Continent-Of-Asia, Australia, Continent-Of-Europe, Continent-Of-Eurasia, Continent-Of-North-America, Continent-Of-South-America."))

(defrelation Light-Intensity
             (Name-In-Cyc Light-Intensity "#$LightIntensity")
             (Primitive-Attribute-Type Light-Intensity)
             (Subclass-Of Light-Intensity Physical-Attribute)
             (Subclass-Of Light-Intensity Sensory-Attribute)
             (Subclass-Of Light-Intensity Scalar-Interval)
             (Set-Or-Collection Light-Intensity)
             (Arity Light-Intensity 1)
             (Documentation Light-Intensity
              "A collection of attributes; a subset of Scalar-Interval.  Each element of Light-Intensity is a characterization of how brightly illuminated a location is.  (At the low extreme is total darkness.)  The light intensity of a location is indicated with the predicate Illumination-Level."))

(defrelation Physical-Urge-Type
             (Name-In-Cyc Physical-Urge-Type "#$PhysicalUrgeType")
             (Primitive-Attribute-Type Physical-Urge-Type)
             (Subclass-Of Physical-Urge-Type Sensory-Reaction-Type)
             (Set-Or-Collection Physical-Urge-Type)
             (Arity Physical-Urge-Type 1)
             (Documentation Physical-Urge-Type
              "A collection of collections, and also a subset of Sensory-Reaction-Type (qv). Its elements are distinct from Sensory-Reaction-Type because they necessarily have a value on Urge-Type-Satisfied.  An element of Physical-Urge-Type is an Attribute-Type that describes one class of urges (to do something) that animals have. The elements of Physical-Urge-Type are rather earthy; some examples are: Urge-To-Yawn, Urge-To-Scratch, Urge-To-Vomit, Urge-To-Urinate, etc. "))

(defrelation Individual-Agent
             (Name-In-Cyc Individual-Agent "#$IndividualAgent")
             (Existing-Object-Type Individual-Agent)
             (Subclass-Of Individual-Agent Agent)
             (Set-Or-Collection Individual-Agent)
             (Arity Individual-Agent 1)
             (Documentation Individual-Agent
              "The collection of all individuals belonging to the collection Agent.  Each person, each animal, etc., is an element of Individual-Agent, in most contexts.  Note that instances of Organization will in general NOT be elements of Individual-Agent."))

(defrelation |(TRANSPORT-VIA-FN SPACECRAFT)|
             (Skolem-Object |(TRANSPORT-VIA-FN SPACECRAFT)|)
             (Script-Type |(TRANSPORT-VIA-FN SPACECRAFT)|)
             (Default-Disjoint-Script-Type |(TRANSPORT-VIA-FN SPACECRAFT)|)
             (Temporal-Stuff-Type |(TRANSPORT-VIA-FN SPACECRAFT)|)
             (Subclass-Of |(TRANSPORT-VIA-FN SPACECRAFT)| Transportation-Event)
             (Subclass-Of |(TRANSPORT-VIA-FN SPACECRAFT)|
              |(TRANSPORT-VIA-FN TRANSPORTATION-DEVICE)|)
             (Subclass-Of |(TRANSPORT-VIA-FN SPACECRAFT)|
              |(TRANSPORT-VIA-FN SPACECRAFT)|)
             (Set-Or-Collection |(TRANSPORT-VIA-FN SPACECRAFT)|)
             (Arity |(TRANSPORT-VIA-FN SPACECRAFT)| 1)
             (Documentation |(TRANSPORT-VIA-FN SPACECRAFT)|
              "The collection of all events in which vehicles, manned or unmanned, leave the atmosphere of earth to orbit around it or travel to other regions of the universe."))

(defrelation Totally-Ordered-Set
             (Name-In-Cyc Totally-Ordered-Set "#$TotallyOrderedSet")
             (Object-Type Totally-Ordered-Set)
             (Subclass-Of Totally-Ordered-Set Partially-Ordered-Set)
             (Set-Or-Collection Totally-Ordered-Set)
             (Arity Totally-Ordered-Set 1)
             (Documentation Totally-Ordered-Set
              "The collection of all totally ordered sets (also called linearly ordered sets, strict linear orders, or directed chains), each being a Set-With-Structure consisting of a set together with an ordering relation on that set.   Mathematical lists, directed chains, finite sequences, infinite series, and number lines are special cases of Totally-Ordered-Set.  The ordering relation is defined on the associated set, and is transitive on that set, irreflexive on that set, and asymmetric on that set.   Sometimes the members of the Totally-Ordered-Set are called its nodes, and, for the discrete case, the pairwise relations between the adjacent nodes are called the links.  A Totally-Ordered-Set may be finite or infinite, and if infinite, it may or may not have a starting end.  (Note: A Totally-Ordered-Set is not a Set-Or-Collection, rather it is a Set-With-Structure that has an associated Set-Or-Collection.)"))

(deffunction Hours-Duration
   (Args-Isa Hours-Duration Real-Number)
   (Result-Instance-Of Hours-Duration Scalar-Interval)
   (Result-Instance-Of Hours-Duration Time-Quantity)
   (Name-In-Cyc Hours-Duration "#$HoursDuration")
   (Unit-Of-Time Hours-Duration)
   (Unit-Of-Measure-No-Prefix Hours-Duration)
   (Unit-Of-Measure Hours-Duration)
   (Function Hours-Duration)
   (Documentation Hours-Duration
    "This is a function that takes one or two numbers and returns, as its value, some amount of Time.  An expression of the form (Hours-Duration ?min ?max) denotes a quantity of Time that is at least ?min hours and at most ?max hours.  (Hours-Duration ?num) denotes a quantity of Time that is exactly ?num hours."))

(defrelation Cyc-System-Variable
             (Name-In-Cyc Cyc-System-Variable "#$CycSystemVariable")
             (Object-Type Cyc-System-Variable)
             (Subclass-Of Cyc-System-Variable Cyc-System-Symbol)
             (Set-Or-Collection Cyc-System-Variable)
             (Arity Cyc-System-Variable 1)
             (Documentation Cyc-System-Variable
              "The collection of atomic data, each element of which denotes a variable within CycL and therefore can have a value associated with it during inferencing.  Cyc-System-Variable excludes Cyc System symbols which designate constants or strings."))

(defrelation Ordering-Communication-Act
             (Synonymous-External-Concept Ordering-Communication-Act
              Sensus-Information1997 "COMMAND")
             (Synonymous-External-Concept Ordering-Communication-Act
              Sensus-Information1997 "DIRECTIVE-ACT")
             (Name-In-Cyc Ordering-Communication-Act
              "#$Ordering-CommunicationAct")
             (Temporal-Object-Type Ordering-Communication-Act)
             (Default-Disjoint-Script-Type Ordering-Communication-Act)
             (Subclass-Of Ordering-Communication-Act Human-Activity)
             (Subclass-Of Ordering-Communication-Act
              Requesting-Communication-Act)
             (Set-Or-Collection Ordering-Communication-Act)
             (Arity Ordering-Communication-Act 1)
             (Documentation Ordering-Communication-Act
              "A collection of actions, many of which are speech acts.
In each element of this collection, somebody orders
somebody to do something. See also the Illocutionary-Force
associated with this action, Command."))

(defrelation Unit-Of-Time
             (Name-In-Cyc Unit-Of-Time "#$UnitOfTime")
             (Interconvertible-Unit-Type Unit-Of-Time)
             (Subclass-Of Unit-Of-Time Unit-Of-Measure)
             (Set-Or-Collection Unit-Of-Time)
             (Arity Unit-Of-Time 1)
             (Documentation Unit-Of-Time
              "The collection of functions which return elements of Time; e.g., (Years-Duration 100) returns a time period equal to a century."))

(defrelation Evaporating
             (Name-In-Cyc Evaporating "#$Evaporating")
             (Temporal-Object-Type Evaporating)
             (Default-Disjoint-Script-Type Evaporating)
             (Subclass-Of Evaporating Physical-State-Change-Event)
             (Set-Or-Collection Evaporating)
             (Arity Evaporating 1)
             (Documentation Evaporating
              "The collection of events in which a piece of stuff is transformed from a Liquid-State-Of-Matter to a Gaseous-State-Of-Matter by evaporation as opposed to boiling."))

(defrelation Organism-Type-By-Habitat
             (Name-In-Cyc Organism-Type-By-Habitat "#$OrganismTypeByHabitat")
             (Sibling-Disjoint-Collection Organism-Type-By-Habitat)
             (Subclass-Of Organism-Type-By-Habitat Existing-Object-Type)
             (Set-Or-Collection Organism-Type-By-Habitat)
             (Arity Organism-Type-By-Habitat 1)
             (Documentation Organism-Type-By-Habitat
              "A collection of collections.  Each element of Organism-Type-By-Habitat is a collection of organisms characterized by the sort of habitat in which they live.  For example, Aquatic-Organism or Terrestrial-Organism."))

(deffunction There-Exist-At-Least
   (Nth-Domain There-Exist-At-Least 1 Positive-Integer)
   (Nth-Domain There-Exist-At-Least 2 Cyc-El-Variable)
   (Nth-Domain There-Exist-At-Least 3 Cyc-Formula)
   (Result-Instance-Of There-Exist-At-Least Cyc-Formula)
   (Name-In-Cyc There-Exist-At-Least "#$thereExistAtLeast")
   (Quantifier There-Exist-At-Least)
   (Relationship There-Exist-At-Least)
   (Function There-Exist-At-Least)
   (Arity There-Exist-At-Least 3)
   (Function-Arity There-Exist-At-Least 2)
   (Documentation There-Exist-At-Least
    "The predicate There-Exist-At-Least is a specialized form of :Exists (q.v.).  (There-Exist-At-Least 5 X FORM) means that there are at least five distinct objects in the Cyc universe which, when substituted for the Cyc-EL-Variable X in the Cyc-Formula FORM, make FORM true.  See :Exists for more information about existential quantification."))

(defrelation Prescription-Drug
             (Name-In-Cyc Prescription-Drug "#$PrescriptionDrug")
             (Existing-Stuff-Type Prescription-Drug)
             (Product-Type Prescription-Drug)
             (Subclass-Of Prescription-Drug Drug-Product)
             (Set-Or-Collection Prescription-Drug)
             (Arity Prescription-Drug 1)
             (Documentation Prescription-Drug
              "The collection of drugs that require a doctor's permission before obtaining or consuming them."))

(defrelation Medical-Care-Organization
             (Name-In-Cyc Medical-Care-Organization
              "#$MedicalCareOrganization")
             (Existing-Object-Type Medical-Care-Organization)
             (Subclass-Of Medical-Care-Organization Service-Organization)
             (Subclass-Of Medical-Care-Organization Medical-Care-Provider)
             (Set-Or-Collection Medical-Care-Organization)
             (Arity Medical-Care-Organization 1)
             (Documentation Medical-Care-Organization
              "A collection of organizations; a subset of both Medical-Care-Provider and Service-Organization.  An element of Medical-Care-Organization is any organization that provides some kind of medical care; it may be a sub-organization of a larger organization.  Examples include all instances of Doctors-Office, Dentists-Office, Optometric-Facility, or Rehabilitation-Facility; Independent-Practice-Association or Hospital; Emergency-Room, Dialysis-Unit, Allergy-Testing-Facility; Home-Nursing-Service-Organization or Long-Term-Medical-Care-Facility; and Veterinary-Hospital."))

(defobject Salaried
   (Work-Status Salaried)
   (Name-In-Cyc Salaried "#$Salaried")
   (Documentation Salaried
    "An attribute; an element of Work-Status.  The attribute of being a salaried worker in some organization."))

(defrelation Transportation-Device-Vehicle
             (Transport-Via-Fn Transportation-Device-Vehicle
              |(TRANSPORT-VIA-FN TRANSPORTATION-DEVICE-VEHICLE)|)
             (Name-In-Cyc Transportation-Device-Vehicle
              "#$TransportationDevice-Vehicle")
             (Existing-Object-Type Transportation-Device-Vehicle)
             (Subclass-Of Transportation-Device-Vehicle Transportation-Device)
             (Subclass-Of Transportation-Device-Vehicle Self-Powered-Device)
             (Set-Or-Collection Transportation-Device-Vehicle)
             (Arity Transportation-Device-Vehicle 1)
             (Documentation Transportation-Device-Vehicle
              "Transportation-Device-Vehicle is the subcollection of Transportation-Device whose instances are also instances of Self-Powered-Devices, i.e., those that move under their own power.  E.g. jet airplanes, automobiles, but not skateboards, gliders, or rowboats.  Note that hand pushed gas powered lawnmowers, even though they are Self-Powered-Devices, are not instances of Transportation-Device-Vehicle because they are not their own Provider-Of-Motive-Force when they move, whereas instances of Lawn-Mower-Riding are vehicles."))

(defrelation Biological-Subclass
             (Name-In-Cyc Biological-Subclass "#$BiologicalSubclass")
             (Biological-Taxon-Type Biological-Subclass)
             (Subclass-Of Biological-Subclass Biological-Taxon)
             (Set-Or-Collection Biological-Subclass)
             (Arity Biological-Subclass 1)
             (Documentation Biological-Subclass
              "The collection of biological taxonomic subdivisions more specific than Biological-Class but more general than Biological-Order."))

(defrelation Seller
             (Subrelation-Of Seller Exchangers)
             (Domain Seller Commercial-Activity)
             (Range Seller Agent)
             (Name-In-Cyc Seller "#$seller")
             (Actor-Slot Seller)
             (Asymmetric-Binary-Predicate Seller)
             (Slot Seller)
             (Relation Seller)
             (Arity Seller 2)
             (Binary-Relation Seller)
             (Documentation Seller
              "The predicate Seller relates an agent to a sales event.  (Seller EVENT AGENT) means that the Agent AGENT sells something in the Commercial-Activity EVENT."))

(defrelation Drying-Something
             (Name-In-Cyc Drying-Something "#$DryingSomething")
             (Temporal-Stuff-Type Drying-Something)
             (Default-Disjoint-Script-Type Drying-Something)
             (Subclass-Of Drying-Something Intrinsic-State-Change-Event)
             (Subclass-Of Drying-Something Physical-Event)
             (Set-Or-Collection Drying-Something)
             (Arity Drying-Something 1)
             (Documentation Drying-Something
              "A collection of events.  Each Drying-Something event involves reducing the moistness of something -- either its water content or its surface wetness -- by evaporation or by absorbing the moisture (e.g., with towels) or by some other process.  Typical objects of a Drying-Something event include instances of: paint, food, dishes, clothes, humans.  When you run your clothes dryer at home, that event is an element of this collection."))

(defrelation Loneliness
             (Name-In-Cyc Loneliness "#$Loneliness")
             (Feeling-Attribute-Type Loneliness)
             (Subclass-Of Loneliness Feeling-Attribute)
             (Set-Or-Collection Loneliness)
             (Arity Loneliness 1)
             (Documentation Loneliness
              "The disagreeable feeling of being without company.  This is a collection; for an explanation of a typical Feeling-Attribute-Type, see Happiness.  Some more specialized Feeling-Attribute-Types are Loneliness, Solitude, etc."))

(defrelation Emitting-Sound
             (Name-In-Cyc Emitting-Sound "#$EmittingSound")
             (Temporal-Stuff-Type Emitting-Sound)
             (Default-Disjoint-Script-Type Emitting-Sound)
             (Subclass-Of Emitting-Sound Physical-Event)
             (Subclass-Of Emitting-Sound Emitting-A-Wave)
             (Set-Or-Collection Emitting-Sound)
             (Arity Emitting-Sound 1)
             (Documentation Emitting-Sound
              "A collection of events; a subset of Emitting-A-Wave.  Each element of Emitting-Sound is an event in which an instance of Sound is emitted from some Wave-Source.  Examples: an explosion generating a sound wave; a plucked violin string resonating; a baby crying; a person saying `Hello'."))

(defrelation Natural-Language
             (Name-In-Cyc Natural-Language "#$NaturalLanguage")
             (Object-Type Natural-Language)
             (Subclass-Of Natural-Language Language)
             (Set-Or-Collection Natural-Language)
             (Arity Natural-Language 1)
             (Documentation Natural-Language
              "The collection of languages which are used for human communication and evolved naturally. This includes dead languages such as Ancient Greek and Latin but excludes concocted languages such as Esperanto."))

(defrelation Precipitation-Particle
             (Mob-Fn Precipitation-Particle |(MOB-FN PRECIPITATION-PARTICLE)|)
             (Name-In-Cyc Precipitation-Particle "#$PrecipitationParticle")
             (Existing-Object-Type Precipitation-Particle)
             (Subclass-Of Precipitation-Particle Particle)
             (Subclass-Of Precipitation-Particle Water)
             (Set-Or-Collection Precipitation-Particle)
             (Arity Precipitation-Particle 1)
             (Documentation Precipitation-Particle
              "The collection of particles of liquid or solid water emitted by clouds in instances of Precipitation-Process."))

(defrelation |(THE-PARTITION NON-POWERED-DEVICE POWERED-DEVICE)|
             (Skolem-Object
              |(THE-PARTITION NON-POWERED-DEVICE POWERED-DEVICE)|)
             (Disjoint-Set-Or-Collection
              |(THE-PARTITION NON-POWERED-DEVICE POWERED-DEVICE)|)
             (Set-Mathematical
              |(THE-PARTITION NON-POWERED-DEVICE POWERED-DEVICE)|)
             (Subclass-Of |(THE-PARTITION NON-POWERED-DEVICE POWERED-DEVICE)|
              Thing)
             (Set-Or-Collection
              |(THE-PARTITION NON-POWERED-DEVICE POWERED-DEVICE)|)
             (Arity |(THE-PARTITION NON-POWERED-DEVICE POWERED-DEVICE)| 1))

(defrelation Broad-Microtheory
             (Name-In-Cyc Broad-Microtheory "#$BroadMicrotheory")
             (Microtheory-Type Broad-Microtheory)
             (Collection Broad-Microtheory)
             (Subclass-Of Broad-Microtheory Microtheory)
             (Set-Or-Collection Broad-Microtheory)
             (Arity Broad-Microtheory 1)
             (Documentation Broad-Microtheory
              "The collection of those microtheories that contain so many assertions that they are not useful for `relevance' focusing during inference.  (A Broad-Microtheory is not used internally in Cyc's indexing scheme during inference.)  Examples: Base-KB and English-Mt."))

(defrelation Subway
             (Name-In-Cyc Subway "#$Subway")
             (Existing-Object-Type Subway)
             (Subclass-Of Subway Railway)
             (Set-Or-Collection Subway)
             (Arity Subway 1)
             (Documentation Subway
              "The collection of all underground Railways, under the surfaces of major cities.  Some parts of Subways may be in trenches, on bridges or on elevated tracks, but most of a Subway is in underground tunnels."))

(defrelation Temporal-Bounds-Contain
             (Subrelation-Of Temporal-Bounds-Contain Temporal-Bounds-Intersect)
             (Domain Temporal-Bounds-Contain Temporal-Thing)
             (Range Temporal-Bounds-Contain Temporal-Thing)
             (Name-In-Cyc Temporal-Bounds-Contain "#$temporalBoundsContain")
             (Complex-Temporal-Relation Temporal-Bounds-Contain)
             (Asymmetric-Binary-Predicate Temporal-Bounds-Contain)
             (Transitive-Binary-Predicate Temporal-Bounds-Contain)
             (Irreflexive-Binary-Predicate Temporal-Bounds-Contain)
             (Slot Temporal-Bounds-Contain)
             (Relation Temporal-Bounds-Contain)
             (Arity Temporal-Bounds-Contain 2)
             (Binary-Relation Temporal-Bounds-Contain)
             (Documentation Temporal-Bounds-Contain
              "(Temporal-Bounds-Contain LONGER SHORTER) means that LONGER strictly contains SHORTER.  There is a positive non-zero time after LONGER starts before SHORTER starts, and there is a positive non-zero time after SHORTER ends before LONGER ends.   That is, the Starting-Point of LONGER is a finite amount of time earlier than the Starting-Point of SHORTER, and the Ending-Point of LONGER is a finite amount of time later than the Ending-Point of SHORTER.   Naturally, Temporal-Bounds-Contain is a stronger relation than Temporal-Bounds-Intersect.  If LONGER is Temporally-Continuous, then (Temporal-Bounds-Contain LONGER SHORTER) further implies (Temporally-Subsumes LONGER SHORTER).  Note:  This Cyc temporal relation is equivalent to what James Allen independently dubbed the CONTAINS relation."))

(defrelation Foot-Animal-Body-Part
             (Name-In-Cyc Foot-Animal-Body-Part "#$Foot-AnimalBodyPart")
             (Symmetric-Anatomical-Part-Type Foot-Animal-Body-Part)
             (Subclass-Of Foot-Animal-Body-Part Appendage-Animal-Body-Part)
             (Subclass-Of Foot-Animal-Body-Part Biological-Living-Object)
             (Set-Or-Collection Foot-Animal-Body-Part)
             (Arity Foot-Animal-Body-Part 1)
             (Documentation Foot-Animal-Body-Part
              "The collection of all vertebrates' feet.  A foot is a terminal part of a Vertebrate Leg.  Feet are used in locomotion, support, balance, kicking, etc."))

(defrelation Mathematical-Object
             (Name-In-Cyc Mathematical-Object "#$MathematicalObject")
             (Object-Type Mathematical-Object)
             (Subclass-Of Mathematical-Object Intangible-Individual)
             (Subclass-Of Mathematical-Object
              Mathematical-Or-Computational-Thing)
             (Set-Or-Collection Mathematical-Object)
             (Arity Mathematical-Object 1)
             (Documentation Mathematical-Object
              "A collection of intangible objects; a subset of Mathematical-Thing.  Each element of Mathematical-Object is a purely abstract mathematical thing which is an individual (see Individual).  Examples of Mathematical-Object include: Quantifiers, Real-Numbers, Triangles, Truth-Values, etc.  But instances of Set-Or-Collection are not Mathematical-Objects in Cyc, because they are not Individuals."))

(defrelation Monetary-Flow-Rate
             (Name-In-Cyc Monetary-Flow-Rate "#$MonetaryFlowRate")
             (Derived-Numeric-Attribute-Type Monetary-Flow-Rate)
             (Subclass-Of Monetary-Flow-Rate Rate)
             (Subclass-Of Monetary-Flow-Rate Money-Rate)
             (Subclass-Of Monetary-Flow-Rate Attribute-Value)
             (Subclass-Of Monetary-Flow-Rate Scalar-Interval)
             (Set-Or-Collection Monetary-Flow-Rate)
             (Arity Monetary-Flow-Rate 1)
             (Documentation Monetary-Flow-Rate
              "A collection of rates; a subset of Scalar-Interval.  Each element of Monetary-Flow-Rate is a rate at which money is earned, spent, transferred, lost, invested, etc. It is a measurable quantity, expressed as a rate of units of money per unit of time, such as Dollars-Per-Hour (see Unit-Of-Monetary-Flow-Rate).  Monetary-Flow-Rate includes generic intervals, such as those which describe (in a particular context) High-Income-Level, Low-Income-Level, etc."))

(defrelation Ferry
             (Name-In-Cyc Ferry "#$Ferry")
             (Existing-Object-Type Ferry)
             (Subclass-Of Ferry Ship)
             (Set-Or-Collection Ferry)
             (Arity Ferry 1)
             (Documentation Ferry
              "The subcollection of Boat-WaterTransportationDevice that contains all ferryboats, i.e., boats that are used to carry people, goods or vehicles across rivers, lakes, canals or channels etc. or even from one side of a harbor to another, but normally not used to cross oceans."))

(defrelation Biological-Species
             (Name-In-Cyc Biological-Species "#$BiologicalSpecies")
             (Biological-Taxon-Type Biological-Species)
             (Subclass-Of Biological-Species Biological-Taxon)
             (Set-Or-Collection Biological-Species)
             (Arity Biological-Species 1)
             (Documentation Biological-Species
              "A collection of the lowest taxons (Biological-Taxon, q.v.) that are necessarily common to both parents of fertile offspring, or, in the case of asexual reproduction, necessarily common to parent and child.  Members of different species cannot produce fertile offspring by interbreeding.  An element of Biological-Species has members who all have significant traits in common, and members of each biological species have other members as parents.  In biological taxonomy, related species are grouped into a particular element of Biological-Genus (q.v.)."))

(defrelation Hair-Color
             (Nth-Domain Hair-Color 1 Animal)
             (Nth-Domain Hair-Color 1 Mammal)
             (Nth-Domain Hair-Color 2 Existing-Object-Type)
             (Nth-Domain Hair-Color 3 Color)
             (Nth-Domain-Subclass-Of Hair-Color 2 Animal-Body-Part)
             (Name-In-Cyc Hair-Color "#$hairColor")
             (Tangible-Object-Predicate Hair-Color)
             (Ternary-Predicate Hair-Color)
             (Relation Hair-Color)
             (Arity Hair-Color 3)
             (Documentation Hair-Color
              "(Hair-Color ANIMAL BODYPARTTYPE COLOR) means that the hair which the Animal ANIMAL has on its BODYPARTTYPE has the Color COLOR.  E.g., (Hair-Color Santa-Claus Chin White-Color).  This is normally Mammal hair, but certain Invertebrates also have hair."))

(defrelation Prescriber
             (Name-In-Cyc Prescriber "#$Prescriber")
             (Occupation-Type Prescriber)
             (Subclass-Of Prescriber Medical-Care-Professional)
             (Set-Or-Collection Prescriber)
             (Arity Prescriber 1)
             (Documentation Prescriber
              "People who can prescribe medications.  Doctors are prescribers, as well as osteopaths and nurse-practitioners. "))

(defobject Fried
   (Preparation-Attribute Fried)
   (Subattribute-Of Fried Cooked)
   (Name-In-Cyc Fried "#$Fried")
   (Documentation Fried
    "The attribute Fried is a specialized form of Cooked.  Food that is Fried has been prepared in an event of Frying."))

(defrelation Connotes
             (Nth-Domain Connotes 1 Spatial-Thing)
             (Nth-Domain Connotes 1 Individual)
             (Nth-Domain Connotes 2 Thing)
             (Nth-Domain Connotes 3 Generic-Attribute)
             (Name-In-Cyc Connotes "#$connotes")
             (Cotemporal-Predicate Connotes)
             (Ternary-Predicate Connotes)
             (Relation Connotes)
             (Arity Connotes 3)
             (Documentation Connotes
              "(Connotes OBJ-1 OBJ-2 DEGREE) means that as a consequence of perceiving one thing (OBJ-1), a typical sane intelligent perceiving agent would likely think of another thing (OBJ-2) with a strength of association indicated by DEGREE.  E.g., (Connotes German-Nazi-Party Prejudice High), (Connotes Lenat Cyc High).  This predicate is sometimes symmetric, but often not."))

(defrelation Information-Recording-Device
             (Name-In-Cyc Information-Recording-Device
              "#$InformationRecordingDevice")
             (Existing-Object-Type Information-Recording-Device)
             (Subclass-Of Information-Recording-Device Physical-Device)
             (Set-Or-Collection Information-Recording-Device)
             (Arity Information-Recording-Device 1)
             (Documentation Information-Recording-Device
              "A collection of physical devices.  An instance of Information-Recording-Device is a device used for the recording of sensory information (i.e., audio and visual, but not encoded as character strings.)  So an instance would be your answering machine at home (an Answering-Machine), your cam-corder (a Video-Camera), but NOT your address book or your copy of the Yellow Pages.  
Note: A borderline case is a PDA (such as an Apple Newton) used to record handwritten script.  If it then processes that information and converts it to ASCII characters, it has stopped being an Information-Recording-Device in the currently intended sense.  Probably a better name for this concept, therefore, would be DeviceToRecordAnalogInformation."))

(defrelation Disjoint-With
             (not (Transitive-Binary-Predicate Disjoint-With))
             (not (Anti-Symmetric-Binary-Predicate Disjoint-With))
             (Slot-Inverse Disjoint-With Disjoint-With)
             (Domain Disjoint-With Set-Or-Collection)
             (Range Disjoint-With Set-Or-Collection)
             (Name-In-Cyc Disjoint-With "#$disjointWith")
             (Irreflexive-Binary-Predicate Disjoint-With)
             (Symmetric-Binary-Predicate Disjoint-With)
             (Default-Monotonic-Predicate Disjoint-With)
             (Taxonomic-Slot Disjoint-With)
             (Rule-Macro-Predicate Disjoint-With)
             (Slot Disjoint-With)
             (Relation Disjoint-With)
             (Arity Disjoint-With 2)
             (Binary-Relation Disjoint-With)
             (Documentation Disjoint-With
              "(Disjoint-With SETORCOL1 SETORCOL2) means that the mathematical set or collection SETORCOL1 is disjoint with the mathematical set or collection SETORCOL2 -- that is, the two have no elements in common."))

(defobject Exclusive-User-Rights
   (User-Rights-Attribute Exclusive-User-Rights)
   (Name-In-Cyc Exclusive-User-Rights "#$ExclusiveUserRights")
   (Documentation Exclusive-User-Rights
    "An attribute of an object with respect to an Agent, meaning that the agent who holds this kind of User-Rights-Attribute to an object has the sole right to use that object.  There can be only one such Agent at a given time; that agent may be an Organization or an individual person.  When you rent a car, you expect Exclusive-User-Rights of it for the duration of your rental, even though you don't own the car."))

(defobject |(MEDIUM-AMOUNT-FN FRAGILITY)|
   (Scalar-Interval |(MEDIUM-AMOUNT-FN FRAGILITY)|)
   (Fragility |(MEDIUM-AMOUNT-FN FRAGILITY)|)
   (Skolem-Object |(MEDIUM-AMOUNT-FN FRAGILITY)|))

(defrelation Two-Dimensional-Shape-Type
             (Name-In-Cyc Two-Dimensional-Shape-Type
              "#$TwoDimensionalShapeType")
             (Collection Two-Dimensional-Shape-Type)
             (Subclass-Of Two-Dimensional-Shape-Type Shape-Type)
             (Set-Or-Collection Two-Dimensional-Shape-Type)
             (Arity Two-Dimensional-Shape-Type 1)
             (Documentation Two-Dimensional-Shape-Type
              "A collection of collections.  Each instance of Two-Dimensional-Shape-Type is a collection of things which are subsets of Two-Dimensional-Shape."))

(defrelation Object-Type
             (Name-In-Cyc Object-Type "#$ObjectType")
             (Collection Object-Type)
             (Subclass-Of Object-Type Collection)
             (Set-Or-Collection Object-Type)
             (Arity Object-Type 1)
             (Documentation Object-Type
              "A collection of collections.  Elements of Object-Type more or less correspond to count nouns in the following way: If COL is an element of Object-Type, and ITEM is any element of COL, then if you divide ITEM into two pieces, you do NOT generally end up with two elements of COL.  Another way of thinking of this is:  If you take several elements of COL, and put them together, the result is generally not another element of COL.  Sample instances of Object-Type are Automobile (the set of all cars);  Leap-Year (the set of all leap years).  See the comment for Stuff-Type to find out more about the distinctions between, and the need for, these four collections: Stuff-Type, Object-Type, Existing-Stuff-Type, and Existing-Object-Type."))

(defrelation Info-Contributed
             (Nth-Domain Info-Contributed 1 Multi-Directional-Communication)
             (Nth-Domain Info-Contributed 2 Agent)
             (Nth-Domain Info-Contributed 3 Propositional-Information-Thing)
             (Name-In-Cyc Info-Contributed "#$infoContributed")
             (Ternary-Predicate Info-Contributed)
             (Relation Info-Contributed)
             (Arity Info-Contributed 3)
             (Documentation Info-Contributed
              "The predicate Info-Contributed is used to identify which agent said what in a particular complex communication activity.  (Info-Contributed MULTICOM AGENT INFO) means that in the Multi-Directional-Communication event MULTICOM, AGENT does something that expresses INFO.  Note that speaking, writing, or otherwise signalling are all viable methods of `saying'.  The (unspecified) thing that AGENT does in MULTICOM generates the message, and INFO is a propositional item expressing the content of AGENT's message.  See also Propositional-Information-Thing and IBT-Generation."))

(defrelation Exercising
             (Name-In-Cyc Exercising "#$Exercising")
             (Temporal-Stuff-Type Exercising)
             (Script-Type Exercising)
             (Subclass-Of Exercising Voluntary-Body-Movement)
             (Subclass-Of Exercising Action-On-Object)
             (Subclass-Of Exercising Purposeful-Action)
             (Subclass-Of Exercising Human-Activity)
             (Set-Or-Collection Exercising)
             (Arity Exercising 1)
             (Documentation Exercising
              "The collection of events in which humans move their bodies and limbs for the purpose of general physical conditioning and/or strengthening muscles."))

(defrelation |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "CONTAINED")|
             (Skolem-Object
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "CONTAINED")|)
             (Slot |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "CONTAINED")|)
             (Relation
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "CONTAINED")|)
             (Arity |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "CONTAINED")|
              2)
             (Binary-Relation
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "CONTAINED")|))

(defrelation Desert-Climate-Cycle
             (Name-In-Cyc Desert-Climate-Cycle "#$DesertClimateCycle")
             (Climate-Cycle-Type Desert-Climate-Cycle)
             (Subclass-Of Desert-Climate-Cycle Annual-Climate-Cycle)
             (Subclass-Of Desert-Climate-Cycle Temperate-Climate-Cycle)
             (Set-Or-Collection Desert-Climate-Cycle)
             (Arity Desert-Climate-Cycle 1)
             (Documentation Desert-Climate-Cycle
              "The attribute of having a desert climate.  Wide termperature extremes from very hot in day to cold at night.  Very little precipitation on a year-long basis, although there may be desert storms."))

(defrelation Temperature-Changing-Process
             (Name-In-Cyc Temperature-Changing-Process
              "#$TemperatureChangingProcess")
             (Temporal-Stuff-Type Temperature-Changing-Process)
             (Default-Disjoint-Script-Type Temperature-Changing-Process)
             (Subclass-Of Temperature-Changing-Process
              Intrinsic-State-Change-Event)
             (Subclass-Of Temperature-Changing-Process
              Composite-Physical-And-Mental-Event)
             (Set-Or-Collection Temperature-Changing-Process)
             (Arity Temperature-Changing-Process 1)
             (Documentation Temperature-Changing-Process
              "A collection of events.  Each Temperature-Changing-Process is an Event which has, as one of its significant effects, changing the Temperature of some object.  E.g., Cooking-Food is a subset of this collection.  A particular event in which somone uses a soldering iron to connect a resistor to a circuit board would be an element of this collection.  Note that a change in temperature is one of the kinds of intrinsic change which an object can undergo; i.e., Temperature-Changing-Process is a subset of Intrinsic-State-Change-Event."))

(defrelation Us-City
             (Name-In-Cyc Us-City "#$USCity")
             (Spatially-Disjoint-Region-Type Us-City)
             (Subclass-Of Us-City City)
             (Set-Or-Collection Us-City)
             (Arity Us-City 1)
             (Documentation Us-City
              "A collection of cities.  Each element of US-City is a city in the United-States-Of-America.  Note that City (q.v.) is widely construed to include towns and villages.  Examples of US-City: City-Of-Austin-TX, City-Of-Gainesville-FL, City-Of-Long-Beach-CA, City-Of-Armonk-New-York, City-Of-Essex-Junction-Vermont, City-Of-Cambridge-MA, City-Of-Palo-Alto-CA, City-Of-Redmond-WA."))

(defrelation Amphibian
             (Name-In-Cyc Amphibian "#$Amphibian")
             (Biological-Class Amphibian)
             (Subclass-Of Amphibian Vertebrate)
             (Subclass-Of Amphibian Non-Person-Animal)
             (Set-Or-Collection Amphibian)
             (Arity Amphibian 1)
             (Documentation Amphibian
              "The collection of all Organism-Wholes which are members of the Biological-Class Amphibia, being a specialization of Vertebrate.  
Members of this class are smooth skinned Vertebrates which hatch from eggs to form aquatic larvae [see Larva].  These larvae metamorphose into an air-breathing adult [see AirBreathingVertebrate] (normally) having Lungs.  Subsets of this collection include Frogs and Salamanders."))

(defrelation Microtheory
             (Name-In-Cyc Microtheory "#$Microtheory")
             (Collection Microtheory)
             (Microtheory-Type Microtheory)
             (Subclass-Of Microtheory Abstract-Information)
             (Subclass-Of Microtheory Intangible-Individual)
             (Set-Or-Collection Microtheory)
             (Arity Microtheory 1)
             (Documentation Microtheory
              "The collection of all microtheories, or `mts' for short.  Microtheories implement contexts in Cyc.  Each mt serves to group a set of assertions together that share some common assumptions.  Thus each mt can be thought of as having two parts: a corpus of assertions that represent the `content' of the mt, and a separate corpus of assertions that represent the `assumptions' which are being made.  E.g., in a normal modern everyday life microtheory, there might be hundreds of content assertions such as `drivers are at least 16 years old', and there might be dozens of assumption assertions about that microtheory's content, such as `all actors are assumed to be law-abiding'.   You can think of the assumptions as a set of extra conjuncts on the left hand side (the antecedent or `if'-part) of every content assertion in the mt.  

Each assertion in the knowledge base must be explicitly stated to be true in at least one mt.  It will then (by inference) also be true in all the more specialized contexts.  If something is true in the `life in North America' mt, then it should by default be true in the `life in Canada' mt.  I.e., the microtheories are organized into a generalization/specialization lattice by the predicate Subcontext-Of (q.v.), just as collections are organized into such a lattice by :Direct-Superclasses, and just as predicates are organized into such a lattice by Subrelation-Of.  Just as a collection may have several incommensurable supersets, so too a microtheory may have several incommensurable Genl-Mts.  Just as each and every collection must have some explicitly recorded superset (except for Thing), each and every mt must have some (expicitly recorded) more general mt (except for the Base-KB, which is the most general context, containing universal, timeless truths).  Just as a Cyc concept may have multiple incommensurable sets of which it is an element (via :Direct-Types), so too a Cyc assertion may be declared to be true in a set of incommensurable mts.

Every query is made in some mt, so the answer you get might very well depend on the mt in which you ask the question.  Let's call the current context C1, for the remainder of this paragraph.  The only assertions which can be used in C1 to answer the query are those assertions which were explicitly stated to be true in C1 or in some more general mt than C1.  But what if you want and need something like assertion P, to answer the question, but P doesn't fit that criterion, though P is true in some other mts that are unrelated to C1?  You can `import' or `lift' P into C1, by conjoining to its left hand side (if-part) the various assumptions of a context C999 in which P is known to be true.  I.e., what you actually conclude to be true in C1 is an assertion of the form `if a1 and a2 and... then P', where a1, a2,... are the assumptions of a context in which P holds (but which are NOT implied by assumptions of C1).  When there are several contexts to choose from, from which to import P, you will usually prefer the context whose assumptions are most similar to C1's assumptions, so there will be few extra conjuncts that need to be inserted in the `lifting' process.

There is an implicit third component to each Microtheory, namely the Cyc terms which are `known about' in that mt.  E.g., Lenat is not `known about' in a microtheory set in prehistoric times; Photochemical-Energy-Transduction is not `known about' in a microtheory representing things that a toddler believes to be true; etc.  Unlike the content and the assumptions, however, there is no need to explicitly collect into one list all the terms which are `known about'.  Rather, one could compute such a list by looking at all the terms which are mentioned anywhere in the content assertions of the mt.

Note that Microtheory is itself a `first-class object', as is each and every element of that collection --- e.g., Commercial-Buying-Mt, World-Geography-Mt, US-Healthcare-Mt, Human-Social-Life-Mt, etc.  The assertions about a Microtheory are just like any other Cyc assertions.  

Note that one important predicate we haven't mentioned here yet is the one that says `assertion P is true in microtheory M'.  That predicate is Ist.  Thus:  (Ist M P).

Note that another important predicate we haven't mentioned here yet is the one that says `microtheory M has the proposition P as a domain assumption'.  Thus: (Domain-Assumptions M P)."))

(deffunction Times-Per-Year
   (Args-Isa Times-Per-Year Real-Number)
   (Result-Instance-Of Times-Per-Year Frequency)
   (Result-Instance-Of Times-Per-Year Rate)
   (Result-Instance-Of Times-Per-Year Scalar-Interval)
   (Name-In-Cyc Times-Per-Year "#$TimesPerYear")
   (Unit-Of-Frequency Times-Per-Year)
   (Unit-Of-Measure-No-Prefix Times-Per-Year)
   (Function Times-Per-Year)
   (Documentation Times-Per-Year
    "A Cyc function, Times-Per-Year is a Unit-Of-Frequency.  (Times-Per-Year NUMBER) denotes a frequency NUMBER times per year."))

(deffunction Percent
   (Args-Isa Percent Real-Number)
   (Result-Instance-Of Percent Interval-On-Number-Line)
   (Result-Instance-Of Percent Scalar-Interval)
   (Name-In-Cyc Percent "#$Percent")
   (Evaluatable-Function Percent)
   (Dimensionless-Unit-Of-Measure Percent)
   (Unit-Of-Measure-No-Prefix Percent)
   (Function Percent)
   (Documentation Percent
    "Percent is a function whose results are percentages.  E.g., (Percent 1) represents 1% in Cyc (and is equal to .01); (Percent 110) is the same as 1.1; (Percent 0.1) is the same as 0.1%, which is the same as .001."))

(defrelation Railway
             (Name-In-Cyc Railway "#$Railway")
             (Existing-Object-Type Railway)
             (Subclass-Of Railway Path-For-Wheeled-Vehicles)
             (Set-Or-Collection Railway)
             (Arity Railway 1)
             (Documentation Railway
              "The collection of all pathways made of RailroadTracks and used for train transportation.  It includes main lines and sidings."))

(defrelation Mammal
             (Name-In-Cyc Mammal "#$Mammal")
             (Biological-Class Mammal)
             (Subclass-Of Mammal Vertebrate)
             (Set-Or-Collection Mammal)
             (Arity Mammal 1)
             (Documentation Mammal
              "The collection of mammals; a subset of Vertebrate.  Each element of Mammal is an air-breathing, warm-blooded animal which, if female, nurses its young with milk secreted by mammary glands.  The collection Mammal includes the subsets Dog, Horse, Person, Elephant, etc.  The skin of mammals is typically covered with hair (or sometimes hair modified into scales or plates (e.g. pangolins)), but some types are almost hairless.  All mammals other than the Monotremes of Australia bear live young rather than laying eggs and have teats, which on females are used for nursing the young.  Monotremes do not have teats, but both male and female produce milk from Mammary-Glands.   Mammal is an instance of Biological-Class."))

(defrelation Leather
             (Name-In-Cyc Leather "#$Leather")
             (Existing-Stuff-Type Leather)
             (Product-Type Leather)
             (Subclass-Of Leather Solid-Tangible-Thing)
             (Subclass-Of Leather Free-Sheet)
             (Subclass-Of Leather Sheet-Of-Some-Stuff)
             (Set-Or-Collection Leather)
             (Arity Leather 1)
             (Documentation Leather
              "A collection of tangible things.  Each element of Leather is a piece of tanned animal hide.  Pieces of Leather are commonly used as material inputs to the manufacture of shoes, gloves, upholstery, satchels and purses, saddles, etc."))

(defrelation Particle
             (Mob-Fn Particle |(MOB-FN PARTICLE)|)
             (Name-In-Cyc Particle "#$Particle")
             (Existing-Object-Type Particle)
             (Subclass-Of Particle Inanimate-Thing)
             (Subclass-Of Particle Tangible-Thing)
             (Set-Or-Collection Particle)
             (Arity Particle 1)
             (Documentation Particle
              "A collection of tangibles; a subset of Tangible-Thing.  Each element of Particle is a smallish liquid or solid tangible thing, at least small enough to be blown about by ordinary gusts of wind, and possibly much smaller.  Examples include elements of the collections Corn-Meal, Sand-Particle, Sawdust, Dust-Particle, Sugar-Table."))

(defrelation |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "CARDINALITY")|
             (Skolem-Object
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "CARDINALITY")|)
             (Slot
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "CARDINALITY")|)
             (Relation
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "CARDINALITY")|)
             (Arity
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "CARDINALITY")| 2)
             (Binary-Relation
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "CARDINALITY")|))

(defrelation Unit-Of-Measure
             (Name-In-Cyc Unit-Of-Measure "#$UnitOfMeasure")
             (Relationship-Type Unit-Of-Measure)
             (Collection Unit-Of-Measure)
             (Subclass-Of Unit-Of-Measure Individual-Denoting-Function)
             (Subclass-Of Unit-Of-Measure Non-Predicate-Function)
             (Subclass-Of Unit-Of-Measure Variable-Arity-Relation)
             (Set-Or-Collection Unit-Of-Measure)
             (Arity Unit-Of-Measure 1)
             (Documentation Unit-Of-Measure
              "Unit-Of-Measure is the collection of all functions which return elements of Scalar-Interval that describe physical quantities such as Speed, Volume, etc.  Those functions are usually grouped into subsets depending on what they measure (e.g., Unit-Of-Speed,Unit-Of-Volume).  Functions which belong to Unit-Of-Measure are variable-arity relations that take either one or two arguments, both of which must be elements of Real-Number. If only one argument is given (e.g. (Meter 5)), the expression stands for a precise quantity (here, 5 meters); see also Scalar-Point-Value.  If two arguments are given (e.g. (Meter 5 10)), the expression stands for a closed interval and the arguments are interpreted as the interval's mininum and maximum, respectively. Following are a few example uses of some elements of Unit-Of-Measure:







     `10 years': (Years-Duration 10) 



     `2 feet': (Foot-Unit-Of-Measure 2) 



     `50 dollars and 2 cents': (Dollar-United-States 50.02) 



     `between 1 and 50 pounds per square inch, inclusive': (Pounds-Per-Square-Inch 1 50) 



     `dimensionless quantity between 3 and 4.1, inclusive': (Unity 3 4.1)."))

(defrelation Contempt
             (Name-In-Cyc Contempt "#$Contempt")
             (Feeling-Attribute-Type Contempt)
             (Subclass-Of Contempt Dislike)
             (Subclass-Of Contempt Disapproval)
             (Set-Or-Collection Contempt)
             (Arity Contempt 1)
             (Documentation Contempt
              "Emotion characterized by vehement condemnation of its object as being low, vile, feeble, or ignominious.  This is a Collection --- for an explanation of that, see Happiness.  Some more specialized Feeling-Attribute-Types than Contempt are Hate, Abhorrence, etc. "))

(defobject Always-Time-Interval
   (Time-Interval Always-Time-Interval)
   (Name-In-Cyc Always-Time-Interval "#$Always-TimeInterval")
   (Documentation Always-Time-Interval
    "The interval of time which encompasses all time.  In more general MTs we remain agnostic as to whether this time interval has either a beginning or an end, but if it does, Always-Time-Interval begins when time itself begins and ends only when time ends completely.  Every other instance of Time-Interval is a Time-Slices of Always-Time-Interval. "))

(defrelation After
             (Overlapping-External-Concept After Sensus-Information1997
              "AFTER")
             (Domain After Time-Point)
             (Range After Time-Point)
             (Name-In-Cyc After "#$after")
             (Irreflexive-Binary-Predicate After)
             (Primitive-Temporal-Relation After)
             (Asymmetric-Binary-Predicate After)
             (Transitive-Binary-Predicate After)
             (Slot After)
             (Relation After)
             (Arity After 2)
             (Binary-Relation After)
             (Documentation After
              "(After ?X ?Y) means Time-Point ?X is after (occurs later in time than) Time-Point ?Y.   
Note:  Individual Time-Points are seldom mentioned in axioms; rather, the axiom is likely to use some Complex-Temporal-Relation, such as Starts-After-Ending-Of, which holds between two Temporal-Thing.   These Complex-Temporal-Relations are themselves usually defined in terms of Primitive-Temporal-Relations, such as After and Simultaneous-With, which relate one Time-Point to another."))

(defrelation Agreement
             (Name-In-Cyc Agreement "#$Agreement")
             (Existing-Object-Type Agreement)
             (Subclass-Of Agreement Supposed-To-Be-Microtheory)
             (Subclass-Of Agreement Intangible-Existing-Thing)
             (Set-Or-Collection Agreement)
             (Arity Agreement 1)
             (Documentation Agreement
              "A collection of `objects' with temporal extent.  Each element of Agreement involves two or more parties, who agree that certain propositions should be true.  Making the propositions true may require some action or commitment of wealth on the part of one or more of the Agreeing-Agents.  Thus, elements of Agreement will usually involve some instances of Obligation.
Note:  Elements of Agreement and Obligation differ, however, in that an Obligated-Agent is responsible for the truth of all of the propositions in an obligation.  In an agreement, some agents may not be responsible for all of the propositions in the agreement being true. For example, in a loan agreement, the borrower agrees to give the lender back the money, but the borrower is the only Obligated-Agent for the repayment.  Note that Obligated-Agents need not be among the Agreeing-Agents in the agreement that involves or generates the obligation.  For example, the Board of Directors of XYZCorporation may agree that some non-director will assume the post and duties of President of XYZCorporation.  Moreover, Agreeing-Agents aren't always obligatedAgents; e.g., Wanda and Paul may agree that Paul alone is obligated to do some task.
Examples include instances of Peace-Accord, Legal-Agreement, Informal-Agreement, Business-Partnership-Agreement, Work-Agreement, Sales-Agreement, Maintenance-Agreement, Reservation, Appointment, etc."))

(defrelation Front-Side
             (Name-In-Cyc Front-Side "#$FrontSide")
             (Region-Type Front-Side)
             (Subclass-Of Front-Side Side)
             (Set-Or-Collection Front-Side)
             (Arity Front-Side 1)
             (Documentation Front-Side
              "The collection of all the entire front sides (as conventionally understood) of all objects that have distinct Sides, one of which faces in the frontwards direction."))

(defrelation Unit-Of-Monetary-Flow-Rate
             (Name-In-Cyc Unit-Of-Monetary-Flow-Rate
              "#$UnitOfMonetaryFlowRate")
             (Interconvertible-Unit-Type Unit-Of-Monetary-Flow-Rate)
             (Subclass-Of Unit-Of-Monetary-Flow-Rate Unit-Of-Measure)
             (Subclass-Of Unit-Of-Monetary-Flow-Rate Unit-Of-Rate)
             (Set-Or-Collection Unit-Of-Monetary-Flow-Rate)
             (Arity Unit-Of-Monetary-Flow-Rate 1)
             (Documentation Unit-Of-Monetary-Flow-Rate
              "The collection of functions which return elements of Monetary-Flow-Rate (i.e. transfer of money per unit of time).  E.g., (Dollars-Per-Hour 10) denotes a Monetary-Flow-Rate of $10 per hour."))

(defrelation Disapproval
             (Name-In-Cyc Disapproval "#$Disapproval")
             (Feeling-Attribute-Type Disapproval)
             (Subclass-Of Disapproval Feeling-Attribute)
             (Set-Or-Collection Disapproval)
             (Arity Disapproval 1)
             (Documentation Disapproval
              "The emotion or state of disapproving of something; a negative attitude towards some situation, proposal, person, or thing, implying a judgment based on explicit or implicit standards (rational, moral, pragmatic, or etc.).  This is a collection; for an explanation of a typical Feeling-Attribute-Type, see Happiness.  More specialized Feeling-Attribute-Types than Disapproval are Contempt, Hate, Abhorrence, etc.  More subtly, it is often true that feelings of Jealousy or Envy manifest in superficial shows of Disapproval.  Disapproval is a Collection --- for an explanation of that, see Happiness."))

(defrelation Human-Occupation-Construct
             (Name-In-Cyc Human-Occupation-Construct
              "#$HumanOccupationConstruct")
             (Existing-Object-Type Human-Occupation-Construct)
             (Subclass-Of Human-Occupation-Construct Container-Product)
             (Subclass-Of Human-Occupation-Construct
              Humanly-Occupied-Spatial-Object)
             (Subclass-Of Human-Occupation-Construct Construction-Artifact)
             (Set-Or-Collection Human-Occupation-Construct)
             (Arity Human-Occupation-Construct 1)
             (Documentation Human-Occupation-Construct
              "A collection of places.  Each Human-Occupation-Construct is a place where people do things, such as: the Empire State Building, an individual office in that building, the White House, the Lincoln Bedroom in the White House, an elevator, a tent, etc.

An instance of Human-Occupation-Construct is an artificial construction belonging to the collection Container-Product, and its Primary-Function is as a place in which humans perform activities.  Some large subsets include 
   (a) instances of Human-Shelter-Construction (e.g., houses); 
   (b) sub-regions within a Human-Shelter-Construction or within any building which are intended for human use (e.g., rooms, shower stalls), and 
   (c) regions in any transportation vehicle which are designed for human occupancy (e.g., the cockpit, passenger compartment).  

Note:  Some buildings which are not themselves instances of Human-Occupation-Construct, such as Hoover-Dam, may have a sub-region which is a Human-Occupation-Construct (e.g., the control room at the top of the dam).

Note:  The collection Human-Occupation-Construct is broad enough to include tents, boiler rooms, elevator shafts, steam tunnels, and the space inside the Lincoln-Memorial-In-Washington-DC.  Thus, an instance of Human-Occupation-Construct need not be strictly Indoors (q.v.), since Indoors is meant to include many characteristics that those places do not necessarily share (such as humanly comfortable temperature, lighting at night, not terribly noisy or windy, clean).  We therefore do not make the default assertion that a Human-Occupation-Construct is Indoors; however, an instance of Human-Occupation-Construct is certainly not a purely Outdoor-Location (q.v.), so we DO assert that those two collections are disjoint.  Certain subsets of Human-Occupation-Construct, however, do have `indoor' characteristics, and so we assert (for example) that anything found inside instances of Room-In-A-Construction or Modern-Shelter-Construction is found Indoors.  Note:  For places designed to be occupied by humans but which are purely outdoor locations (such as elements of Lawn, Parking-Lot, and Playground), see Humanly-Occupied-Spatial-Object."))

(defrelation Owns-Share
             (Nth-Domain Owns-Share 1 Agent)
             (Nth-Domain Owns-Share 2 Something-Existing)
             (Nth-Domain Owns-Share 3 Non-Negative-Number)
             (Name-In-Cyc Owns-Share "#$ownsShare")
             (Ternary-Predicate Owns-Share)
             (Relation Owns-Share)
             (Arity Owns-Share 3)
             (Documentation Owns-Share
              "The predicate Owns-Share is used to state how much of some thing is owned by a particular Agent.  (Owns-Share AGENT SOMETHING SHARE) means that the Agent AGENT has SHARE Percent (q.v.) ownership of the object or company SOMETHING.  Note that SHARE is a percentage and does not refer directly to a number of shares of Stock."))

(defrelation |(TRANSPORT-VIA-FN TRUCK)|
             (Skolem-Object |(TRANSPORT-VIA-FN TRUCK)|)
             (Script-Type |(TRANSPORT-VIA-FN TRUCK)|)
             (Temporal-Stuff-Type |(TRANSPORT-VIA-FN TRUCK)|)
             (Subclass-Of |(TRANSPORT-VIA-FN TRUCK)| Transportation-Event)
             (Subclass-Of |(TRANSPORT-VIA-FN TRUCK)|
              |(TRANSPORT-VIA-FN TRUCK)|)
             (Subclass-Of |(TRANSPORT-VIA-FN TRUCK)|
              |(TRANSPORT-VIA-FN TRANSPORTATION-DEVICE-VEHICLE)|)
             (Subclass-Of |(TRANSPORT-VIA-FN TRUCK)|
              |(TRANSPORT-VIA-FN LAND-TRANSPORTATION-DEVICE)|)
             (Subclass-Of |(TRANSPORT-VIA-FN TRUCK)|
              |(TRANSPORT-VIA-FN TRANSPORTATION-DEVICE)|)
             (Subclass-Of |(TRANSPORT-VIA-FN TRUCK)|
              |(TRANSPORT-VIA-FN ROAD-VEHICLE)|)
             (Set-Or-Collection |(TRANSPORT-VIA-FN TRUCK)|)
             (Arity |(TRANSPORT-VIA-FN TRUCK)| 1))

(defrelation Pensive
             (Name-In-Cyc Pensive "#$Pensive")
             (Feeling-Attribute-Type Pensive)
             (Subclass-Of Pensive Feeling-Attribute)
             (Set-Or-Collection Pensive)
             (Arity Pensive 1)
             (Documentation Pensive
              "A feeling of deep thoughtfulness, reflection, or introspection, and sometimes melancholia.  This is a Collection --- for an explanation of that, see Happiness."))

(defrelation Dislike
             (Name-In-Cyc Dislike "#$Dislike")
             (Feeling-Attribute-Type Dislike)
             (Subclass-Of Dislike Feeling-Attribute)
             (Set-Or-Collection Dislike)
             (Arity Dislike 1)
             (Documentation Dislike
              "A feeling of disaffection or disaffinity for a person or thing.  This is a Collection --- for an explanation of that, see Happiness.  Some more specialized Feeling-Attribute-Types than Dislike are Disgust, Contempt, Hate, Resentment, etc."))

(defrelation Nervous-System
             (Name-In-Cyc Nervous-System "#$NervousSystem")
             (Unique-Anatomical-Part-Type Nervous-System)
             (Animal-Body-Part-Type Nervous-System)
             (Subclass-Of Nervous-System Animal-Body-Part)
             (Set-Or-Collection Nervous-System)
             (Arity Nervous-System 1)
             (Documentation Nervous-System
              "The collection of all animals' nervous systems.  A Nervous-System is composed of all its nerves, brain, etc., and enables the animal to sense things and react to them both by instinct (spinal reflex) and deliberation (brain)."))

(defrelation Road-Work-Vehicle
             (Name-In-Cyc Road-Work-Vehicle "#$RoadWorkVehicle")
             (Existing-Object-Type Road-Work-Vehicle)
             (Subclass-Of Road-Work-Vehicle Land-Transportation-Device)
             (Subclass-Of Road-Work-Vehicle Transportation-Device-Vehicle)
             (Set-Or-Collection Road-Work-Vehicle)
             (Arity Road-Work-Vehicle 1)
             (Documentation Road-Work-Vehicle
              "The class of heavy construction equipment vehicles that are used to make roads and in other situations where one needs to move quantities of earth, rocks, etc. around.  These are powered by internal combustion engines, and often have wheels but just as  often have treads like tanks."))

(defrelation Perceiving-Involuntary
             (Synonymous-External-Concept Perceiving-Involuntary
              Sensus-Information1997 "INVOLUNTARY-PERCEPTUAL-EVENT")
             (Name-In-Cyc Perceiving-Involuntary "#$Perceiving-Involuntary")
             (Temporal-Stuff-Type Perceiving-Involuntary)
             (Subclass-Of Perceiving-Involuntary Perceiving)
             (Set-Or-Collection Perceiving-Involuntary)
             (Arity Perceiving-Involuntary 1)
             (Documentation Perceiving-Involuntary
              "A collection of mental events, a subset of Perceiving. Each element of this collection is a perceptual event in which the agent involuntarily receives senory information. Thus, if I am in a room, and a light is turned on, I would see the light reflected off of the walls, but without any effort on my part.  On the other hand, actively searching for something with my eyes would not be a member of this collection."))

(defobject Cooked
   (Preparation-Attribute Cooked)
   (Name-In-Cyc Cooked "#$Cooked")
   (Documentation Cooked
    "The attribute Cooked is a Preparation-Attribute (q.v.), describing
how a given item of Food has been prepared.  Food becomes Cooked
as the result of an event of Cooking-Food.  Specialized forms of
Cooked include Steamed, Baked, Microwaved and Grilled."))

(defrelation |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "INTENSIVE")|
             (Skolem-Object
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "INTENSIVE")|)
             (Collection
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "INTENSIVE")|)
             (Subclass-Of
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "INTENSIVE")|
              Thing)
             (Set-Or-Collection
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "INTENSIVE")|)
             (Arity |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "INTENSIVE")|
              1))

(deffunction Ounce
   (Args-Isa Ounce Real-Number)
   (Result-Instance-Of Ounce Mass)
   (Result-Instance-Of Ounce Scalar-Interval)
   (Name-In-Cyc Ounce "#$Ounce")
   (Fps-Unit-Of-Measure Ounce)
   (Unit-Of-Mass Ounce)
   (Unit-Of-Measure-No-Prefix Ounce)
   (Function Ounce)
   (Documentation Ounce
    "The measurement function used in Cyc to represent the ounce used for measuring weight within the British (FPS) system.  See also FPS-Unit-Of-Measure, Unit-Of-Measure."))

(defrelation Torso
             (Name-In-Cyc Torso "#$Torso")
             (Unique-Anatomical-Part-Type Torso)
             (Animal-Body-Part-Type Torso)
             (Subclass-Of Torso Biological-Living-Object)
             (Subclass-Of Torso Animal-Body-Part)
             (Set-Or-Collection Torso)
             (Arity Torso 1)
             (Documentation Torso
              "The collection of all animal torsos.  A torso is the main portion of the animal's body, generally located centrally,
and one can conceive of an animal as a torso to which are connected the head and various appendages which together make up the entire animal."))

(defrelation City
             (Name-In-Cyc City "#$City")
             (Spatially-Disjoint-Region-Type City)
             (Subclass-Of City Geopolitical-Entity)
             (Subclass-Of City Urban-Area)
             (Set-Or-Collection City)
             (Arity City 1)
             (Documentation City
              "A collection of geopolitical entities.  An element of City is a local human settlement which has its own government.  This includes cities, towns, suburbs, villages, hamlets, and townships, as long as they have their own governments.  A city government is usually mostly autonomous from the governments of its surrounding regions, rather than being a sub-organization of them."))

(defrelation Us-Federal-Government-Organization
             (Name-In-Cyc Us-Federal-Government-Organization
              "#$USFederalGovernmentOrganization")
             (Existing-Object-Type Us-Federal-Government-Organization)
             (Subclass-Of Us-Federal-Government-Organization
              Legal-Government-Organization)
             (Set-Or-Collection Us-Federal-Government-Organization)
             (Arity Us-Federal-Government-Organization 1)
             (Documentation Us-Federal-Government-Organization
              "A collection of government organizations.  An instance of US-Federal-Government-Organization is an element of Legal-Government-Organization which is part of the United-States-Federal-Government.  This collection includes the U.S. military, Federal courts, U.S. Congress, U.S. territorial governments, Federal departments and independent agencies, and the city of Washington, D.C.; it does NOT include U.S. states, interstate compacts, and cities (other than Washington, D.C.)."))

(defrelation Stomach
             (Name-In-Cyc Stomach "#$Stomach")
             (Animal-Body-Part-Type Stomach)
             (Unique-Anatomical-Part-Type Stomach)
             (Subclass-Of Stomach Organ)
             (Set-Or-Collection Stomach)
             (Arity Stomach 1)
             (Documentation Stomach
              "The collection of all stomachs.  An individual Stomach is an Organ which is part of the Digestive-System that churns and digests Food."))

(defrelation Multi-Directional-Communication
             (Name-In-Cyc Multi-Directional-Communication
              "#$MultiDirectionalCommunication")
             (Script-Type Multi-Directional-Communication)
             (Subclass-Of Multi-Directional-Communication Communicating)
             (Set-Or-Collection Multi-Directional-Communication)
             (Arity Multi-Directional-Communication 1)
             (Documentation Multi-Directional-Communication
              "A collection of complex information transfer events.  Each element of Multi-Directional-Communication is an event in which more than one agent is involved as a Sender-Of-Info.  For example, a conversation or a debate, as opposed to a speech or lecture.  The predicate Info-Contributed is used to correlate each sending agent with the information s/he transmits in such an event.  For communication acts having only one sender, see Communication-Act-Single."))

(defrelation |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "NAMED-OBJECT")|
             (Skolem-Object
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "NAMED-OBJECT")|)
             (Collection
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "NAMED-OBJECT")|)
             (Subclass-Of
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "NAMED-OBJECT")|
              Something-Existing)
             (Set-Or-Collection
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "NAMED-OBJECT")|)
             (Arity
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "NAMED-OBJECT")| 1))

(defrelation Formal-Product-Type
             (Name-In-Cyc Formal-Product-Type "#$FormalProductType")
             (Object-Type Formal-Product-Type)
             (Subclass-Of Formal-Product-Type Product-Type)
             (Set-Or-Collection Formal-Product-Type)
             (Arity Formal-Product-Type 1)
             (Documentation Formal-Product-Type
              "A collection of collections.  Each element of Formal-Product-Type is a collection of products (i.e., tangible products, services, information products, etc.), all of which conform to a standardized product specification (i.e., a `form').  In Western-style capitalistic markets, elements of Formal-Product-Type are often associated with a particular brand name (and perhaps model), since competing providers of products design them to be distinctive.  For example, the collection Internal-Combustion-Engine is not an element of Formal-Product-Type, but a specific collection of engines manufactured by (e.g.) Mazda would be.  On the service side, the collection Hair-Cutting-Event is not a Formal-Product-Type, but a subset of hair stylings for men (e.g., at a particular designer's salon) might be."))

(defrelation Fall-Season
             (Name-In-Cyc Fall-Season "#$FallSeason")
             (Temporal-Object-Type Fall-Season)
             (Subclass-Of Fall-Season Season-Of-Year)
             (Set-Or-Collection Fall-Season)
             (Arity Fall-Season 1)
             (Documentation Fall-Season
              "The collection of Fall seasons.  In the Temperate-Climate-Cycle, Fall is usually the time of harvesting and beginnings of shutting down of growth.  Also the time of harvest celebrations.  Fall-Season represents the climatic aspects of Fall; for its purely temporal aspects, see Calendar-Autumn."))

(defrelation Bank-Debit-Card
             (Name-In-Cyc Bank-Debit-Card "#$BankDebitCard")
             (Existing-Object-Type Bank-Debit-Card)
             (Subclass-Of Bank-Debit-Card Card)
             (Subclass-Of Bank-Debit-Card Tender-Object)
             (Subclass-Of Bank-Debit-Card Id-Document)
             (Subclass-Of Bank-Debit-Card Official-Document)
             (Set-Or-Collection Bank-Debit-Card)
             (Arity Bank-Debit-Card 1)
             (Documentation Bank-Debit-Card
              "A collection of official `documents'.  Each element of Bank-Debit-Card is a plastic card that enables the holder to access the account with which the card is associated; typically used to withdraw funds from the account.  Cf. Credit-Card."))

(deffunction Pound-Unit-Of-Mass
   (Args-Isa Pound-Unit-Of-Mass Real-Number)
   (Result-Instance-Of Pound-Unit-Of-Mass Mass)
   (Result-Instance-Of Pound-Unit-Of-Mass Scalar-Interval)
   (Name-In-Cyc Pound-Unit-Of-Mass "#$Pound-UnitOfMass")
   (Fps-Unit-Of-Measure Pound-Unit-Of-Mass)
   (Unit-Of-Mass Pound-Unit-Of-Mass)
   (Unit-Of-Measure-No-Prefix Pound-Unit-Of-Mass)
   (Function Pound-Unit-Of-Mass)
   (Documentation Pound-Unit-Of-Mass
    "The measurement function used in Cyc to represent the basic unit of mass in the British (FPS) system.  Technically, the FPS pound is exclusively a unit of force, analogous to the Newton in the MKS system.  The usage here is occasioned primarily by the fact that interconversions between pounds and kilograms are often used in the terrestrial frame of reference.  In fact, the FPS unit of mass, analogous to the Kilogram in the MKS system, is called the 'slug'.  See also FPS-Unit-Of-Measure, Unit-Of-Measure, Pound-Unit-Of-Force."))

(defrelation Flat-Physical-Surface
             (Name-In-Cyc Flat-Physical-Surface "#$FlatPhysicalSurface")
             (Region-Type Flat-Physical-Surface)
             (Subclass-Of Flat-Physical-Surface Surface-Physical)
             (Set-Or-Collection Flat-Physical-Surface)
             (Arity Flat-Physical-Surface 1)
             (Documentation Flat-Physical-Surface
              "The collection of all surfaces that are substantially flat (by the tolerance standards of the the context).  This means that there are no 'significant' concave depressions or convex bulges or bumps, and that the surface approximates some portion of a Euclidian plane in space.  Note that the surface may have holes or cracks and may be disconnected, in multiple (substantially coplanar) pieces.  A typical table top is a FlatPhysicalSurface."))

(defobject |(NO-AMOUNT-FN DUCTILITY)|
   (Scalar-Interval |(NO-AMOUNT-FN DUCTILITY)|)
   (Ductility |(NO-AMOUNT-FN DUCTILITY)|)
   (Skolem-Object |(NO-AMOUNT-FN DUCTILITY)|))

(defrelation Computer-Program
             (Name-In-Cyc Computer-Program "#$ComputerProgram")
             (Product-Type Computer-Program)
             (Existing-Object-Type Computer-Program)
             (Subclass-Of Computer-Program Inanimate-Thing)
             (Subclass-Of Computer-Program Tangible-Product)
             (Subclass-Of Computer-Program Artifact)
             (Subclass-Of Computer-Program Information-Bearing-Object)
             (Set-Or-Collection Computer-Program)
             (Arity Computer-Program 1)
             (Documentation Computer-Program
              "A collection of information bearing objects (IBOs).  Each element of Computer-Program is an IBO, i.e., a tangible object which contains intangible information, namely instructions written in a code readable by some computer system and which are intended for execution by a computer.  The tangible component of a computer program may be embodied in the memory of a particular instance of Computer (during a particular time), in a static magnetic medium (e.g., a disk or tape), in a hardcopy, even (once upon a time) in a set of punch cards.  Again, note that elements of Computer-Program are physically embodied programs, which rightly interpreted yield the information and/or instructions in the program.  The elements of Algorithm and of Character-String (which are abstract) are NOT elements of Computer-Program, although they may figure in the intangible components of a computer program.  See also Contains-Information, Information-Bearing-Object."))

(defobject Sheet-Shaped
   (Physical-Structural-Attribute Sheet-Shaped)
   (Name-In-Cyc Sheet-Shaped "#$SheetShaped")
   (Documentation Sheet-Shaped
    "A physical attribute.  Sheet-Shaped is the element of Physical-Structural-Attribute that describes a tangible object that is flat and spread out, planar, and neither fully crumpled nor compactly folded.  In one of the dimensions it is much smaller than in the other two.  Bedspreads, ice over ponds, and sheets of paint on a house are all possible examples of objects having this attribute.  For describing a sheet of something (e.g., waxed paper, aluminum foil, cloth) regardless of its configuration, use Sheet-Of-Some-Stuff."))

(defrelation Construction-Artifact
             (Name-In-Cyc Construction-Artifact "#$ConstructionArtifact")
             (Existing-Object-Type Construction-Artifact)
             (Subclass-Of Construction-Artifact Artifact)
             (Subclass-Of Construction-Artifact Solid-Tangible-Product)
             (Set-Or-Collection Construction-Artifact)
             (Arity Construction-Artifact 1)
             (Documentation Construction-Artifact
              "A collection of artificial tangible objects.  Each element of Construction-Artifact is a structure designed and built by humans.  This collection includes buildings and parts of buildings, as well as things like dams, railroad lines, and roads.  Examples: the Roman-Coliseum, the Arc-De-Triomphe, Hoover-Dam, the World-Trade-Center, Holly-Wood-Bowl.  For further information, see Fixed-Structure, an important subset."))

(defrelation Symmetric-Anatomical-Part-Type
             (Name-In-Cyc Symmetric-Anatomical-Part-Type
              "#$SymmetricAnatomicalPartType")
             (Sibling-Disjoint-Collection Symmetric-Anatomical-Part-Type)
             (Subclass-Of Symmetric-Anatomical-Part-Type Animal-Body-Part-Type)
             (Subclass-Of Symmetric-Anatomical-Part-Type Existing-Object-Type)
             (Set-Or-Collection Symmetric-Anatomical-Part-Type)
             (Arity Symmetric-Anatomical-Part-Type 1)
             (Documentation Symmetric-Anatomical-Part-Type
              "A collection of collections.  Instances are types of Anatomical-Parts of bilaterally symmetrical organisms (Organism-Whole) which occur in bilaterally symmetric pairs.  This is not intended to include broader categories like Tooth, Rib-Animal-Body-Part, or Finger, but the specific parts of which the organism only has two (EyeTooth, FifthRib, or Ring-Finger)."))

(defrelation |(GROUP-FN SPATIAL-THING)|
             (Skolem-Object |(GROUP-FN SPATIAL-THING)|)
             (Object-Type |(GROUP-FN SPATIAL-THING)|)
             (Subclass-Of |(GROUP-FN SPATIAL-THING)| Spatial-Thing)
             (Subclass-Of |(GROUP-FN SPATIAL-THING)| Group)
             (Set-Or-Collection |(GROUP-FN SPATIAL-THING)|)
             (Arity |(GROUP-FN SPATIAL-THING)| 1))

(defrelation Transporting-People
             (Name-In-Cyc Transporting-People "#$TransportingPeople")
             (Default-Disjoint-Script-Type Transporting-People)
             (Temporal-Stuff-Type Transporting-People)
             (Subclass-Of Transporting-People Human-Activity)
             (Subclass-Of Transporting-People Transportation-Event)
             (Set-Or-Collection Transporting-People)
             (Arity Transporting-People 1)
             (Documentation Transporting-People
              "The subcollection of Transportation-Event in each ofwhich instances of Person, i.e., human beings are the Main-Transportees or among the Main-Transportees.  Surely human beingsare usually not the only Transportees in these instances of Transportation-Events (for example, some of these people'spersonal belongings are also among the Transportees), andone may even think that in most instances of Transportation-Event, humanbeings are involved as Transportees (for example, even adriver can be considered among the Transportees).  The maindifference between this collection and the collection#$TransportingGoods is that there are human beings as Main-Transportees in instances of Transporting-People, while thereare no human beings as Main-Transportees in instances of#$TransportingGoods."))

(defrelation Pharmacy-Product-Type
             (Name-In-Cyc Pharmacy-Product-Type "#$PharmacyProductType")
             (Collection Pharmacy-Product-Type)
             (Subclass-Of Pharmacy-Product-Type Product-Type)
             (Set-Or-Collection Pharmacy-Product-Type)
             (Arity Pharmacy-Product-Type 1)
             (Documentation Pharmacy-Product-Type
              "The collection of pharmaceutical product types, including drugs and pharmaceutical devices."))

(defrelation Famine
             (Name-In-Cyc Famine "#$Famine")
             (Script-Type Famine)
             (Temporal-Object-Type Famine)
             (Subclass-Of Famine Disaster-Event)
             (Set-Or-Collection Famine)
             (Arity Famine 1)
             (Documentation Famine
              "A collection of events; a subset of Disaster-Event.  Each instance of Famine is an event taking place in a contiguous geographical area in which a lot of people are undergoing Starvation."))

(defrelation Movement-Rotation
             (Name-In-Cyc Movement-Rotation "#$Movement-Rotation")
             (Temporal-Object-Type Movement-Rotation)
             (Subclass-Of Movement-Rotation Movement-Event)
             (Set-Or-Collection Movement-Rotation)
             (Arity Movement-Rotation 1)
             (Documentation Movement-Rotation
              "Movement-Rotation is a subset of Movement-Event.  Elements of Movement-Rotation are those moving events in which the Object-Moving rotates about an internal or external axis.  For example, the daily rotation of the Earth on its axis, or the rotation of a clock hand about its fastened end."))

(defrelation |(TRANSPORT-VIA-FN BICYCLE)|
             (Skolem-Object |(TRANSPORT-VIA-FN BICYCLE)|)
             (Script-Type |(TRANSPORT-VIA-FN BICYCLE)|)
             (Default-Disjoint-Script-Type |(TRANSPORT-VIA-FN BICYCLE)|)
             (Temporal-Stuff-Type |(TRANSPORT-VIA-FN BICYCLE)|)
             (Subclass-Of |(TRANSPORT-VIA-FN BICYCLE)| Transportation-Event)
             (Subclass-Of |(TRANSPORT-VIA-FN BICYCLE)|
              |(TRANSPORT-VIA-FN LAND-TRANSPORTATION-DEVICE)|)
             (Subclass-Of |(TRANSPORT-VIA-FN BICYCLE)| Locomotion-Process)
             (Subclass-Of |(TRANSPORT-VIA-FN BICYCLE)| Exercising)
             (Set-Or-Collection |(TRANSPORT-VIA-FN BICYCLE)|)
             (Arity |(TRANSPORT-VIA-FN BICYCLE)| 1))

(defrelation Cell-Part
             (Name-In-Cyc Cell-Part "#$CellPart")
             (Existing-Object-Type Cell-Part)
             (Subclass-Of Cell-Part Biological-Living-Object)
             (Subclass-Of Cell-Part Microscopic-Scale-Object)
             (Set-Or-Collection Cell-Part)
             (Arity Cell-Part 1)
             (Documentation Cell-Part
              "The collection of structures which are typically found and formed as parts of Cells. This covers components of both Eukaryotic-Cells and Prokaryotic-Cells.  It includes organelles, vesicles, cell walls, extracellular matrix, plasma membranes, receptors, cellular humours, microtubules, etc."))

(defrelation Intangible-Object-Predicate
             (Name-In-Cyc Intangible-Object-Predicate
              "#$IntangibleObjectPredicate")
             (Predicate-Category Intangible-Object-Predicate)
             (Subclass-Of Intangible-Object-Predicate
              Extensional-Representation-Predicate)
             (Set-Or-Collection Intangible-Object-Predicate)
             (Arity Intangible-Object-Predicate 1)
             (Documentation Intangible-Object-Predicate
              "A collection of predicates.  Each element of Intangible-Object-Predicate is a predicate used in assertions which describe the properties of intangible objects.  For example, Knows-About, Title-Of-Head-Of-Government, Religion-Of-Rule, Standard-Unit-Measuring, Territories-Controlled."))

(defrelation Writing-Implement
             (Name-In-Cyc Writing-Implement "#$WritingImplement")
             (Existing-Object-Type Writing-Implement)
             (Subclass-Of Writing-Implement Shaft)
             (Subclass-Of Writing-Implement Hand-Tool)
             (Set-Or-Collection Writing-Implement)
             (Arity Writing-Implement 1)
             (Documentation Writing-Implement
              "A collection of tools.  An instance of Writing-Implement is a hand-held tool which is intended to be primarily used, by a person, for writing.  Subsets include the collections Chalk and Writing-Pen (but not Typewriter).  
Note: A marginal example is a PDA, such as an Apple Newton, with a stylus; both items, the PDA and the stylus, can be held in one's hands and used to record one's handwritten notes.  Another marginal positive example is a stylus designed to held in the mouth by a quadraplegic person; i.e., `hand-held' is not an absolutely hard and fast constraint here.  A close NON-example is a handheld calculator."))

(deffunction Years-Duration
   (Args-Isa Years-Duration Real-Number)
   (Result-Instance-Of Years-Duration Time-Quantity)
   (Result-Instance-Of Years-Duration Scalar-Interval)
   (Name-In-Cyc Years-Duration "#$YearsDuration")
   (Unit-Of-Measure Years-Duration)
   (Unit-Of-Measure-No-Prefix Years-Duration)
   (Unit-Of-Time Years-Duration)
   (Function Years-Duration)
   (Documentation Years-Duration
    "This is a function that takes one or two numbers and returns, as its value, some amount of Time.  An expression of the form (Years-Duration ?min ?max) denotes a quantity of Time that is at least ?min years and at most ?max years.  (Years-Duration ?num) denotes a quantity of Time that is exactly ?num years."))

(defrelation Annual-Event-Type
             (Name-In-Cyc Annual-Event-Type "#$AnnualEventType")
             (Collection Annual-Event-Type)
             (Subclass-Of Annual-Event-Type Temporal-Object-Type)
             (Set-Or-Collection Annual-Event-Type)
             (Arity Annual-Event-Type 1)
             (Documentation Annual-Event-Type
              "A collection of collections.  The instances of an element of Annual-Event-Type are synchronized with the calendar.  If ?X is an Annual-Event-Type, then one occurs each year.  For example, Christmas-Holiday is an Annual-Event-Type, because one occurs each year, synchronized with the calendar."))

(defrelation |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "ORDERED-SET")|
             (Skolem-Object
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "ORDERED-SET")|)
             (Collection
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "ORDERED-SET")|)
             (Subclass-Of
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "ORDERED-SET")|
              Thing)
             (Set-Or-Collection
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "ORDERED-SET")|)
             (Arity
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "ORDERED-SET")| 1))

(defrelation Making-An-Oral-Sound
             (Name-In-Cyc Making-An-Oral-Sound "#$MakingAnOralSound")
             (Default-Disjoint-Script-Type Making-An-Oral-Sound)
             (Subclass-Of Making-An-Oral-Sound Body-Movement-Event)
             (Subclass-Of Making-An-Oral-Sound Emitting-Sound)
             (Subclass-Of Making-An-Oral-Sound Single-Doer-Action)
             (Set-Or-Collection Making-An-Oral-Sound)
             (Arity Making-An-Oral-Sound 1)
             (Documentation Making-An-Oral-Sound
              "The collection of actions in which the lips and other mouth parts are
used to make sound. MakingAnOralSound means the event in which sound
is produced more-or-less voluntarily, using the mouth, mouth portal,
lips, and tongue."))

(defrelation Heating-Process
             (Name-In-Cyc Heating-Process "#$HeatingProcess")
             (Temporal-Stuff-Type Heating-Process)
             (Default-Disjoint-Script-Type Heating-Process)
             (Subclass-Of Heating-Process Temperature-Changing-Process)
             (Set-Or-Collection Heating-Process)
             (Arity Heating-Process 1)
             (Documentation Heating-Process
              "Heating-Process is a specialization of Temperature-Changing-Process -- that is, (:Direct-Superclasses Heating-Process Temperature-Changing-Process).  During each Heating-Process event, the temperature of the Object-Of-State-Change is increased by applying heat to the object."))

(defrelation Waging-War
             (Name-In-Cyc Waging-War "#$WagingWar")
             (Temporal-Object-Type Waging-War)
             (Default-Disjoint-Script-Type Waging-War)
             (Subclass-Of Waging-War Human-Activity)
             (Set-Or-Collection Waging-War)
             (Arity Waging-War 1)
             (Documentation Waging-War
              "The fighting of two or more armies through the use of weapons.  The same as doing battle."))

(defrelation Non-Negative-Number
             (Name-In-Cyc Non-Negative-Number "#$NonNegativeNumber")
             (Measurable-Attribute-Type Non-Negative-Number)
             (Subclass-Of Non-Negative-Number Real-Number)
             (Set-Or-Collection Non-Negative-Number)
             (Arity Non-Negative-Number 1)
             (Documentation Non-Negative-Number
              "Non-Negative-Number is the subset of Real-Number that excludes the negative reals.  Each element of Non-Negative-Number is a  number greater than or equal to zero, e.g., 0, 0.173, Pi, 4, 101, ...."))

(defrelation Sub-Abs-Of-Entity-Before
             (Nth-Domain Sub-Abs-Of-Entity-Before 1 Entity)
             (Nth-Domain Sub-Abs-Of-Entity-Before 2 Something-Existing)
             (Nth-Domain Sub-Abs-Of-Entity-Before 3 Temporal-Thing)
             (Name-In-Cyc Sub-Abs-Of-Entity-Before "#$subAbsOfEntityBefore")
             (Ternary-Predicate Sub-Abs-Of-Entity-Before)
             (Relation Sub-Abs-Of-Entity-Before)
             (Arity Sub-Abs-Of-Entity-Before 3)
             (Documentation Sub-Abs-Of-Entity-Before
              "(Sub-Abs-Of-Entity-Before ?X ?Y ?Z) indicates that ?X is an Entity,  ?Y is some subabstraction of ?X, and (Contiguous-After ?Z ?Y). This provides one way to talk about pre-conditions for some state-changing process.  For example, 'Egg001 was raw before being scrambled' -- if (Sub-Abs-Of-Entity-Before Egg001 ?SUB Scrambling001), then ?SUB is raw.  Usually the preferred alternative is to use the Holds-In representation: (Holds-In (STIB Scrambling001) 'Egg001 is raw')."))

(defrelation Humanly-Occupied-Spatial-Object
             (Name-In-Cyc Humanly-Occupied-Spatial-Object
              "#$HumanlyOccupiedSpatialObject")
             (Existing-Object-Type Humanly-Occupied-Spatial-Object)
             (Subclass-Of Humanly-Occupied-Spatial-Object Partially-Tangible)
             (Set-Or-Collection Humanly-Occupied-Spatial-Object)
             (Arity Humanly-Occupied-Spatial-Object 1)
             (Documentation Humanly-Occupied-Spatial-Object
              "A collection of places.  Each element of Humanly-Occupied-Spatial-Object is a place that humans occupy, not restricted to (though including) the interiors of things built by humans, such as houses, office buildings, and ships.  Humanly-Occupied-Spatial-Object also extends to campsites, caves, villages, and towns.  Examples: Doug Lenat's house, North Austin, the Five Boroughs of New York, Minnesota, the Vatican, an Antarctic research station, and (briefly) the Moon."))

(defobject Bendable
   (Physical-Structural-Attribute Bendable)
   (Subattribute-Of Bendable Flexible)
   (Name-In-Cyc Bendable "#$Bendable")
   (Documentation Bendable
    "A physical attribute.  Bendable is the Physical-Structural-Attribute of an object that tends to stay in the contorted shape when contorted.  Note: for something to be bendable, it must be Flexible."))

(defrelation |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "SUBJECT-MATTER")|
             (Skolem-Object
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "SUBJECT-MATTER")|)
             (Slot
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "SUBJECT-MATTER")|)
             (Relation
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "SUBJECT-MATTER")|)
             (Arity
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "SUBJECT-MATTER")|
              2)
             (Binary-Relation
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "SUBJECT-MATTER")|))

(defrelation Fps-Unit-Of-Measure
             (Name-In-Cyc Fps-Unit-Of-Measure "#$FPSUnitOfMeasure")
             (Relationship-Type Fps-Unit-Of-Measure)
             (Subclass-Of Fps-Unit-Of-Measure Unit-Of-Measure)
             (Set-Or-Collection Fps-Unit-Of-Measure)
             (Arity Fps-Unit-Of-Measure 1)
             (Documentation Fps-Unit-Of-Measure
              "A subset of Unit-Of-Measure.  FPS-Unit-Of-Measure is the collection of all the measurement functions whose results use the FPS (i.e., foot-pound-second) system of measure to describe physical quantities.  Examples: Gallon-US, Square-Mile, Cubic-Ft-Per-Sec."))

(defrelation Stock-Holdings
             (Name-In-Cyc Stock-Holdings "#$StockHoldings")
             (Existing-Object-Type Stock-Holdings)
             (Subclass-Of Stock-Holdings Financial-Asset-Holdings)
             (Set-Or-Collection Stock-Holdings)
             (Arity Stock-Holdings 1)
             (Documentation Stock-Holdings
              "A collection of partially tangibles; a subset of Financial-Asset-Holdings.  Each instance of Stock-Holdings is a group of Stock shares owned by an Agent.  It may consist of shares in only one company or different groups of shares in multiple companies."))

(defrelation |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "OWNED-BY")|
             (Skolem-Object
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "OWNED-BY")|)
             (Slot |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "OWNED-BY")|)
             (Relation
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "OWNED-BY")|)
             (Arity |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "OWNED-BY")|
              2)
             (Binary-Relation
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "OWNED-BY")|))

(defrelation Monetary-Exchange-Of-User-Rights
             (Name-In-Cyc Monetary-Exchange-Of-User-Rights
              "#$MonetaryExchangeOfUserRights")
             (Script-Type Monetary-Exchange-Of-User-Rights)
             (Temporal-Object-Type Monetary-Exchange-Of-User-Rights)
             (Subclass-Of Monetary-Exchange-Of-User-Rights
              Exchange-Of-User-Rights)
             (Subclass-Of Monetary-Exchange-Of-User-Rights Money-Transaction)
             (Set-Or-Collection Monetary-Exchange-Of-User-Rights)
             (Arity Monetary-Exchange-Of-User-Rights 1)
             (Documentation Monetary-Exchange-Of-User-Rights
              "The collection of events in which two Agents (Exchangers) perform two Transferring-Possessions with each other, one of which is a Money-Transfer.  The Buyer gains possession (i.e., some User-Rights-Attribute) of the Object-Paid-For  from the Seller, who gains possession of the Object-Tendered.  Note that Renting, as well as Buying, is a Monetary-Exchange-Of-User-Rights"))

(defrelation Precipitation-Cloud
             (Name-In-Cyc Precipitation-Cloud "#$PrecipitationCloud")
             (Existing-Object-Type Precipitation-Cloud)
             (Subclass-Of Precipitation-Cloud Cloud-In-Sky)
             (Set-Or-Collection Precipitation-Cloud)
             (Arity Precipitation-Cloud 1)
             (Documentation Precipitation-Cloud
              "The collection of clouds that emit Precipitation-Particles in instances of Precipitation-Process."))

(defrelation Hope
             (Name-In-Cyc Hope "#$Hope")
             (Feeling-Attribute-Type Hope)
             (Subclass-Of Hope Feeling-Attribute)
             (Set-Or-Collection Hope)
             (Arity Hope 1)
             (Documentation Hope
              "Expectation of fulfillment or success.  This is a collection; for an explanation of a typical Feeling-Attribute-Type, see Happiness."))

(defobject A-Few-Weeks-Duration
   (Time-Quantity A-Few-Weeks-Duration)
   (Order-Of-Magnitude-Interval A-Few-Weeks-Duration)
   (Name-In-Cyc A-Few-Weeks-Duration "#$AFewWeeksDuration")
   (Documentation A-Few-Weeks-Duration "Duration of 2 to 10 weeks"))

(defrelation Relation-Type-Count
             (Nth-Domain Relation-Type-Count 1 Slot)
             (Nth-Domain Relation-Type-Count 2 Collection)
             (Nth-Domain Relation-Type-Count 3 Collection)
             (Nth-Domain Relation-Type-Count 4 Non-Negative-Integer)
             (Name-In-Cyc Relation-Type-Count "#$relationTypeCount")
             (Quaternary-Predicate Relation-Type-Count)
             (Relation Relation-Type-Count)
             (Arity Relation-Type-Count 4)
             (Documentation Relation-Type-Count
              "(Relation-Type-Count SLOT COL1 COL2 NUM) means that, for every instance of COL1 (INS1) there are exactly NUM instances of COL2 (INS2, INS3, ...) such that (SLOT INS1 INS2), (SLOT INS1 INS3), ..., hold.  Thus, (Relation-Type-Count Anatomical-Parts Dog Leg 4) means simply `dogs have four legs'."))

(deffunction Degree-Unit-Of-Angular-Measure
   (Args-Isa Degree-Unit-Of-Angular-Measure Real-Number)
   (Result-Instance-Of Degree-Unit-Of-Angular-Measure Physical-Attribute)
   (Result-Instance-Of Degree-Unit-Of-Angular-Measure Scalar-Interval)
   (Name-In-Cyc Degree-Unit-Of-Angular-Measure "#$Degree-UnitOfAngularMeasure")
   (Unit-Of-Angular-Distance Degree-Unit-Of-Angular-Measure)
   (Unit-Of-Measure-No-Prefix Degree-Unit-Of-Angular-Measure)
   (Function Degree-Unit-Of-Angular-Measure)
   (Documentation Degree-Unit-Of-Angular-Measure
    "The basic unit to measure the size of angles, in the Imperial system of measurement.  360 degrees = 1 complete circle"))

(defrelation Propositional-Attitude-Slot
             (Name-In-Cyc Propositional-Attitude-Slot
              "#$PropositionalAttitudeSlot")
             (Predicate-Category Propositional-Attitude-Slot)
             (Subclass-Of Propositional-Attitude-Slot Modal-Relationship)
             (Subclass-Of Propositional-Attitude-Slot
              Intangible-Object-Predicate)
             (Subclass-Of Propositional-Attitude-Slot Slot)
             (Set-Or-Collection Propositional-Attitude-Slot)
             (Arity Propositional-Attitude-Slot 1)
             (Documentation Propositional-Attitude-Slot
              "The collection of Binary-Predicates in Cyc which represent the various propositional attitudes.  Examples include Beliefs, Desires, Biases, Knows, Opinions, Expects, Intends, Goals, Notices, etc."))

(defrelation Room-In-A-Construction
             (Name-In-Cyc Room-In-A-Construction "#$RoomInAConstruction")
             (Existing-Object-Type Room-In-A-Construction)
             (Subclass-Of Room-In-A-Construction Space-In-Ahoc)
             (Set-Or-Collection Room-In-A-Construction)
             (Arity Room-In-A-Construction 1)
             (Documentation Room-In-A-Construction
              "The set of rooms in ConstructionArtifacts"))

(defrelation Financial-Asset-Holdings
             (Name-In-Cyc Financial-Asset-Holdings "#$FinancialAssetHoldings")
             (Existing-Object-Type Financial-Asset-Holdings)
             (Subclass-Of Financial-Asset-Holdings Holdings)
             (Set-Or-Collection Financial-Asset-Holdings)
             (Arity Financial-Asset-Holdings 1)
             (Documentation Financial-Asset-Holdings
              "A collection of partially tangibles.  An element of Financial-Asset-Holdings is a group of financial assets (e.g., stocks, bonds, ... ) owned by individual or corporate Agent(s).  As a default, we assume that the monetary value of each group equals the sum of the monetary values of the individual assets in that group."))

(defrelation Pity
             (Name-In-Cyc Pity "#$Pity")
             (Feeling-Attribute-Type Pity)
             (Subclass-Of Pity Feeling-Attribute)
             (Set-Or-Collection Pity)
             (Arity Pity 1)
             (Documentation Pity
              "Feeling sorry for another agent on account of the undesirable state of affairs s/he is in.  This is a collection; for an explanation of a typical Feeling-Attribute-Type, see Happiness."))

(defrelation Dimensionless-Unit-Of-Measure
             (Name-In-Cyc Dimensionless-Unit-Of-Measure
              "#$DimensionlessUnitOfMeasure")
             (Interconvertible-Unit-Type Dimensionless-Unit-Of-Measure)
             (Subclass-Of Dimensionless-Unit-Of-Measure Unit-Of-Measure)
             (Set-Or-Collection Dimensionless-Unit-Of-Measure)
             (Arity Dimensionless-Unit-Of-Measure 1)
             (Documentation Dimensionless-Unit-Of-Measure
              "A subset of Unit-Of-Measure.  Dimensionless-Unit-Of-Measure is the collection of measurement functions whose results are elements of Scalar-Interval which have no dimension; i.e., they are simply numbers, instances of Interval-On-Number-Line.  Examples include Percent, Unity, Thousandths.  (Percent 50) returns the point-interval, one-half (0.5).  (Unity 3 4) returns the interval that is the range of numbers between 3 and 4, inclusive."))

(defrelation Education-Level-Attribute
             (Name-In-Cyc Education-Level-Attribute
              "#$EducationLevelAttribute")
             (Social-Attribute-Type Education-Level-Attribute)
             (Subclass-Of Education-Level-Attribute Scalar-Interval)
             (Subclass-Of Education-Level-Attribute Social-Status-Attribute)
             (Set-Or-Collection Education-Level-Attribute)
             (Arity Education-Level-Attribute 1)
             (Documentation Education-Level-Attribute
              "A collection of attributes.  Each Education-Level-Attribute, when applied to a person, indicates their level of education or current involvement in a course of study; if applied to a course of study, it indicates the level of it.  The very same attributes apply in both cases, though; some sample elements of this collection are:  Ph-D-Level, Twelfth-Grade-Level, Bachelor-Of-Arts-Level, Medical-Degree-Level, etc."))

(defrelation International-Organization-Of-Countries
             (Name-In-Cyc International-Organization-Of-Countries
              "#$InternationalOrganizationOfCountries")
             (Existing-Object-Type International-Organization-Of-Countries)
             (Subclass-Of International-Organization-Of-Countries
              International-Organization)
             (Set-Or-Collection International-Organization-Of-Countries)
             (Arity International-Organization-Of-Countries 1)
             (Documentation International-Organization-Of-Countries
              "A collection of organizations; a subset of International-Organization.  An element of International-Organization-Of-Countries is an organization whose members are countries (as represented by their goverments).  Examples: the United Nations, NATO, SEATO, OAU, the League of Arab States, and OPEC."))

(defobject |(LOW-AMOUNT-FN VISIBILITY)|
   (Scalar-Interval |(LOW-AMOUNT-FN VISIBILITY)|)
   (Visibility |(LOW-AMOUNT-FN VISIBILITY)|)
   (Skolem-Object |(LOW-AMOUNT-FN VISIBILITY)|))

(defobject Upright-Posture
   (Posture Upright-Posture)
   (Name-In-Cyc Upright-Posture "#$UprightPosture")
   (Documentation Upright-Posture
    "The attribute that describes an Animal in an upright, i.e. vertically extended, Posture.  (Posture-Of-Animal ?ANIM Upright-Posture) is implied by walking and running, as well as by standing."))

(defobject Sharp-Edged
   (Physical-Structural-Attribute Sharp-Edged)
   (Name-In-Cyc Sharp-Edged "#$SharpEdged")
   (Documentation Sharp-Edged
    "Includes anything which has a sharp edge.  Includes knives, scissors, and broken glass.  Does not include the right angle at the edge of a desk--that's not sharp enough.  Does not include the edge of a cotton sheet--that's not hard enough to be sharp.  Does not include a needle--it may be sharp, but it's not an edge.  For needles, nails, etc., see Pointy-Ended."))

(defrelation Command
             (Name-In-Cyc Command "#$Command")
             (Object-Type Command)
             (Subclass-Of Command Request)
             (Set-Or-Collection Command)
             (Arity Command 1)
             (Documentation Command
              "A collection of illocutionary forces.  Each instance of Command consists of a piece of information contained (usually implicitly) in a communication, and which expresses the speaker's intention to have the listener either carry out the action described in the utterance and/or bring about the situation described in the utterance.  The speaker in any given instance of Ordering-Communication-Act presupposes that s/he has the authority to command those s/he adresses.  `Speaker' and `listener' are broadly interpreted to mean, respectively, any Sender-Of-Info and Recipient-Of-Info.  See also Illocutionary-Force."))

(defrelation Volitional-Cause-Rst
             (Synonymous-External-Concept Volitional-Cause-Rst
              Sensus-Information1997 "RST-VOLITIONAL-CAUSE")
             (Nth-Domain Volitional-Cause-Rst 1 Linguistic-Object)
             (Name-In-Cyc Volitional-Cause-Rst "#$volitionalCause-RST")
             (Asymmetric-Binary-Predicate Volitional-Cause-Rst)
             (Rst-Relation Volitional-Cause-Rst)
             (Relation Volitional-Cause-Rst)
             (Set-Or-Collection Volitional-Cause-Rst)
             (Arity Volitional-Cause-Rst 1)
             (Documentation Volitional-Cause-Rst
              "The discourse relation that holds between two segments of text when ARG2 specifies something which could be a cause of the volitional action described in ARG1."))

(defrelation Spring-Season
             (Name-In-Cyc Spring-Season "#$SpringSeason")
             (Temporal-Object-Type Spring-Season)
             (Subclass-Of Spring-Season Season-Of-Year)
             (Set-Or-Collection Spring-Season)
             (Arity Spring-Season 1)
             (Documentation Spring-Season
              "The collection of Spring seasons.  In the Temperate-Climate-Cycle, Spring is the time ice melts, the average temperature starts to increase, the days get longer, plants begin to put forth buds, etc.  Spring-Season represents the climatic aspects of spring; see Calendar-Spring for the purely temporal aspects of spring."))

(defrelation Adverb
             (Name-In-Cyc Adverb "#$Adverb")
             (Linguistic-Object-Type Adverb)
             (Subclass-Of Adverb Speech-Part)
             (Set-Or-Collection Adverb)
             (Arity Adverb 1)
             (Documentation Adverb
              "The collection of all adverbs. Adverbs are words which can modify adverbs, verbs, or adjectives. Many adverbs are morphologically derived from adjectives. Example: `slowly'."))

(defrelation Official-Document
             (Name-In-Cyc Official-Document "#$OfficialDocument")
             (Existing-Object-Type Official-Document)
             (Subclass-Of Official-Document
              Hardcopy-Information-Bearing-Object)
             (Set-Or-Collection Official-Document)
             (Arity Official-Document 1)
             (Documentation Official-Document
              "A collection of information bearing objects (IBOs).  Each element of Official-Document is a document that can be used as the basis, proof, or support of some fact (such as a person's nationality, marital status, credit, or qualifications; or the ownership or transfer of property; etc.).  Official documents are typically generated, issued, and certified by the relevant institutions (as with passports or stock certificates), but they also include unique personal documents (such as holographic wills) which meet certain standards to be accepted in support of facts. Examples of Official-Document: birth certificates, tax returns, passports, insurance policies, postage stamps, receipts, packing slips, student ID cards, etc."))

(defobject Sunny
   (Weather-Attribute Sunny)
   (Subattribute-Of Sunny |(HIGH-AMOUNT-FN VISIBILITY)|)
   (Name-In-Cyc Sunny "#$Sunny")
   (Documentation Sunny
    "The Weather-Attribute that characterizes an Outdoor-Location at which the sun is shining brightly."))

(defrelation Dusk
             (The-Partition Dusk Dawn |(THE-PARTITION DUSK DAWN)|)
             (Name-In-Cyc Dusk "#$Dusk")
             (Temporal-Object-Type Dusk)
             (Script-Type Dusk)
             (Subclass-Of Dusk Qualitative-Time-Of-Day)
             (Subclass-Of Dusk Twilight)
             (Set-Or-Collection Dusk)
             (Arity Dusk 1)
             (Documentation Dusk
              "Each Dusk is a dimly-lit period of time which is Contiguous-After a Sunset, and is the Event which starts a Night."))

(defrelation Inanimate-Thing
             (Synonymous-External-Concept Inanimate-Thing
              Sensus-Information1997 "INANIMATE-OBJECT")
             (Name-In-Cyc Inanimate-Thing "#$InanimateThing")
             (Existing-Object-Type Inanimate-Thing)
             (Subclass-Of Inanimate-Thing Tangible-Thing)
             (Set-Or-Collection Inanimate-Thing)
             (Arity Inanimate-Thing 1)
             (Documentation Inanimate-Thing
              "A collection of tangibles.  Each element of Inanimate-Thing is a tangible thing which is not a living structure.  Examples: Yale-University, the Statue-Of-Liberty, a U.S. ten-dollar bill, the Moon-Of-Earth, a safety pin."))

(defrelation Phone-Number
             (Name-In-Cyc Phone-Number "#$PhoneNumber")
             (Id-String-Type Phone-Number)
             (Subclass-Of Phone-Number Id-String)
             (Subclass-Of Phone-Number Character-String)
             (Set-Or-Collection Phone-Number)
             (Arity Phone-Number 1)
             (Documentation Phone-Number
              "A collection of strings. Each element of Phone-Number is a string that represents a telephone number."))

(defrelation Evergreen-Plant
             (Name-In-Cyc Evergreen-Plant "#$EvergreenPlant")
             (Existing-Object-Type Evergreen-Plant)
             (Subclass-Of Evergreen-Plant Plant-Woody)
             (Set-Or-Collection Evergreen-Plant)
             (Arity Evergreen-Plant 1)
             (Documentation Evergreen-Plant
              "A collection of plants.  Each element of Evergreen-Plant is a plant that retains leaves or needles throughout all the seasons of the year.  Cf. Deciduous-Plant."))

(defrelation Land-Transportation-Device
             (Transport-Via-Fn Land-Transportation-Device
              |(TRANSPORT-VIA-FN LAND-TRANSPORTATION-DEVICE)|)
             (Name-In-Cyc Land-Transportation-Device
              "#$LandTransportationDevice")
             (Existing-Object-Type Land-Transportation-Device)
             (Subclass-Of Land-Transportation-Device Transportation-Device)
             (Set-Or-Collection Land-Transportation-Device)
             (Arity Land-Transportation-Device 1)
             (Documentation Land-Transportation-Device
              "A collection of physical devices. An instance of Land-Transportation-Device is a device used for transportation on land.  Subsets of Land-Transportation-Device include the collections Automobile, Snowmobile, Train-Car, Horse-Carriage, Baby-Carriage, Bicycle, Skate-Board, and more."))

(defrelation Medical-Patient
             (Name-In-Cyc Medical-Patient "#$MedicalPatient")
             (Existing-Object-Type Medical-Patient)
             (Subclass-Of Medical-Patient Animal)
             (Set-Or-Collection Medical-Patient)
             (Arity Medical-Patient 1)
             (Documentation Medical-Patient
              "One who is undergoing medical care - which includes routine examinations as well as treatment for injuries or illnesses."))

(defobject |(GOVERNMENT-FN COUNTRY)|
   (Regional-Government |(GOVERNMENT-FN COUNTRY)|)
   (|(GROUP-FN INTELLIGENT-AGENT)| |(GOVERNMENT-FN COUNTRY)|)
   (Skolem-Object |(GOVERNMENT-FN COUNTRY)|))

(defrelation Buying-Activity
             (Name-In-Cyc Buying-Activity "#$BuyingActivity")
             (Temporal-Object-Type Buying-Activity)
             (Default-Disjoint-Script-Type Buying-Activity)
             (Subclass-Of Buying-Activity Commercial-Activity)
             (Set-Or-Collection Buying-Activity)
             (Arity Buying-Activity 1)
             (Documentation Buying-Activity
              "A collection of events.  Buying-Activity very generally includes events related to purchasing goods or services.  Each element of Buying-Activity is an event that is either (i) a common prelude to buying (i.e., the kinds of activities that contribute to their doers becoming buyers), or (ii) an element of Buying itself.  Examples of Buying-Activity include shopping for, or ordering, something very specific, and also general expressions of interest in purchasing something, such as placing an `Item Wanted' ad in a newspaper."))

(defrelation Mass
             (Name-In-Cyc Mass "#$Mass")
             (Fundamental-Numeric-Attribute-Type Mass)
             (Subclass-Of Mass Scalar-Interval)
             (Subclass-Of Mass Physical-Attribute)
             (Set-Or-Collection Mass)
             (Arity Mass 1)
             (Documentation Mass
              "A collection of physical attributes.  Each element of Mass is an amount of matter present in a given object.  Elements of Mass may be either a fixed interval, such as two pounds, or a range, such as a legal load for a certain type of trailer.  The more mass an object has, the greater is the force required to accelerate it.  See Unit-Of-Mass for the units used by Cyc to measure mass."))

(defrelation |(THE-PARTITION INVERTEBRATE VERTEBRATE)|
             (Skolem-Object |(THE-PARTITION INVERTEBRATE VERTEBRATE)|)
             (Disjoint-Set-Or-Collection
              |(THE-PARTITION INVERTEBRATE VERTEBRATE)|)
             (Set-Mathematical |(THE-PARTITION INVERTEBRATE VERTEBRATE)|)
             (Subclass-Of |(THE-PARTITION INVERTEBRATE VERTEBRATE)| Thing)
             (Set-Or-Collection |(THE-PARTITION INVERTEBRATE VERTEBRATE)|)
             (Arity |(THE-PARTITION INVERTEBRATE VERTEBRATE)| 1))

(defrelation Has-Headquarters-In-Country
             (Domain Has-Headquarters-In-Country Organization)
             (Range Has-Headquarters-In-Country Country)
             (Name-In-Cyc Has-Headquarters-In-Country
              "#$hasHeadquartersInCountry")
             (Slot Has-Headquarters-In-Country)
             (Relation Has-Headquarters-In-Country)
             (Arity Has-Headquarters-In-Country 2)
             (Binary-Relation Has-Headquarters-In-Country)
             (Documentation Has-Headquarters-In-Country
              "The predicate Has-Headquarters-In-Country identifies the country in which a particular organization has its headquarters.  (Has-Headquarters-In-Country ORG COUNTRY) means that the Organization ORG has its world-wide headquarters and place of primary central control in the Country COUNTRY."))

(defrelation Airplane-Runway
             (Name-In-Cyc Airplane-Runway "#$AirplaneRunway")
             (Existing-Object-Type Airplane-Runway)
             (Subclass-Of Airplane-Runway Path-For-Wheeled-Vehicles)
             (Set-Or-Collection Airplane-Runway)
             (Arity Airplane-Runway 1)
             (Documentation Airplane-Runway
              "An airstrip, at an airport, on an aircraft carrier, or in some field, upon which airplanes taxi, take off, and land."))

(defrelation Medical-Care-Professional
             (Name-In-Cyc Medical-Care-Professional
              "#$MedicalCareProfessional")
             (Occupation-Type Medical-Care-Professional)
             (Subclass-Of Medical-Care-Professional Medical-Care-Provider)
             (Subclass-Of Medical-Care-Professional Health-Professional)
             (Set-Or-Collection Medical-Care-Professional)
             (Arity Medical-Care-Professional 1)
             (Documentation Medical-Care-Professional
              "A collection of persons; a subset of Professional.  Each element of Medical-Care-Professional is a person whose occupation principally involves medical care of patients, including surgery, psychological care, physical therapy, practical nursing, and dispensing drugs.  The collection Medical-Care-Professional includes members of the subsets Psychiatrist, Pharmacist, Emergency-Medical-Technician, Nurse, Doctor-Medical, etc., as well as Veterinarian."))

(defrelation Function-From-Quantities-To-Quantities
             (Name-In-Cyc Function-From-Quantities-To-Quantities
              "#$FunctionFromQuantitiesToQuantities")
             (Relationship-Type Function-From-Quantities-To-Quantities)
             (Subclass-Of Function-From-Quantities-To-Quantities
              Non-Predicate-Function)
             (Subclass-Of Function-From-Quantities-To-Quantities
              Evaluatable-Function)
             (Set-Or-Collection Function-From-Quantities-To-Quantities)
             (Arity Function-From-Quantities-To-Quantities 1)
             (Documentation Function-From-Quantities-To-Quantities
              "A collection of mathematical functions.  Each element of Function-From-Quantities-To-Quantities is a function that takes one or more numbers as its arguments, and it returns a number as its value.  Examples: subtraction (Difference-Fn), square root (Sqrt-Fn), absolute value (Absolute-Value-Fn), and logarithm (Log-Fn)."))

(defrelation Action
             (Name-In-Cyc Action "#$Action")
             (Temporal-Object-Type Action)
             (Script-Type Action)
             (Subclass-Of Action Event)
             (Set-Or-Collection Action)
             (Arity Action 1)
             (Documentation Action
              "A collection of events.  Each instance of Action is an event in which something is done by some agent.  (See Done-By.)  Actions may include any event in which one or more actor(s) effect some change(s) in the tangible or intangible state of the world, typically by some expenditure of effort or energy.  But note that it is not required that any tangible object be moved, changed, produced, or destroyed for an action to occur; the effects of actions may be intangible (such as the change in a bank balance, or the intimidation of a subordinate).  Depending upon the context, actors may be animate or inanimate, conscious or nonconscious.  For actions that are intentional, see also Purposeful-Action, Performed-By."))

(defrelation Composite-Attribute
             (Name-In-Cyc Composite-Attribute "#$CompositeAttribute")
             (Attribute-Type Composite-Attribute)
             (Subclass-Of Composite-Attribute Attribute-Value)
             (Set-Or-Collection Composite-Attribute)
             (Arity Composite-Attribute 1)
             (Documentation Composite-Attribute
              "A collection of attributes.  Each element of Composite-Attribute is an attribute that is essentially a vector with many dimensions.  Instances of Color are good examples; colors have intensity, hue, and saturation as independent dimensions.  See also Primitive-Attribute-Types, Primitive-Attribute-Type."))

(defrelation Head-Animal-Body-Part
             (Name-In-Cyc Head-Animal-Body-Part "#$Head-AnimalBodyPart")
             (Unique-Anatomical-Part-Type Head-Animal-Body-Part)
             (Animal-Body-Part-Type Head-Animal-Body-Part)
             (Subclass-Of Head-Animal-Body-Part Solid-Tangible-Thing)
             (Subclass-Of Head-Animal-Body-Part Animal-Body-Part)
             (Set-Or-Collection Head-Animal-Body-Part)
             (Arity Head-Animal-Body-Part 1)
             (Documentation Head-Animal-Body-Part
              "The collection of all heads of Animals.
[Note: the hyphenated name reflects the need to have other terms in the knowledge base like Head-Vertebrate, representing a subset of this set, about which some useful specialized information is stated.]"))

(defrelation Learning
             (Name-In-Cyc Learning "#$Learning")
             (Script-Type Learning)
             (Temporal-Object-Type Learning)
             (Subclass-Of Learning Purposeful-Action)
             (Subclass-Of Learning Composite-Physical-And-Mental-Event)
             (Set-Or-Collection Learning)
             (Arity Learning 1)
             (Documentation Learning
              "The collection of all events, brief or extended, in which an agent is consciously acquiring information or know-how."))

(defrelation The-Empty-Set
             (Name-In-Cyc The-Empty-Set "#$TheEmptySet")
             (Set-Mathematical The-Empty-Set)
             (Subclass-Of The-Empty-Set Thing)
             (Set-Or-Collection The-Empty-Set)
             (Arity The-Empty-Set 1)
             (Documentation The-Empty-Set
              "The-Empty-Set is the empty set, i.e., the set that has no element and is sometimes called the null.  Note that The-Empty-Set is not an instance of Collection."))

(defrelation Adult-Female-Person
             (Name-In-Cyc Adult-Female-Person "#$AdultFemalePerson")
             (Existing-Object-Type Adult-Female-Person)
             (Subclass-Of Adult-Female-Person Female-Person)
             (Subclass-Of Adult-Female-Person Human-Adult)
             (Set-Or-Collection Adult-Female-Person)
             (Arity Adult-Female-Person 1)
             (Documentation Adult-Female-Person
              "The collection of all women; i.e., Persons who are adult and female"))

(defrelation Mechanical-Device
             (Name-In-Cyc Mechanical-Device "#$MechanicalDevice")
             (Existing-Object-Type Mechanical-Device)
             (Subclass-Of Mechanical-Device Solid-Tangible-Thing)
             (Subclass-Of Mechanical-Device Physical-Device)
             (Set-Or-Collection Mechanical-Device)
             (Arity Mechanical-Device 1)
             (Documentation Mechanical-Device
              "A collection of physical devices.  An instance of Mechanical-Device is a physical device which has one part that moves with respect to another of its parts.  Thus a spoon is not one of these, but a pair of scissors is, as are more complex devices such as vacuum cleaners and the Space-Shuttle-Challenger."))

(defrelation |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "AREA")|
             (Skolem-Object
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "AREA")|)
             (Slot |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "AREA")|)
             (Relation |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "AREA")|)
             (Arity |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "AREA")| 2)
             (Binary-Relation
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "AREA")|))

(defrelation Set-Or-Collection
             (?x)
             :=>
             (and (= (Arity ?x) 1) (Relation ?x))
             :axiom
             (and
              (=> (and (= (Arity ?x) 1) (Relation ?x)) (Set-Or-Collection ?x))
              (Synonymous-External-Concept Set-Or-Collection
               Sensus-Information1997 "COLLECTION")
              (The-Partition Set-Or-Collection Individual
               |(THE-PARTITION SET-OR-COLLECTION :INDIVIDUAL)|)
              (Name-In-Cyc Set-Or-Collection "#$SetOrCollection")
              (Collection Set-Or-Collection)
              (Subclass-Of Set-Or-Collection
               Mathematical-Or-Computational-Thing)
              (Set-Or-Collection Set-Or-Collection) (Arity Set-Or-Collection 1)
              (Documentation Set-Or-Collection
               "A class can be thought of as a collection of individuals.
Formally, a class is a unary relation, a set of tuples (lists) of
length one.  Each tuple contains an object which is said to be an
instance of the class.  An individual, or object, is any identifiable
entity in the universe of discourse (anything that can be denoted by a
object constant in KIF), including classes themselves.
  The notion of CLASS is introduced in addition to the relation
vocabulary because of the importance of classes and types in knowledge
representation practice.  The notion of class and relation are merged
to unify relational and object-centered representational conventions.
Classes serve the role of `sorts' and `types'.
   There is no first-order distinction between classes and unary
relations.  One is free to define a second-order predicate that makes
the distinction.  For example, (predicate C) could mean that the unary
relation C should be thought of more as a property than as a
collection of individuals over which one might quantify some
statement.  Logically, all such predicates would still be instances of
the metaclass CLASS.
  The fact that an object i is an instance of class C is denoted by
the sentence (C i).  One may also use the equivalent form
 (INSTANCE-OF i C).  This is not equivalent to (MEMBER i C).
An instance of a class is not a set-ontologetic
member of the class; rather, the tuple containing the instance is a
element of the set of tuples which is a relation.
  The definition of a class is a predicate over a single free
variable, such that the predicate holds for instances of the class.
In other words, classes are defined _intentionally_.  Two
separately-defined classes may have the same extension (in this case
they are = to each other).  It is possible to define a class by
enumerating its instances, using KIF's set operations.  For example,
  (define-class primary-color (?color)
     :iff-def (member ?color (setof red green blue)))



<H3>Notes:</H3>

<UL><B>See-Also: </B>In CycL, classes are called collections.
<BR>In Loom, classes are called concepts.
<BR>In KEE, classes are called classes.
<BR>In Epikit, classes are not explicitly part of the language but are
     conventionally denoted by unary relations, or using a binary
     relation such as (ISA <instance> <class>).
<BR></UL>")
              (Subclass-Of Set-Or-Collection Relation)
              (Set-Or-Collection Set-Or-Collection) (Arity Set-Or-Collection 1)
              (Documentation Set-Or-Collection
               "An augmentation of CLASS in the frame-ontology to make the frame-ontology
   be more self-consistent when OKBC's kb-local-only-p is true.")
              (Subclass-Of Set-Or-Collection Thing)
              (Set-Or-Collection Set-Or-Collection) (Arity Set-Or-Collection 1)
              (Documentation Set-Or-Collection
               "The collection of all mathematical sets and all collections.  Instances of Set-Mathematical and instances of Collection share some basic common features.  They are both abstract entities, lacking spatial and temporal properties.  More specifically, they (can) have elements, and hence may stand to one another in set-theoretic relations such as Subset-Of and Disjoint-With.  Nevertheless, sets and collections differ in two important respects.  Every collection is associated with an intensional criterion for membership -- a more or less natural property or group of properties possessed by its members.  (The criterion for membership need not, and often will not, be precisely definable in any language.)  Collections are thus akin to kinds.  In contrast, the elements of a set are not required to be homogeneous in any respect; any things whatsoever may together comprise the members of a set.  The second major difference between sets and collections is that no two distinct sets can be co-extensional (be such that every element of one is an element of the other and conversely).  Sets are, so to speak, identified on the basis of their extensions.  Collections, on the other hand, are identified by their intensional criteria for membership.  So collections which have exactly the same elements may be distinct, differing in their respective membership criteria.")))

(defrelation Itinerary-Document
             (Name-In-Cyc Itinerary-Document "#$ItineraryDocument")
             (Existing-Object-Type Itinerary-Document)
             (Subclass-Of Itinerary-Document Textual-Material)
             (Set-Or-Collection Itinerary-Document)
             (Arity Itinerary-Document 1)
             (Documentation Itinerary-Document
              "The collection of documents that contain information about the time/location of each leg of a trip, accomodations, etc."))

(defrelation Non-Negative-Scalar-Interval
             (Name-In-Cyc Non-Negative-Scalar-Interval
              "#$NonNegativeScalarInterval")
             (Collection Non-Negative-Scalar-Interval)
             (Subclass-Of Non-Negative-Scalar-Interval Scalar-Interval)
             (Set-Or-Collection Non-Negative-Scalar-Interval)
             (Arity Non-Negative-Scalar-Interval 1)
             (Documentation Non-Negative-Scalar-Interval
              "For a measurable non-negative quantity, the ordered sequence of possible values may be thought of as a line. Non-Negative-Scalar-Intervals are the line segments (or points) on such a line,  representing a range of consecutive values, all equal to or greater than 0.  The most common case is where the line is just the non-negative part of the Real Number Line, and in fact where the Non-Negative-Scalar-Interval is either a contiguous set of points there (i.e., a range of numbers) or just a single point there (i.e., a number). Another common case is where the line has some unit of measure marked off, such as meters."))

(defobject Brittle
   (Physical-Structural-Attribute Brittle)
   (Name-In-Cyc Brittle "#$Brittle")
   (Documentation Brittle
    "A physical attribute.  Brittle is the Physical-Structural-Attribute of a substance which breaks easily when subjected to a low or moderate impact or application of force, such as most instances of Glass."))

(defrelation Window-Portal
             (Name-In-Cyc Window-Portal "#$WindowPortal")
             (Region-Type Window-Portal)
             (Subclass-Of Window-Portal Portal)
             (Subclass-Of Window-Portal Part-Of-Building)
             (Set-Or-Collection Window-Portal)
             (Arity Window-Portal 1)
             (Documentation Window-Portal
              "Windows are one kind of portal found in a human occupation construct.  They are usually covered by Window-The-Portal-Covering, which is the physical object made primarily of glass through which one can see."))

(defrelation Highway
             (Name-In-Cyc Highway "#$Highway")
             (Existing-Object-Type Highway)
             (Subclass-Of Highway Path-For-Wheeled-Vehicles)
             (Set-Or-Collection Highway)
             (Arity Highway 1)
             (Documentation Highway
              "The subcollection of Path-For-Wheeled-Vehicles that contains all highways, inside or outside cities."))

(defrelation Performance-Level
             (Nth-Domain Performance-Level 1 Something-Existing)
             (Nth-Domain Performance-Level 2 Event)
             (Nth-Domain Performance-Level 3 Actor-Slot)
             (Nth-Domain Performance-Level 4 Script-Performance-Attribute-Type)
             (Nth-Domain Performance-Level 5 Generic-Attribute)
             (Nth-Domain-Subclass-Of Performance-Level 4
              Script-Performance-Attribute)
             (Name-In-Cyc Performance-Level "#$performanceLevel")
             (Quintary-Predicate Performance-Level)
             (Functional-Predicate Performance-Level)
             (Relation Performance-Level)
             (Arity Performance-Level 5)
             (Documentation Performance-Level
              "This predicate relates performers to particular individual actions.  (Performance-Level OBJ EVT ROLE PERF-ATT LEVEL) means that the individual OBJ plays the role ROLE in the action EVT, and does so with the performance attribute PERF-ATT to the degree LEVEL.  Such an assertion expresses actual performance in a particular action; for example, (Performance-Level Joe DiggingHole54001 Performed-By Strength Low) means Joe exerted a low level of strength while digging that particular hole.  This does not imply much about Joe's potential to exert strength, about strength required in general for hole-digging, etc., it just talks about that one single event.  To talk about typical or expected performance, use Skill-Level."))

(defrelation Swallowing
             (Name-In-Cyc Swallowing "#$Swallowing")
             (Temporal-Object-Type Swallowing)
             (Default-Disjoint-Script-Type Swallowing)
             (Subclass-Of Swallowing Body-Movement-Event)
             (Subclass-Of Swallowing Biological-Intake-Event)
             (Subclass-Of Swallowing Bodily-Function-Event)
             (Set-Or-Collection Swallowing)
             (Arity Swallowing 1)
             (Documentation Swallowing
              "The collection of actions in which an Animal moves a solid or a liquid from its Mouth to its Stomach.  A type of Bodily-Function-Event as well as a type of Body-Movement-Event."))

(defrelation Dexterity
             (Name-In-Cyc Dexterity "#$Dexterity")
             (Script-Performance-Attribute-Type Dexterity)
             (Subclass-Of Dexterity Script-Performance-Attribute)
             (Set-Or-Collection Dexterity)
             (Arity Dexterity 1)
             (Documentation Dexterity
              "Dexterity is the Script-Performance-Attribute-Type for describing actions in which the performer's hands move accurately, quickly, and with economy of motion."))

(defobject Note-About-Giving-Generic-Value-Functions-Numeric-Values
   (Shared-Note Note-About-Giving-Generic-Value-Functions-Numeric-Values)
   (Name-In-Cyc Note-About-Giving-Generic-Value-Functions-Numeric-Values
    "#$NoteAboutGivingGenericValueFunctionsNumericValues")
   (Documentation Note-About-Giving-Generic-Value-Functions-Numeric-Values
    "In some contexts, users may wish to ground elements of Generic-Value-Function by linking them to numeric `real world' measurements.  E.g. In a driving-on-the-highway-context, one might wish to define (Medium-Amount-Fn Speed) as `between 50 and 60 miles per hour'.  The way to assert this is as follows:  (:and (Min-Quant-Value (Medium-Amount-Fn Speed) (Miles-Per-Hour 50))(Max-Quant-Value (Medium-Amount-Fn Speed)(Miles-Per-Hour 60)))."))

(defrelation Nose
             (Name-In-Cyc Nose "#$Nose")
             (Unique-Anatomical-Part-Type Nose)
             (Animal-Body-Part-Type Nose)
             (Subclass-Of Nose Sensor)
             (Subclass-Of Nose Organ)
             (Set-Or-Collection Nose)
             (Arity Nose 1)
             (Documentation Nose "Facial organ used in smelling and breathing"))

(defrelation Objects-In-Contact
             (Nth-Domain Objects-In-Contact 1 Physical-Contact-Situation)
             (Nth-Domain Objects-In-Contact 2 Partially-Tangible)
             (Nth-Domain Objects-In-Contact 3 Partially-Tangible)
             (Name-In-Cyc Objects-In-Contact "#$objectsInContact")
             (Ternary-Predicate Objects-In-Contact)
             (Role Objects-In-Contact)
             (Relation Objects-In-Contact)
             (Arity Objects-In-Contact 3)
             (Documentation Objects-In-Contact
              "The predicate Objects-In-Contact indicates that two objects physically touch in a particular Physical-Contact-Situation.  (Objects-In-Contact SIT OBJ-1 OBJ-2) means that OBJ-1 and OBJ-2 are in contact in the Physical-Contact-Situation SIT.  For example, a Clothing-Item and its Wearer are Objects-In-Contact during the wearing.  A father and son in a Carrying-Piggyback event are Objects-In-Contact.  (Objects-In-Contact SIT OBJ-1 OBJ-2) entails (Holds-In SIT (Touches OBJ-1 OBJ-2)); Touches covers both direct touching and touching indirectly (i.e., through a thin layer, e.g., through clothing)."))

(defrelation Unary-Type-Predicate
             (Name-In-Cyc Unary-Type-Predicate "#$UnaryTypePredicate")
             (Collection Unary-Type-Predicate)
             (Subclass-Of Unary-Type-Predicate Unary-Predicate)
             (Subclass-Of Unary-Type-Predicate
              Inference-Related-Bookkeeping-Predicate)
             (Set-Or-Collection Unary-Type-Predicate)
             (Arity Unary-Type-Predicate 1)
             (Documentation Unary-Type-Predicate
              "redundant `typing' predicates created for inference efficiency"))

(defrelation Perceiving
             (Overlapping-External-Concept Perceiving Sensus-Information1997
              "PERCEPTION")
             (Name-In-Cyc Perceiving "#$Perceiving")
             (Default-Disjoint-Script-Type Perceiving)
             (Temporal-Stuff-Type Perceiving)
             (Subclass-Of Perceiving Composite-Physical-And-Mental-Event)
             (Subclass-Of Perceiving Single-Doer-Action)
             (Set-Or-Collection Perceiving)
             (Arity Perceiving 1)
             (Documentation Perceiving
              "Perceiving is the collection of sensory-perceptual events in which a Perceptual-Agent perceives, i.e. acquires information, using its senses."))

(defrelation Biological-Intake-Event
             (Name-In-Cyc Biological-Intake-Event "#$BiologicalIntakeEvent")
             (Temporal-Object-Type Biological-Intake-Event)
             (Default-Disjoint-Script-Type Biological-Intake-Event)
             (Subclass-Of Biological-Intake-Event
              Biological-Transportation-Event)
             (Set-Or-Collection Biological-Intake-Event)
             (Arity Biological-Intake-Event 1)
             (Documentation Biological-Intake-Event
              "A collection of processes.  In each element of Biological-Intake-Event, some object(s) are taken into some living structure."))

(defrelation Living-Language
             (Name-In-Cyc Living-Language "#$LivingLanguage")
             (Object-Type Living-Language)
             (Subclass-Of Living-Language Natural-Language)
             (Set-Or-Collection Living-Language)
             (Arity Living-Language 1)
             (Documentation Living-Language
              "Living-Language, a subset of Natural-Language, is the collection of all natural languages which have some native speaker(s)."))

(deffunction Times-Per-Second
   (Args-Isa Times-Per-Second Real-Number)
   (Result-Instance-Of Times-Per-Second Frequency)
   (Result-Instance-Of Times-Per-Second Scalar-Interval)
   (Result-Instance-Of Times-Per-Second Rate)
   (Name-In-Cyc Times-Per-Second "#$TimesPerSecond")
   (Unit-Of-Frequency Times-Per-Second)
   (Unit-Of-Measure-No-Prefix Times-Per-Second)
   (Function Times-Per-Second)
   (Documentation Times-Per-Second
    "A Cyc function, Times-Per-Second represents a Unit-Of-Frequency.  (Times-Per-Second NUMBER) denotes the frequency NUMBER times per second.  Note that this is more general than a representation of cycles per second, for which the appropriate Unit-Of-Frequency is Hertz."))

(deffunction Second-Fn
   (Nth-Domain Second-Fn 1 Non-Negative-Integer)
   (Nth-Domain Second-Fn 2 Calendar-Minute)
   (Result-Instance-Of Second-Fn Calendar-Second)
   (Name-In-Cyc Second-Fn "#$SecondFn")
   (Individual-Denoting-Function Second-Fn)
   (Non-Predicate-Function Second-Fn)
   (Function Second-Fn)
   (Arity Second-Fn 2)
   (Function-Arity Second-Fn 1)
   (Binary-Relation Second-Fn)
   (Documentation Second-Fn
    "(Second-Fn S MINUTE) denotes second number S of minute MINUTE.  For example, (Second-Fn 59 (Minute-Fn 12 (Hour-Fn 18 (Day-Fn 14 (Month-Fn February (Year-Fn 1966)))))) denotes 6:12:59pm Feb. 14th, 1966"))

(defobject |(MEDIUM-AMOUNT-FN RIGIDITY)|
   (Rigidity |(MEDIUM-AMOUNT-FN RIGIDITY)|)
   (Scalar-Interval |(MEDIUM-AMOUNT-FN RIGIDITY)|)
   (Skolem-Object |(MEDIUM-AMOUNT-FN RIGIDITY)|))

(defrelation Weapon
             (Name-In-Cyc Weapon "#$Weapon")
             (Existing-Object-Type Weapon)
             (Subclass-Of Weapon Physical-Device)
             (Subclass-Of Weapon Solid-Tangible-Product)
             (Set-Or-Collection Weapon)
             (Arity Weapon 1)
             (Documentation Weapon
              "A collection of physical devices.  An instance of Weapon is a device primarily designed for destructive action against animals (often against other sentient beings, most often humans) and/or their habitats (or, more rarely, some class of possessions of theirs.)  This collection includes weapons as traditionally defined (e.g., instances of Sword, instances of Gun-Portable, Bombs, etc.) and also miscellaneous military vehicles and hardware used to kill, to destroy, to immobilize, etc. in military operations (such as the elements of Warplane, Modern-Naval-Ship, Tank-Vehicle, etc.)
Note that in the case of missile weapons, both the launcher and the ammunition are considered Weapons in this sense.  E.g., a bow, an arrow, a missile launcher, an ICBM missile, a gun, a bullet.  This may seem odd at first glance, but in many contexts most of the same axioms apply to both.  Even in our linguistic utterances this carries over; e.g., if asked what killed JFK we can say a rifle, or a bullet from a rifle.  Of course there are specializations (subsets) of Weapon that limit themselves to `the real weapon itself' and to `ammunition for missile weapons.'"))

(defrelation Id-Document
             (Name-In-Cyc Id-Document "#$IDDocument")
             (Existing-Object-Type Id-Document)
             (Subclass-Of Id-Document Official-Document)
             (Set-Or-Collection Id-Document)
             (Arity Id-Document 1)
             (Documentation Id-Document
              "A collection of official documents.  Each element of ID-Document is an accepted credential for identifying some object.  Important subsets of ID-Document include Passport, Driver-License, Social-Security-Card.  Other examples include student ID cards, dog tags (worn by military personnel), dog tags (worn by dogs), authentication certificates for a work of art or an antique."))

(defrelation Making-An-Agreement
             (Name-In-Cyc Making-An-Agreement "#$MakingAnAgreement")
             (Temporal-Object-Type Making-An-Agreement)
             (Default-Disjoint-Script-Type Making-An-Agreement)
             (Subclass-Of Making-An-Agreement Creation-Event)
             (Subclass-Of Making-An-Agreement Social-Occurrence)
             (Subclass-Of Making-An-Agreement Communicating)
             (Set-Or-Collection Making-An-Agreement)
             (Arity Making-An-Agreement 1)
             (Documentation Making-An-Agreement
              "A collection of events.  Each element in the collection Making-An-Agreement is an event in which two or more parties specify the terms of an Agreement to which they will be Agreeing-Agents, and enter into it.  Some types of Making-An-Agreement include its subsets Getting-Engaged, Employee-Hiring, Declaring-Cease-Fire, and Making-A-Reservation."))

(defrelation Geographical-Region
             (Name-In-Cyc Geographical-Region "#$GeographicalRegion")
             (Existing-Object-Type Geographical-Region)
             (Subclass-Of Geographical-Region Surface-Physical)
             (Subclass-Of Geographical-Region Place)
             (Set-Or-Collection Geographical-Region)
             (Arity Geographical-Region 1)
             (Documentation Geographical-Region
              "A collection of spatial regions that include some piece of the surface of Planet-Earth.  Each element of Geographical-Region is a Partially-Tangible entity that may be represented on a map of the Earth.  This includes both purely topographical regions like mountains and underwater spaces, and those defined by demographics, e.g., countries and cities.  In all cases, though, note that the 'region' in question must contain some tangible component with which it is possible to make physical contact.  The elements of Geographical-Region contrast in this respect with the elements of Geographical-Thing-Intangible, which are wholly 'imaginary'.  Examples of Geographical-Regions: City-Of-Pittsburgh-PA, Rocky-Mountain-States-US-Region, the Bahamas, Yale-University, Sinai-Peninsula.  Some important types of regions are represented by the subsets Geopolitical-Entity, Language-Area, Time-Zone, Postal-Code-Region, Ecological-Region, Construction-Site.  No elements of Geographical-Region are wholly indoor locations."))

(defrelation Communicating
             (Overlapping-External-Concept Communicating Sensus-Information1997
              "VERBAL-PROCESS")
             (Synonymous-External-Concept Communicating Sensus-Information1997
              "COMMUNICATIVE-ACT")
             (Name-In-Cyc Communicating "#$Communicating")
             (Default-Disjoint-Script-Type Communicating)
             (Temporal-Stuff-Type Communicating)
             (Subclass-Of Communicating Information-Transfer-Event)
             (Subclass-Of Communicating Social-Occurrence)
             (Subclass-Of Communicating Purposeful-Action)
             (Set-Or-Collection Communicating)
             (Arity Communicating 1)
             (Documentation Communicating
              "A collection of events.  Each element of Communicating is an event in which the transfer of information between or among agents is a focal action; communicating is the main purpose and/or goal in the event.  That may be contrasted with events which involve communication but wherein the focus is different, e.g., playing cards (wherein the progressive actions--and winning--of the game are focal).  
Communicating may be either a one-way or a two-way transfer of information (cf. Communication-Act-Single, Multi-Directional-Communication).  It may be intentional or unintentional.  Every event belonging to Communicating contains at least one transfer of information between at least two agents who participate in the event.  (Note that the latter requirement excludes reading and writing from Communicating, when those events are just the private accessing or generating of information.)  
Communicating may be specialized in various ways, such as, by the method or medium used (e.g., Audio-Communicating, Non-Verbal-Communicating, Face-To-Face-Presence-Communicating); by the type of information involved (e.g., Making-An-Agreement); by the purpose of the communication (e.g., Teaching, Negotiating); by the agents involved (e.g., Intra-Organization-Communication, Stage-Production).  Examples of Communicating include a symphony performance, an email message, a telephone call, a speech, a handshake, issuing a traffic ticket--all of which normally, and focally, involve communication between two or more agents."))

(defrelation Physical-Event
             (Synonymous-External-Concept Physical-Event Sensus-Information1997
              "MATERIAL-PROCESS")
             (Name-In-Cyc Physical-Event "#$PhysicalEvent")
             (Temporal-Object-Type Physical-Event)
             (Script-Type Physical-Event)
             (Subclass-Of Physical-Event Event)
             (Subclass-Of Physical-Event Spatial-Thing)
             (Set-Or-Collection Physical-Event)
             (Arity Physical-Event 1)
             (Documentation Physical-Event
              "A collection of events.  Each element of Physical-Event is an event which involves the interaction of some number of physical objects. (For contrast, see Mental-Event or, a collection of much more common occurrences, Composite-Physical-And-Mental-Event.)"))

(defrelation Dispute-Event
             (Name-In-Cyc Dispute-Event "#$DisputeEvent")
             (Temporal-Object-Type Dispute-Event)
             (Default-Disjoint-Script-Type Dispute-Event)
             (Subclass-Of Dispute-Event Hostile-Social-Action)
             (Set-Or-Collection Dispute-Event)
             (Arity Dispute-Event 1)
             (Documentation Dispute-Event
              "A collection of events with multiple participants.  In each Dispute-Event,  some participants seek to achieve states of affairs that other participants seek to prevent.  Disputes may or may not get settled.  Settlement of a dispute may be by fighting, by competition, by using a mediator or court, by chance, by mutual reasoning, etc."))

(defrelation Visiting-Someone
             (Name-In-Cyc Visiting-Someone "#$VisitingSomeone")
             (Temporal-Object-Type Visiting-Someone)
             (Default-Disjoint-Script-Type Visiting-Someone)
             (Subclass-Of Visiting-Someone Directed-Translation)
             (Subclass-Of Visiting-Someone Translation-Single-Path)
             (Subclass-Of Visiting-Someone Translation-Location-Change)
             (Subclass-Of Visiting-Someone Sociability-Based-Action)
             (Set-Or-Collection Visiting-Someone)
             (Arity Visiting-Someone 1)
             (Documentation Visiting-Someone
              "A collection of actions.  In a Visiting-Someone event, one Agent travels or moves to the vicinity of another Agent for the purpose of meeting with that other Agent.  Each Visiting-Someone is purposeful, at least on the part of the Agent doing the travelling, and that Agent is typically a Person, and the purpose is often social in nature."))

(defrelation Appendage-Animal-Body-Part
             (Name-In-Cyc Appendage-Animal-Body-Part
              "#$Appendage-AnimalBodyPart")
             (Animal-Body-Part-Type Appendage-Animal-Body-Part)
             (Subclass-Of Appendage-Animal-Body-Part Solid-Tangible-Thing)
             (Subclass-Of Appendage-Animal-Body-Part Animal-Body-Part)
             (Set-Or-Collection Appendage-Animal-Body-Part)
             (Arity Appendage-Animal-Body-Part 1)
             (Documentation Appendage-Animal-Body-Part
              "The collection of all appendages of Animals.  An appendage is an Animal-Body-Part that is connected to, and extends from, the animal's Torso (or else from another of its appendages, such as a hand extending from an arm).  Each appendage is used by the Animal for one or more functions; altogether, appendages serve a wide variety of functions such as locomotion, manipulation, sensing, fighting, scratching, heat dissipation, balance, etc."))

(defrelation Path-Customary
             (Name-In-Cyc Path-Customary "#$Path-Customary")
             (Existing-Object-Type Path-Customary)
             (Subclass-Of Path-Customary Something-Existing)
             (Subclass-Of Path-Customary Path-Generic)
             (Set-Or-Collection Path-Customary)
             (Arity Path-Customary 1)
             (Documentation Path-Customary
              "The collection of all existing objects that are commonly paths, or are normally used as paths or conduits for people, animals, vehicles, material or information.  A Path-Customary is either designed as a path or it has a significant known function as a path for movement.  Examples include roads, railroads, sea-lanes, cowpaths, boardwalks, tubes, channels, blood vessels, fibers, wires, communication links, etc.   It does not include all the things that may be used as paths in some particular Path-Systems, but are otherwise not ordinarily viewed as paths (though the latter are still instances of Path-Generic).  If a Path-Customary is an instance of a certain Path-Type, it may be assumed to be part of a system (not necessarily explictly given) of such paths.  Or, on the other hand, it may be asserted to be part of a particular specified Path-System using the predicate Path-In-System.  A Path-Customary is either a Path-Simple (with two distinct ends, not forming a cycle) or else it may be a Path-Cyclic."))

(defrelation Cooking-Food
             (Name-In-Cyc Cooking-Food "#$CookingFood")
             (Default-Disjoint-Script-Type Cooking-Food)
             (Temporal-Object-Type Cooking-Food)
             (Subclass-Of Cooking-Food Heating-Process)
             (Subclass-Of Cooking-Food Preparing-Food-Or-Drink)
             (Set-Or-Collection Cooking-Food)
             (Arity Cooking-Food 1)
             (Documentation Cooking-Food
              "A collection of events.  Each element of Cooking-Food is an event in which some item of Food is prepared by heating it.  Typically, the foodstuff is heated until it reaches a certain temperature over some period of time, during which chemical and/or physical changes occur which are supposed to make the foodstuff healthier or tastier (or, in some cases, ethically acceptable).  A Cooking-Food event may last from a few minutes (e.g., Steaming-Food (vegetables), Making-Toast) to several hours (e.g., Roasting-Food).  
Note:  Smoking-Food is not a subset of Cooking-Food.  Food prepared by smoking (e.g., smoked ham, bacon) is `cured' by a chemical reaction with nitrates in the smoke, rather than being cooked by heat.  Cf. Smoking-Food, Salting-Food."))

(defrelation Biological-Reproduction-Event
             (Name-In-Cyc Biological-Reproduction-Event
              "#$BiologicalReproductionEvent")
             (Temporal-Object-Type Biological-Reproduction-Event)
             (Default-Disjoint-Script-Type Biological-Reproduction-Event)
             (Subclass-Of Biological-Reproduction-Event Biological-Event)
             (Subclass-Of Biological-Reproduction-Event
              Biological-Production-Event)
             (Set-Or-Collection Biological-Reproduction-Event)
             (Arity Biological-Reproduction-Event 1)
             (Documentation Biological-Reproduction-Event
              "A collection of events.  Each element of Biological-Reproduction-Event is an event in which one or more biological organisms (the Parent-Actors) produce new organisms (the Offspring-Actors) generally of the same kind as the parents."))

(defobject |(VERY-LOW-AMOUNT-FN DUCTILITY)|
   (Scalar-Interval |(VERY-LOW-AMOUNT-FN DUCTILITY)|)
   (Ductility |(VERY-LOW-AMOUNT-FN DUCTILITY)|)
   (Skolem-Object |(VERY-LOW-AMOUNT-FN DUCTILITY)|))

(defobject Deciding-Which-Instrument-Predicate-To-Use
   (Shared-Note Deciding-Which-Instrument-Predicate-To-Use)
   (Name-In-Cyc Deciding-Which-Instrument-Predicate-To-Use
    "#$DecidingWhichInstrumentPredicateToUse")
   (Documentation Deciding-Which-Instrument-Predicate-To-Use
    "Which instrument predicate you use depends on what level of generality you wish your statement to apply at.  One help is to look at the argument types of each instrument predicate and decide.  Do you want it to apply to every Partially-Tangible which is an instrument?  Then use Instrument-Generic since Partially-Tangible is its Arg1-Isa.  Are you writing a rule which really only applies to Physical-Devices  Then use Device-Used.  But be careful!  When you use a more specific predicate such as Device-Used it may have special extra conditions in its definition aside from the Physical-Device Arg1-Isa constraint.  Also if your first stab at the rule involves Device-Used in the antecedent, see if it applies more generally to Instrument-Generic."))

(defrelation Connecting-Together
             (Name-In-Cyc Connecting-Together "#$ConnectingTogether")
             (Temporal-Object-Type Connecting-Together)
             (Default-Disjoint-Script-Type Connecting-Together)
             (Subclass-Of Connecting-Together Action-On-Object)
             (Subclass-Of Connecting-Together Physical-Event)
             (Set-Or-Collection Connecting-Together)
             (Arity Connecting-Together 1)
             (Documentation Connecting-Together
              "A collection of events.  In a Connecting-Together event, two or more tangible things get connected together by means of some sort of connector or fastener.  Some specializations of this include welding, buckling-up, using nailing, tying-up, etc.  Connecting-Together need not be a spec of Movement-Translation-Event since two objects being connected may be already at rest with each other."))

(defobject South-East-Generally
   (Geographical-Direction South-East-Generally)
   (Name-In-Cyc South-East-Generally "#$SouthEast-Generally")
   (Documentation South-East-Generally
    "The general direction of SouthEast.  The Vector-Interval comprising the cone-shaped set of vectors pointing (from some reference point) within approximately forty-five degrees of pointing in the same direction as South-East-Directly."))

(defrelation Construction-Company
             (Name-In-Cyc Construction-Company "#$ConstructionCompany")
             (Existing-Object-Type Construction-Company)
             (Subclass-Of Construction-Company Business)
             (Subclass-Of Construction-Company Commercial-Service-Organization)
             (Set-Or-Collection Construction-Company)
             (Arity Construction-Company 1)
             (Documentation Construction-Company
              "A collection of businesses.  An element of Construction-Company is a business whose Main-Function is constructing buildings, houses, dams, roads, bridges, or other large structures."))

(defrelation |(LIQUID-FN WATER-SALINE)|
             (Skolem-Object |(LIQUID-FN WATER-SALINE)|)
             (Tangible-Stuff-State-Type |(LIQUID-FN WATER-SALINE)|)
             (Subclass-Of |(LIQUID-FN WATER-SALINE)| Water-Saline)
             (Subclass-Of |(LIQUID-FN WATER-SALINE)| Liquid-Tangible-Thing)
             (Set-Or-Collection |(LIQUID-FN WATER-SALINE)|)
             (Arity |(LIQUID-FN WATER-SALINE)| 1))

(defrelation Mountain-Range
             (Name-In-Cyc Mountain-Range "#$MountainRange")
             (Existing-Object-Type Mountain-Range)
             (Subclass-Of Mountain-Range |(MOB-FN MOUNTAIN)|)
             (Subclass-Of Mountain-Range Land-Topographical-Feature)
             (Set-Or-Collection Mountain-Range)
             (Arity Mountain-Range 1)
             (Documentation Mountain-Range
              "A collection of topographical features.  Each element of Mountain-Range is a natural group of mountains.  Examples: the Rocky-Mountains, Andes-Mountains, Alps-Mountains."))

(defrelation Human-Infant
             (Name-In-Cyc Human-Infant "#$HumanInfant")
             (Existing-Object-Type Human-Infant)
             (Subclass-Of Human-Infant Human-Child)
             (Set-Or-Collection Human-Infant)
             (Arity Human-Infant 1)
             (Documentation Human-Infant
              "The collection of Persons in the infant stage of life.  Functionally, this ends when the infant learns to walk (even just toddle) and/or talk (even a few words)... or, at latest, when the person's age greatly exceeds that at which most people develop those skills.  Generally, this means that it spans the period from birth to about 12 - 18 months old.  One of the subsets of this collection is Newborn-Baby."))

(defrelation Physically-Attacking-An-Agent
             (Name-In-Cyc Physically-Attacking-An-Agent
              "#$PhysicallyAttackingAnAgent")
             (Script-Type Physically-Attacking-An-Agent)
             (Subclass-Of Physically-Attacking-An-Agent Action-On-Object)
             (Subclass-Of Physically-Attacking-An-Agent Hostile-Social-Action)
             (Set-Or-Collection Physically-Attacking-An-Agent)
             (Arity Physically-Attacking-An-Agent 1)
             (Documentation Physically-Attacking-An-Agent
              "The collection of events in which one Agent (or a small group of Agents) physically attacks another Agent (or small group of Agents.)  Each assassination attempt is an example of such an event."))

(defobject Paste-Form
   (Physical-Structural-Attribute Paste-Form)
   (Name-In-Cyc Paste-Form "#$Paste-Form")
   (Documentation Paste-Form
    "A physical attribute.  Paste-Form is the Physical-Structural-Attribute which describes solids that are pastelike in texture and consistency.  They are very easily deformed, and they tend to remain in the deformed shape afterwards, provided that they don't collapse under their own weight."))

(defrelation Head-Of-Government
             (Name-In-Cyc Head-Of-Government "#$HeadOfGovernment")
             (Occupation-Type Head-Of-Government)
             (Subclass-Of Head-Of-Government Politician)
             (Set-Or-Collection Head-Of-Government)
             (Arity Head-Of-Government 1)
             (Documentation Head-Of-Government
              "A collection of persons.  Each element of Head-Of-Government is a person who holds a political position as the titular head of the government in some element of Country.  Titles that such a person might hold include Prime Minister, President, Premier, King or Queen, Minister of State, Sultan, Chacellor, Chairman.  Examples: John Major, Benjamin Netanyahu, Bill Clinton.  See also Title-Of-Head-Of-Government.  Cf. Head-Of-State."))

(defrelation Biological-Production-Event
             (Name-In-Cyc Biological-Production-Event
              "#$BiologicalProductionEvent")
             (Temporal-Object-Type Biological-Production-Event)
             (Default-Disjoint-Script-Type Biological-Production-Event)
             (Subclass-Of Biological-Production-Event Creation-Event)
             (Subclass-Of Biological-Production-Event Biological-Event)
             (Set-Or-Collection Biological-Production-Event)
             (Arity Biological-Production-Event 1)
             (Documentation Biological-Production-Event
              "A collection of events.  In each element of Biological-Production-Event, raw materials are combined to produce a product, and some element(s) of Biological-Living-Object is the producer.  E.g., the production of honey by honeybees, the growth of a seedling into a tree, the secretion of sweat by a marathon runner, etc.  

Note:  This is a very general collection, and for most purposes one of its subsets will better capture what is intended."))

(deffunction Hour-Fn
   (Nth-Domain Hour-Fn 1 Non-Negative-Integer)
   (Nth-Domain Hour-Fn 2 Calendar-Day)
   (Result-Instance-Of Hour-Fn Calendar-Hour)
   (Name-In-Cyc Hour-Fn "#$HourFn")
   (Individual-Denoting-Function Hour-Fn)
   (Non-Predicate-Function Hour-Fn)
   (Function Hour-Fn)
   (Arity Hour-Fn 2)
   (Function-Arity Hour-Fn 1)
   (Binary-Relation Hour-Fn)
   (Documentation Hour-Fn
    "(Hour-Fn ?H ?D) denotes a Calendar-Hour -- in particular, hour number ?H (military time) of day ?D.  For example, (Hour-Fn 18 (Day-Fn 14 (Month-Fn February (Year-Fn 1966)))) denotes 6pm Feb. 14th, 1966"))

(defrelation Postal-Code
             (Name-In-Cyc Postal-Code "#$PostalCode")
             (Id-String-Type Postal-Code)
             (Subclass-Of Postal-Code Id-String)
             (Set-Or-Collection Postal-Code)
             (Arity Postal-Code 1)
             (Documentation Postal-Code
              "A collection of character strings.  Each element of Postal-Code is a string used by a postal service to designate a particular geographic area.  For example, the code used by the US-Postal-Service for central downtown Austin, TX, is `78701'."))

(defobject White-Collar
   (Job-Attribute White-Collar)
   (Name-In-Cyc White-Collar "#$WhiteCollar")
   (Documentation White-Collar
    "An attribute; an element of Job-Attribute.  White collar jobs are those requiring little or no manual/physical labor; they are usually indoor jobs."))

(defrelation Place
             (Synonymous-External-Concept Place Sensus-Information1997
              "SPACE-INTERVAL")
             (Name-In-Cyc Place "#$Place")
             (Existing-Object-Type Place)
             (Subclass-Of Place Partially-Tangible)
             (Set-Or-Collection Place)
             (Arity Place 1)
             (Documentation Place
              "The collection of Spatial-Things that have a relatively permanent location. Thus, every Place is stationary in the frame of reference of the current microtheory."))

(defrelation Airplane
             (Transport-Via-Fn Airplane |(TRANSPORT-VIA-FN AIRPLANE)|)
             (Name-In-Cyc Airplane "#$Airplane")
             (Product-Type Airplane)
             (Existing-Object-Type Airplane)
             (Subclass-Of Airplane Transportation-Device-Vehicle)
             (Subclass-Of Airplane Container-Product)
             (Subclass-Of Airplane Air-Transportation-Device)
             (Set-Or-Collection Airplane)
             (Arity Airplane 1)
             (Documentation Airplane
              "The colection of all fixed-wing (except Warplanes), heavier-than-air, self-powered flying machines (excluding cruise missiles)."))

(deffunction Body-Part-Collection-Fn
   (Nth-Domain Body-Part-Collection-Fn 1 Animal)
   (Nth-Domain Body-Part-Collection-Fn 2 Animal-Body-Part-Type)
   (Nth-Domain-Subclass-Of Body-Part-Collection-Fn 2 Animal-Body-Part)
   (Result-Instance-Of Body-Part-Collection-Fn Existing-Object-Type)
   (Result-Subclass-Of Body-Part-Collection-Fn Animal-Body-Part)
   (Name-In-Cyc Body-Part-Collection-Fn "#$BodyPartCollectionFn")
   (Collection-Denoting-Function Body-Part-Collection-Fn)
   (Function Body-Part-Collection-Fn)
   (Arity Body-Part-Collection-Fn 2)
   (Function-Arity Body-Part-Collection-Fn 1)
   (Binary-Relation Body-Part-Collection-Fn)
   (Documentation Body-Part-Collection-Fn
    "Body-Part-Collection-Fn is a Collection-Denoting-Function, that is, it is a Cyc function which `returns' (i.e., `has') a collection as its value.  Here is an example of what it does.  The expression (Body-Part-Collection-Fn Abraham-Lincoln Fingernail) returns, as its value, a collection of ten elements, each of which represents one of the fingernails of Abraham Lincoln.  In cases where an animal is likely to only have one part of that type (e.g., head, heart, nose, nervous system), it makes more sense to use the function Body-Part-Fn (qv), rather than using this one, getting a singleton set back, and extracting its lone element."))

(defrelation Database-Physical
             (Name-In-Cyc Database-Physical "#$Database-Physical")
             (Existing-Object-Type Database-Physical)
             (Subclass-Of Database-Physical
              Composite-Tangible-And-Intangible-Object)
             (Subclass-Of Database-Physical Information-Bearing-Object)
             (Subclass-Of Database-Physical Structured-Information-Source)
             (Set-Or-Collection Database-Physical)
             (Arity Database-Physical 1)
             (Documentation Database-Physical "A collection of information 
bearing objects (IBOs); a subset of 
Structured-Information-Source.  Each element of Database-Physical 
is an IBO that stores many pieces of information, organized 
for easy scanning and access.  Typically, a data base 
involves one or more formatted data record schemes, 
together with some device for searching and retrieving data.  
Note that, as an IBO, a Database-Physical is some particular,
tangible copy of a database. To refer to the abstract 'content'
of a database, use Database-Abstract-Content."))

(defrelation Tangible-Product
             (Name-In-Cyc Tangible-Product "#$TangibleProduct")
             (Existing-Stuff-Type Tangible-Product)
             (Product-Type Tangible-Product)
             (Subclass-Of Tangible-Product Tangible-Thing)
             (Subclass-Of Tangible-Product Product)
             (Subclass-Of Tangible-Product Partially-Tangible-Product)
             (Set-Or-Collection Tangible-Product)
             (Arity Tangible-Product 1)
             (Documentation Tangible-Product
              "A collection of tangible stuff.  Each element of Tangible-Product is a tangible object or tangible material that is exchanged for money or trade.  Tangible products are purely tangible and do not have an intangible component (cf. Partially-Tangible-Product, Partially-Tangible).   Tangible-Product is the most general class of tangible products--everything from cotton swabs to coconut oil to F-16s belongs to this collection."))

(defrelation Giving-Something
             (Name-In-Cyc Giving-Something "#$GivingSomething")
             (Temporal-Object-Type Giving-Something)
             (Default-Disjoint-Script-Type Giving-Something)
             (Subclass-Of Giving-Something Transferring-Possession)
             (Subclass-Of Giving-Something Animal-Activity)
             (Set-Or-Collection Giving-Something)
             (Arity Giving-Something 1)
             (Documentation Giving-Something
              "A collection of events.  In an instance of Giving-Something, one Agent gives a tangible thing to another Agent.  Every Giving-Something event can also be thought of as a receiving event.  
Note: The common case in which one Agent gives ownership of an object to another Agent is represented by the subset Gift-Giving."))

(defrelation Hand-Tool
             (Name-In-Cyc Hand-Tool "#$HandTool")
             (Existing-Object-Type Hand-Tool)
             (Subclass-Of Hand-Tool Portable-Object)
             (Subclass-Of Hand-Tool Tool)
             (Subclass-Of Hand-Tool Device-Single-User)
             (Set-Or-Collection Hand-Tool)
             (Arity Hand-Tool 1)
             (Documentation Hand-Tool
              "The collection Hand-Tool is a subset of Tool.  Each element of Hand-Tool fills all the requirements for a generic tool, plus the requirement that a hand tool is a portable object which is hand-guided throughout its operation.  Examples include the elements of Screwdriver, Manual-Drill, and Blow-Dryer.  See also Tool, Portable-Object."))

(defrelation Ultra-Sound
             (Name-In-Cyc Ultra-Sound "#$UltraSound")
             (Wave-Propagation-Type Ultra-Sound)
             (Subclass-Of Ultra-Sound Sound)
             (Set-Or-Collection Ultra-Sound)
             (Arity Ultra-Sound 1)
             (Documentation Ultra-Sound
              "A collection of events; a subset of Sound.  Each element of Ultra-Sound is a sound wave having a Frequency greater than 20,000 cycles per second, which is above the range of human hearing."))

(defrelation Request
             (Name-In-Cyc Request "#$Request")
             (Object-Type Request)
             (Subclass-Of Request Illocutionary-Force)
             (Set-Or-Collection Request)
             (Arity Request 1)
             (Documentation Request
              "A collection of illocutionary forces.  Each instance of Request consists of a piece of information contained (usually implicitly) in a communication, and which expresses the speaker's intention to ask the listener to perform the action(s) described in his/her utterance.  If the listener responds positively, s/he places him/herself under an obligation to do the indicated action.  `Speaker' and `listener' are broadly interpreted to mean, respectively, any Sender-Of-Info and Recipient-Of-Info.  See also Illocutionary-Force."))

(defrelation |(TRANSPORT-VIA-FN DEVICE-USER-POWERED)|
             (Skolem-Object |(TRANSPORT-VIA-FN DEVICE-USER-POWERED)|)
             (Temporal-Stuff-Type |(TRANSPORT-VIA-FN DEVICE-USER-POWERED)|)
             (Script-Type |(TRANSPORT-VIA-FN DEVICE-USER-POWERED)|)
             (Subclass-Of |(TRANSPORT-VIA-FN DEVICE-USER-POWERED)|
              Transportation-Event)
             (Subclass-Of |(TRANSPORT-VIA-FN DEVICE-USER-POWERED)| Exercising)
             (Set-Or-Collection |(TRANSPORT-VIA-FN DEVICE-USER-POWERED)|)
             (Arity |(TRANSPORT-VIA-FN DEVICE-USER-POWERED)| 1))

(defrelation Cotemporal-Predicate
             (Name-In-Cyc Cotemporal-Predicate "#$CotemporalPredicate")
             (Relationship-Type Cotemporal-Predicate)
             (Subclass-Of Cotemporal-Predicate Predicate)
             (Set-Or-Collection Cotemporal-Predicate)
             (Arity Cotemporal-Predicate 1)
             (Documentation Cotemporal-Predicate
              "A collection of Cyc predicates.  Each element of Cotemporal-Predicate is a Cyc predicate whose temporal arguments (i.e., arguments having a temporal extent) must be Cotemporal, i.e., they have the same temporal starting points and ending points.  Moreover, all the temporal arguments of all the cotemporal predicates involved in a single axiom must be Cotemporal.  Since this is a very common and important relationship, we'll consider a detailed example.   If I say `Fred owns a Camaro', what I really mean is that some Sub-Abstrac (i.e., a time-slice) of Fred, over some time interval INT (e.g., 1993-1995), owns some Sub-Abstrac of that Camaro, which exists over that very same time interval INT.  Fred may have owned many cars before and since, and that Camaro may have had many owners before and since, but one time-slice of Fred owned one time-slice of that car.  Common sense tells us that the time interval (INT) must have been the same in both cases; Cyc can infer this commonsensical conclusion from our having told it that Owns is a cotemporal relation, i.e., (:Direct-Types Owns Cotemporal-Predicate).  A ternary example is `between', as in `Lucy is between Fred and Ethel'.  Not all predicates are elements of Cotemporal-Predicate, of course; consider `remembers' -- I (today) remember my father as he was forty years ago.  There are some borderline cases here; Sees clearly belongs to Cotemporal-Predicate, but in the case of someone smelling another object (cf. Smells) it is less clearcut, since one can smell an object that has ceased to exist."))

(defrelation Skirt
             (Name-In-Cyc Skirt "#$Skirt")
             (Product-Type Skirt)
             (Existing-Object-Type Skirt)
             (Subclass-Of Skirt Womens-Clothing)
             (Subclass-Of Skirt Clothing-Item)
             (Set-Or-Collection Skirt)
             (Arity Skirt 1)
             (Documentation Skirt
              "The collection of all skirts, a category of women's clothing intended to cover the lower part of the body"))

(deffunction Radian
   (Args-Isa Radian Real-Number)
   (Result-Instance-Of Radian Physical-Attribute)
   (Result-Instance-Of Radian Scalar-Interval)
   (Name-In-Cyc Radian "#$Radian")
   (Unit-Of-Angular-Distance Radian)
   (Standard-Unit-Of-Measure Radian)
   (Unit-Of-Measure-No-Prefix Radian)
   (Function Radian)
   (Documentation Radian
    "This is the basic unit of angular measure.  2 radians make a complete circle."))

(defrelation Island
             (Name-In-Cyc Island "#$Island")
             (Existing-Object-Type Island)
             (Subclass-Of Island Land-Body)
             (Subclass-Of Island Islands-And-Island-Group)
             (Set-Or-Collection Island)
             (Arity Island 1)
             (Documentation Island
              "The collection of all islands, each being a Land-Body (smaller than a Continent) surrounded by water."))

(defrelation Surface-Abstract
             (Name-In-Cyc Surface-Abstract "#$Surface-Abstract")
             (Object-Type Surface-Abstract)
             (Subclass-Of Surface-Abstract Surface-Generic)
             (Subclass-Of Surface-Abstract Abstract-Shape)
             (Set-Or-Collection Surface-Abstract)
             (Arity Surface-Abstract 1)
             (Documentation Surface-Abstract
              "The collection of all abstract mathematical surfaces - not real physical ones that we can touch."))

(defrelation |(MOB-FN PRECIPITATION-PARTICLE)|
             (Skolem-Object |(MOB-FN PRECIPITATION-PARTICLE)|)
             (Collection |(MOB-FN PRECIPITATION-PARTICLE)|)
             (Existing-Stuff-Type |(MOB-FN PRECIPITATION-PARTICLE)|)
             (Subclass-Of |(MOB-FN PRECIPITATION-PARTICLE)| Mob)
             (Set-Or-Collection |(MOB-FN PRECIPITATION-PARTICLE)|)
             (Arity |(MOB-FN PRECIPITATION-PARTICLE)| 1))

(defrelation Preparing-Food-Or-Drink
             (Name-In-Cyc Preparing-Food-Or-Drink "#$PreparingFoodOrDrink")
             (Temporal-Object-Type Preparing-Food-Or-Drink)
             (Default-Disjoint-Script-Type Preparing-Food-Or-Drink)
             (Subclass-Of Preparing-Food-Or-Drink Intrinsic-State-Change-Event)
             (Subclass-Of Preparing-Food-Or-Drink Human-Activity)
             (Subclass-Of Preparing-Food-Or-Drink Handling-An-Object)
             (Set-Or-Collection Preparing-Food-Or-Drink)
             (Arity Preparing-Food-Or-Drink 1)
             (Documentation Preparing-Food-Or-Drink
              "A collection of events.  Each element of Preparing-Food-Or-Drink is an event in which a single instance of Food-And-Drink is made ready to eat.  Preparation may begin `from scratch', with raw ingredients, or may use semi-prepared or `convenience' products (such as cake mixes, margarita mixes, or frozen foods).  Typical Sub-Events in elements of Preparing-Food-Or-Drink include activities commonly performed by cooks and/or bartenders, including instances of Chopping-Something, Cooking-Food, Baking-Food, Mixing-Alcoholic-Drinks, etc.  Each Preparing-Food-Or-Drink event ends when the item prepared is ready to eat.  This collection is NOT to include activities that a diner does with food at table (such as peeling, unwrapping, cutting into bitesized pieces), nor activities that a farmer does before food reaches market or kitchen (e.g., planting, harvesting)."))

(defrelation Floor-In-A-Construction
             (Name-In-Cyc Floor-In-A-Construction "#$FloorInAConstruction")
             (Existing-Object-Type Floor-In-A-Construction)
             (Subclass-Of Floor-In-A-Construction Construction-Artifact)
             (Set-Or-Collection Floor-In-A-Construction)
             (Arity Floor-In-A-Construction 1)
             (Documentation Floor-In-A-Construction
              "A physical floor in a building, NOT the level (storey).  The latter is called Level-Of-A-Construction.  The floor can include any floor in a building such as the floor of a room on the third floor as well as the floor covering the entire 1st level of the building.  This includes just the horizontal surface -- not the subfloor.  It also doesn't include floor coverings like carpet or tile."))

(defobject Conducts-Heat-Poorly
   (Thermal-Conductivity Conducts-Heat-Poorly)
   (Name-In-Cyc Conducts-Heat-Poorly "#$ConductsHeatPoorly")
   (Documentation Conducts-Heat-Poorly
    "A measurable physical attribute.  Conducts-Heat-Poorly is the element of Thermal-Conductivity that represents the level of thermal conductivity in an object that conducts virtually no heat."))

(defobject Hourly-Work
   (Work-Status Hourly-Work)
   (Name-In-Cyc Hourly-Work "#$HourlyWork")
   (Documentation Hourly-Work
    "An attribute; an element of Work-Status.  The attribute of being paid an hourly rate for work done."))

(deffunction Degree-Kelvin
   (Args-Isa Degree-Kelvin Real-Number)
   (Result-Instance-Of Degree-Kelvin Temperature)
   (Result-Instance-Of Degree-Kelvin Scalar-Interval)
   (Name-In-Cyc Degree-Kelvin "#$DegreeKelvin")
   (Unit-Of-Temperature Degree-Kelvin)
   (Standard-Unit-Of-Measure Degree-Kelvin)
   (Unit-Of-Measure-No-Prefix Degree-Kelvin)
   (Function Degree-Kelvin)
   (Documentation Degree-Kelvin
    "The unit of measure on the Kelvin or Absolute temperature scale; mainly used in science; note that the size of this unit is equal to the size of a DegreeCentrigrade."))

(defrelation Sub-Process-Slot
             (Name-In-Cyc Sub-Process-Slot "#$SubProcessSlot")
             (Predicate-Category Sub-Process-Slot)
             (Subclass-Of Sub-Process-Slot Role)
             (Subclass-Of Sub-Process-Slot Temporal-Part-Slot)
             (Set-Or-Collection Sub-Process-Slot)
             (Arity Sub-Process-Slot 1)
             (Documentation Sub-Process-Slot
              "A collection of predicates.  Each element of Sub-Process-Slot is a binary predicate that relates one instance of Event to a second event that is in some way a part of the first.  Examples: Sub-Events, In-Preparation-For, Manufacturing-Steps, Outbound-Leg-Of-Round-Trip."))

(defrelation Physiological-Function
             (Name-In-Cyc Physiological-Function "#$PhysiologicalFunction")
             (Temporal-Stuff-Type Physiological-Function)
             (Default-Disjoint-Script-Type Physiological-Function)
             (Subclass-Of Physiological-Function Physiological-Process)
             (Set-Or-Collection Physiological-Function)
             (Arity Physiological-Function 1)
             (Documentation Physiological-Function
              "The collection of those Physiological-Processes that serve some end for their doers, which may be cells, tissues, or whole organisms; for example, Photosynthesis."))

(defrelation Military-Aircraft
             (Name-In-Cyc Military-Aircraft "#$MilitaryAircraft")
             (Product-Type Military-Aircraft)
             (Existing-Object-Type Military-Aircraft)
             (Subclass-Of Military-Aircraft Solid-Tangible-Product)
             (Subclass-Of Military-Aircraft Air-Transportation-Device)
             (Set-Or-Collection Military-Aircraft)
             (Arity Military-Aircraft 1)
             (Documentation Military-Aircraft
              "The collection of all aircraft used for military purposes, or equipped to be used for such purposes."))

(defrelation Stealing-Generic
             (Name-In-Cyc Stealing-Generic "#$Stealing-Generic")
             (Temporal-Object-Type Stealing-Generic)
             (Default-Disjoint-Script-Type Stealing-Generic)
             (Subclass-Of Stealing-Generic Unintended-Loss-Of-User-Rights)
             (Subclass-Of Stealing-Generic Transferring-Possession)
             (Subclass-Of Stealing-Generic Taking-Something)
             (Set-Or-Collection Stealing-Generic)
             (Arity Stealing-Generic 1)
             (Documentation Stealing-Generic
              "A collection of events; a subset of Taking-Something.  In an instance of Stealing-Generic, one Agent takes a possession of another agent's without the owner's permission (and possibly without the owner's knowledge).  Stealing is commonly considered criminal in most contexts.
Note:  It is not the case that every use of another's things without explicit permission is categorized as an instance of Stealing-Generic.  An informal agreement or `understanding' may exist between Agents that would cover casual `borrowing' (and excuse it from being stealing); the closer the relationship the more expensive and personal the items that fall into such an exclusion.  E.g., even if I am in a perfect stranger's office, and they have left for a minute, I feel it is not stealing to take one of their Kleenexes if I am about to sneeze."))

(deffunction Stif
   (Range Stif Time-Interval)
   (Domain Stif Temporal-Thing)
   (Name-In-Cyc Stif "#$STIF")
   (Individual-Denoting-Function Stif)
   (Reifiable-Function Stif)
   (Function Stif)
   (Slot Stif)
   (Arity Stif 2)
   (Function-Arity Stif 1)
   (Binary-Relation Stif)
   (Documentation Stif
    "(STIF ?X) returns the `Short Time Interval Following' ?X.  The function STIF is used to state axioms which assert propositions about the world just after some Temporal-Thing (i.e., after an event ends, after a tangible object ceases to exist, etc.).  Each of those propositions may or may not hold beyond the bounds of that short interval.  Consider the axiom `after swimming, the swimmer is wet'. The swimmer is only known to be wet for a short time interval immediately following the swimming event, and so we use STIF to specify that short time interval in which the assertion of wetness will hold.  Beyond that time, additional axioms would be required to decide whether the wetness would persist or not.  Also see: STIB."))

(defrelation Domesticated-Animal
             (Name-In-Cyc Domesticated-Animal "#$DomesticatedAnimal")
             (Existing-Object-Type Domesticated-Animal)
             (Subclass-Of Domesticated-Animal Non-Person-Animal)
             (Set-Or-Collection Domesticated-Animal)
             (Arity Domesticated-Animal 1)
             (Documentation Domesticated-Animal
              "A subset of Animal; the collection of all animals which are kept by humans for labor, transportation, food, or as pets, and whose relations with humans are more or less cooperative.  Domesticated-Animal does NOT include instances of Tiger being kept in zoos, though it arguably includes Shamu or Flipper.  Cf. Wild-Animal, Captive-Animal."))

(defrelation Food-Ingredient-Only
             (Name-In-Cyc Food-Ingredient-Only "#$FoodIngredientOnly")
             (Product-Type Food-Ingredient-Only)
             (Existing-Stuff-Type Food-Ingredient-Only)
             (Subclass-Of Food-Ingredient-Only Edible-Stuff)
             (Set-Or-Collection Food-Ingredient-Only)
             (Arity Food-Ingredient-Only 1)
             (Documentation Food-Ingredient-Only
              "A collection of tangible stuff; a subset of Edible-Stuff.  Each element of Food-Ingredient-Only is an edible substance that is used in making other food but isn't eaten by itself.  These may or may not require some preparation.  For example, Table-Salt, Vegetable-Oil, and Ketchup are subsets of Food-Ingredient-Only, because all of their instances are used only as ingredients or condiments.   In contrast, Egg-Chickens is not a subset of Food-Ingredient-Only; some of its instances serve as ingredients in cooking other dishes, (and those instances are elements of Food-Ingredient-Only,) but other eggs are simply eaten after poaching or frying (and those instances belong to the collection Food, not Food-Ingredient-Only).  Types of foodlike Pizza, whose instances are never merely ingredients, are just subsets of Food."))

(defrelation |(SOLID-FN EARTH-STUFF)|
             (Skolem-Object |(SOLID-FN EARTH-STUFF)|)
             (Tangible-Stuff-State-Type |(SOLID-FN EARTH-STUFF)|)
             (Subclass-Of |(SOLID-FN EARTH-STUFF)| Earth-Stuff)
             (Subclass-Of |(SOLID-FN EARTH-STUFF)| Solid-Tangible-Thing)
             (Set-Or-Collection |(SOLID-FN EARTH-STUFF)|)
             (Arity |(SOLID-FN EARTH-STUFF)| 1))

(defrelation Work-Status
             (Name-In-Cyc Work-Status "#$WorkStatus")
             (Attribute-Type Work-Status)
             (Subclass-Of Work-Status Composite-Attribute)
             (Set-Or-Collection Work-Status)
             (Arity Work-Status 1)
             (Documentation Work-Status
              "A collection of attributes.  Each element of Work-Status is a classification commonly used by human resources departments to describe the status of workers on the company payroll.  Note that these attributes describe a person's status in a job, rather than the position itself.  Examples of Work-Status include Commissioned, Hourly-Work, Full-Time, Part-Time, Temporary-Work. Also see Employee-Status."))

(defrelation Street-Generic
             (Name-In-Cyc Street-Generic "#$Street-Generic")
             (Existing-Object-Type Street-Generic)
             (Subclass-Of Street-Generic Urban-Area)
             (Subclass-Of Street-Generic Path-For-Wheeled-Vehicles)
             (Set-Or-Collection Street-Generic)
             (Arity Street-Generic 1)
             (Documentation Street-Generic
              "The subcollection of Path-For-Wheeled-Vehicles thatcontains all streets inside of cities and towns."))

(defrelation Composite-Physical-And-Mental-Event
             (Name-In-Cyc Composite-Physical-And-Mental-Event
              "#$CompositePhysicalAndMentalEvent")
             (Temporal-Object-Type Composite-Physical-And-Mental-Event)
             (Script-Type Composite-Physical-And-Mental-Event)
             (Subclass-Of Composite-Physical-And-Mental-Event Mental-Event)
             (Subclass-Of Composite-Physical-And-Mental-Event Physical-Event)
             (Set-Or-Collection Composite-Physical-And-Mental-Event)
             (Arity Composite-Physical-And-Mental-Event 1)
             (Documentation Composite-Physical-And-Mental-Event
              "A collection of events.  Each element of Composite-Physical-And-Mental-Event is an event that involves both some mental event(s) and an interaction of physical objects.  Examples include a news broadcast program, a court trial, inheriting property, writing a letter, a physical examination, a charity ball, traffic on some section of highway during rush hour.  Note that this collection does NOT imply that the events which are its instances have doers (see Done-By).  Subsets of Composite-Physical-And-Mental-Event whose elements all have doers (or performers) -- and there will be many of them -- should have as a second genls Action or the appropriate subset of Action (qq.v.)."))

(defobject Pointy-Ended
   (Physical-Structural-Attribute Pointy-Ended)
   (Name-In-Cyc Pointy-Ended "#$PointyEnded")
   (Documentation Pointy-Ended
    "Includes anything which tapers to a pointy or sharp end--pens, pencils, needles, pins, nails, and wood-screws, but not wires (no taper).  Most knives would be included, but only because they have pointy ends.  A knife with a rounded ended and a sharp blade would not be included."))

(defrelation Cotemporal-Objects-Slot
             (Name-In-Cyc Cotemporal-Objects-Slot "#$CotemporalObjectsSlot")
             (Predicate-Category Cotemporal-Objects-Slot)
             (Subclass-Of Cotemporal-Objects-Slot Cotemporal-Predicate)
             (Subclass-Of Cotemporal-Objects-Slot Inter-Existing-Object-Slot)
             (Set-Or-Collection Cotemporal-Objects-Slot)
             (Arity Cotemporal-Objects-Slot 1)
             (Documentation Cotemporal-Objects-Slot
              "This is a subset of :Slot (hence the anachronistic `Slot' in its name).  It is also a subset of Cotemporal-Predicate.  Frankly, it is really just the intersection of Cotemporal-Predicate and :Slot, so it is strictly speaking superfluous, but has proven itself to be useful.  Suppose predicate P is an instance of Cotemporal-Objects-Slot.  If (P X Y) holds, then it must be the case that (Cotemporal X Y).  For example, consider the binary predicate Owns, which is an instance of Cotemporal-Objects-Slot.  To represent `Nick owned Spot in 1992' we could create the appropriate cotemporal subabstractions of each, and assert (Owns NickIn1992 SpotIn1992), and this would satisfy the constraint introduced when we declared Owns to be a Cotemporal-Objects-Slot.  More tersely, we could use Holds-In (qv) and just assert (Holds-In (Year-Fn 1992) (Owns Nick Spot)), since Holds-In implicitly treats instances of Something-Existing as their appropriate subabstractions.  Alternatively, we could create a context (a microtheory) one of whose assumptions was a temporal one, limiting all axioms to holding during 1992, and then in that context we could simply assert (Owns Nick Spot).  But it would be incorrect to assert (Owns Nick Spot) in the Base-KB, since Nick as a baby and Nick as an old man didn't/won't own Spot."))

(defrelation |(TRANSPORT-VIA-FN MOTORCYCLE)|
             (Skolem-Object |(TRANSPORT-VIA-FN MOTORCYCLE)|)
             (Temporal-Stuff-Type |(TRANSPORT-VIA-FN MOTORCYCLE)|)
             (Script-Type |(TRANSPORT-VIA-FN MOTORCYCLE)|)
             (Subclass-Of |(TRANSPORT-VIA-FN MOTORCYCLE)| Transportation-Event)
             (Subclass-Of |(TRANSPORT-VIA-FN MOTORCYCLE)|
              |(TRANSPORT-VIA-FN TRANSPORTATION-DEVICE-VEHICLE)|)
             (Subclass-Of |(TRANSPORT-VIA-FN MOTORCYCLE)|
              |(TRANSPORT-VIA-FN TRANSPORTATION-DEVICE)|)
             (Subclass-Of |(TRANSPORT-VIA-FN MOTORCYCLE)|
              |(TRANSPORT-VIA-FN LAND-TRANSPORTATION-DEVICE)|)
             (Subclass-Of |(TRANSPORT-VIA-FN MOTORCYCLE)|
              |(TRANSPORT-VIA-FN MOTORCYCLE)|)
             (Subclass-Of |(TRANSPORT-VIA-FN MOTORCYCLE)|
              |(TRANSPORT-VIA-FN ROAD-VEHICLE)|)
             (Set-Or-Collection |(TRANSPORT-VIA-FN MOTORCYCLE)|)
             (Arity |(TRANSPORT-VIA-FN MOTORCYCLE)| 1))

(defrelation Islands-And-Island-Group
             (Name-In-Cyc Islands-And-Island-Group "#$IslandsAndIslandGroup")
             (Existing-Object-Type Islands-And-Island-Group)
             (Subclass-Of Islands-And-Island-Group Land-Topographical-Feature)
             (Set-Or-Collection Islands-And-Island-Group)
             (Arity Islands-And-Island-Group 1)
             (Documentation Islands-And-Island-Group
              "A collection of topographical features.  Each element of Islands-And-Island-Group is either an island or a group of islands (see Archipelago).  Elements of Islands-And-Island-Group include groups of scattered islands which do not form a natural geographical area; the chief reasons for representing such groups is that they are geopolitical areas and/or were historically significant.  Examples: French-Polynesia, Cyclades, Outer-Hebrides-Archipelago, Grenadines-Islands."))

(defrelation Social-Status
             (Nth-Domain Social-Status 1 Person)
             (Nth-Domain Social-Status 2 Social-Status-Attribute-Type)
             (Nth-Domain Social-Status 3 Existing-Object-Type)
             (Nth-Domain Social-Status 4 Generic-Attribute)
             (Nth-Domain-Subclass-Of Social-Status 3 Person)
             (Name-In-Cyc Social-Status "#$socialStatus")
             (Functional-Predicate Social-Status)
             (Quaternary-Predicate Social-Status)
             (Relation Social-Status)
             (Arity Social-Status 4)
             (Documentation Social-Status
              "(Social-Status PRSN STAT GROUP DEGREE) means that the Person PRSN has the social status type STAT (such qualities as Glamor, Credibility, etc.) at the generic strength level DEGREE (e.g., High, Very-Low, Low, etc.), according to the reference population group GROUP.  For example, in the context of 1980s America, it was true that (Social-Status Madonna Glamor Human-Teenager Very-High).  I.e., Madonna had a `high glamor' status among American teenagers in the 1980's."))

(defrelation Radially-Symmetric-Object
             (Name-In-Cyc Radially-Symmetric-Object
              "#$RadiallySymmetricObject")
             (Existing-Object-Type Radially-Symmetric-Object)
             (Subclass-Of Radially-Symmetric-Object Spatial-Thing)
             (Set-Or-Collection Radially-Symmetric-Object)
             (Arity Radially-Symmetric-Object 1)
             (Documentation Radially-Symmetric-Object
              "The collection of objects which are radially symmetric, such as wheels, starfish, etc."))

(defrelation Liver
             (Name-In-Cyc Liver "#$Liver")
             (Unique-Anatomical-Part-Type Liver)
             (Animal-Body-Part-Type Liver)
             (Subclass-Of Liver Organ)
             (Set-Or-Collection Liver)
             (Arity Liver 1)
             (Documentation Liver
              "The collection of all living Animal livers.  Each instance of Liver is a large compound Internal-Organ.  A Liver breaks down dead Red-Blood-Cells, removes certain poisons and waste material from the blood stream, creates glycogen from sugars and proteins, stores glycogen, removes certain chemicals from the blood, secretes bile (Bile-The-Secretion) which is used for digestion,and regulates metabolism of carbohydrates, Proteins, Vitamins, Minerals, and fats."))

(defrelation Tender-Object
             (Name-In-Cyc Tender-Object "#$TenderObject")
             (Existing-Object-Type Tender-Object)
             (Subclass-Of Tender-Object Liquid-Asset)
             (Subclass-Of Tender-Object
              Composite-Tangible-And-Intangible-Object)
             (Set-Or-Collection Tender-Object)
             (Arity Tender-Object 1)
             (Documentation Tender-Object
              "A collection of  objects.  Each element of Tender-Object is an item presented  by an agent in instances of Paying or Spending.  Typical examples include cash, checks, credit cards, travellers's checks.  Unusual but possible tender objects could be gold, goats, or golf balls."))

(defobject |(VERY-HIGH-AMOUNT-FN FLAMMABILITY)|
   (Scalar-Interval |(VERY-HIGH-AMOUNT-FN FLAMMABILITY)|)
   (Flammability |(VERY-HIGH-AMOUNT-FN FLAMMABILITY)|)
   (Skolem-Object |(VERY-HIGH-AMOUNT-FN FLAMMABILITY)|))

(defrelation Teaching
             (Name-In-Cyc Teaching "#$Teaching")
             (Temporal-Object-Type Teaching)
             (Default-Disjoint-Script-Type Teaching)
             (Subclass-Of Teaching Animal-Activity)
             (Subclass-Of Teaching Communicating)
             (Subclass-Of Teaching Service-Event)
             (Set-Or-Collection Teaching)
             (Arity Teaching 1)
             (Documentation Teaching
              "One agent imparting learned knowledge to another.  This may have Sub-Events of the student asking or responding to questions, but the teacher is the primary performer."))

(defrelation Card
             (Name-In-Cyc Card "#$Card")
             (Existing-Object-Type Card)
             (Subclass-Of Card Hardcopy-Information-Bearing-Object)
             (Set-Or-Collection Card)
             (Arity Card 1)
             (Documentation Card
              "A collection of objects; a subset of Hardcopy-Information-Bearing-Object.  Each element of Card is a small, sturdy sheet of stuff--usually cardstock paper, but could be plastic or thin metal--bearing some kind of information.  Some kinds are folded.  Examples: birthday cards, business cards, playing cards, postcards."))

(defrelation Partially-Tangible-Product
             (Name-In-Cyc Partially-Tangible-Product
              "#$PartiallyTangibleProduct")
             (Existing-Object-Type Partially-Tangible-Product)
             (Product-Type Partially-Tangible-Product)
             (Subclass-Of Partially-Tangible-Product Partially-Tangible)
             (Subclass-Of Partially-Tangible-Product Product)
             (Set-Or-Collection Partially-Tangible-Product)
             (Arity Partially-Tangible-Product 1)
             (Documentation Partially-Tangible-Product
              "A collection of spatial objects; a subset of Product.  Each element of Partially-Tangible-Product is a product that has some tangible component and may, but need not, have an intangible component (e.g., information).  (See also Partially-Tangible.)  Examples of Partially-Tangible-Product: a newspaper, a photograph, a videotape of `Star Wars', a sack of flour, lumber, a mobile home."))

(defrelation |(TRANSPORT-VIA-FN AMBULANCE)|
             (Skolem-Object |(TRANSPORT-VIA-FN AMBULANCE)|)
             (Temporal-Stuff-Type |(TRANSPORT-VIA-FN AMBULANCE)|)
             (Script-Type |(TRANSPORT-VIA-FN AMBULANCE)|)
             (Subclass-Of |(TRANSPORT-VIA-FN AMBULANCE)| Transportation-Event)
             (Subclass-Of |(TRANSPORT-VIA-FN AMBULANCE)|
              |(TRANSPORT-VIA-FN ROAD-VEHICLE)|)
             (Subclass-Of |(TRANSPORT-VIA-FN AMBULANCE)|
              |(TRANSPORT-VIA-FN TRANSPORTATION-DEVICE-VEHICLE)|)
             (Subclass-Of |(TRANSPORT-VIA-FN AMBULANCE)|
              |(TRANSPORT-VIA-FN LAND-TRANSPORTATION-DEVICE)|)
             (Subclass-Of |(TRANSPORT-VIA-FN AMBULANCE)|
              |(TRANSPORT-VIA-FN TRANSPORTATION-DEVICE)|)
             (Subclass-Of |(TRANSPORT-VIA-FN AMBULANCE)|
              |(TRANSPORT-VIA-FN AMBULANCE)|)
             (Subclass-Of |(TRANSPORT-VIA-FN AMBULANCE)| Service-Event)
             (Set-Or-Collection |(TRANSPORT-VIA-FN AMBULANCE)|)
             (Arity |(TRANSPORT-VIA-FN AMBULANCE)| 1))

(defobject Switzerland
   (Entity Switzerland)
   (Independent-Country Switzerland)
   (Name-In-Cyc Switzerland "#$Switzerland")
   (Documentation Switzerland
    "The nation of Switzerland as it has existed throughout time; includes both its physical and its political aspects."))

(defrelation Includes-With-Product-Type
             (Nth-Domain Includes-With-Product-Type 1 Commercial-Organization)
             (Nth-Domain Includes-With-Product-Type 2 Product-Type)
             (Nth-Domain Includes-With-Product-Type 3 Product-Type)
             (Nth-Domain-Subclass-Of Includes-With-Product-Type 2 Product)
             (Nth-Domain-Subclass-Of Includes-With-Product-Type 3 Product)
             (Name-In-Cyc Includes-With-Product-Type
              "#$includesWithProductType")
             (Ternary-Predicate Includes-With-Product-Type)
             (Relation Includes-With-Product-Type)
             (Arity Includes-With-Product-Type 3)
             (Documentation Includes-With-Product-Type
              "The predicate Includes-With-Product-Type is used to specify `extras' that a particular seller includes with a specific product.  (Includes-With-Product-Type SELLER MAINTYPE EXTRATYPE) means that the Commercial-Organization SELLER provides an item of the Product-Type EXTRATYPE free of charge to its customers who purchase a product of Product-Type MAINTYPE.  For example, to say that Ernie's Garage provides towing free with a car repair, we could say (Includes-With-Product-Type ErniesGarage Car-Repairing Towing-An-Automobile)."))

(defrelation Element-Stuff-Type-By-Number-Of-Protons
             (Name-In-Cyc Element-Stuff-Type-By-Number-Of-Protons
              "#$ElementStuffTypeByNumberOfProtons")
             (Collection Element-Stuff-Type-By-Number-Of-Protons)
             (Disjoint-Set-Or-Collection
              Element-Stuff-Type-By-Number-Of-Protons)
             (Subclass-Of Element-Stuff-Type-By-Number-Of-Protons
              Chemical-Compound-Type)
             (Set-Or-Collection Element-Stuff-Type-By-Number-Of-Protons)
             (Arity Element-Stuff-Type-By-Number-Of-Protons 1)
             (Documentation Element-Stuff-Type-By-Number-Of-Protons
              "A collection of collections.  Element-Stuff-Type-By-Number-Of-Protons partitions the collection Element-Stuff.  Each instance of Element-Stuff-Type-By-Number-Of-Protons is a subset of Element-Stuff which is defined ONLY by the atomic composition of its instances -- neither the isotopic composition or physical state of the substances, nor any other additional feature, determines membership in a collection which :Direct-Types Element-Stuff-Type-By-Number-Of-Protons.  All that matters is that the instances of that type (i.e., collection) of stuff are entirely composed of atoms having a particular number of protons in each atomic nucleus.  Thus, the collection Carbon is an instance of Element-Stuff-Type-By-Number-Of-Protons, but neither the collection Diamond nor the collection Graphite is (even though they are subsets of Carbon), because their members have additional qualifications."))

(defrelation Seating-Device
             (Name-In-Cyc Seating-Device "#$SeatingDevice")
             (Product-Type Seating-Device)
             (Existing-Object-Type Seating-Device)
             (Subclass-Of Seating-Device Physical-Device)
             (Set-Or-Collection Seating-Device)
             (Arity Seating-Device 1)
             (Documentation Seating-Device
              "A set of physical objects.  An instance of Seating-Device is a device whose Primary-Function is to serve as a sitting place for people.  Types of seating devices include sofas, chairs, benches, camp and stadium stools, theatre seats, swings, bicycle seats, saddles, and more."))

(defrelation Food-Vessel
             (Name-In-Cyc Food-Vessel "#$FoodVessel")
             (Product-Type Food-Vessel)
             (Existing-Object-Type Food-Vessel)
             (Subclass-Of Food-Vessel Container-Product)
             (Subclass-Of Food-Vessel Food-Utensil)
             (Set-Or-Collection Food-Vessel)
             (Arity Food-Vessel 1)
             (Documentation Food-Vessel
              "A collection of container products; a subset of Food-Utensil.  An instance of Food-Vessel is a container designed for holding, storing, or preparing food.   For example, a dinner plate, a cake pan, a wok, a plastic food storage container, etc.  Subsets include the collections Cooking-Vessel, Eating-Vessel, Food-Storage-Container, and numerous others."))

(defrelation Religious-Organization
             (Name-In-Cyc Religious-Organization "#$ReligiousOrganization")
             (Existing-Object-Type Religious-Organization)
             (Subclass-Of Religious-Organization Organization)
             (Set-Or-Collection Religious-Organization)
             (Arity Religious-Organization 1)
             (Documentation Religious-Organization
              "A collection of organizations.  An element of Religious-Organization is a Belief-System-Focus-Group whose members share religious beliefs, together with meetings, rituals, or practices related to those beliefs.  The collection Religious-Organization includes elements of Local-Religious-Congregation such as local churches, temples, mosques and shrines (qua organizations), as well as worldwide religious organizations such as The-Roman-Catholic-Church."))

(defrelation Controlled-Land
             (Name-In-Cyc Controlled-Land "#$ControlledLand")
             (Existing-Object-Type Controlled-Land)
             (Subclass-Of Controlled-Land Country-Subsidiary)
             (Subclass-Of Controlled-Land Geopolitical-Entity)
             (Set-Or-Collection Controlled-Land)
             (Arity Controlled-Land 1)
             (Documentation Controlled-Land
              "A collection of geopolitical entities.  Each element of Controlled-Land is a geopolitical entity that is controlled to some extent by a foreign power.  Examples: Puerto-Rico, Bermuda, Guadeloupe-The-Dependency, Tibet."))

(defrelation Terrain-Attribute
             (Name-In-Cyc Terrain-Attribute "#$TerrainAttribute")
             (Attribute-Type Terrain-Attribute)
             (Subclass-Of Terrain-Attribute Attribute-Value)
             (Set-Or-Collection Terrain-Attribute)
             (Arity Terrain-Attribute 1)
             (Documentation Terrain-Attribute
              "A collection of attributes.  Each element of Terrain-Attribute is an attribute used for describing the terrain in a geographic region.  Examples: Rocky, Sandy, Rugged-Terrain, Desertlike, Snow-Covered, Mountainous."))

(defrelation Part-Predicate
             (Name-In-Cyc Part-Predicate "#$PartPredicate")
             (Predicate-Category Part-Predicate)
             (Subclass-Of Part-Predicate Extensional-Representation-Predicate)
             (Set-Or-Collection Part-Predicate)
             (Arity Part-Predicate 1)
             (Documentation Part-Predicate
              "A collection of predicates.  Instances of Part-Predicate are used to describe the relationship between an Individual and its Parts."))

(defrelation Inverse-Relation-Type
             (Nth-Domain Inverse-Relation-Type 1 Slot)
             (Nth-Domain Inverse-Relation-Type 2 Collection)
             (Nth-Domain Inverse-Relation-Type 3 Collection)
             (Name-In-Cyc Inverse-Relation-Type "#$inverseRelationType")
             (Ternary-Predicate Inverse-Relation-Type)
             (Rule-Macro-Predicate Inverse-Relation-Type)
             (Relation Inverse-Relation-Type)
             (Arity Inverse-Relation-Type 3)
             (Documentation Inverse-Relation-Type
              "(Inverse-Relation-Type SLOT COL1 COL2) means that, for every INS2 which is an instance of COL2, there is some INS1 which is an instance of COL1, such that (SLOT INS1 INS2) holds.  Inverse-Relation-Type is thus redundant with a huge set of commonly-occurring axioms.  By having this predicate (along with an axiom that defines it, and, eventually, support in code for quick inferencing with it), axioms in that set can be stated more tersely, and collection-level reasoning with it is possible."))

(defrelation |(THE-COVERING MOVEMENT-TRANSLATION-EVENT MOVEMENT-ROTATION)|
             (Skolem-Object
              |(THE-COVERING MOVEMENT-TRANSLATION-EVENT MOVEMENT-ROTATION)|)
             (Set-Mathematical
              |(THE-COVERING MOVEMENT-TRANSLATION-EVENT MOVEMENT-ROTATION)|)
             (Subclass-Of
              |(THE-COVERING MOVEMENT-TRANSLATION-EVENT MOVEMENT-ROTATION)|
              Thing)
             (Set-Or-Collection
              |(THE-COVERING MOVEMENT-TRANSLATION-EVENT MOVEMENT-ROTATION)|)
             (Arity
              |(THE-COVERING MOVEMENT-TRANSLATION-EVENT MOVEMENT-ROTATION)| 1))

(defrelation Recovering-From-Ailment
             (Name-In-Cyc Recovering-From-Ailment "#$RecoveringFromAilment")
             (Temporal-Object-Type Recovering-From-Ailment)
             (Script-Type Recovering-From-Ailment)
             (Subclass-Of Recovering-From-Ailment Intrinsic-State-Change-Event)
             (Subclass-Of Recovering-From-Ailment Physical-Event)
             (Set-Or-Collection Recovering-From-Ailment)
             (Arity Recovering-From-Ailment 1)
             (Documentation Recovering-From-Ailment
              "A collection of events.  In an instance of Recovering-From-Ailment, some member of Biological-Living-Object recovers from an Ailment-Condition it has at the beginning of this recovery period."))

(defrelation Spatial-Thing
             (Group-Fn Spatial-Thing |(GROUP-FN SPATIAL-THING)|)
             (Name-In-Cyc Spatial-Thing "#$SpatialThing")
             (Object-Type Spatial-Thing)
             (Subclass-Of Spatial-Thing Individual)
             (Set-Or-Collection Spatial-Thing)
             (Arity Spatial-Thing 1)
             (Documentation Spatial-Thing
              "The collection of all things that have a spatial extent or location relative to some other Spatial-Thing.  Note well that to say that an entity is a member of this collection is to remain agnostic about two issues.  First, a Spatial-Thing may be Partially-Tangible, like Texas-State or wholly Intangible, like the Arctic-Circle or a line or a plane referenced in a geometric theorem.  Second, although we do insist on location relative to another Spatial-Thing, a Spatial-Thing may or may not be located in the physically observable universe.  It is far from clear that all Spatial-Things are so located:  eg, a trajectory through the phase space of some physical system.  If the intent is to imply location in the empirically observable cosmos, the user should employ this collection's spec, Spatial-Thing-Localized."))

(defrelation Structured-Information-Source
             (Name-In-Cyc Structured-Information-Source
              "#$StructuredInformationSource")
             (Temporal-Stuff-Type Structured-Information-Source)
             (Object-Type Structured-Information-Source)
             (Subclass-Of Structured-Information-Source
              Information-Bearing-Thing)
             (Set-Or-Collection Structured-Information-Source)
             (Arity Structured-Information-Source 1)
             (Documentation Structured-Information-Source
              "A collection of information bearing things (IBTs).  Each element of Structured-Information-Source is an information bearing object or event in which bits of information are represented as related in a systematic way that is easily characterized by some type of formal structure, including spatial or architectural terms (used metaphorically).  Examples include: a database organized in fields and values; a spreadsheet organized in rows and columns with entries; an organizational tree diagram with nodes and branches; a topographical map."))

(defrelation Human-Adult
             (Name-In-Cyc Human-Adult "#$HumanAdult")
             (Conventional-Classification-Type Human-Adult)
             (Existing-Object-Type Human-Adult)
             (Subclass-Of Human-Adult Person)
             (Subclass-Of Human-Adult Adult-Animal)
             (Set-Or-Collection Human-Adult)
             (Arity Human-Adult 1)
             (Documentation Human-Adult
              "The collection of human beings old enough to participate as independent, mature members of society.  Since different societies have different age or maturity requirements for people to be considered adults, different axioms in various society-specific microtheories express these requirements.  For most modern, Western, middle-class,... purposes, e.g., the current view is that anyone over 18 is an adult.  In many cultures, adulthood occurs when one reaches puberty.  Adulthood is Contiguous-After childhood; that is, a Person is a Human-Child for a while, and then is a Human-Adult."))

(defrelation Marine-Personnel
             (Name-In-Cyc Marine-Personnel "#$MarinePersonnel")
             (Occupation-Type Marine-Personnel)
             (Subclass-Of Marine-Personnel Military-Person)
             (Set-Or-Collection Marine-Personnel)
             (Arity Marine-Personnel 1)
             (Documentation Marine-Personnel
              "A soldier who is in the Marines."))

(defrelation Shaft
             (Name-In-Cyc Shaft "#$Shaft")
             (Existing-Object-Type Shaft)
             (Subclass-Of Shaft Solid-Tangible-Thing)
             (Subclass-Of Shaft Artifact)
             (Set-Or-Collection Shaft)
             (Arity Shaft 1)
             (Documentation Shaft
              "A collection of artifacts.  An instance of Shaft is an object which is long, straight, and cylindrical.  A shaft may be made of wood, metal, etc."))

(defrelation |(TRANSPORT-VIA-FN TRANSPORTATION-DEVICE)|
             (Skolem-Object |(TRANSPORT-VIA-FN TRANSPORTATION-DEVICE)|)
             (Script-Type |(TRANSPORT-VIA-FN TRANSPORTATION-DEVICE)|)
             (Temporal-Stuff-Type |(TRANSPORT-VIA-FN TRANSPORTATION-DEVICE)|)
             (Subclass-Of |(TRANSPORT-VIA-FN TRANSPORTATION-DEVICE)|
              Transportation-Event)
             (Subclass-Of |(TRANSPORT-VIA-FN TRANSPORTATION-DEVICE)|
              Human-Activity)
             (Subclass-Of |(TRANSPORT-VIA-FN TRANSPORTATION-DEVICE)|
              Translation-Single-Path)
             (Subclass-Of |(TRANSPORT-VIA-FN TRANSPORTATION-DEVICE)|
              |(TRANSPORT-VIA-FN TRANSPORTATION-DEVICE)|)
             (Set-Or-Collection |(TRANSPORT-VIA-FN TRANSPORTATION-DEVICE)|)
             (Arity |(TRANSPORT-VIA-FN TRANSPORTATION-DEVICE)| 1)
             (Documentation |(TRANSPORT-VIA-FN TRANSPORTATION-DEVICE)|
              "A collection of events.  An instance of (Transport-Via-Fn Transportation-Device) is a Transportation-Event in which the Transporter is a Transportation-Device; e.g., driving a car, riding a train, sending scientific instruments to Mars on an unmanned space probe."))

(defrelation Biological-Decomposition-Event
             (Name-In-Cyc Biological-Decomposition-Event
              "#$BiologicalDecompositionEvent")
             (Temporal-Object-Type Biological-Decomposition-Event)
             (Default-Disjoint-Script-Type Biological-Decomposition-Event)
             (Subclass-Of Biological-Decomposition-Event
              Biological-Destruction-Event)
             (Subclass-Of Biological-Decomposition-Event Decomposition-Event)
             (Set-Or-Collection Biological-Decomposition-Event)
             (Arity Biological-Decomposition-Event 1)
             (Documentation Biological-Decomposition-Event
              "A collection of events.  In each Biological-Decomposition-Event, some living structures are decomposed."))

(defrelation Adult-Animal
             (The-Partition Adult-Animal Juvenile-Animal
              |(THE-PARTITION ADULT-ANIMAL JUVENILE-ANIMAL)|)
             (Name-In-Cyc Adult-Animal "#$AdultAnimal")
             (Existing-Object-Type Adult-Animal)
             (Subclass-Of Adult-Animal Biological-Stage-Of-Development)
             (Subclass-Of Adult-Animal Animal)
             (Set-Or-Collection Adult-Animal)
             (Arity Adult-Animal 1)
             (Documentation Adult-Animal
              "The collection of all adult animals (including adult people), meaning all elements of Animal that are mature enough to bear offspring, or older."))

(defrelation Sole-Proprietorship
             (Name-In-Cyc Sole-Proprietorship "#$SoleProprietorship")
             (Existing-Object-Type Sole-Proprietorship)
             (Subclass-Of Sole-Proprietorship Legal-Agent)
             (Subclass-Of Sole-Proprietorship Unincorporated-Organization)
             (Subclass-Of Sole-Proprietorship Organization)
             (Subclass-Of Sole-Proprietorship Business)
             (Set-Or-Collection Sole-Proprietorship)
             (Arity Sole-Proprietorship 1)
             (Documentation Sole-Proprietorship
              "A collection of unincorporated businesses organizations.  An element of Sole-Proprietorship is a business in which an individual Person (or a married couple) owns, operates, and assumes liability for the business.   A Sole-Proprietorship may or may not have employees.  It has no shareholders or partners."))

(defrelation Greeting-Someone
             (Name-In-Cyc Greeting-Someone "#$GreetingSomeone")
             (Temporal-Object-Type Greeting-Someone)
             (Default-Disjoint-Script-Type Greeting-Someone)
             (Subclass-Of Greeting-Someone Communication-Act-Single)
             (Subclass-Of Greeting-Someone Sociability-Based-Action)
             (Set-Or-Collection Greeting-Someone)
             (Arity Greeting-Someone 1)
             (Documentation Greeting-Someone
              "The collection of actions performed by one Agent to greet another.  Includes verbal and physical greetings."))

(defrelation Doorway-Covering
             (Name-In-Cyc Doorway-Covering "#$DoorwayCovering")
             (Existing-Object-Type Doorway-Covering)
             (Product-Type Doorway-Covering)
             (Subclass-Of Doorway-Covering Portal-Covering)
             (Set-Or-Collection Doorway-Covering)
             (Arity Doorway-Covering 1)
             (Documentation Doorway-Covering
              "A collection of tangible objects.  Each element of Doorway-Covering is a physical object used to cover some kind of portal, including but not limited to doorways in buildings.  This collection also includes doors of cars, buses, subways, elevators, garages, airplane hangars--coverings over any doors that people (and perhaps vehicles) pass through."))

(defrelation Employee-Hiring
             (Name-In-Cyc Employee-Hiring "#$EmployeeHiring")
             (Temporal-Object-Type Employee-Hiring)
             (Default-Disjoint-Script-Type Employee-Hiring)
             (Subclass-Of Employee-Hiring Organizational-Transfer-In)
             (Subclass-Of Employee-Hiring Making-An-Agreement)
             (Set-Or-Collection Employee-Hiring)
             (Arity Employee-Hiring 1)
             (Documentation Employee-Hiring
              "A collection of events; a subset of Making-An-Agreement.  Each element of Employee-Hiring is an event in which some agent--either an organization or individual--hires a person to work as its employee. See also Employees, Work-Agreement."))

(defrelation |(TRANSPORT-VIA-FN LAND-TRANSPORTATION-DEVICE)|
             (Skolem-Object |(TRANSPORT-VIA-FN LAND-TRANSPORTATION-DEVICE)|)
             (Temporal-Stuff-Type
              |(TRANSPORT-VIA-FN LAND-TRANSPORTATION-DEVICE)|)
             (Script-Type |(TRANSPORT-VIA-FN LAND-TRANSPORTATION-DEVICE)|)
             (Default-Disjoint-Script-Type
              |(TRANSPORT-VIA-FN LAND-TRANSPORTATION-DEVICE)|)
             (Subclass-Of |(TRANSPORT-VIA-FN LAND-TRANSPORTATION-DEVICE)|
              |(TRANSPORT-VIA-FN LAND-TRANSPORTATION-DEVICE)|)
             (Subclass-Of |(TRANSPORT-VIA-FN LAND-TRANSPORTATION-DEVICE)|
              |(TRANSPORT-VIA-FN TRANSPORTATION-DEVICE)|)
             (Subclass-Of |(TRANSPORT-VIA-FN LAND-TRANSPORTATION-DEVICE)|
              Transportation-Event)
             (Set-Or-Collection
              |(TRANSPORT-VIA-FN LAND-TRANSPORTATION-DEVICE)|)
             (Arity |(TRANSPORT-VIA-FN LAND-TRANSPORTATION-DEVICE)| 1)
             (Documentation |(TRANSPORT-VIA-FN LAND-TRANSPORTATION-DEVICE)|
              "A collection of events.  An instance of (Transport-Via-Fn Land-Transportation-Device) is a transportation event in which a Vehicle designed to travel over land is used.  Examples include instances of the collections (Transport-Via-Fn Road-Vehicle), Skate-Boarding, and Snow-Skiing.  Note: This collection does not include instances of Animal-Walking-Process, which is a Locomotion-Process (q.v.), not a form of transportation as defined in Cyc.  A marginal example of this would be a (fictional) event in which someone burrowed through the earth in a Jules-Vernesque real-time tunnel-digging machine."))

(defrelation June
             (Name-In-Cyc June "#$June")
             (Month-Of-Year-Type June)
             (Subclass-Of June Calendar-Month)
             (Set-Or-Collection June)
             (Arity June 1))

(defrelation Distance-Between
             (Nth-Domain Distance-Between 1 Spatial-Thing)
             (Nth-Domain Distance-Between 2 Spatial-Thing)
             (Nth-Domain Distance-Between 3 Distance)
             (Name-In-Cyc Distance-Between "#$distanceBetween")
             (Cotemporal-Predicate Distance-Between)
             (Ternary-Predicate Distance-Between)
             (Functional-Predicate Distance-Between)
             (Relation Distance-Between)
             (Arity Distance-Between 3)
             (Documentation Distance-Between
              "(Distance-Between THIS THAT DIST) means that the distance between two things, THIS and THAT, is DIST.  DIST is the length of the shortest straight line which extends from a point on THIS to a point on THAT.  For example, (Distance-Between La-Guardia-Airport New-York-Hilton-At-Broadway (Kilometer 12)).  The notion of 'straight line' depends on the context; in a Geography-related context it would be a great circle line on the Earth's surface rather than a true Euclidian straight line going through the Earth."))

(defrelation Finger
             (Name-In-Cyc Finger "#$Finger")
             (Animal-Body-Part-Type Finger)
             (Subclass-Of Finger Appendage-Animal-Body-Part)
             (Set-Or-Collection Finger)
             (Arity Finger 1)
             (Documentation Finger
              "The collection of all digits of all Hands (q.v.).  Fingers are (typically) flexibly jointed and are necessary to enabling the hand (and its owner) to perform grasping and manipulation actions."))

(defrelation Quotient-Units
             (Nth-Domain Quotient-Units 1 Unit-Of-Measure)
             (Nth-Domain Quotient-Units 2 Unit-Of-Measure)
             (Nth-Domain Quotient-Units 3 Unit-Of-Measure)
             (Name-In-Cyc Quotient-Units "#$quotientUnits")
             (Ternary-Predicate Quotient-Units)
             (Bookkeeping-Predicate Quotient-Units)
             (Relation Quotient-Units)
             (Arity Quotient-Units 3)
             (Documentation Quotient-Units
              "The Cyc predicate Quotient-Units is used to state what measurement units should be used for the quotient of two physical quantities, given the units measuring the dividend and divisor.  (Quotient-Units UM-1 UM-2 QUOT-UM) means that the value of (Quotient-Fn (UM-1 x) (UM-2 y)) should be given in the units QUOT-UM.  Examples: (Quotient-Units Newton Square-Meter Pascal-Unit-Of-Pressure); (Quotient-Units Unity Days-Duration Per-Day); (Quotient-Units (Micro Gram) (Milli Liter) Micrograms-Per-Milliliter).  See also Unit-Of-Measure, Quotient-Fn."))

(defrelation Locomotion-Process
             (Name-In-Cyc Locomotion-Process "#$LocomotionProcess")
             (Temporal-Stuff-Type Locomotion-Process)
             (Default-Disjoint-Script-Type Locomotion-Process)
             (Subclass-Of Locomotion-Process Locomotion-Process)
             (Subclass-Of Locomotion-Process Movement-Translation-Process)
             (Subclass-Of Locomotion-Process Locomotion-Event)
             (Set-Or-Collection Locomotion-Process)
             (Arity Locomotion-Process 1)
             (Documentation Locomotion-Process
              "The collection of processes in which an animal moves from one place to another by its own power.  A Locomotion-Process is an activity considered as a Temporal-Stuff-Type, in which any time-slice of the activity can also be considered an instance of that activity.  Subsets of Locomotion-Process include: Animal-Walking-Process, Brachiating, Climbing, Wheelchair-Locomotion-Event, Boring-Locomotion, etc."))

(defrelation Deliberate-Actors
             (Subrelation-Of Deliberate-Actors Pre-Actors)
             (Domain Deliberate-Actors Event)
             (Range Deliberate-Actors Agent)
             (Name-In-Cyc Deliberate-Actors "#$deliberateActors")
             (Actor-Slot Deliberate-Actors)
             (Slot Deliberate-Actors)
             (Relation Deliberate-Actors)
             (Arity Deliberate-Actors 2)
             (Binary-Relation Deliberate-Actors)
             (Documentation Deliberate-Actors
              "(Deliberate-Actors ACT ACTR) means that the Agent ACTR is conscious, volitional, purposeful in the event ACT.   ACTR is aware of acting in ACT and chooses to play the role he/she/it has in that event; i.e., ACTR has some purpose in mind.
Note:  If you do something deliberately but you fail, you are still a Deliberate-Actors.  For instance, you are a near-sighted doer of Showing-Support-For-Someone at a fencing match, and it turns out you were cheering for Fred when you thought you were cheering for Joe; nevertheless, you are still one of the Deliberate-Actors in the Showing-Support-For-Someone event.
Note: Legal responsibility is a separte issue from `deliberateness.'  Doing something in a fit of rage (e.g. a crime of passion) still involves purpose, volition, and consciousness even if considered for only an instant, and even if the laws and courts find you not guilty."))

(defrelation Microwaving
             (Name-In-Cyc Microwaving "#$Microwaving")
             (Default-Disjoint-Script-Type Microwaving)
             (Temporal-Object-Type Microwaving)
             (Subclass-Of Microwaving Cooking-Food)
             (Set-Or-Collection Microwaving)
             (Arity Microwaving 1)
             (Documentation Microwaving
              "A collection of events in which a Microwave-Oven is used to heat food (or drink).
After a Microwaving event, the food involved has been Microwaved."))

(defrelation Non-Profit-Corporation
             (Name-In-Cyc Non-Profit-Corporation "#$NonProfitCorporation")
             (Existing-Object-Type Non-Profit-Corporation)
             (Subclass-Of Non-Profit-Corporation Legal-Corporation)
             (Subclass-Of Non-Profit-Corporation Non-Profit-Organization)
             (Set-Or-Collection Non-Profit-Corporation)
             (Arity Non-Profit-Corporation 1)
             (Documentation Non-Profit-Corporation
              "A collection of corporations; a subset of both Legal-Corporation and Non-Profit-Organization.  An element of Non-Profit-Corporation is a Legal-Corporation which is engaged in non-profit or not-for-profit activities.  Typically, (unlike commercial corporations,) non-profit corporations have no shareholders or owners, although they are commonly governed by a board (cf. Board-Of-Directors).  Many non-profit organizations are incorporated, including charities, political action groups, clubs, and political parties.  Most have official non-profit standing with a government.  Because they are non-profit organizations, non-profit corporations do not pay corporate income taxes.  For the broader class of non-profit entities, see Non-Profit-Organization."))

(defrelation Melting
             (Name-In-Cyc Melting "#$Melting")
             (Temporal-Stuff-Type Melting)
             (Default-Disjoint-Script-Type Melting)
             (Subclass-Of Melting Making-Something)
             (Subclass-Of Melting Physical-State-Change-Event)
             (Set-Or-Collection Melting)
             (Arity Melting 1)
             (Documentation Melting
              "A collection of events.  In each instance of this collection, an object is heated to (and then above) its Freezing-Point and is thereby changed from a Solid-State-Of-Matter to a Liquid-State-Of-Matter."))

(defrelation Building-Material
             (Name-In-Cyc Building-Material "#$BuildingMaterial")
             (Conventional-Classification-Type Building-Material)
             (Product-Type Building-Material)
             (Subclass-Of Building-Material Artifact)
             (Set-Or-Collection Building-Material)
             (Arity Building-Material 1)
             (Documentation Building-Material
              "A collection of tangible things.  An instance of Building-Material is a material thing typically used in making new structures.  Instances of Building-Material include a piece of lumber, a brick, a slab of concrete, a roof shingle, a copper nail, a double-paned storm window, etc."))

(defrelation Atom
             (Name-In-Cyc Atom "#$Atom")
             (Existing-Object-Type Atom)
             (Subclass-Of Atom Chemical-Object)
             (Set-Or-Collection Atom)
             (Arity Atom 1)
             (Documentation Atom
              "A collection of microscopic-scale objects.  Each instance of Atom has one atomic nucleus and some number of electrons.  As a default, we assume that an instance of Atom has no net charge, i.e., that it has as many instances of Electrons as it does of Protons in its Atomic-Nucleus; but note there are exceptions, e.g., in the subset Ion."))

(defrelation Preparation-Attribute
             (Name-In-Cyc Preparation-Attribute "#$PreparationAttribute")
             (Unordered-Attribute-Type Preparation-Attribute)
             (Subclass-Of Preparation-Attribute Attribute-Value)
             (Set-Or-Collection Preparation-Attribute)
             (Arity Preparation-Attribute 1)
             (Documentation Preparation-Attribute
              "A collection of attributes.  Each element of Preparation-Attribute is a characteristic of a piece of material (e.g., food) indicating (1) a type of physical preparation which that stuff has already undergone, and (2) something about its current, resulting condition.  Examples of Preparation-Attribute which are applicable to food include: Baked, Fried, Toasted, Fermented, Grilled, Frozen, Dried, Raw."))

(defrelation Counterfactual-Context
             (Name-In-Cyc Counterfactual-Context "#$CounterfactualContext")
             (Object-Type Counterfactual-Context)
             (Microtheory-Type Counterfactual-Context)
             (Subclass-Of Counterfactual-Context Microtheory)
             (Set-Or-Collection Counterfactual-Context)
             (Arity Counterfactual-Context 1)
             (Documentation Counterfactual-Context
              "The collection of microtheories that are each assumed to include at least one counterfactual assertion: an assertion which is believed to be untrue in the real world.  It may be, however, that there is no explicit counterfactual assertion in a given Counterfactual-Context.  In particular, it is not required that there be any explicit contradiction of assertions in the Genl-Mts of the Counterfactual-Context.  But intuitively speaking, most adults would be reticent about trusting too strongly in a propositon whose only justification was in a Counterfactual-Context.  All works of fiction relate events that transpire in counterfactual contexts.  Examples:  World-Mythology-Mt, Paddington-Bear-Stories-Mt, Christmas-Mythology-Mt."))

(defrelation |(TRANSPORT-VIA-FN ROAD-VEHICLE)|
             (Skolem-Object |(TRANSPORT-VIA-FN ROAD-VEHICLE)|)
             (Default-Disjoint-Script-Type |(TRANSPORT-VIA-FN ROAD-VEHICLE)|)
             (Script-Type |(TRANSPORT-VIA-FN ROAD-VEHICLE)|)
             (Temporal-Stuff-Type |(TRANSPORT-VIA-FN ROAD-VEHICLE)|)
             (Subclass-Of |(TRANSPORT-VIA-FN ROAD-VEHICLE)|
              Transportation-Event)
             (Subclass-Of |(TRANSPORT-VIA-FN ROAD-VEHICLE)|
              |(TRANSPORT-VIA-FN TRANSPORTATION-DEVICE-VEHICLE)|)
             (Subclass-Of |(TRANSPORT-VIA-FN ROAD-VEHICLE)|
              |(TRANSPORT-VIA-FN LAND-TRANSPORTATION-DEVICE)|)
             (Set-Or-Collection |(TRANSPORT-VIA-FN ROAD-VEHICLE)|)
             (Arity |(TRANSPORT-VIA-FN ROAD-VEHICLE)| 1)
             (Documentation |(TRANSPORT-VIA-FN ROAD-VEHICLE)|
              "The collection of transportion events in which a (more or less conventional) road vehicle (see Road-Vehicle) is the transportation device (see Transporter and Vehicle)."))

(defrelation Course-During-A-Meal
             (Name-In-Cyc Course-During-A-Meal "#$CourseDuringAMeal")
             (Script-Type Course-During-A-Meal)
             (Subclass-Of Course-During-A-Meal Handling-An-Object)
             (Set-Or-Collection Course-During-A-Meal)
             (Arity Course-During-A-Meal 1)
             (Documentation Course-During-A-Meal
              "A collection of events.  Each element of Course-During-A-Meal is an event in which one or more diners at a meal consume a single course.  Examples include the elements of Appetizer-Course, Main-Course, Dessert-Course."))

(defrelation Path-For-Wheeled-Vehicles
             (Name-In-Cyc Path-For-Wheeled-Vehicles "#$PathForWheeledVehicles")
             (Existing-Object-Type Path-For-Wheeled-Vehicles)
             (Subclass-Of Path-For-Wheeled-Vehicles Outdoor-Location)
             (Subclass-Of Path-For-Wheeled-Vehicles Fixed-Structure)
             (Subclass-Of Path-For-Wheeled-Vehicles Path-Artifact)
             (Subclass-Of Path-For-Wheeled-Vehicles Path-Simple)
             (Set-Or-Collection Path-For-Wheeled-Vehicles)
             (Arity Path-For-Wheeled-Vehicles 1)
             (Documentation Path-For-Wheeled-Vehicles
              "Each instance of Path-For-Wheeled-Vehicles is an instance of Path-Artifact, whose primary function is to serve as a place along which wheeled vehicles may move or park. Usually but not necessarily they are paved."))

(defobject Unconscious
   (Alertness Unconscious)
   (Name-In-Cyc Unconscious "#$Unconscious")
   (Documentation Unconscious
    "Unconscious is the Alertness attribute of being Unconscious.  It is the opposite of Awake.  A specialization of this attribute is Asleep."))

(defrelation Cgs-Unit-Of-Measure
             (Name-In-Cyc Cgs-Unit-Of-Measure "#$CGSUnitOfMeasure")
             (Relationship-Type Cgs-Unit-Of-Measure)
             (Subclass-Of Cgs-Unit-Of-Measure Unit-Of-Measure)
             (Set-Or-Collection Cgs-Unit-Of-Measure)
             (Arity Cgs-Unit-Of-Measure 1)
             (Documentation Cgs-Unit-Of-Measure
              "A subset of Unit-Of-Measure.  CGS-Unit-Of-Measure is the collection of all the measurement functions whose results use the CGS (i.e., centimeter-gram-second) system of measure to describe physical quantities.  Examples: Centimeters-Per-Second, Cubic-Centimeter, Gram, Seconds-Duration."))

(defrelation Existing-Object-Type
             (Name-In-Cyc Existing-Object-Type "#$ExistingObjectType")
             (Collection Existing-Object-Type)
             (Subclass-Of Existing-Object-Type Temporal-Stuff-Type)
             (Subclass-Of Existing-Object-Type Object-Type)
             (Set-Or-Collection Existing-Object-Type)
             (Arity Existing-Object-Type 1)
             (Documentation Existing-Object-Type
              "A collection of collections.  Each element of each element of Existing-Object-Type is temporally stufflike yet is objectlike in other ways, e.g., spatially.  Any one of many Time-Slices of a copy of `Moby Dick' sitting on your shelf is still a copy of `Moby Dick' sitting on your shelf.  Most tangible objects are temporally stufflike in this fashion.   That book is, of course, not spatially stufflike; spatially, it is objectlike:  if we take a scalpel and slice the book into ten pieces, each piece is not a copy of `Moby Dick'.   So (:Direct-Types Book Existing-Object-Type) is true, because each book is temporally stufflike but spatially objectlike. See the comment for Stuff-Type to find out more about the distinctions between, and the need for, these four collections: Stuff-Type, Object-Type, Existing-Stuff-Type, and Existing-Object-Type."))

(defrelation User-Rights-Relation
             (Nth-Domain User-Rights-Relation 1 Agent)
             (Nth-Domain User-Rights-Relation 2 Partially-Tangible)
             (Nth-Domain User-Rights-Relation 3 User-Rights-Attribute)
             (Name-In-Cyc User-Rights-Relation "#$userRightsRelation")
             (Ternary-Predicate User-Rights-Relation)
             (Relation User-Rights-Relation)
             (Arity User-Rights-Relation 3)
             (Documentation User-Rights-Relation
              "This predicate relates an agent to the use rights which that agent has over an object.  (User-Rights-Relation AGENT OBJECT URA) means that AGENT enjoys the User-Rights-Attribute URA over OBJECT.  For example, if AGENT owns OBJECT, then AGENT has Full-Use-Rights over it.  E.g., (User-Rights-Relation DonaldTrump TrumpCastleCasino Full-Use-Rights) stopped being true when he went into debt.   See also User-Rights-Attribute."))

(defrelation Terrestrial-Organism
             (Name-In-Cyc Terrestrial-Organism "#$TerrestrialOrganism")
             (Organism-Type-By-Habitat Terrestrial-Organism)
             (Subclass-Of Terrestrial-Organism Organism-Whole)
             (Set-Or-Collection Terrestrial-Organism)
             (Arity Terrestrial-Organism 1)
             (Documentation Terrestrial-Organism
              "The collection of organisms adapted to life on land, out of water.  Elements of Terrestrial-Organism spend all or most of their time out of the water, in air, either on the land surface or under it.  Terrestrial-Organism includes, for example, members of its subsets Elephant, Ladybug, Bird, Person, etc."))

(defrelation Academic-Year
             (Name-In-Cyc Academic-Year "#$AcademicYear")
             (Temporal-Object-Type Academic-Year)
             (Subclass-Of Academic-Year Time-Interval)
             (Set-Or-Collection Academic-Year)
             (Arity Academic-Year 1)
             (Documentation Academic-Year
              "Each instance of this collection is an annually recurring Time-Interval defined by an educational institution.  Since the start dates, end dates, and duration may all vary depending on the institution, the year, etc., instances of this collection must unfortunately be time intervals like Stanford1989-90AcademicYear."))

(defrelation Smoking-Food
             (Name-In-Cyc Smoking-Food "#$SmokingFood")
             (Script-Type Smoking-Food)
             (Subclass-Of Smoking-Food Preserving-Food)
             (Set-Or-Collection Smoking-Food)
             (Arity Smoking-Food 1)
             (Documentation Smoking-Food
              "A kind of cooking in which the food is exposed to smoke.  This adds nitrates to the food to prevent rotting."))

(defrelation Ecological-Region
             (Name-In-Cyc Ecological-Region "#$EcologicalRegion")
             (Existing-Object-Type Ecological-Region)
             (Subclass-Of Ecological-Region Geographical-Region)
             (Set-Or-Collection Ecological-Region)
             (Arity Ecological-Region 1)
             (Documentation Ecological-Region
              "A collection of geographical regions.  Each element of Ecological-Region is a region having one or more characteristic ecosystems.  From knowledge of those ecosystems, we can posit whether certain organisms can forage, reproduce, and live successfully there.  Information about ecological regions typically also includes what kinds of organisms are in fact found there.  In theory, any arbitrary continuous region could be analyzed as an ecological region, but most regions identified in practice have some kind of sameness or systematic interconnection in their topology, climate, and biology.  Examples: the Western-Desert-Of-Egypt, the Great-Barrier-Reef, the Amazon-Region."))

(defobject |(MEDIUM-AMOUNT-FN TENSILE-STRENGTH)|
   (Scalar-Interval |(MEDIUM-AMOUNT-FN TENSILE-STRENGTH)|)
   (Tensile-Strength |(MEDIUM-AMOUNT-FN TENSILE-STRENGTH)|)
   (Skolem-Object |(MEDIUM-AMOUNT-FN TENSILE-STRENGTH)|))

(defrelation Part-Of-Room-In-A-Construction
             (Name-In-Cyc Part-Of-Room-In-A-Construction
              "#$PartOfRoomInAConstruction")
             (Existing-Object-Type Part-Of-Room-In-A-Construction)
             (Subclass-Of Part-Of-Room-In-A-Construction Part-Of-Building)
             (Set-Or-Collection Part-Of-Room-In-A-Construction)
             (Arity Part-Of-Room-In-A-Construction 1)
             (Documentation Part-Of-Room-In-A-Construction
              "A collection of all parts of all instances of Room-In-A-Construction.  This includes both solid parts, like Mantels, and enclosed regions such as are contained by cabinets and Cupboards.  Instances should be features which are 'built-in', that is, built with the intention of remaining as part of the room."))

(defrelation Organizational-Transfer-In
             (The-Covering Organizational-Transfer-In
              Organizational-Transfer-Out
              |(THE-COVERING ORGANIZATIONAL-TRANSFER-IN ORGANIZATIONAL-TRANSFER-OUT)|)
             (Name-In-Cyc Organizational-Transfer-In
              "#$OrganizationalTransferIn")
             (Script-Type Organizational-Transfer-In)
             (Temporal-Object-Type Organizational-Transfer-In)
             (Subclass-Of Organizational-Transfer-In Transfer-In)
             (Subclass-Of Organizational-Transfer-In Organizational-Transfer)
             (Set-Or-Collection Organizational-Transfer-In)
             (Arity Organizational-Transfer-In 1)
             (Documentation Organizational-Transfer-In
              "A subcollection of Organizational-Transfer such that elements necessarily have some thing which becomes the member of the 'to organization'.  Exemplars include hiring someone to a company, pledging a fraternal organization, admitting a nation to NATO.  The event of leaving one organization to join another is also an element of Organizational-Transfer-In as well as Organizational-Transfer-Out.  Negative exemplars include layoffs, expulsions, and excommunications which do not involve 'from organizations'."))

(defrelation Stock
             (Name-In-Cyc Stock "#$Stock")
             (Existing-Object-Type Stock)
             (Subclass-Of Stock Sales-Agreement)
             (Subclass-Of Stock Authorized-Agreement)
             (Set-Or-Collection Stock)
             (Arity Stock 1)
             (Documentation Stock
              "A collection consisting of all shares of stock.  An element of Stock is a share of ownership in some instance of Legal-Corporation; its owner is an Agent who is recorded as a shareholder in the official records of that corporation.  A company may have several classes of Stock, such as Common, Preferred, Class A, Class B, etc."))

(defrelation Conventional-Classification-Type
             (Synonymous-External-Concept Conventional-Classification-Type
              Sensus-Information1997 "SOCIAL-OBJECT")
             (Name-In-Cyc Conventional-Classification-Type
              "#$ConventionalClassificationType")
             (Object-Type Conventional-Classification-Type)
             (Subclass-Of Conventional-Classification-Type
              Abstract-Information)
             (Set-Or-Collection Conventional-Classification-Type)
             (Arity Conventional-Classification-Type 1)
             (Documentation Conventional-Classification-Type
              "The collection of all those collections (of Things) that each correspond to a category in some agreed-upon or conventional classification system (a Conventional-Classification-System).  In such systems, a change or reclassification is possible by a decision of an authority, or by a changed social agreement, without changing the intrinsic facts about the actual objects in the category.  (This applies only to named, known classification systems or schemas, and not to everything under the sun as might be urged by some 1990's-era postmodernist deconstructionist literary criticism theorists.)"))

(defrelation Utterance
             (Name-In-Cyc Utterance "#$Utterance")
             (Object-Type Utterance)
             (Temporal-Stuff-Type Utterance)
             (Subclass-Of Utterance Information-Bearing-Wave-Propagation)
             (Subclass-Of Utterance Animal-Sound)
             (Set-Or-Collection Utterance)
             (Arity Utterance 1)
             (Documentation Utterance
              "A collection of information bearing things (IBTs); a subset of Animal-Sound.  Each element of Utterance is a sound which was initially generated by someone speaking or making some sound with the mouth.  If such IBTs are recorded and played back, the sound generated is still considered an element of Utterance.  Examples: your spouse saying `Good morning' today; Ed McMahon saying `Here's Johnny' (on almost innumerable occasions); a child screaming at a playmate; Humphrey Bogart saying `Here's looking at you' on the set of `Casablanca'."))

(defrelation Cyc-Indexed-Term
             (Name-In-Cyc Cyc-Indexed-Term "#$CycIndexedTerm")
             (Collection Cyc-Indexed-Term)
             (Subclass-Of Cyc-Indexed-Term Thing)
             (Set-Or-Collection Cyc-Indexed-Term)
             (Arity Cyc-Indexed-Term 1)
             (Documentation Cyc-Indexed-Term
              "Elements of Cyc-Indexed-Term are objects that are indexed in the Cyc kb (e.g., kb constants, kb assertions)."))

(defrelation Tangible-Stuff-State-Type
             (Name-In-Cyc Tangible-Stuff-State-Type "#$TangibleStuffStateType")
             (Collection Tangible-Stuff-State-Type)
             (Subclass-Of Tangible-Stuff-State-Type Existing-Stuff-Type)
             (Set-Or-Collection Tangible-Stuff-State-Type)
             (Arity Tangible-Stuff-State-Type 1)
             (Documentation Tangible-Stuff-State-Type
              "A collection of collections.  Each element of Tangible-Stuff-State-Type is a collection of all pieces of tangible stuff that are associated with only a single physical state (i.e., structural phase).  This includes collections both (1) of substances which exist only in one state (e.g., Diamond) and (2) of stuff which by definition has a certain state (e.g., ice, or gels of any composition).  Thus, ice, water vapor, and liquid water--i.e., (Liquid-Fn Water)--would be represented by a Tangible-Stuff-State-Type.  Water itself, however, can exist in all three states; thus, the collection Water, which includes all instances of water regardless of state, is NOT a Tangible-Stuff-State-Type.  Elements of Tangible-Stuff-State-Type include the collections Solid-Tangible-Thing, Air, Powder, Gel, Paste, and many others.  Any of the Cyc functions Solid-Fn, Liquid-Fn, or Gaseous-Fn can be used to create a collection which :Direct-Types Tangible-Stuff-State-Type."))

(deffunction Meters-Per-Second
   (Args-Isa Meters-Per-Second Real-Number)
   (Result-Instance-Of Meters-Per-Second Scalar-Interval)
   (Result-Instance-Of Meters-Per-Second Speed)
   (Result-Instance-Of Meters-Per-Second Vector-Interval)
   (Name-In-Cyc Meters-Per-Second "#$MetersPerSecond")
   (Unit-Of-Speed Meters-Per-Second)
   (Standard-Unit-Of-Measure Meters-Per-Second)
   (Mks-Unit-Of-Measure Meters-Per-Second)
   (Unit-Of-Measure-No-Prefix Meters-Per-Second)
   (Function Meters-Per-Second)
   (Documentation Meters-Per-Second
    "(Meters-Per-Second NUMBER) returns a dimensionless rate or speed of NUMBER meters per second.  Notice that this result is not presently thought of as incorporating a vector, although it might be modified to do so at some point in the future if this should prove appropriate."))

(defobject Moderately-Alert
   (Alertness Moderately-Alert)
   (Subattribute-Of Moderately-Alert Awake)
   (Name-In-Cyc Moderately-Alert "#$ModeratelyAlert")
   (Documentation Moderately-Alert
    "Moderately-Alert is an Alertness attribute which is a specialization of Awake.  It is the normal state of an Animal which is awake but paying particular attention to its environment.  It is a higher Alertness-Level than Sleepy, but lower than Very-Alert."))

(defrelation Financial-Organization
             (Name-In-Cyc Financial-Organization "#$FinancialOrganization")
             (Existing-Object-Type Financial-Organization)
             (Subclass-Of Financial-Organization Commercial-Organization)
             (Subclass-Of Financial-Organization
              Commercial-Service-Organization)
             (Set-Or-Collection Financial-Organization)
             (Arity Financial-Organization 1)
             (Documentation Financial-Organization
              "A collection of organizations; a subset of Commercial-Service-Organization.  An element of Financial-Organization is an organization that buys, sells, trades, converts, or lends money, in the form of currency or negotiable financial instruments (such as stocks, bonds, commodities futures, etc.), as (one of) its major function(s).  The collection Financial-Organization does not include businesses, such as retailers, which simply exchange goods or non-financial services for money."))

(defrelation Separating-A-Mixture
             (Name-In-Cyc Separating-A-Mixture "#$SeparatingAMixture")
             (Temporal-Stuff-Type Separating-A-Mixture)
             (Default-Disjoint-Script-Type Separating-A-Mixture)
             (Subclass-Of Separating-A-Mixture Separation-Complete)
             (Subclass-Of Separating-A-Mixture Destruction-Event)
             (Set-Or-Collection Separating-A-Mixture)
             (Arity Separating-A-Mixture 1)
             (Documentation Separating-A-Mixture
              "A collection of events.  In each instance of this collection, a Mixture is separated into two or more Constituents."))

(defobject Partial-Cloud-Cover
   (Cloudiness Partial-Cloud-Cover)
   (Subattribute-Of Partial-Cloud-Cover Cloudy)
   (Name-In-Cyc Partial-Cloud-Cover "#$PartialCloudCover")
   (Documentation Partial-Cloud-Cover
    "Partial-Cloud-Cover is a Weather-Attribute representing a specific degree of Cloudiness.  This attribute describes a location as having some cloud cover but not enough to completely block out all direct sunlight.  Direct sunlight comes and goes as clouds occluding the sun pass."))

(defrelation Event-Occurs-At
             (Subrelation-Of Event-Occurs-At Temporally-Intersects)
             (Subrelation-Of Event-Occurs-At Actors)
             (Subrelation-Of Event-Occurs-At In-Region)
             (Domain Event-Occurs-At Event)
             (Range Event-Occurs-At Partially-Tangible)
             (Name-In-Cyc Event-Occurs-At "#$eventOccursAt")
             (Actor-Slot Event-Occurs-At)
             (Slot Event-Occurs-At)
             (Relation Event-Occurs-At)
             (Arity Event-Occurs-At 2)
             (Binary-Relation Event-Occurs-At)
             (Documentation Event-Occurs-At
              "The predicate Event-Occurs-At relates a particular event to the instance of Partially-Tangible in which it occurs.  (Event-Occurs-At EVENT PT) means that the spatial extent of EVENT is within PT.  For example, (Event-Occurs-At Loma-Prieta-Earthquake San-Francisco-Bay-Area)."))

(defobject Asleep
   (Alertness Asleep)
   (Subattribute-Of Asleep Unconscious)
   (Name-In-Cyc Asleep "#$Asleep")
   (Documentation Asleep
    "Asleep is the Alertness attribute of being asleep.  Asleep is a specialization of Unconscious.  (Holds-In (Year-Fn 1776) (Alertness-Level RipVanWinkle Asleep))."))

(defrelation Snow-Flake
             (Name-In-Cyc Snow-Flake "#$SnowFlake")
             (Existing-Object-Type Snow-Flake)
             (Subclass-Of Snow-Flake |(SOLID-FN WATER)|)
             (Subclass-Of Snow-Flake Precipitation-Particle)
             (Set-Or-Collection Snow-Flake)
             (Arity Snow-Flake 1)
             (Documentation Snow-Flake
              "The collection of frozen water crystals emitted by clouds in instances of Snow-Process."))

(defrelation Commercial-Service-Organization
             (Name-In-Cyc Commercial-Service-Organization
              "#$CommercialServiceOrganization")
             (Existing-Object-Type Commercial-Service-Organization)
             (Subclass-Of Commercial-Service-Organization
              Commercial-Organization)
             (Subclass-Of Commercial-Service-Organization Service-Organization)
             (Set-Or-Collection Commercial-Service-Organization)
             (Arity Commercial-Service-Organization 1)
             (Documentation Commercial-Service-Organization
              "A collection of organizations; a subset of Commercial-Organization.  An instance of Commercial-Service-Organization is a commercial organization which sells its services as its main product (rather than tangible goods), for commercial gain.  Some tangible goods may accompany or supplement the main service sold, but only as side products; e.g., some elements of Hair-Salon sell hair care products."))

(defrelation Evokes
             (Nth-Domain Evokes 1 Individual)
             (Nth-Domain Evokes 2 Feeling-Attribute-Type)
             (Nth-Domain Evokes 3 Generic-Attribute)
             (Nth-Domain-Subclass-Of Evokes 2 Feeling-Attribute)
             (Name-In-Cyc Evokes "#$evokes")
             (Cotemporal-Predicate Evokes)
             (Ternary-Predicate Evokes)
             (Relation Evokes)
             (Arity Evokes 3)
             (Documentation Evokes
              "(Evokes OBJ EMOTYPE DEGREE) means that as a consequence of perceiving OBJ, a typical sane intelligent perceiving agent would experience a feeling of EMOTYPE with degree of intensity DEGREE.  E.g., in some contexts, (Evokes Statue-Of-Liberty Pride High)."))

(defrelation Direction-Expression
             (Name-In-Cyc Direction-Expression "#$DirectionExpression")
             (Collection Direction-Expression)
             (Subclass-Of Direction-Expression Unit-Vector-Interval)
             (Set-Or-Collection Direction-Expression)
             (Arity Direction-Expression 1)
             (Documentation Direction-Expression
              "A collection of vectors; a subset of Unit-Vector-Interval.  Each element of Direction-Expression is a vector representing a direction.  Typically these expressions are used to indicate direction between two objects or locations.  An important subset of this collection is Geographical-Direction; e.g., South-Directly, North-West-Directly."))

(defrelation Country-Subsidiary
             (Name-In-Cyc Country-Subsidiary "#$CountrySubsidiary")
             (Existing-Object-Type Country-Subsidiary)
             (Subclass-Of Country-Subsidiary Geopolitical-Entity)
             (Set-Or-Collection Country-Subsidiary)
             (Arity Country-Subsidiary 1)
             (Documentation Country-Subsidiary
              "A collection of geopolitical entities.  Each element of Country-Subsidiary is a political region that is a direct subsidiary of some country.  This collection includes states, provinces, territories, and some special districts such as Washington, D.C.  This class is somewhat artificial but is useful when representing addresses."))

(defrelation |(THE-PARTITION ADULT-ANIMAL JUVENILE-ANIMAL)|
             (Skolem-Object |(THE-PARTITION ADULT-ANIMAL JUVENILE-ANIMAL)|)
             (Disjoint-Set-Or-Collection
              |(THE-PARTITION ADULT-ANIMAL JUVENILE-ANIMAL)|)
             (Set-Mathematical |(THE-PARTITION ADULT-ANIMAL JUVENILE-ANIMAL)|)
             (Subclass-Of |(THE-PARTITION ADULT-ANIMAL JUVENILE-ANIMAL)| Thing)
             (Set-Or-Collection |(THE-PARTITION ADULT-ANIMAL JUVENILE-ANIMAL)|)
             (Arity |(THE-PARTITION ADULT-ANIMAL JUVENILE-ANIMAL)| 1))

(defrelation Transitive-Binary-Predicate
             (Name-In-Cyc Transitive-Binary-Predicate
              "#$TransitiveBinaryPredicate")
             (Predicate-Category Transitive-Binary-Predicate)
             (Collection Transitive-Binary-Predicate)
             (Subclass-Of Transitive-Binary-Predicate Slot)
             (Set-Or-Collection Transitive-Binary-Predicate)
             (Arity Transitive-Binary-Predicate 1)
             (Documentation Transitive-Binary-Predicate
              "A collection of predicates; the subset of :Slot whose elements are all transitive.  A predicate F is an element of Transitive-Binary-Predicate if and only if F is a binary predicate and (F X Y) and (F Y Z) together imply (F X Z).  Examples: Greater-Than, East-Of, Geographical-Sub-Regions, Cotemporal."))

(defrelation English
             (Domain English Thing)
             (Range English String)
             (Name-In-Cyc English "#$english")
             (Slot English)
             (Relation English)
             (Arity English 2)
             (Binary-Relation English))

(defrelation Preserving-Food
             (Name-In-Cyc Preserving-Food "#$PreservingFood")
             (Temporal-Object-Type Preserving-Food)
             (Default-Disjoint-Script-Type Preserving-Food)
             (Subclass-Of Preserving-Food Intrinsic-State-Change-Event)
             (Subclass-Of Preserving-Food Handling-An-Object)
             (Subclass-Of Preserving-Food Human-Activity)
             (Set-Or-Collection Preserving-Food)
             (Arity Preserving-Food 1)
             (Documentation Preserving-Food
              "A collection of events.  Each instance of Preserving-Food is an
event in which a single item of food or drink (a member of the
collection Food-And-Drink) is acted on to prevent its Spoiling."))

(defrelation Microtheory-Type
             (Name-In-Cyc Microtheory-Type "#$MicrotheoryType")
             (Collection Microtheory-Type)
             (Subclass-Of Microtheory-Type Collection)
             (Set-Or-Collection Microtheory-Type)
             (Arity Microtheory-Type 1)
             (Documentation Microtheory-Type
              "A collection of collections.  Each instance of Microtheory-Type is a type of Microtheory, for example, Problem-Solving-Cntxt and General-Microtheory."))

(defrelation Degeneration-Event
             (Name-In-Cyc Degeneration-Event "#$DegenerationEvent")
             (Temporal-Object-Type Degeneration-Event)
             (Default-Disjoint-Script-Type Degeneration-Event)
             (Subclass-Of Degeneration-Event Incurring-Damage)
             (Set-Or-Collection Degeneration-Event)
             (Arity Degeneration-Event 1)
             (Documentation Degeneration-Event
              "A collection of events.  In each Degeneration-Event, some object loses its function(s) through a process of deterioration and/or a series of discrete breakdowns."))

(defrelation Metal
             (Solid-Fn Metal |(SOLID-FN METAL)|)
             (Name-In-Cyc Metal "#$Metal")
             (Tangible-Stuff-Composition-Type Metal)
             (Subclass-Of Metal Inanimate-Thing)
             (Subclass-Of Metal Tangible-Thing)
             (Set-Or-Collection Metal)
             (Arity Metal 1)
             (Documentation Metal
              "A collection of tangible stuffs.  Every instance of Metal is a piece of stuff defined as a metal only by its chemical composition, not by its physical properties.  Thus, Metal includes all instances of Mercury and Potassium as well as all pieces of Brass, Lead, Iron.  Cyc infers only by default that metals are solid.  Metal-Alloy is a subset of Metal."))

(defrelation Unit-Of-Rate
             (Name-In-Cyc Unit-Of-Rate "#$UnitOfRate")
             (Interconvertible-Unit-Type Unit-Of-Rate)
             (Subclass-Of Unit-Of-Rate Unit-Of-Measure)
             (Set-Or-Collection Unit-Of-Rate)
             (Arity Unit-Of-Rate 1)
             (Documentation Unit-Of-Rate
              "The collection of functions which return elements of Rate.  This includes any measurement function (see Unit-Of-Measure) whose Unit-Of-Measure-Expansions list includes the factor (-1 Unit-Of-Time).  For example, (Dollars-Per-Day 1000) denotes $1000 per day."))

(defrelation Legal-Holiday
             (Name-In-Cyc Legal-Holiday "#$LegalHoliday")
             (Script-Type Legal-Holiday)
             (Temporal-Object-Type Legal-Holiday)
             (Subclass-Of Legal-Holiday Holiday)
             (Set-Or-Collection Legal-Holiday)
             (Arity Legal-Holiday 1)
             (Documentation Legal-Holiday
              "The subset of Holidays which are typically declared to be Holidays by the governments of western countries, and which are therefore days on which most people governed by that government do not work and on which students do not attend classes.  Such Holidays may coincide with Religious-Holidays, especially where there is a government-sanctioned religion."))

(defrelation Guilt
             (Name-In-Cyc Guilt "#$Guilt")
             (Feeling-Attribute-Type Guilt)
             (Subclass-Of Guilt Shame)
             (Set-Or-Collection Guilt)
             (Arity Guilt 1)
             (Documentation Guilt
              "Negative, self-accusatory feeling of responsibility and blameworthiness for having caused harm by a past action, usually with conscious intent.  Note that this is not `guilty vs. innocent', but rather the feeling of guiltiness.  An unremorseful killer, though guilty (as opposed to innocent) of the murder, may not feel any Guilt (i.e., guiltiness) about it.    This is a collection; for an explanation of a typical Feeling-Attribute-Type, see Happiness."))

(defrelation Face-Of-Animal
             (Name-In-Cyc Face-Of-Animal "#$FaceOfAnimal")
             (Unique-Anatomical-Part-Type Face-Of-Animal)
             (Animal-Body-Part-Type Face-Of-Animal)
             (Subclass-Of Face-Of-Animal Biological-Living-Object)
             (Subclass-Of Face-Of-Animal Animal-Body-Part)
             (Set-Or-Collection Face-Of-Animal)
             (Arity Face-Of-Animal 1)
             (Documentation Face-Of-Animal
              "The collection of all faces of animals.  A Face-Of-Animal generally consists of the region where the eyes of the animal are located.  In most terrestrial animals, this is the front region of the animal's head, and also turns out to be where the nose, mouth, etc., are located."))

(defrelation Academic-Quarter
             (Name-In-Cyc Academic-Quarter "#$AcademicQuarter")
             (Temporal-Object-Type Academic-Quarter)
             (Subclass-Of Academic-Quarter Time-Interval)
             (Set-Or-Collection Academic-Quarter)
             (Arity Academic-Quarter 1)
             (Documentation Academic-Quarter
              "Each instance of this collection is a Time-Interval defined by some educational institution: one quarter of their Academic-Year.  Since the start dates, end dates, and duration may all vary depending on the institution, the year, etc., instances of this collection must unfortunately be time intervals like StanfordSpringQuarter1991."))

(defrelation Side
             (Name-In-Cyc Side "#$Side")
             (Region-Type Side)
             (Subclass-Of Side Surface-Physical)
             (Set-Or-Collection Side)
             (Arity Side 1)
             (Documentation Side
              "Elements are portions of some Surface-Physical which constitute a boundary between the inside and outside of a tangible object."))

(defrelation Path-Type
             (Name-In-Cyc Path-Type "#$PathType")
             (Sibling-Disjoint-Collection Path-Type)
             (Subclass-Of Path-Type Object-Type)
             (Set-Or-Collection Path-Type)
             (Arity Path-Type 1)
             (Documentation Path-Type
              "A collection of collections.  Each instance of Path-Type is a collection that is a subcollection of Path-Simple.  There are several  types of path, according to the medium or surface the path goes through or over."))

(defrelation Communication-Convention
             (Name-In-Cyc Communication-Convention "#$CommunicationConvention")
             (Temporal-Stuff-Type Communication-Convention)
             (Subclass-Of Communication-Convention Abstract-Information)
             (Subclass-Of Communication-Convention Mental-Object)
             (Set-Or-Collection Communication-Convention)
             (Arity Communication-Convention 1)
             (Documentation Communication-Convention
              "The collection of conventions used to encode and interpret things which bear information; a syntax together with a semantic mapping.  Instances include natural languages like French or English, database data formats, and computer languages or idiosyncratic systems of gestures or symbols known only by a small group of people."))

(defrelation Steaming-Food
             (Name-In-Cyc Steaming-Food "#$SteamingFood")
             (Default-Disjoint-Script-Type Steaming-Food)
             (Subclass-Of Steaming-Food Cooking-Food)
             (Set-Or-Collection Steaming-Food)
             (Arity Steaming-Food 1)
             (Documentation Steaming-Food
              "cooking food by surrounding it in steam."))

(defrelation |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "DIRECTED-ACTION")|
             (Skolem-Object
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "DIRECTED-ACTION")|)
             (Collection
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "DIRECTED-ACTION")|)
             (Subclass-Of
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "DIRECTED-ACTION")|
              Physical-Event)
             (Set-Or-Collection
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "DIRECTED-ACTION")|)
             (Arity
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "DIRECTED-ACTION")|
              1))

(defrelation Domestic-Pet
             (Name-In-Cyc Domestic-Pet "#$DomesticPet")
             (Existing-Object-Type Domestic-Pet)
             (Subclass-Of Domestic-Pet Portable-Object)
             (Subclass-Of Domestic-Pet Domesticated-Animal)
             (Subclass-Of Domestic-Pet Human-Occupation-Construct-Resident)
             (Set-Or-Collection Domestic-Pet)
             (Arity Domestic-Pet 1)
             (Documentation Domestic-Pet
              "The subset of Domesticated-Animal whose elements are animals kept by humans primarily for their companionship.  (They may, however, do some chores such as catching mice.)  Many members of Domestic-Pet live in the homes of their owners."))

(defrelation Incurring-Damage
             (Name-In-Cyc Incurring-Damage "#$IncurringDamage")
             (Script-Type Incurring-Damage)
             (Subclass-Of Incurring-Damage Physical-Event)
             (Subclass-Of Incurring-Damage Intrinsic-State-Change-Event)
             (Set-Or-Collection Incurring-Damage)
             (Arity Incurring-Damage 1)
             (Documentation Incurring-Damage
              "The collection of events in which some sort of damage is incurred to a person or property."))

(deffunction Cent-United-States
   (Args-Isa Cent-United-States Real-Number)
   (Result-Instance-Of Cent-United-States Money)
   (Result-Instance-Of Cent-United-States Scalar-Interval)
   (Name-In-Cyc Cent-United-States "#$Cent-UnitedStates")
   (Unit-Of-Money Cent-United-States)
   (Unit-Of-Measure-With-Prefix Cent-United-States)
   (Function Cent-United-States)
   (Documentation Cent-United-States
    "An element of Unit-Of-Money.  Cent-United-States represents the smallest unit of money used officially in the United States of America; one-hundredth of a Dollar-United-States.  See also Unit-Of-Measure."))

(defrelation Basement-Level-In-A-Construction
             (Name-In-Cyc Basement-Level-In-A-Construction
              "#$BasementLevelInAConstruction")
             (Existing-Object-Type Basement-Level-In-A-Construction)
             (Subclass-Of Basement-Level-In-A-Construction
              Level-Of-A-Construction)
             (Set-Or-Collection Basement-Level-In-A-Construction)
             (Arity Basement-Level-In-A-Construction 1)
             (Documentation Basement-Level-In-A-Construction
              "Any level of a building which is underground."))

(defrelation Reifiable-Function
             (Name-In-Cyc Reifiable-Function "#$ReifiableFunction")
             (Relationship-Type Reifiable-Function)
             (Collection Reifiable-Function)
             (Subclass-Of Reifiable-Function Non-Predicate-Function)
             (Set-Or-Collection Reifiable-Function)
             (Arity Reifiable-Function 1)
             (Documentation Reifiable-Function
              "The collection of all Cyc functions whose values can be reified and treated like Cyc constants.  Using reifiable functions allow us to add to the KB efficiently; e.g., (Government-Fn France) can be treated more or less the same as if we had created a new constant term called `GovernmentOfFrance', and Government-Fn can be applied to any element of Geopolitical-Entity to produce such a reified term representing the region's government.  On the other hand, it is not desirable to reify every non-atomic term; for example, all the measurable quantities, such as (Inch 5), and the numbers which result from using elements of Function-From-Quantities-To-Quantities (e.g., Plus-Fn).  Thus, Individual-Denoting-Function does not and should NOT have Reifiable-Function as a :Direct-Superclasses, because Individual-Denoting-Function includes the elements of Unit-Of-Measure and other functions whose uses we don't want to reify.  See also Non-Predicate-Function, Reifiable-Term."))

(defrelation Medical-Facility-Type
             (Name-In-Cyc Medical-Facility-Type "#$MedicalFacilityType")
             (Collection Medical-Facility-Type)
             (Subclass-Of Medical-Facility-Type Existing-Object-Type)
             (Set-Or-Collection Medical-Facility-Type)
             (Arity Medical-Facility-Type 1)
             (Documentation Medical-Facility-Type
              "Instances are kinds of medical care facilities.  Some may be organizations , some may be places and some are equipment."))

(defobject |(VERY-HIGH-AMOUNT-FN RELATIVE-HUMIDITY)|
   (Scalar-Interval |(VERY-HIGH-AMOUNT-FN RELATIVE-HUMIDITY)|)
   (Relative-Humidity |(VERY-HIGH-AMOUNT-FN RELATIVE-HUMIDITY)|)
   (Skolem-Object |(VERY-HIGH-AMOUNT-FN RELATIVE-HUMIDITY)|))

(defrelation Locomotion-Event
             (Name-In-Cyc Locomotion-Event "#$LocomotionEvent")
             (Temporal-Object-Type Locomotion-Event)
             (Default-Disjoint-Script-Type Locomotion-Event)
             (Subclass-Of Locomotion-Event Animal-Activity)
             (Subclass-Of Locomotion-Event Translation-Single-Path)
             (Subclass-Of Locomotion-Event Translation-Complete)
             (Set-Or-Collection Locomotion-Event)
             (Arity Locomotion-Event 1)
             (Documentation Locomotion-Event
              "A collection of events; a subset of Movement-Translation-Event.  In an instance of Locomotion-Event, the Object-Moving (at least the object that is playing the role of Done-By in the event) moves along some pathway under its own power (i.e. plays the role of Provider-Of-Motive-Force).  In addition to episodes of walking and swimming, Locomotion-Event includes events in which an agent moves itself using a device, with that agent supplying the motive force to the device -- as in instances of Pedaling-A-Bicycle, Ice-Skating, In-Line-Skating, etc.  Since the locomotor virtually always supplies the vast majority of the force required to make the motion happen, it is safe to infer that IF something plays the role of Provider-Of-Motive-Force, THEN it is an Object-Moving.  In certain abnormal situations this rule will make the wrong conclusions: e.g. if a mountain climber's assent is aided by another stationary person above.  Some locomotion events are also transportation events, e.g. when someone is walking while carrying something else.
Note: Elements of Locomotion-Event may be `non-homogeneous' (by contrast, each Locomotion-Process is `homogeneous.')  That is, if you take Time-Slices of a Locomotion-Event, they may or may not be Locomotion-Events.  E.g., even though a mountain-climbing event is a Locomotion-Event, if you take a time-slice of it  -- even a quite long time-slice of it! -- that whole time-slice could be where you were tying your climbing rope to a piton you'd just pounded into the mountainside, and that tying event is not a Locomotion-Event.  Note that this is not quite the same thing as the granularity of a process, such as Animal-Walking-Process, where if you take a fine enough time-slice you are just lifting your leg up into the air.  In the case of a Locomotion-Event such as scaling a sheer rock wall, very little of the time actually involves the motion of your body up the wall. "))

(defrelation July
             (Name-In-Cyc July "#$July")
             (Month-Of-Year-Type July)
             (Subclass-Of July Calendar-Month)
             (Set-Or-Collection July)
             (Arity July 1))

(defrelation Business-Person
             (Name-In-Cyc Business-Person "#$BusinessPerson")
             (Occupation-Type Business-Person)
             (Subclass-Of Business-Person Professional)
             (Set-Or-Collection Business-Person)
             (Arity Business-Person 1)
             (Documentation Business-Person
              "A collection of persons; a subset of Professional. Each element of Business-Person is a person whose occupation is primarily in the ownership and/or operation of a business."))

(defobject Long-And-Thin
   (Physical-Structural-Attribute Long-And-Thin)
   (Abstract-Shape Long-And-Thin)
   (Name-In-Cyc Long-And-Thin "#$LongAndThin")
   (Documentation Long-And-Thin
    "A physical attribute.  Long-And-Thin is the Physical-Structural-Attribute that characterizes a tangible object which has one dimension whose length exceeds that of each of the other two dimensions by at least a factor of three.  E.g., pencils, straws, telephone wire, submarines, skyscrapers. Cf. Sheet-Shaped."))

(defobject Now
   (Time-Point Now)
   (Indexical-Concept Now)
   (Name-In-Cyc Now "#$Now")
   (Documentation Now
    "Now is a special Time-Point which denotes the `current' moment.  The exact interpretation will vary from one context to another.  In a problem solving context it often means `the time at which the inference is occuring'."))

(defrelation Ethnic-Group-Type
             (Name-In-Cyc Ethnic-Group-Type "#$EthnicGroupType")
             (Collection Ethnic-Group-Type)
             (Subclass-Of Ethnic-Group-Type Conventional-Classification-Type)
             (Subclass-Of Ethnic-Group-Type Human-Culture-Type)
             (Set-Or-Collection Ethnic-Group-Type)
             (Arity Ethnic-Group-Type 1)
             (Documentation Ethnic-Group-Type
              "A collection of collections.  An Ethnic-Group-Type is a set of people whose group-organization, practices or characteristics are based on ethnic origins.  E.g., some Ethnic-Group-Types are: Ethnic-Group-Of-Vietnamese, Ethnic-Group-Of-Indians-Of-The-US, etc."))

(defrelation |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "LIQUID-MATERIAL")|
             (Skolem-Object
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "LIQUID-MATERIAL")|)
             (Collection
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "LIQUID-MATERIAL")|)
             (Subclass-Of
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "LIQUID-MATERIAL")|
              Thing)
             (Set-Or-Collection
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "LIQUID-MATERIAL")|)
             (Arity
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "LIQUID-MATERIAL")|
              1))

(defrelation Offer
             (Name-In-Cyc Offer "#$Offer")
             (Object-Type Offer)
             (Subclass-Of Offer Illocutionary-Force)
             (Set-Or-Collection Offer)
             (Arity Offer 1)
             (Documentation Offer
              "A collection of illocutionary forces.  Each instance of Offer consists of a piece of information contained (perhaps implicitly) in a communication, and which expresses the speaker's intention of volunteering to perform the action described in that utterance and/or to bring about the situation described therein, on the condition that the listener accept the offer.  An offer may be made with additional conditions as well.  When an offer is accepted (and all conditions are true), the speaker of the offer incurs an obligation.  `Speaker' and `listener' are broadly interpreted to mean, respectively, any Sender-Of-Info and Recipient-Of-Info.  See also Illocutionary-Force, Offering-Communication-Act."))

(defrelation Alertness
             (Name-In-Cyc Alertness "#$Alertness")
             (Primitive-Attribute-Type Alertness)
             (Subclass-Of Alertness Scalar-Interval)
             (Subclass-Of Alertness Animal-Physiological-Attribute)
             (Set-Or-Collection Alertness)
             (Arity Alertness 1)
             (Documentation Alertness
              "Alertness is an Animal-Physiological-Attribute which specifies how sleepy or alert an animal is.  Levels of Alertness include Asleep, Sleepy, and Awake."))

(defrelation Non-Physical-Part-Predicate
             (Name-In-Cyc Non-Physical-Part-Predicate
              "#$NonPhysicalPartPredicate")
             (Predicate-Category Non-Physical-Part-Predicate)
             (Subclass-Of Non-Physical-Part-Predicate Part-Predicate)
             (Set-Or-Collection Non-Physical-Part-Predicate)
             (Arity Non-Physical-Part-Predicate 1)
             (Documentation Non-Physical-Part-Predicate
              "A collection of predicates. Instances of Non-Physical-Part-Predicate are used to describe the relationship between a Partially-Intangible and its non-physical parts."))

(defrelation Position-Type
             (Name-In-Cyc Position-Type "#$PositionType")
             (Collection Position-Type)
             (Subclass-Of Position-Type Existing-Object-Type)
             (Set-Or-Collection Position-Type)
             (Arity Position-Type 1)
             (Documentation Position-Type
              "A collection of collections.  Each element of Position-Type is a collection which represents a type of position filled by people within an organization.  Examples of Position-Type: Mayor, Admiral, Campaign-Manager, Director-Movie, Chairman, Resident-Medical."))

(defrelation Body-Of-Water
             (Name-In-Cyc Body-Of-Water "#$BodyOfWater")
             (Existing-Object-Type Body-Of-Water)
             (Subclass-Of Body-Of-Water |(LIQUID-FN WATER)|)
             (Subclass-Of Body-Of-Water Topographical-Feature)
             (Subclass-Of Body-Of-Water Outdoor-Location)
             (Set-Or-Collection Body-Of-Water)
             (Arity Body-Of-Water 1)
             (Documentation Body-Of-Water
              "A collection of topographical features.  Each element of Body-Of-Water is a natural or artificial body of water.  Elements may belong to specialized subsets such as Lake, Stream, and Ocean. Body-Of-Water includes reservoirs, Canals, and navigation channels that are developed and/or enlarged by humans.  However, it does not include smaller purely-artificial bodies of water such as Swimming-Pools or tanks of water.  Examples of Body-Of-Water: Hudson-Bay, Panama-Canal, Adriatic-Sea, Bay-Of-Bengal, Niagara-Falls."))

(defrelation Manufacturing-Organization
             (Name-In-Cyc Manufacturing-Organization
              "#$ManufacturingOrganization")
             (Existing-Object-Type Manufacturing-Organization)
             (Subclass-Of Manufacturing-Organization Organization)
             (Subclass-Of Manufacturing-Organization Commercial-Organization)
             (Set-Or-Collection Manufacturing-Organization)
             (Arity Manufacturing-Organization 1)
             (Documentation Manufacturing-Organization
              "A collection of organizations.  An element of Manufacturing-Organization is any organization whose Main-Function is Manufacturing or production of goods.  These may be departments, suborganizations, companies, or conglomerate enterprises."))

(defrelation Simple-Graph-Graph-Theoretic
             (Name-In-Cyc Simple-Graph-Graph-Theoretic
              "#$SimpleGraph-GraphTheoretic")
             (Collection Simple-Graph-Graph-Theoretic)
             (Subclass-Of Simple-Graph-Graph-Theoretic Multi-Graph)
             (Subclass-Of Simple-Graph-Graph-Theoretic Simple-Path-System)
             (Set-Or-Collection Simple-Graph-Graph-Theoretic)
             (Arity Simple-Graph-Graph-Theoretic 1)
             (Documentation Simple-Graph-Graph-Theoretic
              "The collection of all Path-Systems that are instances of both Simple-Path-System and Multi-Graph.  Each instance of Simple-Graph-Graph-Theoretic is a 'graph', as studied in graph theory, in which there are neither loops nor multiple links between the same pair of nodes."))

(defrelation Nationality
             (Name-In-Cyc Nationality "#$Nationality")
             (Collection Nationality)
             (Subclass-Of Nationality Human-Culture-Type)
             (Set-Or-Collection Nationality)
             (Arity Nationality 1)
             (Documentation Nationality
              "A collection of collections.  Each Nationality is the set of people resident in (or visiting for a long term) some country -- e.g., American-Person, Trinidad-And-Tobago-Person, etc."))

(defrelation Land-Body
             (Name-In-Cyc Land-Body "#$LandBody")
             (Existing-Object-Type Land-Body)
             (Subclass-Of Land-Body Topographical-Feature)
             (Set-Or-Collection Land-Body)
             (Arity Land-Body 1)
             (Documentation Land-Body
              "A collection of geographical regions.  Each element of Land-Body is a cohesive chunk of land whose extent is principally defined by one or more bordering bodies of water (liquid or frozen).  Types of Land-Body include the subsets Island and Continent.  Examples: Australia, Continent-Of-North-America, Trinidad-Island, Crete-Island-Greece.  Areas of land defined by human occupation or political boundaries, e.g.,  Northern-California or Northern-Ireland, are elements of Geographical-Region, but not of Land-Body."))

(defrelation Portal
             (Name-In-Cyc Portal "#$Portal")
             (Region-Type Portal)
             (Subclass-Of Portal Cavity)
             (Set-Or-Collection Portal)
             (Arity Portal 1)
             (Documentation Portal
              "The collection of all openings, as in a surface, through a tube, etc., with or without a covering.  This includes doors, mouths, doughnut-holes, etc."))

(defrelation Navy
             (Name-In-Cyc Navy "#$Navy")
             (Existing-Object-Type Navy)
             (Subclass-Of Navy Military-Organization)
             (Set-Or-Collection Navy)
             (Arity Navy 1)
             (Documentation Navy
              "A collection of military organizations.  An element of Navy is a military organization, modern or historical, composed mainly of seaborne forces and/or forces responsible for military operations on water and adjacent coastal areas.  Includes battleships and aircraft carriers (with their battle groups), submarines, shore patrol vessels, and special forces, as well as the support personnel of naval bases."))

(defobject A-Few-Minutes-Duration
   (Time-Quantity A-Few-Minutes-Duration)
   (Order-Of-Magnitude-Interval A-Few-Minutes-Duration)
   (Name-In-Cyc A-Few-Minutes-Duration "#$AFewMinutesDuration")
   (Documentation A-Few-Minutes-Duration "Duration of 2 to 10 minutes"))

(defrelation Chemical-Compound-Type
             (Name-In-Cyc Chemical-Compound-Type "#$ChemicalCompoundType")
             (Sibling-Disjoint-Collection Chemical-Compound-Type)
             (Subclass-Of Chemical-Compound-Type
              Tangible-Stuff-Composition-Type)
             (Set-Or-Collection Chemical-Compound-Type)
             (Arity Chemical-Compound-Type 1)
             (Documentation Chemical-Compound-Type
              "A collection of collections; a subset of Tangible-Stuff-Composition-Type.  Every instance of Chemical-Compound-Type is a subset of Tangible-Thing whose instances are defined ONLY by their chemical composition, and not by their physical state or any other property.  In Cyc's current representation, Chemical-Compound-Types can be of two varieties:  (1) Collections whose instances are completely uniform with each other in terms of chemical composition; this includes (a) the chemical elements -- such as Carbon, Oxygen, and Hydrogen -- which are instances of Element-Stuff-Type-By-Number-Of-Protons (thus, the latter is a subset of Chemical-Compound-Type), and (b) compounds constituted of more than one substance chemically bonded, e.g., Water, Caffeine, and Iron-Oxide.  (2) Substances which have a general chemical specification, that is, whose instances do not have exactly the same chemical composition but fall within certain specifications, e.g., DNA.  Cyc's current theory includes those cases in Chemical-Compound-Type, though they are arguably borderline.  (Future work may require the creation of type collections to identify various levels of chemical specification, such as `exact formula' or `exact structure'.)
Note: Collections which Cyc does NOT classify as Chemical-Compound-Types include collections of substances which have some component which is of overriding significance in some context, so that in everyday language such substances are frequently referred to by the name of their important component (e.g., `penicillin' applied to a tablet containing penicillin), but which have significant admixtures of other substances.  Our representation distinguishes between the chemical compound (here, instances of Penicillin) and the mixture of substances in a tablet containing some Penicillin for pharmaceutical use.  Thus, Penicillin is an instance of Chemical-Compound-Type, but the collection of tablets containing penicillin and including other ingredients are not.  Also, subsets of Mixture, such as Lemonade, are not instances of Chemical-Compound-Type, because mixtures are determined by their physical state rather than solely by their chemical composition."))

(defobject Awake
   (Alertness Awake)
   (Name-In-Cyc Awake "#$Awake")
   (Documentation Awake "Awake is the Alertness attribute of being awake."))

(deffunction Mega-Hertz
   (Args-Isa Mega-Hertz Real-Number)
   (Result-Instance-Of Mega-Hertz Frequency)
   (Result-Instance-Of Mega-Hertz Rate)
   (Result-Instance-Of Mega-Hertz Scalar-Interval)
   (Name-In-Cyc Mega-Hertz "#$MegaHertz")
   (Unit-Of-Frequency Mega-Hertz)
   (Unit-Of-Measure-With-Prefix Mega-Hertz)
   (Function Mega-Hertz)
   (Documentation Mega-Hertz
    "The measurement function used in Cyc to represent the common unit of frequency.     See also Unit-Of-Frequency, Unit-Of-Measure."))

(defrelation Schooling
             (Nth-Domain Schooling 1 Person)
             (Nth-Domain Schooling 2 Educational-Organization)
             (Nth-Domain Schooling 3 Student-Status-Attribute)
             (Name-In-Cyc Schooling "#$schooling")
             (Ternary-Predicate Schooling)
             (Relation Schooling)
             (Arity Schooling 3)
             (Documentation Schooling
              "(Schooling PERSN SCHL LVL) means Person PERSN has attained formal schooling up to Education-Level-Attribute LVL at the Educational-Organization SCHL.  This will refer to a particular Sub-Abstrac of a Person, not the person as a whole lifetime Entity.  And of course the schooling itself generally occurs at but one of many Time-Slices of the school."))

(defrelation Holiday
             (Name-In-Cyc Holiday "#$Holiday")
             (Script-Type Holiday)
             (Temporal-Object-Type Holiday)
             (Subclass-Of Holiday Human-Activity)
             (Subclass-Of Holiday Event)
             (Set-Or-Collection Holiday)
             (Arity Holiday 1)
             (Documentation Holiday
              "Each Holiday is an Event wherein social celebrations and/or rituals are performed, typically lasting for one Days-Duration and typically coinciding with a Calendar-Day.  While Holidays are often Annual-Events, they may also be one-time events or scheduled in some other manner.  They are also contextual, as different nationalities, eras, etc. celebrate different ones."))

(defobject |(VERY-HIGH-AMOUNT-FN SHEAR-STRENGTH)|
   (Scalar-Interval |(VERY-HIGH-AMOUNT-FN SHEAR-STRENGTH)|)
   (Shear-Strength |(VERY-HIGH-AMOUNT-FN SHEAR-STRENGTH)|)
   (Skolem-Object |(VERY-HIGH-AMOUNT-FN SHEAR-STRENGTH)|))

(defrelation Biological-Destruction-Event
             (Name-In-Cyc Biological-Destruction-Event
              "#$BiologicalDestructionEvent")
             (Temporal-Object-Type Biological-Destruction-Event)
             (Default-Disjoint-Script-Type Biological-Destruction-Event)
             (Subclass-Of Biological-Destruction-Event Biological-Event)
             (Subclass-Of Biological-Destruction-Event Destruction-Event)
             (Set-Or-Collection Biological-Destruction-Event)
             (Arity Biological-Destruction-Event 1)
             (Documentation Biological-Destruction-Event
              "A collection of events.  In each element of Biological-Destruction-Event, something is destroyed by some element(s) of Biological-Living-Object.  For example, Digesting-In-Stomach is a subset of Biological-Destruction-Event."))

(defrelation Calendar-Spring
             (Name-In-Cyc Calendar-Spring "#$CalendarSpring")
             (Calendar-Season-Type Calendar-Spring)
             (Subclass-Of Calendar-Spring Calendar-Season)
             (Set-Or-Collection Calendar-Spring)
             (Arity Calendar-Spring 1)
             (Documentation Calendar-Spring
              "The calendar season that begins at vernal equinox and runs until summer solstice."))

(defrelation Cohesiveness
             (Name-In-Cyc Cohesiveness "#$Cohesiveness")
             (Primitive-Attribute-Type Cohesiveness)
             (Subclass-Of Cohesiveness Scalar-Interval)
             (Subclass-Of Cohesiveness Physical-Attribute)
             (Set-Or-Collection Cohesiveness)
             (Arity Cohesiveness 1)
             (Documentation Cohesiveness
              "A collection of attributes; a subset of Physical-Attribute.  Each element of Cohesiveness represents a specific capacity of a physical object to cohere; e.g., Rigidly-Cohesive, Liquid-Cohesiveness, Humanly-Separable.  Cohesiveness of objects is indicated with the predicate Cohesiveness-Of-Object."))

(defrelation Pressure
             (Name-In-Cyc Pressure "#$Pressure")
             (Derived-Numeric-Attribute-Type Pressure)
             (Subclass-Of Pressure Physical-Attribute)
             (Subclass-Of Pressure Scalar-Interval)
             (Set-Or-Collection Pressure)
             (Arity Pressure 1)
             (Documentation Pressure
              "A collection of attributes; a subset of Physical-Attribute.  Each element of Pressure represents a specific measure of a force exerted on some surface.  Degrees of Pressure may be represented using Generic-Value-Functions or with qualitative collections (e.g., Bruising-Pressure, Fracturing-Pressure, Imperceptible-Pressure).   Indicate the Pressure of a particular fluid with the predicate Fluid-Pressure; indicate atmospheric pressure with Barometric-Pressure."))

(defrelation Form-Standardized-Ibo
             (Name-In-Cyc Form-Standardized-Ibo "#$Form-StandardizedIBO")
             (Temporal-Stuff-Type Form-Standardized-Ibo)
             (Subclass-Of Form-Standardized-Ibo Structured-Information-Source)
             (Set-Or-Collection Form-Standardized-Ibo)
             (Arity Form-Standardized-Ibo 1)
             (Documentation Form-Standardized-Ibo
              "A collection of information bearing objects (IBOs); a subset of Structured-Information-Source.  Each element of Form-Standardized-IBO is an IBO having some standard set of labelled `fields' left blank for the user to fill in with individualized information.  Forms usually accompany some sort of bureaucratic procedure, which they may be used to initiate or to certify.  Examples include the elements of Job-Application-Form, Deposit-Slip, Insurance-Claim-Form, Order-Form, Tax-Return, Birth-Certificate, Diploma-Document, ATM-Transaction-Receipt, Marriage-License-Document, Death-Certificate, etc."))

(defobject |(HIGH-AMOUNT-FN SHEAR-STRENGTH)|
   (Scalar-Interval |(HIGH-AMOUNT-FN SHEAR-STRENGTH)|)
   (Shear-Strength |(HIGH-AMOUNT-FN SHEAR-STRENGTH)|)
   (Skolem-Object |(HIGH-AMOUNT-FN SHEAR-STRENGTH)|))

(defrelation Business-Relationship-Activity
             (Name-In-Cyc Business-Relationship-Activity
              "#$BusinessRelationshipActivity")
             (Script-Type Business-Relationship-Activity)
             (Temporal-Stuff-Type Business-Relationship-Activity)
             (Subclass-Of Business-Relationship-Activity Social-Occurrence)
             (Subclass-Of Business-Relationship-Activity Business-Event)
             (Set-Or-Collection Business-Relationship-Activity)
             (Arity Business-Relationship-Activity 1)
             (Documentation Business-Relationship-Activity
              "A collection of events; a subset of both Business-Event and Social-Occurrence.  Each instance of Business-Relationship-Activity is a (usually long-term) social activity whose participants are related by some business relationship.  The social events constituting a Business-Relationship-Activity further, either directly or indirectly, the (usually mutual) business interests of the participants.  A Business-Relationship-Activity is typically carried out over multiple social occasions and may consist of many Sub-Events."))

(defrelation Pipe-Generic-Conduit
             (Name-In-Cyc Pipe-Generic-Conduit "#$Pipe-GenericConduit")
             (Existing-Object-Type Pipe-Generic-Conduit)
             (Subclass-Of Pipe-Generic-Conduit Flow-Path)
             (Subclass-Of Pipe-Generic-Conduit Solid-Tangible-Thing)
             (Set-Or-Collection Pipe-Generic-Conduit)
             (Arity Pipe-Generic-Conduit 1)
             (Documentation Pipe-Generic-Conduit
              "The collection of all enclosed tubular fluid conduits with openings at both ends.  Pipe-Generic-Conduit encompasses both human-made pipes as well as natural pipes, found naturally occurring in the environment, or found in an organism's body, like Blood-Vessels."))

(defrelation Modern-Shelter-Construction
             (Name-In-Cyc Modern-Shelter-Construction
              "#$ModernShelterConstruction")
             (Existing-Object-Type Modern-Shelter-Construction)
             (Subclass-Of Modern-Shelter-Construction Building)
             (Set-Or-Collection Modern-Shelter-Construction)
             (Arity Modern-Shelter-Construction 1)
             (Documentation Modern-Shelter-Construction
              "A collection of construction artifacts; a subset of Building (q.v.).  An instance of Modern-Shelter-Construction is a building that provides comfortable shelter for humans during some of their daily activities.  Elements of Modern-Shelter-Construction have the kinds of features found in modern-day buildings in Europe, the USA, and other technologically developed parts of the world, namely, amenities like doors, plumbing, electricity, and probably some kind of climate control system for maintaining humanly comfortable conditions Indoors.  Examples include the New-York-Hilton-At-Broadway, the Sydney-Opera-House, and instances of the collection Modern-Human-Residence (e.g., a newly built home in a suburban development or a renovated brownstone in NYC)."))

(defrelation Rain-Process
             (Name-In-Cyc Rain-Process "#$RainProcess")
             (Temporal-Stuff-Type Rain-Process)
             (Default-Disjoint-Script-Type Rain-Process)
             (Subclass-Of Rain-Process Precipitation-Process)
             (Set-Or-Collection Rain-Process)
             (Arity Rain-Process 1)
             (Documentation Rain-Process
              "The collection of events in which the condensed liquid water in clouds forms droplets (or ice cystals which subsequently melt) substantial enough to fall to the surface of the earth."))

(defrelation Migratory-Animal
             (Name-In-Cyc Migratory-Animal "#$MigratoryAnimal")
             (Existing-Object-Type Migratory-Animal)
             (Subclass-Of Migratory-Animal Animal)
             (Set-Or-Collection Migratory-Animal)
             (Arity Migratory-Animal 1)
             (Documentation Migratory-Animal
              "A subset of Animal; the collection of animals that change their dwelling place on a periodic, typically seasonal basis.  Such behavior is usually characteristic of particular types of Biological-Species."))

(defrelation Commercial-Organization
             (Name-In-Cyc Commercial-Organization "#$CommercialOrganization")
             (Existing-Object-Type Commercial-Organization)
             (Subclass-Of Commercial-Organization Organization)
             (Set-Or-Collection Commercial-Organization)
             (Arity Commercial-Organization 1)
             (Documentation Commercial-Organization
              "A collection of organizations.  An element of Commercial-Organization is an organization which buys or sells goods or services for a profit.  It may also be an element of Business or it may merely be a sub-organization of a Business entity."))

(defrelation |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "LINEAR-SIZE")|
             (Arg2-Isa
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "LINEAR-SIZE")|
              Distance)
             (Skolem-Object
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "LINEAR-SIZE")|)
             (Physical-Amount-Slot
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "LINEAR-SIZE")|)
             (Slot
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "LINEAR-SIZE")|)
             (Relation
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "LINEAR-SIZE")|)
             (Arity
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "LINEAR-SIZE")| 2)
             (Binary-Relation
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "LINEAR-SIZE")|))

(defrelation Workplace
             (Name-In-Cyc Workplace "#$Workplace")
             (Contact-Location-Type Workplace)
             (Subclass-Of Workplace Physical-Contact-Location)
             (Subclass-Of Workplace Humanly-Occupied-Spatial-Object)
             (Set-Or-Collection Workplace)
             (Arity Workplace 1)
             (Documentation Workplace
              "The collection of places where people customarily work (not the employing organizations).  Workplace includes offices, restaurant buildings, construction sites, agricultural sites, the Space-Needle, etc.  Some places may be Workplaces only during a small part of their existence (a piece of residential property while the house is being built, perhaps); some may almost always be Workplaces (grocery store buildings, office buildings, smithies, hospitals, etc.)."))

(defobject Solid-State-Of-Matter
   (State-Of-Matter-Solid-Liquid-Gaseous Solid-State-Of-Matter)
   (Name-In-Cyc Solid-State-Of-Matter "#$SolidStateOfMatter")
   (Documentation Solid-State-Of-Matter
    "One of the basic physical states of matter.  Solid objects are characterized at the macroscopic level by definite, persistent boundaries, independent of container.  Examples of things that typically have this Attribute-Value are: a piece of wood, a lump of coal, a quartz crystal, a gold ingot stored in Fort Knox, a human skull."))

(defrelation Person-By-Activity-Type
             (Name-In-Cyc Person-By-Activity-Type "#$PersonByActivityType")
             (Collection Person-By-Activity-Type)
             (Subclass-Of Person-By-Activity-Type Existing-Object-Type)
             (Set-Or-Collection Person-By-Activity-Type)
             (Arity Person-By-Activity-Type 1)
             (Documentation Person-By-Activity-Type
              "A collection of collections.  Each element of Person-By-Activity-Type is a collection which classifies people by some kind of activity that an individual does regularly.  Some examples are: Student, Tourist, and Horn-Player.  If the differentiating activity is one that can be done as a career or job, it is preferable to make that collection an element of the more specific Occupation-Type (q.v.)."))

(defrelation Looking-For-Something
             (Name-In-Cyc Looking-For-Something "#$LookingForSomething")
             (Temporal-Stuff-Type Looking-For-Something)
             (Default-Disjoint-Script-Type Looking-For-Something)
             (Subclass-Of Looking-For-Something Purposeful-Action)
             (Set-Or-Collection Looking-For-Something)
             (Arity Looking-For-Something 1)
             (Documentation Looking-For-Something
              "Searching for something with the intent to find it.  Instances of failure to find the object of the search are still instances of Looking-For-Something."))

(defrelation Plant-Non-Woody
             (Name-In-Cyc Plant-Non-Woody "#$Plant-NonWoody")
             (Existing-Object-Type Plant-Non-Woody)
             (Subclass-Of Plant-Non-Woody Plant)
             (Set-Or-Collection Plant-Non-Woody)
             (Arity Plant-Non-Woody 1)
             (Documentation Plant-Non-Woody
              "The collection of non-woody, herbaceous Plants.  Those Plants such as grasses, herbs, wildflowers, etc. which are fairly low-growing, often annual, and don't grow woody stems.  Excludes large, hard bamboos, and Balsa."))

(defrelation Wild-Animal
             (Name-In-Cyc Wild-Animal "#$WildAnimal")
             (Existing-Object-Type Wild-Animal)
             (Subclass-Of Wild-Animal Non-Person-Animal)
             (Set-Or-Collection Wild-Animal)
             (Arity Wild-Animal 1)
             (Documentation Wild-Animal
              "The collection of all animals that are not domesticated or tame.  Note that a captive animal may still be a wild animal, e.g., zoo animals that are not tame or domesticated.  Cf. Captive-Animal, Domesticated-Animal."))

(deffunction There-Exist-At-Most
   (Nth-Domain There-Exist-At-Most 1 Positive-Integer)
   (Nth-Domain There-Exist-At-Most 2 Cyc-El-Variable)
   (Nth-Domain There-Exist-At-Most 3 Cyc-Formula)
   (Result-Instance-Of There-Exist-At-Most Cyc-Formula)
   (Name-In-Cyc There-Exist-At-Most "#$thereExistAtMost")
   (Quantifier There-Exist-At-Most)
   (Relationship There-Exist-At-Most)
   (Function There-Exist-At-Most)
   (Arity There-Exist-At-Most 3)
   (Function-Arity There-Exist-At-Most 2)
   (Documentation There-Exist-At-Most
    "The predicate There-Exist-At-Most is a specialized form of :Exists (q.v.).  (There-Exist-At-Most 5 X FORM) means that there are no more than five distinct objects in the (relevant)  universe of discourse which, when substituted for the Cyc-EL-Variable X in the Cyc-Formula FORM, make FORM true.  See :Exists for more information about existential quantification."))

(defrelation Helicopter
             (Name-In-Cyc Helicopter "#$Helicopter")
             (Product-Type Helicopter)
             (Existing-Object-Type Helicopter)
             (Subclass-Of Helicopter Transportation-Device-Vehicle)
             (Subclass-Of Helicopter Container-Product)
             (Subclass-Of Helicopter Air-Transportation-Device)
             (Set-Or-Collection Helicopter)
             (Arity Helicopter 1)
             (Documentation Helicopter
              "The collection of rotary wing, self-powered mechanical devices that fly."))

(defrelation Canoe
             (Name-In-Cyc Canoe "#$Canoe")
             (Product-Type Canoe)
             (Existing-Object-Type Canoe)
             (Subclass-Of Canoe Boat-Water-Transportation-Device)
             (Subclass-Of Canoe Device-User-Powered)
             (Set-Or-Collection Canoe)
             (Arity Canoe 1)
             (Documentation Canoe
              "The collection of all canoes, small, narrow watercraft that are powered by human paddling, poling or by a small boat-engine."))

(defrelation Quasi-Ordered-Set
             (Name-In-Cyc Quasi-Ordered-Set "#$QuasiOrderedSet")
             (Object-Type Quasi-Ordered-Set)
             (Subclass-Of Quasi-Ordered-Set Set-With-Structure)
             (Set-Or-Collection Quasi-Ordered-Set)
             (Arity Quasi-Ordered-Set 1)
             (Documentation Quasi-Ordered-Set
              "The collection of all quasiordered sets (also called quasiorders, semiorders, quosets or pseudo-ordered sets), each being a Set-With-Structure consisting of a set together with a quasiordering relation on that set.   Mathematical Partially-Ordered-Sets, including directed chains, trees, forests, and lattices, are special cases of Quasi-Ordered-Set, but unlike the former, Quasi-Ordered-Sets can have relational cycles.  The quasiordering relation is defined on the associated set, and is transitive on that set and reflexive on that set (it need not be antisymmetric, asymmetric or symmetric on that set).   Sometimes the members of the Quasi-Ordered-Set are called its nodes, and the non-redundant (transitively reduced) pairwise relations between the nodes are called its links.  A Quasi-Ordered-Set may be finite or infinite, and connected or unconnected.  (Note: A Quasi-Ordered-Set is not a Set-Or-Collection, rather it is a Set-With-Structure that has an associated Set-Or-Collection.)"))

(defrelation Street-Address
             (Name-In-Cyc Street-Address "#$StreetAddress")
             (Object-Type Street-Address)
             (Subclass-Of Street-Address Address-Location-Designator)
             (Set-Or-Collection Street-Address)
             (Arity Street-Address 1)
             (Documentation Street-Address
              "A collection of strings. Each element of Street-Address is a string that denotes a street number and street name.  For example, `3721 Executive Center Drive', the street address of Cycorp."))

(defrelation Intangible-Existing-Thing
             (Name-In-Cyc Intangible-Existing-Thing
              "#$IntangibleExistingThing")
             (Existing-Stuff-Type Intangible-Existing-Thing)
             (Object-Type Intangible-Existing-Thing)
             (Subclass-Of Intangible-Existing-Thing Intangible-Individual)
             (Subclass-Of Intangible-Existing-Thing Partially-Intangible)
             (Set-Or-Collection Intangible-Existing-Thing)
             (Arity Intangible-Existing-Thing 1)
             (Documentation Intangible-Existing-Thing
              "The set of things which are intangible yet exist in time.  E.g., the code of conduct for a formal dinner party, the standards for acceptance to Caltech as an undergrad, an account at Sears, etc."))

(defrelation Gulf
             (Name-In-Cyc Gulf "#$Gulf")
             (Existing-Object-Type Gulf)
             (Subclass-Of Gulf Body-Of-Water)
             (Set-Or-Collection Gulf)
             (Arity Gulf 1)
             (Documentation Gulf
              "A collection of topographical features.  Each element of Gulf is a part of a sea extending into a land mass.  Many gulfs are the outlet for a large river system.   Examples of Gulf include the Saronic-Gulf, Gulf-Of-Mexico, Gulf-Of-Arkangelsk, Gulf-Of-California, and Persian-Gulf."))

(defrelation Outer-Garment
             (Name-In-Cyc Outer-Garment "#$OuterGarment")
             (Product-Type Outer-Garment)
             (Existing-Object-Type Outer-Garment)
             (Subclass-Of Outer-Garment Clothing-Item)
             (Set-Or-Collection Outer-Garment)
             (Arity Outer-Garment 1)
             (Documentation Outer-Garment
              "A collection of objects; a subset of Clothing-Item.  Each element of Outer-Garment is a piece of clothing that is worn outside of other garments.  A common purpose of outer garments is protection (e.g., the subsets Rain-Coat, Apron).  An outer garment may also be a robe of office or position, such as an academic gown or a bishop's mantle."))

(defrelation Water-Saline
             (Liquid-Fn Water-Saline |(LIQUID-FN WATER-SALINE)|)
             (Name-In-Cyc Water-Saline "#$Water-Saline")
             (Tangible-Stuff-Composition-Type Water-Saline)
             (Subclass-Of Water-Saline Water)
             (Set-Or-Collection Water-Saline)
             (Arity Water-Saline 1)
             (Documentation Water-Saline
              "A collection of tangible things; a subset of Water.  Each element of Water-Saline is a portion of water with some substantial concentration of salt mixed into it.  For example, the Red-Sea, Great-Salt-Lake, or the salt water I mix up for gargling."))

(defrelation Credit-Card
             (Name-In-Cyc Credit-Card "#$CreditCard")
             (Money-Tender-Type Credit-Card)
             (Subclass-Of Credit-Card Tender-Object)
             (Subclass-Of Credit-Card Card)
             (Subclass-Of Credit-Card Id-Document)
             (Subclass-Of Credit-Card Official-Document)
             (Subclass-Of Credit-Card Financial-Account-Tender-Object)
             (Set-Or-Collection Credit-Card)
             (Arity Credit-Card 1)
             (Documentation Credit-Card
              "A collection of plastic cards.  Each element of Credit-Card is a piece of plastic that enables authorized users to spend the card-issuing company's money, drawn as a (usually unsecured) loan through an associated instance of Credit-Card-Account under a pre-arranged credit agreement.  The credit card company credits the vendor of the purchased goods or services and bills the card user, usually with interest."))

(defrelation Inter-Arg-Isa4-1
             (Nth-Domain Inter-Arg-Isa4-1 1 Predicate)
             (Nth-Domain Inter-Arg-Isa4-1 2 Collection)
             (Nth-Domain Inter-Arg-Isa4-1 3 Collection)
             (Name-In-Cyc Inter-Arg-Isa4-1 "#$interArgIsa4-1")
             (Ternary-Predicate Inter-Arg-Isa4-1)
             (Relation Inter-Arg-Isa4-1)
             (Arity Inter-Arg-Isa4-1 3)
             (Documentation Inter-Arg-Isa4-1
              "(Inter-Arg-Isa4-1 PRED INDEPENDENT-ARG-COL DEPENDENT-ARG-COL) Base-KB) means that, when an instance of INDEPENDENT-ARG-COL appears as the fourth argument to PRED, the first argument in that assertion is constrained to be an instance of DEPENDENT-ARG-COL."))

(defobject Different
   (Commutative-Relation Different)
   (Variable-Arity-Relation Different)
   (Evaluatable-Function Different)
   (Predicate Different)
   (Args-Isa Different Thing)
   (Name-In-Cyc Different "#$different")
   (Documentation Different
    "The variable-arity predicate Different is used to state the non-identity of two or more objects. (Different X1 X2 ... Xn) means that each Xi given as an argument is not equal to any of the other Xi's.  Different is an element of Evaluatable-Function (q.v.).  See also Equals.



Different can be used to simplify formulas when several things need to be tested for mutual inequality."))

(defrelation Bird
             (Name-In-Cyc Bird "#$Bird")
             (Biological-Class Bird)
             (Subclass-Of Bird Vertebrate)
             (Subclass-Of Bird Non-Person-Animal)
             (Subclass-Of Bird Terrestrial-Organism)
             (Set-Or-Collection Bird)
             (Arity Bird 1)
             (Documentation Bird
              "The collection of birds; a subset of Vertebrate.  Each element of Bird is an air-breathing, warm-blooded animal, covered with feathers, having forelimbs modified as wings and a beak rather than teeth.  Members of most, but not all, species of bird can fly.  Bird is an instance of Biological-Class."))

(defrelation |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "PHYSICAL-MATERIAL")|
             (Skolem-Object
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "PHYSICAL-MATERIAL")|)
             (Collection
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "PHYSICAL-MATERIAL")|)
             (Subclass-Of
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "PHYSICAL-MATERIAL")|
              Thing)
             (Set-Or-Collection
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "PHYSICAL-MATERIAL")|)
             (Arity
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "PHYSICAL-MATERIAL")|
              1))

(defrelation Mass-Noun
             (Name-In-Cyc Mass-Noun "#$MassNoun")
             (Linguistic-Object-Type Mass-Noun)
             (Subclass-Of Mass-Noun Speech-Part)
             (Set-Or-Collection Mass-Noun)
             (Arity Mass-Noun 1)
             (Documentation Mass-Noun
              "The collection of all mass nouns.  Mass nouns are syntactically singular, and often they denote stufflike things. Example: 'water'."))

(defrelation Business-Event
             (Name-In-Cyc Business-Event "#$BusinessEvent")
             (Temporal-Object-Type Business-Event)
             (Default-Disjoint-Script-Type Business-Event)
             (Subclass-Of Business-Event Composite-Physical-And-Mental-Event)
             (Set-Or-Collection Business-Event)
             (Arity Business-Event 1)
             (Documentation Business-Event
              "A collection of events.  Each element of Business-Event is an intentional occurrence that is closely associated with, and either helps or hinders, the business purpose of some agent.  Examples include: the development of General Motors' business plan for 1996; an individual sales call on a particular customer; printing the 1996 Yellow Pages directory for the Austin, TX, area; selling a newspaper; designing and manufacturing a new memory chip.  Business-Event does NOT include purely social or recreational occurrences."))

(defrelation Humid-Continental-Climate-Cycle
             (Name-In-Cyc Humid-Continental-Climate-Cycle
              "#$HumidContinentalClimateCycle")
             (Climate-Cycle-Type Humid-Continental-Climate-Cycle)
             (Subclass-Of Humid-Continental-Climate-Cycle
              Temperate-Climate-Cycle)
             (Subclass-Of Humid-Continental-Climate-Cycle Humid-Climate-Cycle)
             (Set-Or-Collection Humid-Continental-Climate-Cycle)
             (Arity Humid-Continental-Climate-Cycle 1)
             (Documentation Humid-Continental-Climate-Cycle
              "A collection of annual climate cycles.  Each element of Humid-Continental-Climate-Cycle is a year-long event consisting of weather occurring (typically) in continental interiors within a temperate climate zone.  Characteristics of a humid continental climate cycle include a warm summer and cold winter, with precipitation throughout.  A good example of a region whose annual climate cycles are instances of Humid-Continental-Climate-Cycle is the American Midwest.  Cf. Humid-Subtropical-Climate-Cycle."))

(defrelation Art-Object
             (Name-In-Cyc Art-Object "#$ArtObject")
             (Existing-Object-Type Art-Object)
             (Subclass-Of Art-Object Product)
             (Subclass-Of Art-Object Artifact)
             (Subclass-Of Art-Object Composite-Tangible-And-Intangible-Object)
             (Subclass-Of Art-Object Information-Bearing-Object)
             (Set-Or-Collection Art-Object)
             (Arity Art-Object 1)
             (Documentation Art-Object
              "A collection of information bearing objects (IBOs).  Each element of Art-Object is a tangible object that is a work, or a reproduction of a work, in one of the representational or plastic arts, such as a painting, sculpture, ceramic piece, quilt, stained glass composition, etc.  Art-Object does NOT include plays, movies, music, performance art, or other activities.  Art-Object is a subset of Information-Bearing-Object, but its elements need not have propositional content, although they may.  Examples of Art-Object: the Statue-Of-Liberty, the Mona Lisa, a poster reproduction of Van Gogh's `Starry Night', Rodin's `Burghers of Calais', a piece of Ju ware from the Sung Dynasty, the windows of Chartres Cathedral, a series of prints by Picasso."))

(defrelation Individual-Denoting-Function
             (Name-In-Cyc Individual-Denoting-Function
              "#$IndividualDenotingFunction")
             (Relationship-Type Individual-Denoting-Function)
             (Subclass-Of Individual-Denoting-Function Non-Predicate-Function)
             (Set-Or-Collection Individual-Denoting-Function)
             (Arity Individual-Denoting-Function 1)
             (Documentation Individual-Denoting-Function
              "The collection of all Cyc functions which return elements of Individual.  Examples: Perimeter-Fn, Interior-Fn, Goal-Fn, Medal-Award-Ceremony-Fn, all return particular individuals when applied to their proper arguments; e.g., (Interior-Fn Lincoln-Memorial-In-Washington-DC) designates the particular space inside the Lincoln Memorial.  Cf. Collection-Denoting-Function."))

(defobject |(VERY-LOW-AMOUNT-FN SHEAR-STRENGTH)|
   (Scalar-Interval |(VERY-LOW-AMOUNT-FN SHEAR-STRENGTH)|)
   (Shear-Strength |(VERY-LOW-AMOUNT-FN SHEAR-STRENGTH)|)
   (Skolem-Object |(VERY-LOW-AMOUNT-FN SHEAR-STRENGTH)|))

(defrelation Inter-Arg-Isa5-4
             (Nth-Domain Inter-Arg-Isa5-4 1 Quintary-Predicate)
             (Nth-Domain Inter-Arg-Isa5-4 2 Collection)
             (Nth-Domain Inter-Arg-Isa5-4 3 Collection)
             (Name-In-Cyc Inter-Arg-Isa5-4 "#$interArgIsa5-4")
             (Ternary-Predicate Inter-Arg-Isa5-4)
             (Relation Inter-Arg-Isa5-4)
             (Arity Inter-Arg-Isa5-4 3)
             (Documentation Inter-Arg-Isa5-4
              "(Inter-Arg-Isa5-4 PRED INDEPENDENT-ARG-COL DEPENDENT-ARG-COL) Base-KB) means that, when an instance of INDEPENDENT-ARG-COL appears as the fifth argument to PRED, the fourth argument in that assertion is constrained to be an instance of DEPENDENT-ARG-COL."))

(defrelation Warranty
             (Name-In-Cyc Warranty "#$Warranty")
             (Existing-Object-Type Warranty)
             (Subclass-Of Warranty Authorized-Agreement)
             (Set-Or-Collection Warranty)
             (Arity Warranty 1)
             (Documentation Warranty
              "A collection of agreements; a subset of Authorized-Agreement.  Each element of Warranty is an agreement between the seller (and/or manufacturer) and the purchaser of some object or service.  In a warranty, the seller/manufacturer promises that the object or service will be satisfactory in some indicated way (e.g., free of defects, effective, etc.).  Usually a warranty specifies what compensation an unsatisfied purchaser is entitled to (e.g., free repairs, a refund), and how s/he can claim it."))

(defrelation Taking-Off-A-Clothing-Item
             (Name-In-Cyc Taking-Off-A-Clothing-Item
              "#$TakingOffAClothingItem")
             (Temporal-Object-Type Taking-Off-A-Clothing-Item)
             (Default-Disjoint-Script-Type Taking-Off-A-Clothing-Item)
             (Subclass-Of Taking-Off-A-Clothing-Item Removing-Something)
             (Subclass-Of Taking-Off-A-Clothing-Item Human-Activity)
             (Subclass-Of Taking-Off-A-Clothing-Item Handling-An-Object)
             (Set-Or-Collection Taking-Off-A-Clothing-Item)
             (Arity Taking-Off-A-Clothing-Item 1)
             (Documentation Taking-Off-A-Clothing-Item
              "A collection of events.  Each element of Taking-Off-A-Clothing-Item is an event in which something being worn is removed, either by the wearer or by someone else (e.g., removing a child's boots or a horse's saddle).  After an element of Taking-Off-A-Clothing-Item occurs, the situation (an element of Wearing-Something) in which the item was being Worn-On the body is over."))

(defrelation Encrypting
             (Name-In-Cyc Encrypting "#$Encrypting")
             (Temporal-Object-Type Encrypting)
             (Subclass-Of Encrypting Ibt-Recoding)
             (Set-Or-Collection Encrypting)
             (Arity Encrypting 1)
             (Documentation Encrypting
              "The collection of actions in which some transformation is applied to an IBT (Information-Bearing-Thing) which renders it unaccessible to all but the intended audience, since the method required to decrypt the IBT is secret."))

(defrelation Formal-Coc
             (Name-In-Cyc Formal-Coc "#$FormalCOC")
             (Existing-Object-Type Formal-Coc)
             (Microtheory-Type Formal-Coc)
             (Subclass-Of Formal-Coc Code-Of-Conduct)
             (Set-Or-Collection Formal-Coc)
             (Arity Formal-Coc 1)
             (Documentation Formal-Coc
              "A collection of microtheories; a subset of Code-Of-Conduct.  Each element of Formal-COC is a  code of conduct which is imposed by an organization.   Formal codes of conduct typically are explicitly stated and publicly promulgated among the group subject to them; also, they are associated with prescribed methods of enforcement and punishment of violators.  Thus, the collection Formal-COC includes the laws of any legal jurisdiction, the rules of deportment imposed by educational institutions, the practices of some strict religious sects, etc.   In contrast, informal codes of conduct are norms that are not prescribed or enforced by formal means; for example, etiquette (Manners-Code-Of-Conduct) and ethics (Ethics-Code-Of-Conduct)."))

(defrelation |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "TEMPORAL-NONINCLUSIVE")|
             (Skolem-Object
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "TEMPORAL-NONINCLUSIVE")|)
             (Slot
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "TEMPORAL-NONINCLUSIVE")|)
             (Relation
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "TEMPORAL-NONINCLUSIVE")|)
             (Arity
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "TEMPORAL-NONINCLUSIVE")|
              2)
             (Binary-Relation
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "TEMPORAL-NONINCLUSIVE")|))

(defrelation Attitude-Towards-Event
             (Nth-Domain Attitude-Towards-Event 1 Animal)
             (Nth-Domain Attitude-Towards-Event 2 Event)
             (Nth-Domain Attitude-Towards-Event 3 Feeling-Attribute-Type)
             (Nth-Domain Attitude-Towards-Event 4 Generic-Attribute)
             (Nth-Domain-Subclass-Of Attitude-Towards-Event 3
              Feeling-Attribute)
             (Name-In-Cyc Attitude-Towards-Event "#$attitudeTowardsEvent")
             (Quaternary-Predicate Attitude-Towards-Event)
             (Relation Attitude-Towards-Event)
             (Arity Attitude-Towards-Event 4)
             (Documentation Attitude-Towards-Event
              "Attitude-Towards-Event(AGT EVT EMOTYPE DEGREE) means that the Sentient-Animal AGT has the attitude EMOTYPE (see Feeling-Attribute-Type) about the Event EVT with DEGREE of intensity.  By `attitude' we mean a feeling which may be latent and/or long-lasting.  To refer to feelings that AGT experiences immediately and consciously towards EVT, use Feels-Towards-Event."))

(defrelation Bicycle
             (Transport-Via-Fn Bicycle |(TRANSPORT-VIA-FN BICYCLE)|)
             (Name-In-Cyc Bicycle "#$Bicycle")
             (Existing-Object-Type Bicycle)
             (Subclass-Of Bicycle Land-Transportation-Device)
             (Subclass-Of Bicycle Device-User-Powered)
             (Set-Or-Collection Bicycle)
             (Arity Bicycle 1)
             (Documentation Bicycle
              "The collection of all bicycles, personal wheeled transport devices powered by human peddling.   Most Bicycles have two main wheels arranged in-line, but some tandem bicycles have more than two wheels."))

(defrelation Food-Or-Drink-Preparation-Device
             (Name-In-Cyc Food-Or-Drink-Preparation-Device
              "#$FoodOrDrinkPreparationDevice")
             (Existing-Object-Type Food-Or-Drink-Preparation-Device)
             (Subclass-Of Food-Or-Drink-Preparation-Device Hoc-Object)
             (Subclass-Of Food-Or-Drink-Preparation-Device Physical-Device)
             (Set-Or-Collection Food-Or-Drink-Preparation-Device)
             (Arity Food-Or-Drink-Preparation-Device 1)
             (Documentation Food-Or-Drink-Preparation-Device
              "A collection of objects; a subset of Physical-Device.  An instance of Food-Or-Drink-Preparation-Device is a device whose Primary-Function is to prepare food or drink somehow, such as a colander, a spice mill or a pot."))

(defrelation Reference-Work
             (Name-In-Cyc Reference-Work "#$ReferenceWork")
             (Existing-Object-Type Reference-Work)
             (Subclass-Of Reference-Work Textual-Material)
             (Set-Or-Collection Reference-Work)
             (Arity Reference-Work 1)
             (Documentation Reference-Work
              "The set of all documents that provide a more or less non-speculative, `fact-oriented,' comprehensive description of some knowledge domain."))

(defrelation Sibling-Disjoint-Collection
             (Name-In-Cyc Sibling-Disjoint-Collection
              "#$SiblingDisjointCollection")
             (Collection Sibling-Disjoint-Collection)
             (Subclass-Of Sibling-Disjoint-Collection Collection)
             (Set-Or-Collection Sibling-Disjoint-Collection)
             (Arity Sibling-Disjoint-Collection 1)
             (Documentation Sibling-Disjoint-Collection
              "Sibling-Disjoint-Collection captures a very important concept, but one that is rarely given a name.  There are many sets of sets for which any two member sets either will be disjoint (i.e., have no intersection) or else one will be a subset of the other.  For instance, consider the various types (i.e., sets) of animals in the usual Linnaean taxonomy:  Vertebrate, Bird, Dog, Mammal, Invertebrate, Person, etc.; Vertebrates and Invertebrates are mutually disjoint, while Bird, Mammal, Dog, and Person are all subsets of Vertebrate.  Dog and Person are disjoint with each other, but each of them is a subset of Vertebrate.  All of the Linnaean sets, or collections, of animals can be grouped together into one set, or collection, of sets, which in turn is an instance of Sibling-Disjoint-Collection.   
It turns out that the real situation --- and the real definition of Sibling-Disjoint-Collection --- is slightly more complicated than that.  Consider types of appliances: toasters, cars, shavers, clocks, etc.  Is the set of such appliance-types a Sibling-Disjoint-Collection, the way we defined it above, for types of animals?  Almost, but not quite.  One could have an appliance-type `ClockRadio', which would be the set of all clock radios, and clearly each clock radio is both a clock and a radio, yet neither Clock nor Radio-Receiver is a subset of the other.  So if we have some item that purports to be both a clock and radio, that is okay if one of the following three conditions is met:
(1) the collection Clock is known to be a subset of Radio-Receiver;
(2) the collection Radio-Receiver is known to be a subset of Clock;
(3) there is already defined a collection X which is a subset of both Clock and Radio-Receiver.
More formally, the axiom that defines Sibling-Disjoint-Collection is as follows: SIB is an element of Sibling-Disjoint-Collection if and only if:
(:=>
   (:and 
       (:Direct-Types C1 SIB) 
       (:Direct-Types C2 SIB) (:Direct-Types C1-EL C1)
       (Different C1 C2))
   (:or 
       (:not (:Direct-Types C1-EL C2)) 
       (:Exists C3 (:and (:Direct-Superclasses C3 C2) (:Direct-Superclasses C3 C1) (:Direct-Types C1-EL C3)))))
That axiom, together with the minimization of :Direct-Superclasses, gives us the following characterization of our concept:  If we have a collection SIB that is an element of Sibling-Disjoint-Collection, and if we take two elements C1 and C2 of that collection SIB, then each element of C1 which is not an element of a common specialization (C3) of C1 and C2, MUST NOT BE an element of C2.
In cases where there are a few exceptions --- that is, a couple of elements of SIB might have some overlap --- but it is undesirable to explicitly create a new reified constant (like `ClockRadio', above) for that intersection, Cyc allows you to use an explicit mechanism to override the Sibling-Disjoint-Collection constraints for a particular C1 and C2; namely, you would assert to Cyc (Sibling-Disjoint-Exceptions C1 C2).  See also Sibling-Disjoint-Exceptions."))

(defrelation Inside-Surface
             (Name-In-Cyc Inside-Surface "#$InsideSurface")
             (Region-Type Inside-Surface)
             (Subclass-Of Inside-Surface Surface-Physical)
             (Set-Or-Collection Inside-Surface)
             (Arity Inside-Surface 1)
             (Documentation Inside-Surface
              "The collection of all inside surfaces of (surfaces of the interiors of) tangible things.  The tangible thing may have a Cavity or several cavities or passageways.  Often the tangible thing can be thought of as a container of some sort."))

(defrelation Bottom-Side
             (Name-In-Cyc Bottom-Side "#$BottomSide")
             (Region-Type Bottom-Side)
             (Subclass-Of Bottom-Side Side)
             (Set-Or-Collection Bottom-Side)
             (Arity Bottom-Side 1)
             (Documentation Bottom-Side
              "The collection of all the entire bottom sides (as conventionally understood) of all objects that have distinct Sides, one of which faces down."))

(defrelation Putting-On-A-Clothing-Item
             (Name-In-Cyc Putting-On-A-Clothing-Item
              "#$PuttingOnAClothingItem")
             (Temporal-Object-Type Putting-On-A-Clothing-Item)
             (Default-Disjoint-Script-Type Putting-On-A-Clothing-Item)
             (Subclass-Of Putting-On-A-Clothing-Item Human-Activity)
             (Subclass-Of Putting-On-A-Clothing-Item Handling-An-Object)
             (Set-Or-Collection Putting-On-A-Clothing-Item)
             (Arity Putting-On-A-Clothing-Item 1)
             (Documentation Putting-On-A-Clothing-Item
              "A collection of events.  Each element of Putting-On-A-Clothing-Item is an event in which some wearable item is donned.  Such an event may be performed either by the wearer or by someone else (e.g., putting on a horse's bridle or a child's mittens).  After an element of Putting-On-A-Clothing-Item occurs, there exists an element of Wearing-Something (q.v.), i.e., the situation in which the item donned is Worn-On the body of the wearer."))

(defrelation Code-Of-Conduct
             (Name-In-Cyc Code-Of-Conduct "#$CodeOfConduct")
             (Existing-Object-Type Code-Of-Conduct)
             (Microtheory-Type Code-Of-Conduct)
             (Subclass-Of Code-Of-Conduct Supposed-To-Be-Microtheory)
             (Subclass-Of Code-Of-Conduct Intangible-Existing-Thing)
             (Set-Or-Collection Code-Of-Conduct)
             (Arity Code-Of-Conduct 1)
             (Documentation Code-Of-Conduct
              "A collection of microtheories; a subset of both Obligation and Supposed-To-Be-Microtheory.  Each element of Code-Of-Conduct is a microtheory which contains rules and/or expectations governing the behavior of those agents subject to it in certain kinds of situations."))

(defrelation Device-User-Powered
             (Transport-Via-Fn Device-User-Powered
              |(TRANSPORT-VIA-FN DEVICE-USER-POWERED)|)
             (Name-In-Cyc Device-User-Powered "#$Device-UserPowered")
             (Existing-Object-Type Device-User-Powered)
             (Subclass-Of Device-User-Powered Solid-Tangible-Thing)
             (Subclass-Of Device-User-Powered Muscle-Powered-Device)
             (Set-Or-Collection Device-User-Powered)
             (Arity Device-User-Powered 1))

(defrelation Primary-Function
             (Nth-Domain Primary-Function 1 Artifact)
             (Nth-Domain Primary-Function 2 Collection)
             (Nth-Domain Primary-Function 3 Role)
             (Nth-Domain-Subclass-Of Primary-Function 2 Situation)
             (Subrelation-Of Primary-Function Intended-Behavior-Capable)
             (Name-In-Cyc Primary-Function "#$primaryFunction")
             (Ternary-Predicate Primary-Function)
             (Relation Primary-Function)
             (Arity Primary-Function 3)
             (Documentation Primary-Function
              "The predicate Primary-Function is used to indicate what an artifact was primarily designed to do.  (Primary-Function ART SITTYPE ROLE) means that the primary function of the Artifact OBJ is to serve as described by ROLE in situations of the type SITTYPE.  Examples: the Primary-Function of instances of Mammography-Facility is to be the Provider-Of-Service in instances of Mammographic-Breast-Cancer-Screening; the Primary-Function of a pump is to be the Provider-Of-Motive-Force in instances of Transporting-Goods in which liquids are transported.
Note: in the Simple-Device-Functioning-Mt, it is assumed that every Physical-Device has only one primary function."))

(defrelation Surface-Physical
             (Name-In-Cyc Surface-Physical "#$Surface-Physical")
             (Existing-Object-Type Surface-Physical)
             (Subclass-Of Surface-Physical Surface-Generic)
             (Subclass-Of Surface-Physical Partially-Tangible)
             (Set-Or-Collection Surface-Physical)
             (Arity Surface-Physical 1)
             (Documentation Surface-Physical
              "The collection of all of real physical (hence technically three-dimensional) surfaces.  The thickness of a Surface-Physical is much less than its average length or width, but it is not of zero thickness.  A Surface-Physical may have holes, tears, and may be unconnected, in multiple pieces."))

(defobject |(LOW-AMOUNT-FN SHEAR-STRENGTH)|
   (Scalar-Interval |(LOW-AMOUNT-FN SHEAR-STRENGTH)|)
   (Shear-Strength |(LOW-AMOUNT-FN SHEAR-STRENGTH)|)
   (Skolem-Object |(LOW-AMOUNT-FN SHEAR-STRENGTH)|))

(defrelation Legal-Agreement
             (Name-In-Cyc Legal-Agreement "#$LegalAgreement")
             (Existing-Object-Type Legal-Agreement)
             (Subclass-Of Legal-Agreement Agreement)
             (Set-Or-Collection Legal-Agreement)
             (Arity Legal-Agreement 1)
             (Documentation Legal-Agreement
              "A collection of microtheories; a subset of Agreement.  Each element of Legal-Agreement is an agreement which has a legal status, i.e., is recognized as a valid agreement by a government.  Legal-Agreement includes the elements in its subsets Sales-Contract, Public-Health-Regulations, Assumable-Loan, Patent, Insurance-Plan, Visa-Permit, and the different kinds of License -- among many others."))

(defrelation Passport
             (Name-In-Cyc Passport "#$Passport")
             (Existing-Object-Type Passport)
             (Subclass-Of Passport Id-Document)
             (Subclass-Of Passport Official-Document)
             (Set-Or-Collection Passport)
             (Arity Passport 1)
             (Documentation Passport
              "A collection of official documents.  Each element of Passport is a document issued to a person by a national government in order to identify that person as a citizen of said country while s/he is travelling across or outside of that country's borders."))

(defrelation English-Word
             (Name-In-Cyc English-Word "#$EnglishWord")
             (Linguistic-Object-Type English-Word)
             (Subclass-Of English-Word Lexical-Word)
             (Set-Or-Collection English-Word)
             (Arity English-Word 1)
             (Documentation English-Word
              "The collection of all lexical words in English; a subset of Lexical-Word.  Different inflectional forms of a word do not count as different words; for example, Eat-The-Word encompasses the strings 'eat', 'eating', 'ate', etc."))

(defrelation Herd-Animal
             (Name-In-Cyc Herd-Animal "#$HerdAnimal")
             (Existing-Object-Type Herd-Animal)
             (Subclass-Of Herd-Animal Animal)
             (Set-Or-Collection Herd-Animal)
             (Arity Herd-Animal 1)
             (Documentation Herd-Animal
              "A subset of Animal; the collection of all large plant-eating animals that travel and graze in social

groups.  Elements of Herd-Animal also belong to Herbivore; they include most instances of Ruminant and may also include

Triceretops."))

(defrelation Preposition
             (Name-In-Cyc Preposition "#$Preposition")
             (Linguistic-Object-Type Preposition)
             (Subclass-Of Preposition Speech-Part)
             (Set-Or-Collection Preposition)
             (Arity Preposition 1)
             (Documentation Preposition
              "The collection of all prepositions. Prepositions are function words which usually take a noun phrase complement. They usually express temporal, spatial, or other relations. Example: `at'."))

(defrelation Temperate-Climate-Cycle
             (Name-In-Cyc Temperate-Climate-Cycle "#$TemperateClimateCycle")
             (Climate-Cycle-Type Temperate-Climate-Cycle)
             (Subclass-Of Temperate-Climate-Cycle Annual-Climate-Cycle)
             (Set-Or-Collection Temperate-Climate-Cycle)
             (Arity Temperate-Climate-Cycle 1)
             (Documentation Temperate-Climate-Cycle
              "A collection of annual climate cycles.  Each element of Temperate-Climate-Cycle is a year-long event consisting of weather occurring (typically) in terrestrial regions between (roughly) the Tropic of Cancer and the Arctic Circle in the Northern Hemisphere, and between the Tropic of Capricorn and the Antarctic Circle in the Southern Hemisphere.  Characteristics of a temperate climate include: four distinguishable seasons, Spring, Summer, Fall, and Winter, with variations in temperature and precipitation; overall moderate precipitation."))

(defobject |(MEDIUM-AMOUNT-FN RAININESS)|
   (Scalar-Interval |(MEDIUM-AMOUNT-FN RAININESS)|)
   (Raininess |(MEDIUM-AMOUNT-FN RAININESS)|)
   (Skolem-Object |(MEDIUM-AMOUNT-FN RAININESS)|)
   (Subattribute-Of |(MEDIUM-AMOUNT-FN RAININESS)| Rainy))

(defrelation Polishing-Something
             (Name-In-Cyc Polishing-Something "#$PolishingSomething")
             (Temporal-Stuff-Type Polishing-Something)
             (Default-Disjoint-Script-Type Polishing-Something)
             (Subclass-Of Polishing-Something Physical-Contact-Situation)
             (Subclass-Of Polishing-Something Voluntary-Body-Movement)
             (Subclass-Of Polishing-Something Cleaning)
             (Subclass-Of Polishing-Something Transformation-Event)
             (Set-Or-Collection Polishing-Something)
             (Arity Polishing-Something 1)
             (Documentation Polishing-Something
              "The subset of Cleaning processes in which something is polished by rubbing it.  For example, consider the event in which Aladdin polished his magic lamp for the first time.  Polishing can be done to leather, wood, metal, etc.  A Polishing-Something may be performed either by a person or by a machine."))

(defrelation State-Of-Matter-Solid-Liquid-Gaseous
             (Name-In-Cyc State-Of-Matter-Solid-Liquid-Gaseous
              "#$StateOfMatter-SolidLiquidGaseous")
             (Primitive-Attribute-Type State-Of-Matter-Solid-Liquid-Gaseous)
             (Subclass-Of State-Of-Matter-Solid-Liquid-Gaseous Scalar-Interval)
             (Subclass-Of State-Of-Matter-Solid-Liquid-Gaseous
              Physical-Attribute)
             (Set-Or-Collection State-Of-Matter-Solid-Liquid-Gaseous)
             (Arity State-Of-Matter-Solid-Liquid-Gaseous 1)
             (Documentation State-Of-Matter-Solid-Liquid-Gaseous
              "State-Of-Matter-Solid-Liquid-Gaseous is the collection of attributes which describe the basic physical states that pieces of matter can be in.  Elements of this collection are Solid-State-Of-Matter, Semi-Solid-State-Of-Matter, Liquid-State-Of-Matter, and Gaseous-State-Of-Matter.  Although the chemical composition of a substance does not change when its basic physical state changes, many of its intrinsic physical properties do change--including its density, viscosity, brittleness, color, size, etc.  In addition, changing the basic state of pieces of certain compounds may alter their chemical composition (e.g., using distillation to separate alcohol from other fluids) and as a result may effect toxicity and other biological factors."))

(defobject |(VERY-HIGH-AMOUNT-FN RIGIDITY)|
   (Scalar-Interval |(VERY-HIGH-AMOUNT-FN RIGIDITY)|)
   (Rigidity |(VERY-HIGH-AMOUNT-FN RIGIDITY)|)
   (Skolem-Object |(VERY-HIGH-AMOUNT-FN RIGIDITY)|))

(defrelation Educational-Organization
             (Name-In-Cyc Educational-Organization "#$EducationalOrganization")
             (Existing-Object-Type Educational-Organization)
             (Subclass-Of Educational-Organization Organization)
             (Set-Or-Collection Educational-Organization)
             (Arity Educational-Organization 1)
             (Documentation Educational-Organization
              "A collection of educational organizations.  An element of Educational-Organization may be a school, system of schools, college, seminary, etc., -- a place where teaching and/or training are programmed and provided as a service for students.  An educational organization may be public or private.  This collection includes Austin-ISD (i.e., the City-Of-Austin-TX Independent School District), Stanford-University, Bryn-Mawr-College, University-Of-Pennsylvania-School-Of-Medicine, and many other institutions."))

(defrelation Health-Professional
             (Name-In-Cyc Health-Professional "#$HealthProfessional")
             (Occupation-Type Health-Professional)
             (Subclass-Of Health-Professional Professional)
             (Set-Or-Collection Health-Professional)
             (Arity Health-Professional 1)
             (Documentation Health-Professional
              "The collection of all health-related professionals - including medical professionals as well as professionals not in the medical field.  For example, health inspectors."))

(defobject Layered
   (Physical-Structural-Attribute Layered)
   (Name-In-Cyc Layered "#$Layered")
   (Documentation Layered
    "The physical structural attribute of being layered, laminate, or made of Layers, like stratified rock or an onion.  An object that is Layered has two or more parts that are each Layers."))

(defrelation Process-Predicate
             (Name-In-Cyc Process-Predicate "#$ProcessPredicate")
             (Predicate-Category Process-Predicate)
             (Subclass-Of Process-Predicate
              Extensional-Representation-Predicate)
             (Set-Or-Collection Process-Predicate)
             (Arity Process-Predicate 1)
             (Documentation Process-Predicate
              "A collection of predicates.  Each element of Process-Predicate is a predicate used in assertions that describe processes.  For example, Resources-Available, Amount-Of-Energy-Used, Signal-State, To-Possessor, Primary-Activity-Type, Exports, Monetary-Value."))

(deffunction Date-After-Fn
   (not (Modal-Relationship Date-After-Fn))
   (Nth-Domain Date-After-Fn 1 Date)
   (Nth-Domain Date-After-Fn 2 Time-Quantity)
   (Result-Instance-Of Date-After-Fn Date)
   (Name-In-Cyc Date-After-Fn "#$DateAfterFn")
   (Evaluatable-Function Date-After-Fn)
   (Non-Predicate-Function Date-After-Fn)
   (Function Date-After-Fn)
   (Arity Date-After-Fn 2)
   (Function-Arity Date-After-Fn 1)
   (Binary-Relation Date-After-Fn)
   (Documentation Date-After-Fn
    "Like Plus-Fn, but for Dates.  (Date-After-Fn ?DATE ?DUR) returns a Date which is ?DUR amount of time after ?DATE.  For example, (Date-After-Fn (Year-Fn 1950) (Years-Duration 10)) returns (Year-Fn 1960).  See also Date-Before-Fn, Time-Elapsed-Fn."))

(defrelation Address-Location-Designator
             (Name-In-Cyc Address-Location-Designator
              "#$Address-LocationDesignator")
             (Object-Type Address-Location-Designator)
             (Subclass-Of Address-Location-Designator Character-String)
             (Subclass-Of Address-Location-Designator Attribute-Value)
             (Set-Or-Collection Address-Location-Designator)
             (Arity Address-Location-Designator 1)
             (Documentation Address-Location-Designator
              "A collection of strings.  Each element of Address-Location-Designator is a string that denotes an address.  Each string indicates one entire address.  For example: `President Bill Clinton, White House,, 1600 Pennsylvania Avenue, Washington, DC."))

(defrelation Deciduous-Plant
             (Name-In-Cyc Deciduous-Plant "#$DeciduousPlant")
             (Existing-Object-Type Deciduous-Plant)
             (Subclass-Of Deciduous-Plant Plant-Woody)
             (Set-Or-Collection Deciduous-Plant)
             (Arity Deciduous-Plant 1)
             (Documentation Deciduous-Plant
              "A collection of plants.  Each element of Deciduous-Plant is a plant which sheds all of its leaves once a year, seasonally, and subsequently grows new ones."))

(defrelation Daytime-Working-Hours
             (Name-In-Cyc Daytime-Working-Hours "#$DaytimeWorkingHours")
             (Temporal-Object-Type Daytime-Working-Hours)
             (Subclass-Of Daytime-Working-Hours Time-Of-Day)
             (Set-Or-Collection Daytime-Working-Hours)
             (Arity Daytime-Working-Hours 1)
             (Documentation Daytime-Working-Hours
              "Daytime-Working-Hours is a set of time intervals.  The length of each of those intervals, and their Starting-Point and Ending-Point, are defined by the bulk of a working population performing their daily jobs.  The schedule varies by context -- i.e. which group of workers are being considered -- and the boundaries are fuzzy.  This fuzziness makes the concept more useful in many ways, though, not less useful."))

(defrelation Inverse-Relation-Type-Count
             (Nth-Domain Inverse-Relation-Type-Count 1 Slot)
             (Nth-Domain Inverse-Relation-Type-Count 2 Collection)
             (Nth-Domain Inverse-Relation-Type-Count 3 Collection)
             (Nth-Domain Inverse-Relation-Type-Count 4 Non-Negative-Integer)
             (Name-In-Cyc Inverse-Relation-Type-Count
              "#$inverseRelationTypeCount")
             (Quaternary-Predicate Inverse-Relation-Type-Count)
             (Relation Inverse-Relation-Type-Count)
             (Arity Inverse-Relation-Type-Count 4)
             (Documentation Inverse-Relation-Type-Count
              "(Inverse-Relation-Type-Count SLOT COL1 COL2 NUM) means that, for every instance of COL2 (INS2) there are exactly NUM instances of COL1 (INS1, INS3, ...) such that (SLOT INS1 INS2), (SLOT INS3 INS2), ..., hold.  Thus (Inverse-Relation-Type-Count Anatomical-Parts Animal Head-Animal-Body-Part 1) would mean `every animal head belongs to exactly one animal'."))

(defrelation Region-Type
             (Name-In-Cyc Region-Type "#$RegionType")
             (Collection Region-Type)
             (Subclass-Of Region-Type Existing-Object-Type)
             (Set-Or-Collection Region-Type)
             (Arity Region-Type 1)
             (Documentation Region-Type
              "A collection of collections.  Each element of Region-Type is a collection of spatial regions.Such collections have elements that are identifiable subregions of objects, but that are not themselves independent objects.  Collections that are elements of Region-Type include Palm-Of-Hand, Doorway, Wall-Generic-Barrier, Work-Surface, Handle, and many others."))

(defrelation Unit-Of-Measure-With-Prefix
             (Name-In-Cyc Unit-Of-Measure-With-Prefix
              "#$UnitOfMeasureWithPrefix")
             (Collection Unit-Of-Measure-With-Prefix)
             (Subclass-Of Unit-Of-Measure-With-Prefix Unit-Of-Measure)
             (Set-Or-Collection Unit-Of-Measure-With-Prefix)
             (Arity Unit-Of-Measure-With-Prefix 1)
             (Documentation Unit-Of-Measure-With-Prefix
              "Please see the Shared-Note Note-For-Unit-Of-Measure-With-Prefix-And-No-Prefix."))

(defrelation Food-Service-Organization
             (Name-In-Cyc Food-Service-Organization
              "#$FoodServiceOrganization")
             (Existing-Object-Type Food-Service-Organization)
             (Subclass-Of Food-Service-Organization
              Commercial-Service-Organization)
             (Subclass-Of Food-Service-Organization Business)
             (Set-Or-Collection Food-Service-Organization)
             (Arity Food-Service-Organization 1)
             (Documentation Food-Service-Organization
              "A collection of business organizations; a subset of both Commercial-Service-Organization and Business.  An element of Food-Service-Organization is a business which prepares and/or serves food as its major function(s).  Important subsets of Food-Service-Organization include Restaurant and Catering-Company.  Note that grocery stores -- and airlines -- are not themselves considered elements of Food-Service-Organization, even though some of those may have Sub-Organizations or sub-contractors which are#$FoodServiceOrganizations.  Bars or taverns, in contrast to Restaurants that also prepare and serve food, are also not considered Food-Service-Organizations."))

(deffunction There-Exist-Exactly
   (Nth-Domain There-Exist-Exactly 1 Positive-Integer)
   (Nth-Domain There-Exist-Exactly 2 Cyc-El-Variable)
   (Nth-Domain There-Exist-Exactly 3 Cyc-Formula)
   (Result-Instance-Of There-Exist-Exactly Cyc-Formula)
   (Name-In-Cyc There-Exist-Exactly "#$thereExistExactly")
   (Quantifier There-Exist-Exactly)
   (Relationship There-Exist-Exactly)
   (Function There-Exist-Exactly)
   (Arity There-Exist-Exactly 3)
   (Function-Arity There-Exist-Exactly 2)
   (Documentation There-Exist-Exactly
    "The predicate There-Exist-Exactly is a specialized form of :Exists (q.v.).  (There-Exist-Exactly 5 X FORM) means that there are no more and no less than five distinct objects in the (relevant) universe of discourse which, when substituted for the Cyc-EL-Variable X in the Cyc-Formula FORM, make FORM true.  See :Exists for more information about existential quantification."))

(defrelation Inter-Personal-Relation-Slot
             (Name-In-Cyc Inter-Personal-Relation-Slot
              "#$InterPersonalRelationSlot")
             (Predicate-Category Inter-Personal-Relation-Slot)
             (Subclass-Of Inter-Personal-Relation-Slot
              Inter-Existing-Object-Slot)
             (Set-Or-Collection Inter-Personal-Relation-Slot)
             (Arity Inter-Personal-Relation-Slot 1)
             (Documentation Inter-Personal-Relation-Slot
              "A collection of predicates.  Each element of Inter-Personal-Relation-Slot is a binary predicate used to represent relationships between two instances of Animal.  Examples: Mate, Friends."))

(defrelation Non-Person-Animal
             (Synonymous-External-Concept Non-Person-Animal
              Sensus-Information1997 "NONHUMAN-ANIMAL")
             (The-Partition Non-Person-Animal Person
              |(THE-PARTITION NON-PERSON-ANIMAL PERSON)|)
             (Name-In-Cyc Non-Person-Animal "#$NonPersonAnimal")
             (Existing-Object-Type Non-Person-Animal)
             (Subclass-Of Non-Person-Animal Animal)
             (Set-Or-Collection Non-Person-Animal)
             (Arity Non-Person-Animal 1)
             (Documentation Non-Person-Animal
              "The collection of all Animals that are not Persons."))

(defrelation Physical-Device
             (Name-In-Cyc Physical-Device "#$PhysicalDevice")
             (Existing-Object-Type Physical-Device)
             (Subclass-Of Physical-Device Partially-Tangible-Product)
             (Subclass-Of Physical-Device Artifact)
             (Subclass-Of Physical-Device Inanimate-Thing)
             (Set-Or-Collection Physical-Device)
             (Arity Physical-Device 1)
             (Documentation Physical-Device "A collection of tangible things. 
 Each Physical-Device is an Artifact which is designed 
for a specific use or 
to perform a specific function. 
Thus, the collections Tool, Condom, Bath-Tub, and
Transportation-Device-Vehicle are all subsets of this
collection, as are many other collections. Excluded are
artifacts which can only be 'used' in a very loose or
metaphorical sense, such as instances of Sculpture,
Flower-Bed, or Advertisement. Also, an instance of 
Physical-Device should have a relatively rigid, set
shape (which doesn't exclude it having moving parts!);
hence, Gasoline-Fuel or Anti-Freeze are not subsets
of Physical-Device."))

(defrelation Corner-2d
             (The-Partition Corner-2d Corner-3d
              |(THE-PARTITION CORNER-2D CORNER-3D)|)
             (Name-In-Cyc Corner-2d "#$Corner-2d")
             (Region-Type Corner-2d)
             (Subclass-Of Corner-2d Corner-2or3d)
             (Set-Or-Collection Corner-2d)
             (Arity Corner-2d 1)
             (Documentation Corner-2d
              "The collection of all regions wherein two linear edges of a two dimensional or sheet-shaped object (i.e., considered in this context to be sheet shaped) meet to form an angle of substantially less than 180 degrees.  Polygons have at least three corners each."))

(defrelation Trial
             (Name-In-Cyc Trial "#$Trial")
             (Script-Type Trial)
             (Temporal-Object-Type Trial)
             (Subclass-Of Trial Hostile-Social-Action)
             (Set-Or-Collection Trial)
             (Arity Trial 1)
             (Documentation Trial
              "The collection of legal conflicts that are heard and decided by a court."))

(defobject Very-Alert
   (Alertness Very-Alert)
   (Subattribute-Of Very-Alert Awake)
   (Name-In-Cyc Very-Alert "#$VeryAlert")
   (Documentation Very-Alert
    "Very-Alert is an Alertness attribute which is a specialization of Awake.  It is the state of an Animal paying particular attention to its environment (or a specific aspect thereof).  It is the state an Antelope is in after smelling a Lion, or a burglar is in after hearing the front door open."))

(defrelation Paying
             (Name-In-Cyc Paying "#$Paying")
             (Temporal-Object-Type Paying)
             (Default-Disjoint-Script-Type Paying)
             (Subclass-Of Paying Money-Transfer)
             (Subclass-Of Paying Purposeful-Action)
             (Subclass-Of Paying Transferring-Ownership)
             (Set-Or-Collection Paying)
             (Arity Paying 1)
             (Documentation Paying
              "A collection of events; a subset of#$MoneyTransfer.  Each element of Paying is an event in which one agent pays money to another agent.  The payer is the From-Possessor; the recipient is the To-Possessor.  In all payings, the payer gives the payee Full-Use-Rights to the money. Some types of payings: (1) all instances of Buying and Renting contain (at least one) Sub-Events which are elements of Paying; (2) making charitable contributions; (3) paying off one's gambling debts; (4) paying an employee's salary or a child's allowance.  Writing a check or offering a credit card in payment are First-Sub-Events of paying events; such payings are successful only if the check is not lost or stolen, if it clears the bank, etc.  On the other hand, filling out a pledge card, e.g., for United Way, is NOT considered a Paying event or part of one, because it does not involve or initiate any legal reassignment of rights to the money."))

(defrelation Spreadsheet
             (Name-In-Cyc Spreadsheet "#$Spreadsheet")
             (Existing-Object-Type Spreadsheet)
             (Subclass-Of Spreadsheet Structured-Information-Source)
             (Subclass-Of Spreadsheet Information-Bearing-Object)
             (Set-Or-Collection Spreadsheet)
             (Arity Spreadsheet 1)
             (Documentation Spreadsheet
              "A collection of information bearing objects (IBOs); a subset of Structured-Information-Source.  Each element of Spreadsheet is an IBO that presents (usually numeric) data in a two-dimensional matrix of cells that are organized into rows and columns.  A spreadsheet may be produced by hand with pencil and paper or generated by a computer Spreadsheet-Program such as Lotus123.  Associated with every spreadsheet are mathematical definitions of some of its cells as a function of other cells in that spreadsheet."))

(defrelation Birth-Event
             (Name-In-Cyc Birth-Event "#$BirthEvent")
             (Default-Disjoint-Script-Type Birth-Event)
             (Temporal-Object-Type Birth-Event)
             (Subclass-Of Birth-Event Medical-Care-Event)
             (Subclass-Of Birth-Event Emitting-An-Object)
             (Subclass-Of Birth-Event Pregnancy-Ending-Event)
             (Subclass-Of Birth-Event Biological-Development-Event)
             (Set-Or-Collection Birth-Event)
             (Arity Birth-Event 1)
             (Documentation Birth-Event
              "The collection of events in which one animal (prototypically, a Mammal) gives birth to another.  The mother is the Birth-Parent and the child is the Birth-Child.  Both are Object-Of-State-Change; the mother goes from being pregnant to not pregnant, while the child goes from the Embryo life stage to the Juvenile-Animal life stage (see Biological-Stage-Of-Development."))

(defrelation Cracking
             (Name-In-Cyc Cracking "#$Cracking")
             (Script-Type Cracking)
             (Subclass-Of Cracking Separation-Event)
             (Subclass-Of Cracking Intrinsic-State-Change-Event)
             (Subclass-Of Cracking Physical-Event)
             (Set-Or-Collection Cracking)
             (Arity Cracking 1)
             (Documentation Cracking
              "A collection of change events.  In each Cracking, something becomes cracked.  I.e., two or more areas of the thing are separated from one another (though perhaps not divided wholly into parts).  In order to undergo a Cracking, the Object-Of-State-Change must be in a Solid-State-Of-Matter."))

(defrelation Temporal-Thing
             (Name-In-Cyc Temporal-Thing "#$TemporalThing")
             (Temporal-Stuff-Type Temporal-Thing)
             (Collection Temporal-Thing)
             (Subclass-Of Temporal-Thing Individual)
             (Set-Or-Collection Temporal-Thing)
             (Arity Temporal-Thing 1)
             (Documentation Temporal-Thing
              "Temporal-Thing is the collection of all things which have a particular temporal extent, things about which one might sensibly ask `When?'.  Temporal-Thing therefore includes many things, such as actions, tangible objects, agreements, and abstract pieces of time. Some things are NOT instances of Temporal-Thing because they are abstract, timeless, etc. -- such as a mathematical set, an attribute, an integer, etc."))

(defrelation Gaseous-Tangible-Thing
             (Transport-Fn Gaseous-Tangible-Thing
              |(TRANSPORT-FN GASEOUS-TANGIBLE-THING)|)
             (Name-In-Cyc Gaseous-Tangible-Thing "#$GaseousTangibleThing")
             (Tangible-Stuff-State-Type Gaseous-Tangible-Thing)
             (Subclass-Of Gaseous-Tangible-Thing Fluid-Tangible-Thing)
             (Set-Or-Collection Gaseous-Tangible-Thing)
             (Arity Gaseous-Tangible-Thing 1)
             (Documentation Gaseous-Tangible-Thing
              "A collection of tangible substances.  Each element of Gaseous-Tangible-Thing is a tangible thing which is in a Gaseous-State-Of-Matter; i.e., its shapes would completely conform to the boundaries of a vessel containing it, and it is compressible.  Examples: The-Atmosphere-Qua-Single-Piece-Of-Stuff, the helium filling a child's balloon, a cloud of poisonous gas released from an Iraqi weapons dump during the Gulf War.  Cf. Fluid-Tangible-Thing, Liquid-Tangible-Thing."))

(deffunction Date-Before-Fn
   (not (Modal-Relationship Date-Before-Fn))
   (Nth-Domain Date-Before-Fn 1 Date)
   (Nth-Domain Date-Before-Fn 2 Time-Quantity)
   (Result-Instance-Of Date-Before-Fn Date)
   (Name-In-Cyc Date-Before-Fn "#$DateBeforeFn")
   (Evaluatable-Function Date-Before-Fn)
   (Non-Predicate-Function Date-Before-Fn)
   (Function Date-Before-Fn)
   (Arity Date-Before-Fn 2)
   (Function-Arity Date-Before-Fn 1)
   (Binary-Relation Date-Before-Fn)
   (Documentation Date-Before-Fn
    "Like Difference-Fn, but for Dates.  (Date-Before-Fn ?DATE ?DUR) returns a Date which is ?DUR amount of time before ?DATE.  For example, (Date-Before-Fn (Year-Fn 1999) (Years-Duration 1)) returns (Year-Fn 1998).   See also Date-After-Fn, Time-Elapsed-Fn."))

(defrelation Three-Story-Building
             (Name-In-Cyc Three-Story-Building "#$ThreeStoryBuilding")
             (Existing-Object-Type Three-Story-Building)
             (Subclass-Of Three-Story-Building Building)
             (Set-Or-Collection Three-Story-Building)
             (Arity Three-Story-Building 1)
             (Documentation Three-Story-Building
              "Collection of all three story buildings."))

(defrelation Textual-Material
             (Name-In-Cyc Textual-Material "#$TextualMaterial")
             (Existing-Object-Type Textual-Material)
             (Subclass-Of Textual-Material Information-Bearing-Thing)
             (Set-Or-Collection Textual-Material)
             (Arity Textual-Material 1)
             (Documentation Textual-Material
              "A collection of information bearing things (IBTs).  Each element of Textual-Material is an IBT whose informational content is encoded in some instance of Communication-Convention which is a linear symbolic language; e.g., a newspaper printed in English written with the Roman alphabet; a book printed in English using Braille; or a poster written in Chinese using characters.  Textual material always includes some physical representation of one or more elements of Character-String (which are abstract).  Textual materials may be tangible objects, such as newspapers, but also may include intangibles such as patterns of light projecting words onto a wall.  The subsets of Textual-Material are multifarious, including, e.g., Grocery-List, W2-form, Restaurant-Menu, Grant-Proposal, Will-And-Testament, Business-Card, Musical-Text, Balance-Sheet-Document."))

(defrelation Student-Status-Attribute
             (Name-In-Cyc Student-Status-Attribute "#$StudentStatusAttribute")
             (Attribute-Type Student-Status-Attribute)
             (Subclass-Of Student-Status-Attribute Attribute-Value)
             (Set-Or-Collection Student-Status-Attribute)
             (Arity Student-Status-Attribute 1)
             (Documentation Student-Status-Attribute
              "A collection of attributes.  Each Student-Status-Attribute indicates the currency or bureaucratic phase of processing a student's participation in an educational course or institution; elements of this collection include Graduate, Enrolled, etc."))

(defobject Parts-Format
   (Format Parts-Format)
   (Name-In-Cyc Parts-Format "#$PartsFormat")
   (Documentation Parts-Format
    "Argument positions of Cyc predicates may have specified formats that constrain how many and what kind of terms may occupy that position, given some fixed set of terms in the other argument positions of the predicate.  If a predicate P has Parts-Format for argument position N, then given some particular set of terms that occupy the other argument positions of P, there may be multiple assertions with different terms in position N (keeping the other arguments fixed), but only so long as the terms in position N are all Physical-Parts of the same Partially-Tangible.  For example, the Arg1-Format of Physical-Parts is Parts-Format.  This allows us to represent that JosephsRightThumbnail is a Physical-Parts of JosephsRightThumb, of JosephsRightHand, and of Joseph.  This is more restrictive than Set-The-Format, which allows multiple unrelated values.  In contrast, specifying only (Arg1-Format Physical-Parts Set-The-Format) would not prevent JosephsRightThumb from being a Physical-Parts of both JosephsRightHand and of JamesRightHand."))

(deffunction Inch
   (Args-Isa Inch Real-Number)
   (Result-Instance-Of Inch Distance)
   (Result-Instance-Of Inch Scalar-Interval)
   (Name-In-Cyc Inch "#$Inch")
   (Fps-Unit-Of-Measure Inch)
   (Unit-Of-Distance Inch)
   (Unit-Of-Measure-No-Prefix Inch)
   (Function Inch)
   (Documentation Inch
    "The measurement function used in Cyc to represent the inch used to measure length within the British (FPS) system.  See also FPS-Unit-Of-Measure, Unit-Of-Measure."))

(defrelation Area
             (Name-In-Cyc Area "#$Area")
             (Derived-Numeric-Attribute-Type Area)
             (Subclass-Of Area Physical-Attribute)
             (Subclass-Of Area Scalar-Interval)
             (Set-Or-Collection Area)
             (Arity Area 1)
             (Documentation Area
              "A collection of physical attributes.  Each element of Area is an amount of two-dimensional space, i.e., a surface.  Elements of Area may be either a fixed interval, such as the area of a rectangle 5 cm x 10 cm, or a range, such as the area of a city lot.  See Unit-Of-Area for the units used by Cyc to measure areas."))

(defrelation Solar-Powered-Device
             (Name-In-Cyc Solar-Powered-Device "#$SolarPoweredDevice")
             (Existing-Object-Type Solar-Powered-Device)
             (Subclass-Of Solar-Powered-Device Powered-Device)
             (Set-Or-Collection Solar-Powered-Device)
             (Arity Solar-Powered-Device 1)
             (Documentation Solar-Powered-Device
              "A collection of physical devices; a subset of Powered-Device.  An instance of Solar-Powered-Device is a device which is powered by energy from sunlight.  Examples include solar-powered calculators and solar heating systems."))

(defrelation Point-Of-Contact-Info
             (Nth-Domain Point-Of-Contact-Info 1 Agent)
             (Nth-Domain Point-Of-Contact-Info 2 Contact-Location-Type)
             (Nth-Domain Point-Of-Contact-Info 3 Slot)
             (Nth-Domain Point-Of-Contact-Info 4 Thing)
             (Nth-Domain-Subclass-Of Point-Of-Contact-Info 2 Contact-Location)
             (Name-In-Cyc Point-Of-Contact-Info "#$pointOfContactInfo")
             (Quaternary-Predicate Point-Of-Contact-Info)
             (Relation Point-Of-Contact-Info)
             (Arity Point-Of-Contact-Info 4)
             (Documentation Point-Of-Contact-Info
              "The predicate Point-Of-Contact-Info allows us to characterize a string of information as belonging to a certain kind of contact location for a particular person, without actually reifying those contact locations.  (Point-Of-Contact-Info AGENT LOC-TYPE INFO-TYPE STRING) means that AGENT's contact locations of type LOC-TYPE (e.g., Workplace) have STRING as their contact address of INFO-TYPE (e.g., Phone-Number-Text, Fax-Number-Text, Address-Text).  For example, to say that Keith Goolsbey's home phone number is 512-123-4567, we write: (Point-Of-Contact-Info Goolsbey Human-Residence Phone-Number-Text ``(512) 123-4567'').  Note: the disadvantage of this shorthand method is that all of AGENT's contact locations of the type LOC-TYPE are assumed to have the same STRING of INFO-TYPE."))

(defrelation Job-Attribute
             (Name-In-Cyc Job-Attribute "#$JobAttribute")
             (Unordered-Attribute-Type Job-Attribute)
             (Subclass-Of Job-Attribute Attribute-Value)
             (Set-Or-Collection Job-Attribute)
             (Arity Job-Attribute 1)
             (Documentation Job-Attribute
              "A collection of attributes.  Each element of Job-Attribute describes a general property of a job or type of job.  Examples of Job-Attribute include Blue-Collar, White-Collar, and Flexible-Working-Hours."))

(defrelation Billing-Location
             (Name-In-Cyc Billing-Location "#$BillingLocation")
             (Contact-Location-Type Billing-Location)
             (Subclass-Of Billing-Location Mailing-Location)
             (Set-Or-Collection Billing-Location)
             (Arity Billing-Location 1)
             (Documentation Billing-Location
              "A collection of places; a subset of Contact-Location.  Each element of Billing-Location is a location to which invoices are sent.  For most private individuals, their billing location is their home address."))

(defrelation Set-Mathematical
             (The-Partition Set-Mathematical Collection
              |(THE-PARTITION SET-MATHEMATICAL COLLECTION)|)
             (Name-In-Cyc Set-Mathematical "#$Set-Mathematical")
             (Collection Set-Mathematical)
             (Subclass-Of Set-Mathematical Set-Or-Collection)
             (Set-Or-Collection Set-Mathematical)
             (Arity Set-Mathematical 1)
             (Documentation Set-Mathematical
              "The collection of mathematical sets.  An element of Set-Mathematical can be any arbitrary set, including sets whose members have nothing in common.  In contrast, the members of an instance of Set-Mathematical's sibling Collection (q.v.) all have some important, natural properties in common.  Sets and collections also differ in that there cannot exist two distinct sets that have exactly the same elements.  A third point of contrast between sets and collections is that rarely will it be desirable to create a new constant to refer to a set.  Instead, a set will either be intensionally specified by a defining property, using The-Set-Of, as in (The-Set-Of ?X (Likes-As-Friend Lenat ?X)), or extensionally specified by listing its elements, using The-Set, as in (The-Set 3 4 5).  (In certain cases, a set will be extensionally specified by means of one of the more specialized functions The-Partition or The-Covering.  See Partitioned-Into and Covering.)"))

(deffunction Miles-Per-Hour
   (Args-Isa Miles-Per-Hour Real-Number)
   (Result-Instance-Of Miles-Per-Hour Scalar-Interval)
   (Result-Instance-Of Miles-Per-Hour Speed)
   (Result-Instance-Of Miles-Per-Hour Vector-Interval)
   (Name-In-Cyc Miles-Per-Hour "#$MilesPerHour")
   (Unit-Of-Speed Miles-Per-Hour)
   (Unit-Of-Measure-No-Prefix Miles-Per-Hour)
   (Function Miles-Per-Hour)
   (Documentation Miles-Per-Hour "A unit of speed"))

(defrelation Protozoan
             (Name-In-Cyc Protozoan "#$Protozoan")
             (Biological-Subkingdom Protozoan)
             (Subclass-Of Protozoan Single-Cell-Organism)
             (Subclass-Of Protozoan Eukaryotic-Cell)
             (Set-Or-Collection Protozoan)
             (Arity Protozoan 1)
             (Documentation Protozoan
              "The collection of protozoa; a subset of Single-Cell-Organism.  Elements of Protozoan are also elements of Eukaryotic-Cell.  Subsets include Amoeba and many others.  Protozoa lack cell walls made of cellulose.  Many protozoa are motile, using pseudopoda, cilia, or flagella to move.  Some cause diseases in larger organisms.  The class Protozoan is an instance of Biological-Subkingdom in many classification systems, sometimes placed under the Protista-Kingdom."))

(defrelation Inter-Existing-Object-Slot
             (Name-In-Cyc Inter-Existing-Object-Slot
              "#$InterExistingObjectSlot")
             (Predicate-Category Inter-Existing-Object-Slot)
             (Subclass-Of Inter-Existing-Object-Slot Slot)
             (Subclass-Of Inter-Existing-Object-Slot
              Extensional-Representation-Predicate)
             (Set-Or-Collection Inter-Existing-Object-Slot)
             (Arity Inter-Existing-Object-Slot 1)
             (Documentation Inter-Existing-Object-Slot
              "A collection of predicates.  Each element of Inter-Existing-Object-Slot is a binary predicate used in assertions that relate two elements of Something-Existing (i.e., two objects).  Examples: Sold-At, Derived-From, Cohabitants, Soil-Component, Contains-Information, Capital-City, Electrically-Connected-To."))

(defrelation Joint-Animal-Body-Part
             (Name-In-Cyc Joint-Animal-Body-Part "#$Joint-AnimalBodyPart")
             (Animal-Body-Part-Type Joint-Animal-Body-Part)
             (Subclass-Of Joint-Animal-Body-Part Solid-Tangible-Thing)
             (Subclass-Of Joint-Animal-Body-Part Configuration)
             (Subclass-Of Joint-Animal-Body-Part Animal-Body-Part)
             (Set-Or-Collection Joint-Animal-Body-Part)
             (Arity Joint-Animal-Body-Part 1)
             (Documentation Joint-Animal-Body-Part
              "The collection of all joints of Animals.  A joint is the juncture between the ends or edges of abutting bones of the animal's skeleton.  Joints are of several types mechanically (e.g., ball-and-socket).  Many major joints function as hinges, in which the ends of the abutting bones are joined with ligaments and cushioned by cartilege."))

(defrelation Supposed-To-Be-Microtheory
             (Name-In-Cyc Supposed-To-Be-Microtheory
              "#$SupposedToBeMicrotheory")
             (Microtheory-Type Supposed-To-Be-Microtheory)
             (Subclass-Of Supposed-To-Be-Microtheory Microtheory)
             (Set-Or-Collection Supposed-To-Be-Microtheory)
             (Arity Supposed-To-Be-Microtheory 1)
             (Documentation Supposed-To-Be-Microtheory
              "The collection of microtheories that describe how things are 'supposed to be' according to some agent or agents.  This technique can be used to represent things like the policies of a company, the laws of a country, the tenets of a religion, the rules of proper conduct for employees of a particular corporation, etc.  The assertions in a Supposed-To-Be-Microtheory may or may not describe the world as it actually is.  Examples: Basic-Western-Legal-Concepts-Mt, Sports-Rules-Of-Boxing-Sports-Event, Cyc-Staff-Calendar, and Office-Code-Of-Conduct-Mt."))

(defrelation Acquaintances
             (Nth-Domain Acquaintances 1 Person)
             (Nth-Domain Acquaintances 2 Agent)
             (Nth-Domain Acquaintances 3 Acquaintance-Attribute)
             (Name-In-Cyc Acquaintances "#$acquaintances")
             (Ternary-Predicate Acquaintances)
             (Relation Acquaintances)
             (Arity Acquaintances 3)
             (Documentation Acquaintances
              "(Acquaintances X Y HOW) means that X is acquainted with Y,  at least in the way (and/or to the degree) specified by HOW.  Note that Y must be an Agent, so this is not the predicate to use to express the fact that Fred `is acquainted with' drag racing.  Note that, depending on the value for HOW, there may or may not be some way in which Y is acquainted with X.  E.g., (Acquaintances Lenat Madonna True-Fan-Acquaintance) but there is no Z such that (Acquaintances Madonna Lenat Z).
Note that X and Y should rarely be instances of Entity.  In fact, Doug has only been acqainted with Madonna since 1983, so we should write (Holds-In (Time-Interval-From-Fn (Year-Fn 1983) Now) (Acquaintances Lenat Madonna True-Fan-Acquaintance))."))

(defrelation Generic-Attribute
             (Name-In-Cyc Generic-Attribute "#$GenericAttribute")
             (Primitive-Attribute-Type Generic-Attribute)
             (Subclass-Of Generic-Attribute Scalar-Interval)
             (Set-Or-Collection Generic-Attribute)
             (Arity Generic-Attribute 1)
             (Documentation Generic-Attribute
              "Generic-Attribute is a collection of basic attributes, such as Low, Medium, High, etc., which are applicable to a wide range of topics."))

(defrelation Plant-Woody
             (Name-In-Cyc Plant-Woody "#$Plant-Woody")
             (Existing-Object-Type Plant-Woody)
             (Subclass-Of Plant-Woody Plant)
             (Subclass-Of Plant-Woody Terrestrial-Organism)
             (Set-Or-Collection Plant-Woody)
             (Arity Plant-Woody 1)
             (Documentation Plant-Woody
              "The collection of Plants that have woody or hard trunks, stems or branches (and usually roots). includes large, hard bamboos, and balsa."))

(defrelation Money-Transfer
             (Name-In-Cyc Money-Transfer "#$MoneyTransfer")
             (Temporal-Object-Type Money-Transfer)
             (Script-Type Money-Transfer)
             (Subclass-Of Money-Transfer Purposeful-Action)
             (Subclass-Of Money-Transfer Generalized-Transfer)
             (Subclass-Of Money-Transfer Transferring-Possession)
             (Set-Or-Collection Money-Transfer)
             (Arity Money-Transfer 1)
             (Documentation Money-Transfer
              "The most generic collection of events in which Money changes hands.  Thus, in an instance of Money-Transfer, there is some way in which money transfers possession -- though `ownership' of the funds may or may not be transferred from and/or to the agents involved.  E.g., an ATM withdrawal from the user's own account, a utility payment made at one's local grocery store, buying a newspaper, getting change for a dollar from a cashier, are all examples of Money-Transfer events.  Compare this collection with its subset Money-Transaction; in money Transactions, which are also elements of Commercial-Activity, not only is there a transfer of money, but it is done as part of an agreement (explicit or implicit) between the two participating agents that one will do something for the other -- something more than bookkeeping -- contingent upon the transfer of funds."))

(defobject South-Directly
   (Geographical-Direction South-Directly)
   (Unit-Vector-Precise South-Directly)
   (Subattribute-Of South-Directly South-Generally)
   (Name-In-Cyc South-Directly "#$South-Directly")
   (Documentation South-Directly
    "Due South, an element of Terrestrial-Direction."))

(defrelation Military-Organization
             (Name-In-Cyc Military-Organization "#$MilitaryOrganization")
             (Existing-Object-Type Military-Organization)
             (Subclass-Of Military-Organization Organization)
             (Set-Or-Collection Military-Organization)
             (Arity Military-Organization 1)
             (Documentation Military-Organization
              "A collection of organizations.  An element of Military-Organization is an organization whose function (and expertise) is the use of armed force, or the threat of such use, against enemies, especially other organized, armed enemies.  A military organization includes its fighting forces and their command structure, together with dedicated support services controlled by that military command.  Typically, there are special conditions in the relationships between a Military-Organization and its workers, going beyond what is expected of work agreements in civilian settings, including strict sanctions to enforce obedience.  This collection includes Government-Military-Organizations such as the armies, navies, air forces, etc., of the world's governments, and in addition private armies, rebel armies, and organized mercenary units."))

(defrelation Eukaryotic-Cell
             (Name-In-Cyc Eukaryotic-Cell "#$EukaryoticCell")
             (Existing-Object-Type Eukaryotic-Cell)
             (Subclass-Of Eukaryotic-Cell Cell)
             (Set-Or-Collection Eukaryotic-Cell)
             (Arity Eukaryotic-Cell 1)
             (Documentation Eukaryotic-Cell
              "The collection of eukaryotic cells, Cells which serve as the basic structural unit of eukaryotic organisms.  These cells have a membrane-bound nucleus and other organelles.  Multicellular Organisms generally have Eukaryotic-Cells; Eukaryotic-Cell DNA has introns.  Certain Eukaryotic-Cells, like the red blood corpuscles of Persons with heathy Spleens, lack nuclei."))

(defrelation Physical-Structural-Attribute
             (Name-In-Cyc Physical-Structural-Attribute
              "#$PhysicalStructuralAttribute")
             (Unordered-Attribute-Type Physical-Structural-Attribute)
             (Subclass-Of Physical-Structural-Attribute Attribute-Value)
             (Set-Or-Collection Physical-Structural-Attribute)
             (Arity Physical-Structural-Attribute 1)
             (Documentation Physical-Structural-Attribute
              "A collection of attributes.  Each element of Physical-Structural-Attribute is a physical attribute that determines or describes the structure of a tangible object.  These attributes are qualitative, not measurable; in that way, they are unlike those described by the elements of Density, Mass, Elasticity, Thermal-Conductivity, and other attributes which belong to Scalar-Interval.  Examples of Physical-Structural-Attribute: Granular, Powdery, Paste-Form, Brittle, Collapsible, Hollow, Woven, Burnt.   An individual object's Physical-Structural-Attributes are indicated with the predicate Physical-Structural-Attributes."))

(defrelation Compressibility
             (High-Amount-Fn Compressibility
              |(HIGH-AMOUNT-FN COMPRESSIBILITY)|)
             (Low-Amount-Fn Compressibility |(LOW-AMOUNT-FN COMPRESSIBILITY)|)
             (Medium-Amount-Fn Compressibility
              |(MEDIUM-AMOUNT-FN COMPRESSIBILITY)|)
             (No-Amount-Fn Compressibility |(NO-AMOUNT-FN COMPRESSIBILITY)|)
             (Name-In-Cyc Compressibility "#$Compressibility")
             (Primitive-Attribute-Type Compressibility)
             (Subclass-Of Compressibility Scalar-Interval)
             (Subclass-Of Compressibility Physical-Attribute)
             (Set-Or-Collection Compressibility)
             (Arity Compressibility 1)
             (Documentation Compressibility
              "A collection of attributes; a subset of Physical-Attribute.   Each element of Compressibility represents a specific capacity of a physical object to be compressed.  Compressibility may be measured with a Generic-Value-Function. Compressibilities of objects are indicated with the predicate Compressibility-Of-Object."))

(defrelation Organization
             (Synonymous-External-Concept Organization Sensus-Information1997
              "ORGANIZATION")
             (Name-In-Cyc Organization "#$Organization")
             (Existing-Object-Type Organization)
             (Subclass-Of Organization |(GROUP-FN INTELLIGENT-AGENT)|)
             (Subclass-Of Organization Social-Being)
             (Set-Or-Collection Organization)
             (Arity Organization 1)
             (Documentation Organization
              "The collection of all organizations.  Each element of the collection Organization is a group whose Group-Members are instances of Intelligent-Agent, and which is established such that certain known relationships and obligations exist between the members, and/or between the organization and its members, and/or between the organization and `outsiders' (individuals or groups).  Organization includes both informal and legally constituted organizations.  Organizations can act as agents --- specifically, group agents, not individuals (cf. Individual-Agent) --- to undertake projects, enter into agreements, own property, etc.   Most organizations have names.  Almost all have at least two members. Examples: Cycorp, NASA, Free-Software-Foundation, United-States-Army, K-Mart-Company.  Note the specialization Organization-Of-People, whose instances have only human members, e.g., an instance of Family-Human such as Joseph Kennedy's family.  Other kinds of Organization have organizations as their Group-Members, e.g., the Organization-Of-American-States."))

(defrelation Language
             (Name-In-Cyc Language "#$Language")
             (Object-Type Language)
             (Subclass-Of Language Communication-Convention)
             (Subclass-Of Language
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "LANGUAGE-RELATED-OBJECT")|)
             (Subclass-Of Language
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "LANGUAGE")|)
             (Set-Or-Collection Language)
             (Arity Language 1)
             (Documentation Language
              "The collection of systems which use conventionalized signs or symbols. This includes dead languages, computer languages, unspoken languages, codes - anything which relates symbols to meaning."))

(defrelation Prokaryotic-Cell
             (Name-In-Cyc Prokaryotic-Cell "#$ProkaryoticCell")
             (Existing-Object-Type Prokaryotic-Cell)
             (Subclass-Of Prokaryotic-Cell Cell)
             (Subclass-Of Prokaryotic-Cell Single-Cell-Organism)
             (Set-Or-Collection Prokaryotic-Cell)
             (Arity Prokaryotic-Cell 1)
             (Documentation Prokaryotic-Cell
              "The subset of Single-Cell-Organism whose members are single-celled but lack nuclei and mitochondria.  The members of the Monera-Kingdom all belong to the collection Prokaryotic-Cell, which includes the subsets Bacterium and Blue-Green-Algae.  Prokaryotic-Cell excludes viruses, protista, prions, and rickettsia.  Unlike the elements of Eukaryotic-Cell, prokaryotic cells are never assembled into multicellular organisms."))

(defobject South-West-Generally
   (Geographical-Direction South-West-Generally)
   (Name-In-Cyc South-West-Generally "#$SouthWest-Generally")
   (Documentation South-West-Generally
    "The general direction of SouthWest.  The Vector-Interval comprising the cone-shaped set of vectors pointing (from some reference point) within approximately forty-five degrees of pointing in the same direction as South-West-Directly."))

(defrelation Emitting-A-Wave
             (Name-In-Cyc Emitting-A-Wave "#$EmittingAWave")
             (Temporal-Stuff-Type Emitting-A-Wave)
             (Subclass-Of Emitting-A-Wave Emission)
             (Set-Or-Collection Emitting-A-Wave)
             (Arity Emitting-A-Wave 1)
             (Documentation Emitting-A-Wave
              "A collection of events; a subset of Emission.  Each element is an event in which a wave is emitted at a From-Location.  For example, Themistocles ordering his fleet to withdraw; Miles Davis playing the trumpet; an emergency flare burning by the side of the road.  See also Wave-Propagation."))

(defrelation Mailing-Location
             (Name-In-Cyc Mailing-Location "#$MailingLocation")
             (Conventional-Classification-Type Mailing-Location)
             (Contact-Location-Type Mailing-Location)
             (Subclass-Of Mailing-Location Contact-Location)
             (Set-Or-Collection Mailing-Location)
             (Arity Mailing-Location 1)
             (Documentation Mailing-Location
              "A collection of places; a subset of Contact-Location.  Each element of Mailing-Location is a location at which an agent can be contacted by mail, e.g., a home, office, or post office box."))

(defrelation Music
             (Name-In-Cyc Music "#$Music")
             (Temporal-Stuff-Type Music)
             (Subclass-Of Music Sound-Information-Bearing-Thing)
             (Set-Or-Collection Music)
             (Arity Music 1)
             (Documentation Music
              "A collection of sounds; a subset of Sound-Information-Bearing-Thing.  Each element of Music is a sound produced by actions such as singing, whistling, playing an instrument, playing recorded music, etc.  Music has certain features that distinguish it from random noise (though recognizing them may depend upon a specific cultural background); such features usually include variations of pitch over time (i.e., melody), multiple (somehow) related pitches sounding at one time (i.e., some kind of harmony), and/or some regular temporal pattern to the component sounds (i.e., rhythm).  Examples of Music include: the debut performance of Beethoven's Fifth Symphony; Leonard Bernstein's rendition of the Ninth Symphony with the BPO in Berlin in 1989; a particular playing of a particular CD of Bernstein's 1989 Ninth in Berlin; the Messiah sing-in in Austin, TX, in 1995."))

(defrelation Frequency
             (Name-In-Cyc Frequency "#$Frequency")
             (Derived-Numeric-Attribute-Type Frequency)
             (Subclass-Of Frequency Rate)
             (Subclass-Of Frequency Physical-Attribute)
             (Set-Or-Collection Frequency)
             (Arity Frequency 1)
             (Documentation Frequency
              "A collection of physical attributes; a subset of Rate.  Each element of Frequency is a measurement of the number of times something happens during some time interval.  Elements of Frequency may be either fixed values, such as 103 kiloHertz, or a range, such as Yearly, Hourly, or Rarely.  See Unit-Of-Frequency for the units used by Cyc to measure instances of Frequency, e.g. (Times-Per-Second 35), (Kilo-Hertz 103).  Instances of Frequency are important in the characterization of types of Wave-Propagation."))

(defrelation Logical-Connective
             (Name-In-Cyc Logical-Connective "#$LogicalConnective")
             (Relationship-Type Logical-Connective)
             (Subclass-Of Logical-Connective Relationship)
             (Set-Or-Collection Logical-Connective)
             (Arity Logical-Connective 1)
             (Documentation Logical-Connective
              "A collection of mathematical objects, including the basic logical connectives.  Each element of Logical-Connective is a Cyc predicate which takes one or more truth-valued expressions as arguments and returns a truth-valued argument.  The elements of Logical-Connective include :and, :or, :not, and :=>."))

(defrelation Hospital
             (Name-In-Cyc Hospital "#$Hospital")
             (Existing-Object-Type Hospital)
             (Subclass-Of Hospital Medical-Care-Institution)
             (Subclass-Of Hospital Local-Customer-Contact-Point)
             (Subclass-Of Hospital Medical-Care-Organization)
             (Set-Or-Collection Hospital)
             (Arity Hospital 1)
             (Documentation Hospital
              "Local (at one site) organizations composed of physicians, support personnel, and usually also administrators.  The main function of the organization is to provide medical care (short or long term) to a number of patients/clients, for a fee if the patient/client is able to pay.  A clinic services out-patients, while a hospital has in-patients.  A hospital may have a clinic as a sub-organization, though."))

(defrelation Verb
             (Name-In-Cyc Verb "#$Verb")
             (Linguistic-Object-Type Verb)
             (Subclass-Of Verb Speech-Part)
             (Set-Or-Collection Verb)
             (Arity Verb 1)
             (Documentation Verb
              "The collection of all verbs. Verbs usually denote events, states, or processes. Verbs can be conjugated. Example: `eat'."))

(defrelation Sea-Water
             (Name-In-Cyc Sea-Water "#$SeaWater")
             (Tangible-Stuff-State-Type Sea-Water)
             (Subclass-Of Sea-Water |(LIQUID-FN WATER-SALINE)|)
             (Set-Or-Collection Sea-Water)
             (Arity Sea-Water 1)
             (Documentation Sea-Water
              "A collection of tangible things; a subset of both Liquid-Tangible-Thing and Water-Saline.  Each element of Sea-Water is a portion of salt water with the kind of mineral concentrations found in oceans--including the oceans themselves."))

(defrelation Entertainment-Event
             (Name-In-Cyc Entertainment-Event "#$EntertainmentEvent")
             (Temporal-Object-Type Entertainment-Event)
             (Script-Type Entertainment-Event)
             (Subclass-Of Entertainment-Event Service-Event)
             (Subclass-Of Entertainment-Event Human-Activity)
             (Set-Or-Collection Entertainment-Event)
             (Arity Entertainment-Event 1)
             (Documentation Entertainment-Event
              "The collection of activites performed primarily to amuse or entertain Persons.
Note: This is more general than Entertainment-Performance because it may not entail a performance per se.  E.g., one of its subsets is Sight-Seeing, but most sightseeing events are not Entertainment-Performances.
Note:  This is different from the collection Recreational-Activity in the following way: entertainment events are necessarily done for the enjoyment or recreation of someone else; in other words, there is an audience.  Also, the performers of a Recreational-Activity are generally doing it `for fun', and (expect to) enjoy it, whereas some or all of the performers of an Entertainment-Event may be doing it as a Working-Event --- i.e, `for a living' and may (expect to) not enjoy it. "))

(defrelation Physiological-Process
             (Name-In-Cyc Physiological-Process "#$PhysiologicalProcess")
             (Temporal-Stuff-Type Physiological-Process)
             (Default-Disjoint-Script-Type Physiological-Process)
             (Subclass-Of Physiological-Process Biological-Event)
             (Set-Or-Collection Physiological-Process)
             (Arity Physiological-Process 1)
             (Documentation Physiological-Process
              "The collection of events in which an organism does (typically unconsciously) some process which involves alteration of that agent's physiological state.  A Physiological-Process is normally one that is done by organisms (or parts of organisms) in the course of living.  A large subset of Physiological-Process is Bodily-Function-Event, including its subsets Respiration, Digesting-In-Stomach, and Heartbeating.  (Compare this collection with Physiological-Condition, whose elements are more episodic than process-like.) "))

(defrelation December
             (Name-In-Cyc December "#$December")
             (Month-Of-Year-Type December)
             (Subclass-Of December Calendar-Month)
             (Set-Or-Collection December)
             (Arity December 1))

(defrelation Cleaning
             (Name-In-Cyc Cleaning "#$Cleaning")
             (Temporal-Stuff-Type Cleaning)
             (Default-Disjoint-Script-Type Cleaning)
             (Subclass-Of Cleaning Removing-Something)
             (Subclass-Of Cleaning Intrinsic-State-Change-Event)
             (Subclass-Of Cleaning Human-Activity)
             (Subclass-Of Cleaning Purposeful-Action)
             (Set-Or-Collection Cleaning)
             (Arity Cleaning 1)
             (Documentation Cleaning
              "A collection of events.  In each Cleaning event, dirt (or other unwanted substances) is removed from the Object-Of-State-Change of that event.  If a Cleaning event is successful, then the Dirtiness level of the object will have been lowered."))

(defrelation Unit-Of-Speed
             (Name-In-Cyc Unit-Of-Speed "#$UnitOfSpeed")
             (Interconvertible-Unit-Type Unit-Of-Speed)
             (Subclass-Of Unit-Of-Speed Unit-Of-Rate)
             (Subclass-Of Unit-Of-Speed Unit-Of-Measure)
             (Set-Or-Collection Unit-Of-Speed)
             (Arity Unit-Of-Speed 1)
             (Documentation Unit-Of-Speed
              "The collection of functions which return elements of Speed.  For example, the value of the function Miles-Per-Hour applied to the number five -- (Miles-Per-Hour 5) -- is five miles per hour."))

(defrelation Non-Profit-Organization
             (Name-In-Cyc Non-Profit-Organization "#$NonProfitOrganization")
             (Existing-Object-Type Non-Profit-Organization)
             (Subclass-Of Non-Profit-Organization Organization)
             (Set-Or-Collection Non-Profit-Organization)
             (Arity Non-Profit-Organization 1)
             (Documentation Non-Profit-Organization
              "A collection of organizations.  An element of Non-Profit-Organization is an organization whose activities are not conducted for the profit of any owner.  Thus, non-profit organizations are typically exempt from business taxes.  Most non-profit organizations are charities, clubs, schools, political action groups, political parties, or churches.  See also the specialization Non-Profit-Corporation."))

(defrelation Non-Predicate-Function
             (Name-In-Cyc Non-Predicate-Function "#$NonPredicateFunction")
             (Relationship-Type Non-Predicate-Function)
             (Collection Non-Predicate-Function)
             (Subclass-Of Non-Predicate-Function
              Function-The-Mathematical-Type)
             (Set-Or-Collection Non-Predicate-Function)
             (Arity Non-Predicate-Function 1)
             (Documentation Non-Predicate-Function
              "The collection of functions in the Cyc language whose uses are to be treated as NATs (non-atomic terms).  In other words, these functions, when applied to arguments, form new terms that may then freely appear as arguments in other CycL expressions.  For example, consider Government-Fn.  It takes one argument, such as France, and the resulting NAT --- in this case (Government-Fn France) --- can be used anywhere in CycL expressions that an instance of Regional-Government could occur.  We could, instead, have created a specific new term `GovernmentOfFrance', asserted that it :Direct-Types Regional-Government, etc., but by having NATs we can drastically reduce the total size of the Cyc vocabulary of constant terms.  



This collection does not include: 

1) abstract functions, like the one-to-one function that must exist between the positive integers and the rational numbers; 

2) Lambda functions (functions which bind variables in arbitrary CycL expressions; The-Set-Of is an example); 

3) Predicates.  Predicates can be thought of as functions from a set of arguments to a truth value.  Wffs that start with a predicate can even serve as terms, i.e., as arguments to other predicates, but when they do so they can't just be replaced with their truth value!  So Predicate is a subset of Function-The-Mathematical-Type but not a subset of Non-Predicate-Function."))

(defrelation Contact-Location-Type
             (Name-In-Cyc Contact-Location-Type "#$ContactLocationType")
             (Collection Contact-Location-Type)
             (Subclass-Of Contact-Location-Type Existing-Object-Type)
             (Set-Or-Collection Contact-Location-Type)
             (Arity Contact-Location-Type 1)
             (Documentation Contact-Location-Type
              "A collection of collections.  Each element of Contact-Location-Type is a collection of places  at which a particular agent may be contacted; such collections may be characterized in several different ways: (a) by method of contact (e.g., Voice-Phone-Location, Fax-Location); (b) by purpose of contact (e.g., Billing-Location, Shipping-Location, Emergency-Contact); (c) by the agent's relationship to those places (e.g., Human-Residence, Workplace).  Note that particular places may fall under different subsets of Contact-Location-Type for different agents; for example, one person's home might be another's vacation location."))

(defrelation Wood
             (Name-In-Cyc Wood "#$Wood")
             (Tangible-Stuff-Composition-Type Wood)
             (Subclass-Of Wood Organic-Stuff)
             (Subclass-Of Wood Solid-Tangible-Thing)
             (Subclass-Of Wood Plant-Product)
             (Subclass-Of Wood Structural-Support-Stuff)
             (Set-Or-Collection Wood)
             (Arity Wood 1)
             (Documentation Wood
              "A collection of tangible things.  Each element of Wood is a piece of solid, rigid, fibrous organic substance in or Derived-From the inside of the trunks and limbs of trees.  For example, any pieces of wooden furniture, doors, boards, fences, firewood, wooden spoons, etc.  Use the Cyc function Wood-Fn with a collection of trees of one species, to designate the collection of all pieces of wood from a particular species of tree; e.g., (Wood-Fn Oak-Tree).  Note: cork and amber are NOT included in the collection Wood."))

(defrelation Drug-Therapy
             (Name-In-Cyc Drug-Therapy "#$DrugTherapy")
             (Script-Type Drug-Therapy)
             (Subclass-Of Drug-Therapy Medical-Treatment-Event)
             (Set-Or-Collection Drug-Therapy)
             (Arity Drug-Therapy 1)
             (Documentation Drug-Therapy
              "A collection of medical care events in which drugs accomplish a medical purpose.  An instance of Drug-Therapy is the result of an instance of Administering-A-Drug (q.v.).  An instance of Drug-Therapy is the event of the patient's body undergoing the physiological effects of the drug it was given.  
Note: Drug-Therapy events do not include the administration of the drug; rather, they are the results of such administrations.  Cf. Administering-A-Drug."))

(defrelation Money-Rate
             (Name-In-Cyc Money-Rate "#$MoneyRate")
             (Derived-Numeric-Attribute-Type Money-Rate)
             (Subclass-Of Money-Rate Scalar-Interval)
             (Set-Or-Collection Money-Rate)
             (Arity Money-Rate 1)
             (Documentation Money-Rate
              "A collection of rates; a subset of Scalar-Interval.  Each element of Money-Rate is a measurement applied to something that is measured by money-per-amount; e.g., $1.14 per gallon, $10,000 per acre, $250 per week, $0.89 per pound.  Important subsets of Money-Rate include: Money-Per-Volume-Rate, Money-Per-Area-Rate, Money-Per-Mass-Rate, Monetary-Flow-Rate.  The units for Money-Rate measures are terms such as Dollars-Per-Square-Foot, Dollars-Per-Hour, Yen per kilo, etc."))

(defrelation Corner-2or3d
             (Name-In-Cyc Corner-2or3d "#$Corner-2or3d")
             (Region-Type Corner-2or3d)
             (Subclass-Of Corner-2or3d Partially-Tangible)
             (Set-Or-Collection Corner-2or3d)
             (Arity Corner-2or3d 1)
             (Documentation Corner-2or3d
              "The collection of all regions centered around a point where two edges of a sheet-like object meet at an angle or where three or more surfaces (together with three or more solid edges dividing them) meet at one place forming a solid angle.  Includes 2-dimensional corners and 3 dimensional corners.  Corners are either Convex or Concave with respect to some perspective."))

(defrelation Sound-Information-Bearing-Thing
             (Name-In-Cyc Sound-Information-Bearing-Thing
              "#$SoundInformationBearingThing")
             (Temporal-Stuff-Type Sound-Information-Bearing-Thing)
             (Subclass-Of Sound-Information-Bearing-Thing
              Information-Bearing-Thing)
             (Subclass-Of Sound-Information-Bearing-Thing
              Information-Bearing-Wave-Propagation)
             (Subclass-Of Sound-Information-Bearing-Thing Audible-Sound)
             (Set-Or-Collection Sound-Information-Bearing-Thing)
             (Arity Sound-Information-Bearing-Thing 1)
             (Documentation Sound-Information-Bearing-Thing
              "A collection of information bearing things (IBTs); a subset of Information-Bearing-Wave-Propagation.  Each element of Sound-Information-Bearing-Thing is an audible sound that contains information: a spoken utterance, the performance of a sonata, a Morse code message tapped out on a prison wall, etc."))

(defrelation Borrowing-Something
             (Name-In-Cyc Borrowing-Something "#$BorrowingSomething")
             (Temporal-Object-Type Borrowing-Something)
             (Default-Disjoint-Script-Type Borrowing-Something)
             (Subclass-Of Borrowing-Something Transferring-Possession)
             (Subclass-Of Borrowing-Something Temporary-Change-Of-User-Rights)
             (Set-Or-Collection Borrowing-Something)
             (Arity Borrowing-Something 1)
             (Documentation Borrowing-Something
              "A collection of events; a subset of Temporary-Change-Of-User-Rights.  In an instance of Borrowing-Something, an Agent takes temporary control of something, usually with the permission of its owner(s).  Generally, the lending agent expects the borrowing agent to use the object for one of its normal functions (Intended-Behavior-Capable)."))

(defrelation Financial-Account-Tender-Object
             (Name-In-Cyc Financial-Account-Tender-Object
              "#$FinancialAccountTenderObject")
             (Existing-Object-Type Financial-Account-Tender-Object)
             (Subclass-Of Financial-Account-Tender-Object Tender-Object)
             (Set-Or-Collection Financial-Account-Tender-Object)
             (Arity Financial-Account-Tender-Object 1)
             (Documentation Financial-Account-Tender-Object
              "A collection of objects.  Each element of Financial-Account-Tender-Object is an object, e.g., a check or a credit card, that serves as a vehicle for offering payment in funds drawn on an associated instance of Financial-Account.  The liquidity of an element of Financial-Account-Tender-Object depends on the Account-Balance or Account-Status of the financial account which that object legally represents.  This collection excludes the elements of Currency and Travellers-Check."))

(defrelation Medical-Care-Provider
             (Name-In-Cyc Medical-Care-Provider "#$MedicalCareProvider")
             (Existing-Object-Type Medical-Care-Provider)
             (Subclass-Of Medical-Care-Provider Social-Being)
             (Set-Or-Collection Medical-Care-Provider)
             (Arity Medical-Care-Provider 1)
             (Documentation Medical-Care-Provider
              "The collection of agents who provide medical care in a professional capacity."))

(defobject A-Few-Seconds-Duration
   (Order-Of-Magnitude-Interval A-Few-Seconds-Duration)
   (Time-Quantity A-Few-Seconds-Duration)
   (Name-In-Cyc A-Few-Seconds-Duration "#$AFewSecondsDuration")
   (Documentation A-Few-Seconds-Duration "Duration of 2 to 30 seconds"))

(defrelation Identical-In-Attribute
             (Nth-Domain Identical-In-Attribute 1 Thing)
             (Nth-Domain Identical-In-Attribute 2 Thing)
             (Nth-Domain Identical-In-Attribute 3 Attribute-Type)
             (Name-In-Cyc Identical-In-Attribute "#$identicalInAttribute")
             (Ternary-Predicate Identical-In-Attribute)
             (Relation Identical-In-Attribute)
             (Arity Identical-In-Attribute 3)
             (Documentation Identical-In-Attribute
              "(Identical-In-Attribute THING1 THING2 ATTRIBUTE) means that the two things THING1 and THING2 have the same values of the Attribute-Type ATTRIBUTE.  Here 'the same' means complete identity or very close resemblance -- what this means, and what the standard of closeness or identity is, depends on the context, but Identical-In-Attribute and Different-In-Attribute cannot both be correctly asserted of the same two things.  See also Resembles-In-Attribute, and Different-In-Attribute."))

(defrelation Animal
             (Synonymous-External-Concept Animal Sensus-Information1997
              "ANIMAL")
             (Transport-Via-Fn Animal |(TRANSPORT-VIA-FN ANIMAL)|)
             (Name-In-Cyc Animal "#$Animal")
             (Biological-Kingdom Animal)
             (Subclass-Of Animal Perceptual-Agent)
             (Subclass-Of Animal Animal-Blo)
             (Subclass-Of Animal Solid-Tangible-Thing)
             (Subclass-Of Animal Organism-Whole)
             (Set-Or-Collection Animal)
             (Arity Animal 1)
             (Documentation Animal
              "The collection of all animals; this large class of organisms is one instance of Biological-Kingdom.  Animals are typically motile, living, whole organisms; they are elements of Heterotroph, incapable of performing instances of Photosynthesis.  Animal cells contain cholesterol and lack cell walls made of cellulose.  Person is a subset of Animal; see also Non-Person-Animal."))

(defobject North-Generally
   (Geographical-Direction North-Generally)
   (Name-In-Cyc North-Generally "#$North-Generally")
   (Documentation North-Generally
    "The general direction of North.  The element of Vector-Interval that comprises the cone-shaped set of vectors pointing (from some reference point) within approximately forty-five degrees of North-Directly."))

(defrelation Evaluatable-Function
             (Name-In-Cyc Evaluatable-Function "#$EvaluatableFunction")
             (Collection Evaluatable-Function)
             (Subclass-Of Evaluatable-Function Function-The-Mathematical-Type)
             (Set-Or-Collection Evaluatable-Function)
             (Arity Evaluatable-Function 1)
             (Documentation Evaluatable-Function
              "A collection of Cyc functions.  Each element of Evaluatable-Function is a Cyc function which is associated (via Lisp-Defun) with a piece of Heuristic Level (SubL) code that computes the result of applying the function to legal arguments.  See Plus-Fn for a good example.  An evaluatable function is evaluated only if none of its arguments is unbound."))

(defrelation Airport-Organization
             (Name-In-Cyc Airport-Organization "#$AirportOrganization")
             (Existing-Object-Type Airport-Organization)
             (Subclass-Of Airport-Organization Organization)
             (Set-Or-Collection Airport-Organization)
             (Arity Airport-Organization 1)
             (Documentation Airport-Organization
              "A collection of organizations.  An element of Airport-Organization is an organization that manages and controls particular airports and their appurtenant facilities; e.g., La-Guardia-Airport."))

(defrelation Inter-Arg-Isa5-3
             (Nth-Domain Inter-Arg-Isa5-3 1 Quintary-Predicate)
             (Nth-Domain Inter-Arg-Isa5-3 2 Collection)
             (Nth-Domain Inter-Arg-Isa5-3 3 Collection)
             (Name-In-Cyc Inter-Arg-Isa5-3 "#$interArgIsa5-3")
             (Ternary-Predicate Inter-Arg-Isa5-3)
             (Relation Inter-Arg-Isa5-3)
             (Arity Inter-Arg-Isa5-3 3)
             (Documentation Inter-Arg-Isa5-3
              "(Inter-Arg-Isa5-3 PRED INDEPENDENT-ARG-COL DEPENDENT-ARG-COL) Base-KB) means that, when an instance of INDEPENDENT-ARG-COL appears as the fifth argument to PRED, the third argument in that assertion is constrained to be an instance of DEPENDENT-ARG-COL."))

(defrelation Meta-Knowledge-Predicate
             (Name-In-Cyc Meta-Knowledge-Predicate "#$MetaKnowledgePredicate")
             (Predicate-Category Meta-Knowledge-Predicate)
             (Subclass-Of Meta-Knowledge-Predicate Modal-Relationship)
             (Subclass-Of Meta-Knowledge-Predicate Predicate)
             (Set-Or-Collection Meta-Knowledge-Predicate)
             (Arity Meta-Knowledge-Predicate 1)
             (Documentation Meta-Knowledge-Predicate
              "A collection of predicates.  Each element of Meta-Knowledge-Predicate is a predicate used in assertions about the Cyc ontology itself.  Examples: My-Creator, Cyclist-Notes, Shared-Notes, Salient-Assertions, Axiom-Conclusion-Action-Type."))

(defrelation Human-Culture-Type
             (Name-In-Cyc Human-Culture-Type "#$HumanCultureType")
             (Collection Human-Culture-Type)
             (Subclass-Of Human-Culture-Type Conventional-Classification-Type)
             (Subclass-Of Human-Culture-Type Existing-Object-Type)
             (Set-Or-Collection Human-Culture-Type)
             (Arity Human-Culture-Type 1)
             (Documentation Human-Culture-Type
              "A collection of all collections.  Each Human-Culture-Type is a set of Persons with its own distinctive culture.  Some elements of Human-Culture-Type are:  French-Person, Ethnic-Group-Of-Australian-Aborigines, etc."))

(defrelation Terminal-Physiological-Condition
             (Name-In-Cyc Terminal-Physiological-Condition
              "#$TerminalPhysiologicalCondition")
             (Physiological-Condition-Type Terminal-Physiological-Condition)
             (Subclass-Of Terminal-Physiological-Condition
              Life-Threatening-Condition)
             (Set-Or-Collection Terminal-Physiological-Condition)
             (Arity Terminal-Physiological-Condition 1)
             (Documentation Terminal-Physiological-Condition
              "A collection of ailments which are distinguished by the shared characteristic that if left untreated, those ailments will certainly cause a patient to die -- and may eventually do so despite treatment.  Subsets of this collection include: Diabetes, Cancer, Botulism, and Rabies.
Note that this does not mean: `are 100% likely to lead to death if untreated'.  It does not mean `the organism will not seek treatment elsewhere,.  Also note that this is somewhat context dependent."))

(defrelation Taxonomic-Slot
             (Name-In-Cyc Taxonomic-Slot "#$TaxonomicSlot")
             (Predicate-Category Taxonomic-Slot)
             (Subclass-Of Taxonomic-Slot Slot)
             (Set-Or-Collection Taxonomic-Slot)
             (Arity Taxonomic-Slot 1)
             (Documentation Taxonomic-Slot
              "A collection of predicates.  Each element of Taxonomic-Slot is a binary predicate used in assertions indicating the position of a Cyc constant in one of Cyc's taxonomies (for Collections, Events, etc.).  Examples: :Direct-Types, :Direct-Superclasses, Partitioned-Into, Co-Extensional, Disjoint-With, Has-Members, Sub-Belief-System, Sub-Goals."))

(defrelation Starts-Relative-To-End-Of
             (Nth-Domain Starts-Relative-To-End-Of 1 Temporal-Thing)
             (Nth-Domain Starts-Relative-To-End-Of 2 Time-Quantity)
             (Nth-Domain Starts-Relative-To-End-Of 3 Temporal-Thing)
             (Name-In-Cyc Starts-Relative-To-End-Of "#$startsRelativeToEndOf")
             (Ternary-Predicate Starts-Relative-To-End-Of)
             (Relation Starts-Relative-To-End-Of)
             (Arity Starts-Relative-To-End-Of 3)
             (Documentation Starts-Relative-To-End-Of
              " (Starts-Relative-To-End-Of ?X ?D ?Y) means that the ?X starts duration ?D after ?Y ends.  That is, the Starting-Point of ?X is after the Ending-Point of ?Y, by an amount of time ?D."))

(defrelation Shipping-Location
             (Name-In-Cyc Shipping-Location "#$ShippingLocation")
             (Conventional-Classification-Type Shipping-Location)
             (Contact-Location-Type Shipping-Location)
             (Subclass-Of Shipping-Location Mailing-Location)
             (Subclass-Of Shipping-Location Humanly-Occupied-Spatial-Object)
             (Set-Or-Collection Shipping-Location)
             (Arity Shipping-Location 1)
             (Documentation Shipping-Location
              "A collection of places; a subset of Contact-Location.  Each element of Shipping-Location is a location to which merchandise is physically delivered, e.g., a house, an office, a corporate mailroom, a post office box."))

(defrelation Truth-Value
             (Name-In-Cyc Truth-Value "#$TruthValue")
             (Object-Type Truth-Value)
             (Subclass-Of Truth-Value Mathematical-Object)
             (Set-Or-Collection Truth-Value)
             (Arity Truth-Value 1)
             (Documentation Truth-Value
              "Truth-Value is a collection of mathematical objects; it contains the abstract, logical objects True and False."))

(defrelation Animal-Walking-Process
             (Name-In-Cyc Animal-Walking-Process "#$AnimalWalkingProcess")
             (Object-Type Animal-Walking-Process)
             (Temporal-Stuff-Type Animal-Walking-Process)
             (Default-Disjoint-Script-Type Animal-Walking-Process)
             (Subclass-Of Animal-Walking-Process Locomotion-Process)
             (Subclass-Of Animal-Walking-Process Simple-Whole-Body-Movement)
             (Set-Or-Collection Animal-Walking-Process)
             (Arity Animal-Walking-Process 1)
             (Documentation Animal-Walking-Process
              "The collection of individual Locomotion-Process es in which an Animal agent travels on foot using voluntary movements of its legs."))

(defrelation Contract-Negotiation
             (Name-In-Cyc Contract-Negotiation "#$ContractNegotiation")
             (Script-Type Contract-Negotiation)
             (Temporal-Object-Type Contract-Negotiation)
             (Subclass-Of Contract-Negotiation Purposeful-Action)
             (Subclass-Of Contract-Negotiation Negotiating)
             (Set-Or-Collection Contract-Negotiation)
             (Arity Contract-Negotiation 1)
             (Documentation Contract-Negotiation
              "The collection of negotiations intended to lead to the formation of a contract between the participants (or the parties they represent in the negotiations)."))

(defrelation Information-Removing
             (Name-In-Cyc Information-Removing "#$InformationRemoving")
             (Temporal-Stuff-Type Information-Removing)
             (Subclass-Of Information-Removing Information-Updating)
             (Set-Or-Collection Information-Removing)
             (Arity Information-Removing 1)
             (Documentation Information-Removing
              "The collection of actions in which information is removed from or erased from an IBO (Information-Bearing-Object).  After the action, the remaining info content, if any, of the IBO acted on is only a part of what it started out to be.  The removed information doesn't go anywhere; after removal it doesn't end up encoded in something else."))

(defrelation Sleeping
             (Name-In-Cyc Sleeping "#$Sleeping")
             (Temporal-Stuff-Type Sleeping)
             (Default-Disjoint-Script-Type Sleeping)
             (Subclass-Of Sleeping Bodily-Function-Event-Involuntary)
             (Subclass-Of Sleeping Resting-Relaxing)
             (Set-Or-Collection Sleeping)
             (Arity Sleeping 1)
             (Documentation Sleeping
              "The collection of all Sleeping events, i.e., natural processes in which an Animal engages in some unconscious mental activity coupled with physical rest.  Sleeping is a subset of Bodily-Function-Event-Involuntary; the process of Sleeping is essential for the health of sentient animals."))

(defrelation Speed
             (Name-In-Cyc Speed "#$Speed")
             (Derived-Numeric-Attribute-Type Speed)
             (Subclass-Of Speed Scalar-Interval)
             (Subclass-Of Speed Physical-Attribute)
             (Subclass-Of Speed Rate)
             (Set-Or-Collection Speed)
             (Arity Speed 1)
             (Documentation Speed
              "A subset of Rate.  Each element of Speed is a rate of change in position (of an object, wave front, etc.).  Elements of Speed may be either fixed amounts, such as (Miles-Per-Hour 55), or a range, such as Walking-Speed or Calm-Wind-Speed.  See Unit-Of-Speed for the units used by Cyc to measure speeds."))

(defrelation Negotiating
             (Name-In-Cyc Negotiating "#$Negotiating")
             (Temporal-Stuff-Type Negotiating)
             (Default-Disjoint-Script-Type Negotiating)
             (Subclass-Of Negotiating Communicating)
             (Subclass-Of Negotiating Thinking)
             (Set-Or-Collection Negotiating)
             (Arity Negotiating 1)
             (Documentation Negotiating
              "A collection of Communicating events.  In a Negotiating, an Agent communicates facts and changes in the Agent's attitude or conditions to another Agent, with the (ostensible) purpose of their reaching an Agreement."))

(defrelation Group
             (Name-In-Cyc Group "#$Group")
             (Object-Type Group)
             (Subclass-Of Group Temporal-Thing)
             (Subclass-Of Group Individual)
             (Subclass-Of Group Situation)
             (Set-Or-Collection Group)
             (Arity Group 1)
             (Documentation Group
              "A collection of objects.  Each element of Group is a composite object, made up of individual members which may be either events or objects.  A group is related to its members by the predicate Group-Members (q.v.).  Note that elements of Group are NOT collections; consider: a group has temporal extent and may have spatial extent and location, while a collection is timeless and abstract.  Nonetheless, it is possible to define a collection parallel to any group, so that the Group-Members of that group are also instances (:Direct-Types's) of the correlated collection; e.g., each toe on my left foot is both an element of the collection of my left toes and a member of the group of toes on my left foot.  But that group (of my left toes) is a spatiotemporal thing, while the correlated collection (of my left toes) is NOT.  Another example: if I consider a certain flock of pigeons as having a location, a spatial extent, and a time of existence, then I am considering (the pigeon flock) a group and NOT a collection.  As a default, a group whose Group-Members are elements of Something-Existing is itself an element of Something-Existing; and a group whose Group-Members are elements of Event is itself an element of Event.  Finally, unlike a collection, a group cannot be empty; a group must have some Group-Members, or there is no group (at that point in time).  Examples of Group: Queens-Guard, Three-Wise-Men, Santas-Reindeer, International-Community."))

(defrelation Food-Ready-To-Eat
             (Name-In-Cyc Food-Ready-To-Eat "#$Food-ReadyToEat")
             (Product-Type Food-Ready-To-Eat)
             (Existing-Stuff-Type Food-Ready-To-Eat)
             (Subclass-Of Food-Ready-To-Eat Food-And-Drink)
             (Subclass-Of Food-Ready-To-Eat Organic-Stuff)
             (Subclass-Of Food-Ready-To-Eat Food)
             (Set-Or-Collection Food-Ready-To-Eat)
             (Arity Food-Ready-To-Eat 1)
             (Documentation Food-Ready-To-Eat
              "A collection of food.  Each instance of Food-Ready-To-Eat is an item of food of a type, and in a state, that people or animals can and normally do eat without any further preparation.  This includes foods which have already been prepared and foods which don't need any preparation before eating.  Hot baked instances of Pizza and ripe instances of Apple-The-Fruit all belong in this collection.  To account for differences across cultures or species, use a specialized Microtheory (see Comments on Food-And-Drink, Edible-Stuff)."))

(defrelation Unit-Multiplication-Factor
             (Nth-Domain Unit-Multiplication-Factor 1 Unit-Of-Measure)
             (Nth-Domain Unit-Multiplication-Factor 2 Unit-Of-Measure)
             (Nth-Domain Unit-Multiplication-Factor 3 Real-Number)
             (Name-In-Cyc Unit-Multiplication-Factor
              "#$unitMultiplicationFactor")
             (Ternary-Predicate Unit-Multiplication-Factor)
             (Functional-Predicate Unit-Multiplication-Factor)
             (Relation Unit-Multiplication-Factor)
             (Arity Unit-Multiplication-Factor 3)
             (Documentation Unit-Multiplication-Factor
              "(Unit-Multiplication-Factor UNIT1 UNIT2 NUM) means that the conversion factor between quantities specified in units of UNIT1 and quantities specified in terms of UNIT2 is NUM.  For example, (Unit-Multiplication-Factor Inch Foot-Unit-Of-Measure 12).  UNIT1 and UNIT2 must belong to the same Interconvertible-Unit-Type.  Unit-Multiplication-Factor is a simplified version of Unit-Conversions which can be used when a multiplicative scaling relation exists between the two units."))

(defrelation Happiness
             (Name-In-Cyc Happiness "#$Happiness")
             (Feeling-Attribute-Type Happiness)
             (Subclass-Of Happiness Feeling-Attribute)
             (Set-Or-Collection Happiness)
             (Arity Happiness 1)
             (Documentation Happiness
              "The enjoyment of pleasurable satisfaction that goes with well-being, security, effective accomplishments, or satisfied wishes.  As with all Feeling-Attribute-Types, this is a Collection -- the set of all possible amounts of happiness one can feel.  One instance of Happiness is `extremely happy'; another is `just a little bit happy'.  
Note:  Obviously there are no real units of measure for this quantity, ways of objectively measuring the amount of happiness possessed or gained or lost, etc., but still this has proven to be a useful way for Cyc to represent and reason with emotions.  E.g., one can have a rule that says that most people have a greater `amount' of happiness at their wedding than at their high school graduation, etc.  There are functions, such as Low-Amount-Fn, which take a Primitive-Attribute-Type (such as the instances of Feeling-Attribute-Type) such as Happiness and return as their value a certain-sized amount of that feeling; e.g., (Low-Amount-Fn Happiness) is an expression whose value is a positive but small amount of happiness, and that in turn will be an element of Happiness (and also will be an element of Feeling-Attribute and an element of Attribute-Value, etc.)  Feeling-Attribute-Types organize into a lattice; e.g., there are several more specialized forms of Happiness that are present in Cyc's ontology, such as Elation, Delight, Triumph-The-Feeling, etc."))

(defrelation Cell
             (Name-In-Cyc Cell "#$Cell")
             (Existing-Object-Type Cell)
             (Subclass-Of Cell Biological-Living-Object)
             (Set-Or-Collection Cell)
             (Arity Cell 1)
             (Documentation Cell
              "The collection of living cells; a subset of Biological-Living-Object.  Each element of Cell is one of the basic structural units of nearly all living things, consisting (at least) of cytoplasm bounded by a cell membrane. Only the living structures viruses, mitochondria, and plastids are not composed of cells."))

(defrelation Agentive-Noun
             (Name-In-Cyc Agentive-Noun "#$AgentiveNoun")
             (Linguistic-Object-Type Agentive-Noun)
             (Subclass-Of Agentive-Noun Speech-Part)
             (Set-Or-Collection Agentive-Noun)
             (Arity Agentive-Noun 1)
             (Documentation Agentive-Noun
              "The collection of all nouns in the agentive form.  Agentive nouns usually denote the `doer' or `performer' of some action, and often end in `-er' or `-or'. Example: `runner'."))

(defrelation Losing-User-Rights
             (Name-In-Cyc Losing-User-Rights "#$LosingUserRights")
             (Temporal-Object-Type Losing-User-Rights)
             (Subclass-Of Losing-User-Rights Transfer-Out)
             (Subclass-Of Losing-User-Rights Change-In-User-Rights)
             (Set-Or-Collection Losing-User-Rights)
             (Arity Losing-User-Rights 1)
             (Documentation Losing-User-Rights
              "A collection of events.  In an instance of Losing-User-Rights, some Agent loses possession of something.  Thus, in such an event, that agent loses a previously held right (viz., some User-Rights-Attribute) to use some item.  The item in question is identified as the Object-Of-Possession-Transfer, and the agent is the From-Possessor (i.e., the one from whom possession is taken).  The Agent may or may not be a Deliberate-Actors in the event; e.g., selling one's car is done on purpose, but having one's car repossessed probably isn't.  If either of those two events happen to you, though, it is an element of the collection Losing-User-Rights."))

(defrelation Commercial-Activity
             (Name-In-Cyc Commercial-Activity "#$CommercialActivity")
             (Temporal-Object-Type Commercial-Activity)
             (Default-Disjoint-Script-Type Commercial-Activity)
             (Subclass-Of Commercial-Activity Human-Activity)
             (Subclass-Of Commercial-Activity Transaction)
             (Set-Or-Collection Commercial-Activity)
             (Arity Commercial-Activity 1)
             (Documentation Commercial-Activity
              "This is a large collection of events.  As can be seen from its subsets, it embraces all types of buying, selling, offering to sell, offering to buy, requesting bids, performing services for hire, advertising, manufacturing for sale, etc."))

(defrelation Insurance-Provider
             (Name-In-Cyc Insurance-Provider "#$InsuranceProvider")
             (Existing-Object-Type Insurance-Provider)
             (Subclass-Of Insurance-Provider Service-Organization)
             (Set-Or-Collection Insurance-Provider)
             (Arity Insurance-Provider 1)
             (Documentation Insurance-Provider
              "A collection of organizations; a subset of Service-Organization.  An element of Insurance-Provider is an organization whose Main-Function is to provide financial and material protection to its clients in the event of sickness, death, natural disaster, loss, theft, lawsuits, etc.  (Insurers may specialize in one or more of those areas.)  Elements of Insurance-Provider may belong to either Commercial-Service-Organization or Non-Profit-Organization (including insurance providers belonging to Legal-Government-Organization).  Examples include State Farm Insurance Co., Aetna Casualty Co., Lutheran Brotherhood, and all fifty members of U.S. State-Medicaid-Administration-Organizations."))

(defrelation Military-Officer
             (Name-In-Cyc Military-Officer "#$MilitaryOfficer")
             (Occupation-Type Military-Officer)
             (Subclass-Of Military-Officer Leader)
             (Subclass-Of Military-Officer Military-Person)
             (Set-Or-Collection Military-Officer)
             (Arity Military-Officer 1)
             (Documentation Military-Officer "A collection of people, a subset 
of Military-Person. Each element of this collection is
somebody who is an officer in some Military-Organization,
e.g., an element of Admiral or Lieutenant."))

(defrelation Afternoon
             (Name-In-Cyc Afternoon "#$Afternoon")
             (Temporal-Object-Type Afternoon)
             (Subclass-Of Afternoon Qualitative-Time-Of-Day)
             (Set-Or-Collection Afternoon)
             (Arity Afternoon 1)
             (Documentation Afternoon
              "An Afternoon is the daily Event where the Sun moves from its `highest' position in the daily cycle and `sets', i.e from noon till Sunset.  A Midday overlaps the start of an Afternoon, and an Evening is Contiguous-After an Afternoon.  Each Afternoon is Temporally-Finished-By a Sunset."))

(defrelation Borders-On
             (Subrelation-Of Borders-On Adjacent-To)
             (Subrelation-Of Borders-On Touches-Directly)
             (Slot-Inverse Borders-On Borders-On)
             (Domain Borders-On Geographical-Region)
             (Range Borders-On Geographical-Region)
             (Name-In-Cyc Borders-On "#$bordersOn")
             (Symmetric-Binary-Predicate Borders-On)
             (Slot Borders-On)
             (Relation Borders-On)
             (Arity Borders-On 2)
             (Binary-Relation Borders-On)
             (Documentation Borders-On
              "(Borders-On REGION-1 REGION-2) means that the Geographical-Region REGION-1 and the Geographical-Region REGION-2 are physically adjacent to each other.  Examples: (Borders-On Central-USA-Time-Zone Mountain-USA-Time-Zone), (Borders-On Nepal Tibet)."))

(defrelation Lighting-Device
             (Name-In-Cyc Lighting-Device "#$LightingDevice")
             (Existing-Object-Type Lighting-Device)
             (Subclass-Of Lighting-Device Powered-Device)
             (Subclass-Of Lighting-Device Physical-Device)
             (Set-Or-Collection Lighting-Device)
             (Arity Lighting-Device 1)
             (Documentation Lighting-Device
              "A collection of physical devices.  An instance of Lighting-Device has the Primary-Function of providing light.  The light provided may be provided in different ways and for different specialized purposes.  For example, it may be for general illumination of a fixed area (as by instances of Candle, Lantern, Electric-Lamp, and Streetlight); or it may be for specially directed illumination (as by instances of Automotive-Light and Flashlight); or it may be for use in a signal or sign (as by instances of Traffic-Light and Indicator-Light); or it may be for some other special purposes (as by instances of StrobeLight)."))

(defobject Terrestrial-Frame-Of-Reference
   (Frame-Of-Reference Terrestrial-Frame-Of-Reference)
   (Name-In-Cyc Terrestrial-Frame-Of-Reference "#$TerrestrialFrameOfReference")
   (Documentation Terrestrial-Frame-Of-Reference
    "The terrestrial frame of reference is the unique individual Frame-Of-Reference that generally regards the surface of the Planet-Earth as fixed in the background space.  It permits fixed notions of Vertical-Orientation and Horizontal-Orientation.  There are multiple standard coordinate systems based on the Terrestrial-Frame-Of-Reference, including Latitude and Longitude, Earth-Centered Cartesian, and others.  Various local frames of reference and coordinate systems assume the Terrestrial-Frame-Of-Reference."))

(defrelation Assertion
             (Name-In-Cyc Assertion "#$Assertion")
             (Collection Assertion)
             (Object-Type Assertion)
             (Subclass-Of Assertion Individual)
             (Subclass-Of Assertion Cyc-Indexed-Term)
             (Subclass-Of Assertion Computational-Object)
             (Subclass-Of Assertion Abstract-Information)
             (Set-Or-Collection Assertion)
             (Arity Assertion 1)
             (Documentation Assertion
              "A collection of computational objects.  Each instance of Assertion is either (1) an assertion reified in the Cyc Knowledge Base (i.e., a formula and its associated datastructure, actually in the Cyc KB), or (2) an Epistemological Level Cyc-Formula that can be canonicalized and reified as one or more KB assertions.  Assertion is used as an argument type for meta-predicates such as Overrides."))

(defrelation County
             (Name-In-Cyc County "#$County")
             (Spatially-Disjoint-Region-Type County)
             (Subclass-Of County Geopolitical-Entity)
             (Set-Or-Collection County)
             (Arity County 1)
             (Documentation County
              "A collection of geopolitical entities.  An element of County is a lesser geopolitical region, having an area typically larger than a City but smaller than a State-Geopolitical.  Traditionally, a County area was within one day's horseback ride from the County Seat."))

(defrelation Resting-Relaxing
             (Name-In-Cyc Resting-Relaxing "#$Resting-Relaxing")
             (Temporal-Stuff-Type Resting-Relaxing)
             (Default-Disjoint-Script-Type Resting-Relaxing)
             (Subclass-Of Resting-Relaxing Bodily-Function-Event)
             (Set-Or-Collection Resting-Relaxing)
             (Arity Resting-Relaxing 1)
             (Documentation Resting-Relaxing
              "The collection of events in which an animal abstains from strenuous physical activity."))

(defrelation Inter-Arg-Isa1-2
             (Nth-Domain Inter-Arg-Isa1-2 1 Predicate)
             (Nth-Domain Inter-Arg-Isa1-2 2 Collection)
             (Nth-Domain Inter-Arg-Isa1-2 3 Collection)
             (Name-In-Cyc Inter-Arg-Isa1-2 "#$interArgIsa1-2")
             (Ternary-Predicate Inter-Arg-Isa1-2)
             (Meta-Relation Inter-Arg-Isa1-2)
             (Rule-Macro-Predicate Inter-Arg-Isa1-2)
             (Relation Inter-Arg-Isa1-2)
             (Arity Inter-Arg-Isa1-2 3)
             (Documentation Inter-Arg-Isa1-2
              "(Inter-Arg-Isa1-2 PRED INDEPENDENT-ARG-COL DEPENDENT-ARG-COL) means that, when an instance of INDEPENDENT-ARG-COL appears as the first argument to PRED, the second argument in that assertion is constrained to be an instance of DEPENDENT-ARG-COL."))

(defrelation Non-Profit-Employee
             (Name-In-Cyc Non-Profit-Employee "#$NonProfitEmployee")
             (Occupation-Type Non-Profit-Employee)
             (Subclass-Of Non-Profit-Employee Professional)
             (Set-Or-Collection Non-Profit-Employee)
             (Arity Non-Profit-Employee 1)
             (Documentation Non-Profit-Employee
              "A collection of persons; a subset of Professional.  Each element of Non-Profit-Employee is a worker who is employed by a non-profit organization such as a college, museum, or charity foundation."))

(defrelation Attribute-Type
             (Name-In-Cyc Attribute-Type "#$AttributeType")
             (Collection Attribute-Type)
             (Subclass-Of Attribute-Type Object-Type)
             (Set-Or-Collection Attribute-Type)
             (Arity Attribute-Type 1)
             (Documentation Attribute-Type
              "A collection of collections.  Each element of Attribute-Type is a collection of attributes.  Each element of Attribute-Type is a subset of Attribute-Value (q.v.).  Examples include Sensory-Attribute, Body-Part-Position, Orientation-Attribute, Security-Clearance-Level, Computer-Video-Resolution, Torque-Vector, and many more."))

(defrelation Snow-Process
             (Name-In-Cyc Snow-Process "#$SnowProcess")
             (Default-Disjoint-Script-Type Snow-Process)
             (Subclass-Of Snow-Process Precipitation-Process)
             (Set-Or-Collection Snow-Process)
             (Arity Snow-Process 1)
             (Documentation Snow-Process
              "The collection of events in which the condensed liquid water in clouds freezes into ice crystals which become substantial enough to fall to the earth as snow."))

(defrelation Free-Sheet
             (Name-In-Cyc Free-Sheet "#$FreeSheet")
             (Existing-Object-Type Free-Sheet)
             (Subclass-Of Free-Sheet Sheet-Of-Some-Stuff)
             (Set-Or-Collection Free-Sheet)
             (Arity Free-Sheet 1)
             (Documentation Free-Sheet
              "A collection of certain pieces of tangible stuff.  A Free-Sheet is a Sheet-Of-Some-Stuff which has two sides open to the environment.  I.e. over most of each of its surfaces, it is not Sheet-Surface-Connected with something else."))

(defobject Agreement-Note
   (Shared-Note Agreement-Note)
   (Name-In-Cyc Agreement-Note "#$AgreementNote")
   (Documentation Agreement-Note
    "Elements of Agreement (and of its subsets) are Microtheory instances containing propositions representing what some number of parties have agreed upon. An Agreement may contain a set of Obligations on the part of one or more of the parties. An Agreement may also be just a set of beliefs that the parties have decided to share. To indicate which propositions are true in an Agreement, regardless of whether they are true in reality, use Ist-Agreement. (Ist-Agreement AGREEMENT PROP) means that PROP is a Cyc-Formula expressing something that was agreed upon in AGREEMENT. Other relevant vocabulary: (Agreeing-Agents AGREEMENT AGENT) means that AGENT is one of the parties agreeing to AGREEMENT. (Sub-Agreements AGREEMENT1 AGREEMENT2) means that AGREEMENT2 is a part of (is included in) AGREEMENT1. (Governed-By-Agreement ACTION AGREEMENT) means that ACTION is governed by the terms of AGREEMENT. (Agreement-Forbids AGREEMENT AGENT ACTION-TYPE) means that AGREEMENT forbids AGENT from performing elements of ACTION-TYPE. (Agreement-Period AGREEMENT TIME) means that AGREEMENT is considered to be true during the time period TIME."))

(defrelation Corner-3d
             (Name-In-Cyc Corner-3d "#$Corner-3d")
             (Region-Type Corner-3d)
             (Subclass-Of Corner-3d Corner-2or3d)
             (Set-Or-Collection Corner-3d)
             (Arity Corner-3d 1)
             (Documentation Corner-3d
              "The collection of all regions where three or more surfaces of an object (which is considered three dimensional in current context), and three or more Edge-On-Objects, meet.  This includes corners of boxes, the tops of pyramids, etc.  Each Corner-3d includes some solid angle of part of the object."))

(defobject Conducts-Some-Heat
   (Thermal-Conductivity Conducts-Some-Heat)
   (Name-In-Cyc Conducts-Some-Heat "#$ConductsSomeHeat")
   (Documentation Conducts-Some-Heat
    "A measurable physical attribute.  Conducts-Some-Heat is the element of Thermal-Conductivity that represents the level of thermal conductivity in an object which conducts heat, but slowly."))

(defrelation Holiday-Season
             (Name-In-Cyc Holiday-Season "#$HolidaySeason")
             (Temporal-Object-Type Holiday-Season)
             (Subclass-Of Holiday-Season Event)
             (Set-Or-Collection Holiday-Season)
             (Arity Holiday-Season 1)
             (Documentation Holiday-Season
              "Instances of Holiday-Season are events which encompass the activities around a Holiday (or group of Holidays).  The clearest example is Christmas-Season.  While the exact boundaries of a Holiday-Season may be vague, it is nonethless a useful concept; in fact, much of the usefulness comes from that very fuzziness: it is hard to define exactly, but there are many things worth saying about it."))

(defrelation Winter-Season
             (Name-In-Cyc Winter-Season "#$WinterSeason")
             (Temporal-Object-Type Winter-Season)
             (Subclass-Of Winter-Season Season-Of-Year)
             (Set-Or-Collection Winter-Season)
             (Arity Winter-Season 1)
             (Documentation Winter-Season
              "The collection of Winter seasons.  In the Temperate-Climate-Cycle, generally a time of cold and dormancy.  Winter-Season represents the climatic aspects of Winter; for its purely temporal aspects, see Calendar-Winter."))

(defobject Sub-Abs
   (Format Sub-Abs)
   (Name-In-Cyc Sub-Abs "#$SubAbs")
   (Documentation Sub-Abs
    "If the predicate P has entry format Sub-Abs for one of its argument positions N, then, given some fixed set of arguments in the other positions, mutiple assertions may be added to the KB so long as each term appearing in argument position N is a Sub-Abstrac of some common Entity. Note that the case where the entity itself appears as arg N is allowed, since for all x, (Sub-Abstrac X X) is true.  Let's consider an example.  The Arg2-Format of Later-Sub-Abstractions is Sub-Abs.  Thus Cyc will allow one to assert that Later-Sub-Abstractions of SamZilkerAsATeenager include SamZilkerAsAnAdult, and SamZilkerDuringHisFirstMarriage, etc., so long as all of those are known to be subabstractions of the very same entity, in this case the one representing Sam Zilker."))

(defrelation Life-Threatening-Condition
             (Name-In-Cyc Life-Threatening-Condition
              "#$LifeThreateningCondition")
             (Physiological-Condition-Type Life-Threatening-Condition)
             (Subclass-Of Life-Threatening-Condition Physiological-Condition)
             (Set-Or-Collection Life-Threatening-Condition)
             (Arity Life-Threatening-Condition 1)
             (Documentation Life-Threatening-Condition
              "A collection of ailments which are distinguished by the shared characteristic that if left untreated, those ailments may cause an organism to die (but will not certainly do so).  Cases of Poisoning and of Pneumonia are often instances of Life-Threatening-Condition.  Cf. Terminal-Physiological-Condition.  "))

(defrelation Competence
             (Name-In-Cyc Competence "#$Competence")
             (Script-Performance-Attribute-Type Competence)
             (Subclass-Of Competence Script-Performance-Attribute)
             (Set-Or-Collection Competence)
             (Arity Competence 1)
             (Documentation Competence
              "One of the most general attributes for describing the level of skill with which an agent performs some task.  Knowledge enterers will usually want to use some more specific attribute."))

(defrelation Inter-Arg-Isa3-2
             (Nth-Domain Inter-Arg-Isa3-2 1 Predicate)
             (Nth-Domain Inter-Arg-Isa3-2 2 Collection)
             (Nth-Domain Inter-Arg-Isa3-2 3 Collection)
             (Name-In-Cyc Inter-Arg-Isa3-2 "#$interArgIsa3-2")
             (Ternary-Predicate Inter-Arg-Isa3-2)
             (Relation Inter-Arg-Isa3-2)
             (Arity Inter-Arg-Isa3-2 3)
             (Documentation Inter-Arg-Isa3-2
              "(Inter-Arg-Isa3-2 PRED INDEPENDENT-ARG-COL DEPENDENT-ARG-COL) Base-KB) means that, when an instance of INDEPENDENT-ARG-COL appears as the third argument to PRED, the second argument in that assertion is constrained to be an instance of DEPENDENT-ARG-COL."))

(defrelation Stuff-Type
             (Name-In-Cyc Stuff-Type "#$StuffType")
             (Collection Stuff-Type)
             (Subclass-Of Stuff-Type Collection)
             (Set-Or-Collection Stuff-Type)
             (Arity Stuff-Type 1)
             (Documentation Stuff-Type
              "A collection of collections.   Every element of Stuff-Type is a collection of substances which have the following logical property: such a substance may be subdivided, spatially or temporally, and the resultant portions will also be instances of the Stuff-Type collection to which the original substance belonged.  Elements of Stuff-Type may be collections of any kind of stuff, tangible or intangible, temporal or atemporal, which has that property.  (The notion of Stuff-Type corresponds roughly to that of a mass noun in English.)   Thus, if COL is some collection that is an element of Stuff-Type, and ITEM is an element of COL, then if ITEM is divided into two (or more) segments, each segment is also an element of COL.  Examples of Stuff-Type: Water (the collection of all portions of water, whose spatial sub-portions are also water); Breathing (the collection of all events wherein someone breathes for any amount of time, whose temporal sub-events are also instances of Breathing).  Note that `taking a complete breath' would NOT be stufflike, since not every temporal interval of breathing would be a complete breath from start to finish; cf. Object-Type.  See also these four collections: Stuff-Type, Object-Type, Existing-Stuff-Type, and Existing-Object-Type."))

(defrelation Bodily-Function-Event-Involuntary
             (Name-In-Cyc Bodily-Function-Event-Involuntary
              "#$BodilyFunctionEvent-Involuntary")
             (Temporal-Stuff-Type Bodily-Function-Event-Involuntary)
             (Default-Disjoint-Script-Type Bodily-Function-Event-Involuntary)
             (Subclass-Of Bodily-Function-Event-Involuntary
              Bodily-Function-Event)
             (Set-Or-Collection Bodily-Function-Event-Involuntary)
             (Arity Bodily-Function-Event-Involuntary 1)
             (Documentation Bodily-Function-Event-Involuntary
              "This is the subset of Bodily-Function-Event whose elements are actions in which the `doer' is, by definition, a Non-Deliberate-Actors.  Specializations (subsets) of Bodily-Function-Event-Involuntary include Having-A-Seizure, Blushing, Bleeding, Experiencing-Hunger, etc.
Note: if the `doer' of an involuntary bodily function is an Organism-Whole, then use Bodily-Doer to describe its role in the event."))

(defrelation Horizon
             (Name-In-Cyc Horizon "#$Horizon")
             (Existing-Object-Type Horizon)
             (Subclass-Of Horizon Place)
             (Set-Or-Collection Horizon)
             (Arity Horizon 1)
             (Documentation Horizon
              "The collection of all horizons, each being the far-off region within a few degrees of the horizontal plane, where the sky appears to join the distant landscape.   The horizon is always relative to a particular point of observation."))

(defrelation Guiding-A-Moving-Object
             (Name-In-Cyc Guiding-A-Moving-Object "#$GuidingAMovingObject")
             (Temporal-Stuff-Type Guiding-A-Moving-Object)
             (Script-Type Guiding-A-Moving-Object)
             (Subclass-Of Guiding-A-Moving-Object Controlling-Something)
             (Subclass-Of Guiding-A-Moving-Object Movement-Translation-Event)
             (Set-Or-Collection Guiding-A-Moving-Object)
             (Arity Guiding-A-Moving-Object 1)
             (Documentation Guiding-A-Moving-Object
              "A collection of events; a subset of both Controlling-Something and Movement-Translation-Event.  An instance of Guiding-A-Moving-Object is an event in which an agent guides or steers an object which is in motion.  For example, someone steering a car or a motorcycle, controlling a surfboard, or flying a kite.  If all you `guide' is a rotation, then that is not quite a Guiding-A-Moving-Object event.  Also, if no motion actually takes place, then it would be stretching things to call that a `guiding.'  So a marginal example is Running (you are guiding yourself) and two marginal non-examples are:  spinning in place, and running in place."))

(deffunction Joint-Type-Between-Fn
   (Nth-Domain Joint-Type-Between-Fn 1 Existing-Object-Type)
   (Nth-Domain Joint-Type-Between-Fn 2 Existing-Object-Type)
   (Nth-Domain-Subclass-Of Joint-Type-Between-Fn 1 Partially-Tangible)
   (Nth-Domain-Subclass-Of Joint-Type-Between-Fn 2 Partially-Tangible)
   (Result-Instance-Of Joint-Type-Between-Fn Existing-Object-Type)
   (Result-Subclass-Of Joint-Type-Between-Fn Configuration)
   (Name-In-Cyc Joint-Type-Between-Fn "#$JointTypeBetweenFn")
   (Collection-Denoting-Function Joint-Type-Between-Fn)
   (Function Joint-Type-Between-Fn)
   (Arity Joint-Type-Between-Fn 2)
   (Function-Arity Joint-Type-Between-Fn 1)
   (Binary-Relation Joint-Type-Between-Fn)
   (Documentation Joint-Type-Between-Fn
    "(Joint-Type-Between-Fn OBJ-TYPE1 OBJ-TYPE2) denotes the class of Connections found between objects of type OBJ-TYPE1 and OBJ-TYPE2.  For example, (Joint-Type-Between-Fn Telephone-Body Telephone-Receiver) is the class of Connections between telephone handsets and bodies of telephones.  (Joint-Type-Between-Fn Humerus Radius-Bone) would be the class of elbows, but we chose to reify that class (Elbow-Joint).  Joint-Type-Between-Fn is most useful when one needs to refer to a type of connection without creating it and naming it specifically."))

(defrelation Inter-Arg-Isa2-3
             (Nth-Domain Inter-Arg-Isa2-3 1 Predicate)
             (Nth-Domain Inter-Arg-Isa2-3 2 Collection)
             (Nth-Domain Inter-Arg-Isa2-3 3 Collection)
             (Name-In-Cyc Inter-Arg-Isa2-3 "#$interArgIsa2-3")
             (Ternary-Predicate Inter-Arg-Isa2-3)
             (Relation Inter-Arg-Isa2-3)
             (Arity Inter-Arg-Isa2-3 3)
             (Documentation Inter-Arg-Isa2-3
              "(Inter-Arg-Isa2-3 PRED INDEPENDENT-ARG-COL DEPENDENT-ARG-COL) Base-KB) means that, when an instance of INDEPENDENT-ARG-COL appears as the second argument to PRED, the third argument in that assertion is constrained to be an instance of DEPENDENT-ARG-COL."))

(defrelation Date
             (Name-In-Cyc Date "#$Date")
             (Collection Date)
             (Temporal-Object-Type Date)
             (Subclass-Of Date Temporal-Thing)
             (Subclass-Of Date Time-Interval)
             (Set-Or-Collection Date)
             (Arity Date 1)
             (Documentation Date
              "Date is a subset of Time-Interval.  A Date is any Time-Interval which can be defined purely by its location on the calendar.  Thus a Date could be a particular calendar day, a particular calendar quarter, a particular calendar month, a particular decade, etc.  So the subsets of Date include Calendar-Minute, Calendar-Quarter, etc., as well as Calendar-Day."))

(defrelation Manufacturing
             (Name-In-Cyc Manufacturing "#$Manufacturing")
             (Default-Disjoint-Script-Type Manufacturing)
             (Subclass-Of Manufacturing Making-Something)
             (Set-Or-Collection Manufacturing)
             (Arity Manufacturing 1)
             (Documentation Manufacturing
              "A collection of events.  In each Manufacturing event, raw materials or component parts are combined to produce a product.  In a typical Manufacturing process, the motivation of the manufacturer is that the value of the Outputs should exceed the value of the Inputs.  Manufacturing does not include related or supportive processes such as transporting the raw materials to the manufacturing site, scheduling done ahead of time, etc. -- the concept Production-Event covers that bigger picture."))

(deffunction Interval-After-Fn
   (Nth-Domain Interval-After-Fn 1 Temporal-Thing)
   (Nth-Domain Interval-After-Fn 2 Time-Quantity)
   (Result-Instance-Of Interval-After-Fn Time-Interval)
   (Name-In-Cyc Interval-After-Fn "#$IntervalAfterFn")
   (Reifiable-Function Interval-After-Fn)
   (Individual-Denoting-Function Interval-After-Fn)
   (Function Interval-After-Fn)
   (Arity Interval-After-Fn 2)
   (Function-Arity Interval-After-Fn 1)
   (Binary-Relation Interval-After-Fn)
   (Documentation Interval-After-Fn
    "(Interval-After-Fn T-OBJ DUR) denotes the Time-Interval which immediately follows T-OBJ, lasting for duration DUR."))

(defrelation Physiological-Condition
             (Name-In-Cyc Physiological-Condition "#$PhysiologicalCondition")
             (Script-Type Physiological-Condition)
             (Subclass-Of Physiological-Condition Biological-Event)
             (Set-Or-Collection Physiological-Condition)
             (Arity Physiological-Condition 1)
             (Documentation Physiological-Condition
              "The collection of Events in which an organism undergoes (as Bodily-Doer) some physiological state or process, which may be normal or abnormal.  An instance of Physiological-Condition is, especially, a dynamic physiological state that (1) has important temporal aspects, such as a developmental condition or a progressive disease, and/or (2) affects the organism's physiological condition for a significant period of time, such that (a) the condition may be thought of as an `episode' in the life of the organism or even (b) a permanent aspect of the organism's ongoing life.  Physiological-Condition is the most general collection of such states.  In representing particular cases, one of the various subsets of Physiological-Condition is likely to be more useful; these include: Pregnancy, Pneumonia, Cancer, Kidney-Stone-Condition, Heart-Attack, Allergic-Reaction, Phobia, Chronic-Condition, Asthma, etc."))

(defrelation Proton
             (Name-In-Cyc Proton "#$Proton")
             (Existing-Object-Type Proton)
             (Subclass-Of Proton Nucleon)
             (Set-Or-Collection Proton)
             (Arity Proton 1)
             (Documentation Proton
              "A collection of objects; a subset of Nucleon.  Each instance of Proton is a nucleon which has an Electrical-Charge of +1."))

(defrelation Supply-Company
             (Name-In-Cyc Supply-Company "#$SupplyCompany")
             (Existing-Object-Type Supply-Company)
             (Subclass-Of Supply-Company Organization-With-Business-Customers)
             (Set-Or-Collection Supply-Company)
             (Arity Supply-Company 1)
             (Documentation Supply-Company
              "A collection of commercial organizations.  An element of Supply-Company is a company whose Main-Function is selling supplies to other companies.  For example, elements of Electrical-Supply-Company or grocery Wholesalers."))

(defrelation Shredding-Event
             (Name-In-Cyc Shredding-Event "#$ShreddingEvent")
             (Script-Type Shredding-Event)
             (Subclass-Of Shredding-Event Separation-Event)
             (Subclass-Of Shredding-Event Destruction-Event)
             (Set-Or-Collection Shredding-Event)
             (Arity Shredding-Event 1)
             (Documentation Shredding-Event
              "A collection of events.  In each Shredding-Event, the Inputs-Destroyed are destroyed by a large number of Ripping Sub-Events."))

(defrelation Visual-Image
             (Making-Fn Visual-Image |(MAKING-FN VISUAL-IMAGE)|)
             (Name-In-Cyc Visual-Image "#$VisualImage")
             (Temporal-Stuff-Type Visual-Image)
             (Subclass-Of Visual-Image Information-Bearing-Wave-Propagation)
             (Subclass-Of Visual-Image Visible-Light)
             (Set-Or-Collection Visual-Image)
             (Arity Visual-Image 1)
             (Documentation Visual-Image
              "A collection of information bearing things (IBTs); a subset of Information-Bearing-Wave-Propagation.  Each element of Visual-Image is a pattern of visible light which contains information for an observer familiar with the interpretive conventions.  An observer sees the pattern.  Visual images may be produced by illuminating some instance of Visual-Information-Source, which is a tangible object (e.g., a photograph, movie film, or page of print), or by direct manipulation of light(s) to produce a pattern (e.g., nautical code lights).  Visual images may be instantaneous or extended in time.  Visual images may be classified by features of their appearance (e.g., Color-Image, Black-And-White-Image), by their origin (e.g., X-Ray-Image, Pen-Or-Pencil-Drawing, Satellite-Image), their content (e.g., Landscape-Image), and other distinctions."))

(defrelation Public-Event
             (Name-In-Cyc Public-Event "#$PublicEvent")
             (Temporal-Object-Type Public-Event)
             (Subclass-Of Public-Event Social-Occurrence)
             (Set-Or-Collection Public-Event)
             (Arity Public-Event 1)
             (Documentation Public-Event
              "The collection of Events which occur in front of, or in the contemporaneous awareness of, a large number of Persons -- The-Public.  Usually these are intended to be public events, such as the Olympics, a public beheading, etc."))

(defrelation Government-Of-Country
             (Name-In-Cyc Government-Of-Country "#$GovernmentOfCountry")
             (Existing-Object-Type Government-Of-Country)
             (Subclass-Of Government-Of-Country Regional-Government)
             (Set-Or-Collection Government-Of-Country)
             (Arity Government-Of-Country 1)
             (Documentation Government-Of-Country
              "A collection of regional government organizations.  An element of Government-Of-Country is the government of some element of Country; e.g., United-States-Federal-Government.  See also the Cyc function Government-Fn, which can be used to refer to the government of a political region.  The governments of smaller regions within a country may or may not be Sub-Organizations of that country's government; in `federal' systems the smaller regions often have partly autonomous governments, as do the elements of State-United-States."))

(defrelation Modal-Relationship
             (Name-In-Cyc Modal-Relationship "#$ModalRelationship")
             (Relationship-Type Modal-Relationship)
             (Subclass-Of Modal-Relationship Relationship)
             (Set-Or-Collection Modal-Relationship)
             (Arity Modal-Relationship 1)
             (Documentation Modal-Relationship
              "A collection of predicates and functions.  Each element of Modal-Relationship is a predicate or function wherein substituting equals for equals may not preserve truth.  For example, `believes': even though Jack's age is equal to 29, we can't substitute `29' for `Jack's age' in the sentence `Fred believes that Jack's age is 31', because Fred surely does NOT believe that 29 is 31.  Thus, `believes' is a modal relationship.  So are meta-predicates such as My-Creator: e.g., suppose that Doug Lenat added the term FirstUSPresident to the Cyc ontology, and Cyc later is told that that person was George Washington, who in turn is represented by the term George-Washington, which term was NOT entered by Doug but by Karen Pittman; it would be incorrect to substitute equals for equals [that is, to substitute George-Washington for FirstUSPresident] in the assertion (My-Creator FirstUSPresident Lenat) and conclude (My-Creator George-Washington Lenat), since Doug did not enter the latter term into Cyc's ontology.  Thus, meta-predicates such as My-Creator are also modal relationships.  The same applies to functions; e.g., if we had a function such as MyCreatorFn, then (MyCreatorFn FirstUSPresident) would not have the same value as (MyCreatorFn George-Washington)."))

(defrelation Relative-Humidity
             (Very-High-Amount-Fn Relative-Humidity
              |(VERY-HIGH-AMOUNT-FN RELATIVE-HUMIDITY)|)
             (Low-Amount-Fn Relative-Humidity
              |(LOW-AMOUNT-FN RELATIVE-HUMIDITY)|)
             (Very-Low-Amount-Fn Relative-Humidity
              |(VERY-LOW-AMOUNT-FN RELATIVE-HUMIDITY)|)
             (Name-In-Cyc Relative-Humidity "#$RelativeHumidity")
             (Primitive-Attribute-Type Relative-Humidity)
             (Subclass-Of Relative-Humidity Scalar-Interval)
             (Subclass-Of Relative-Humidity Physical-Attribute)
             (Set-Or-Collection Relative-Humidity)
             (Arity Relative-Humidity 1)
             (Documentation Relative-Humidity
              "A collection of attributes; a subset of Scalar-Interval.  The elements of Relative-Humidity represent the extent to which the atmosphere at a location approaches total saturation with water vapor.  The relative humidity of a location is indicated with the predicate Ambient-Relative-Humidity."))

(defrelation Pulverization-Event
             (Name-In-Cyc Pulverization-Event "#$PulverizationEvent")
             (Default-Disjoint-Script-Type Pulverization-Event)
             (Subclass-Of Pulverization-Event Destruction-Event)
             (Subclass-Of Pulverization-Event Separation-Complete)
             (Subclass-Of Pulverization-Event
              Composite-Physical-And-Mental-Event)
             (Set-Or-Collection Pulverization-Event)
             (Arity Pulverization-Event 1)
             (Documentation Pulverization-Event
              "A collection of events.  In each Pulverization-Event, some Solid-Tangible-Thing is turned into Powder or a Liquid-State-Of-Matter through the application of a force."))

(defobject Starving
   (Order-Of-Magnitude-Interval Starving)
   (Level-Of-Hunger Starving)
   (Name-In-Cyc Starving "#$Starving")
   (Documentation Starving
    "A Level-Of-Hunger (q.v.) one step beyond Hungry.  Note: this
constant expresses a static Animal-Physiological-Attribute, not a
dynamic process.  For the Event that involves Starving, see
Starvation."))

(defrelation Plastic
             (Solid-Fn Plastic |(SOLID-FN PLASTIC)|)
             (Name-In-Cyc Plastic "#$Plastic")
             (Product-Type Plastic)
             (Tangible-Stuff-Composition-Type Plastic)
             (Subclass-Of Plastic Artificial-Material)
             (Set-Or-Collection Plastic)
             (Arity Plastic 1)
             (Documentation Plastic
              "A collection of tangible things.  Each element of Plastic is a piece of some type of plastic.  This collection includes plastics of all kinds: artifical, mostly polymeric, inedible, organic moldable hydrocarbons.  Some common types are rayon, nylon, polyethylene, etc."))

(defrelation Cereal-Plant
             (Name-In-Cyc Cereal-Plant "#$CerealPlant")
             (Organism-Classification-Type Cereal-Plant)
             (Subclass-Of Cereal-Plant Plant-Non-Woody)
             (Set-Or-Collection Cereal-Plant)
             (Arity Cereal-Plant 1)
             (Documentation Cereal-Plant
              "The collection of individual plants like corn, wheat, etc., which bear grains."))

(defrelation Transfer-Out
             (Name-In-Cyc Transfer-Out "#$TransferOut")
             (Temporal-Object-Type Transfer-Out)
             (Subclass-Of Transfer-Out Generalized-Transfer)
             (Set-Or-Collection Transfer-Out)
             (Arity Transfer-Out 1)
             (Documentation Transfer-Out
              "A collection of events.  Transfer-Out includes all Generalized-Transfers for which there is a well-defined From-Generic, but not necessarily a To-Generic.  This includes, among other things, Emission, Losing-User-Rights, and Distribution-Event.  At the start of a Transfer-Out, Transferred-Thing is 'loccated' at the From-Generic.  Some negative examples of Transfer-Out are Appropriating-Something (when there is no previous owner) and Hearing (when the sounds may come from various unspecified locations."))

(defrelation Symmetric-Binary-Predicate
             (Name-In-Cyc Symmetric-Binary-Predicate
              "#$SymmetricBinaryPredicate")
             (Predicate-Category Symmetric-Binary-Predicate)
             (Collection Symmetric-Binary-Predicate)
             (Subclass-Of Symmetric-Binary-Predicate Slot)
             (Subclass-Of Symmetric-Binary-Predicate Commutative-Relation)
             (Set-Or-Collection Symmetric-Binary-Predicate)
             (Arity Symmetric-Binary-Predicate 1)
             (Documentation Symmetric-Binary-Predicate
              "A collection of predicates; the subset of :Slot whose elements are all symmetric relations.  A predicate F is an element of Symmetric-Binary-Predicate if and only if F is binary and (P X Y) implies (P Y X).  Examples: Siblings, Teammates, Connected-To, Borders-On."))

(defrelation Plant-Product
             (Name-In-Cyc Plant-Product "#$PlantProduct")
             (Existing-Stuff-Type Plant-Product)
             (Product-Type Plant-Product)
             (Subclass-Of Plant-Product Vegetable-Matter)
             (Set-Or-Collection Plant-Product)
             (Arity Plant-Product 1)
             (Documentation Plant-Product
              "The collection of Products that are plants or plant parts (individually or in bulk), or substances derived from plants, which are produced by people or countries and made available for use, sale or exchange."))

(defobject Horizontal-Direction
   (Terrestrial-Direction Horizontal-Direction)
   (Name-In-Cyc Horizontal-Direction "#$HorizontalDirection")
   (Documentation Horizontal-Direction
    "The element of Vector-Interval that comprises all the vectors which are perpendicular to Up-Directly and Down-Directly."))

(defrelation Sub-Abs-Of-Entity-After
             (Nth-Domain Sub-Abs-Of-Entity-After 1 Entity)
             (Nth-Domain Sub-Abs-Of-Entity-After 2 Something-Existing)
             (Nth-Domain Sub-Abs-Of-Entity-After 3 Temporal-Thing)
             (Name-In-Cyc Sub-Abs-Of-Entity-After "#$subAbsOfEntityAfter")
             (Ternary-Predicate Sub-Abs-Of-Entity-After)
             (Relation Sub-Abs-Of-Entity-After)
             (Arity Sub-Abs-Of-Entity-After 3)
             (Documentation Sub-Abs-Of-Entity-After
              "(Sub-Abs-Of-Entity-After ?X ?Y ?Z) indicates that ?X is an Entity,  ?Y is some subabstraction of ?X, and (Contiguous-After ?Y ?Z).  This provides one way to talk about the effects wrought by some state-changing process.  For example, for Washing001 involving Hair001, (Sub-Abs-Of-Entity-After Hair001 ?SUB Washing001) would imply that ?SUB is Wet.  Usually the preferred alternative is to use the Holds-In representation: (Holds-In (STIF Washing001) 'Hair001 is Wet')."))

(defobject Forward-Inference-Psc
   (Problem-Solving-Cntxt Forward-Inference-Psc)
   (Subcontext-Of Forward-Inference-Psc Base-Kb)
   (Name-In-Cyc Forward-Inference-Psc "#$ForwardInferencePSC")
   (Documentation Forward-Inference-Psc
    "The problem solving context which is used during forward inference."))

(defrelation Carnivore
             (Name-In-Cyc Carnivore "#$Carnivore")
             (Existing-Object-Type Carnivore)
             (Subclass-Of Carnivore Organism-Whole)
             (Set-Or-Collection Carnivore)
             (Arity Carnivore 1)
             (Documentation Carnivore
              "A Collection of organisms classified by their typical source of food.  Elements of Carnivore feed on animals.  Note: Carnivore is not an instance of Biological-Taxon; e.g., Carnivore contains Dog as a subset but is not its biological taxon.  Note that a Carnivore is not necessarily a Heterotroph, as carnivorous plants both digest insects and produce food using Chlorophyll."))

(defrelation Translation-Periodic
             (Name-In-Cyc Translation-Periodic "#$Translation-Periodic")
             (Temporal-Object-Type Translation-Periodic)
             (Subclass-Of Translation-Periodic Movement-Translation-Event)
             (Subclass-Of Translation-Periodic Movement-Periodic)
             (Set-Or-Collection Translation-Periodic)
             (Arity Translation-Periodic 1)
             (Documentation Translation-Periodic
              "A collection of periodic movement events; hence a subset of Movement-Periodic (q.v.)   In any element of Translation-Periodic, the periodic motion of the Object-Moving is translational motion (as opposed, e.g., to rotation).  E.g., a ball bouncing in place translates periodically; so does a planet revolving around a star.  But not: a planet rotating on its axis, a top spinning in place."))

(defrelation Bartering
             (Name-In-Cyc Bartering "#$Bartering")
             (Temporal-Object-Type Bartering)
             (Default-Disjoint-Script-Type Bartering)
             (Subclass-Of Bartering Exchange-Of-User-Rights)
             (Subclass-Of Bartering Transaction)
             (Set-Or-Collection Bartering)
             (Arity Bartering 1)
             (Documentation Bartering
              "The collection of transactions between two Agents in which one Agent gives items or services to another Agent, and the other Agent gives items or services in return, and neither of the items or services is money, credit, or payment of money."))

(deffunction Mach-Unit-Of-Speed
   (Args-Isa Mach-Unit-Of-Speed Real-Number)
   (Result-Instance-Of Mach-Unit-Of-Speed Scalar-Interval)
   (Result-Instance-Of Mach-Unit-Of-Speed Speed)
   (Result-Instance-Of Mach-Unit-Of-Speed Vector-Interval)
   (Name-In-Cyc Mach-Unit-Of-Speed "#$Mach-UnitOfSpeed")
   (Unit-Of-Speed Mach-Unit-Of-Speed)
   (Unit-Of-Measure-No-Prefix Mach-Unit-Of-Speed)
   (Function Mach-Unit-Of-Speed)
   (Documentation Mach-Unit-Of-Speed
    "The speed of sound on earth at sea level.  344.4 m/s"))

(defobject Interval-Entry
   (Format Interval-Entry)
   (Name-In-Cyc Interval-Entry "#$IntervalEntry")
   (Documentation Interval-Entry
    "Arguments to Cyc predicates may have specified formats that constrain their values.  Interval-Entry is the format used to constrain argument positions that must be filled with measurable quantities.  If Interval-Entry is the entry format of some Nth argument to a predicate PRED, then all assertions with PRED that contain the same particular values in their other arguments must have, in the Nth (i.e., Interval-Entry) argument, quantitative values that `overlap'.  (See Scalar-Interval.)  Interval-Entry is provided because, for functional arguments like the second argument to Volume-Of-Object, we know that a single `real' value does exist, though we may have various ways of concluding limits on that value in the form of intervals.  As long as all the intervals overlap, those assertions are not contradictory.  For more explanation, see Format and the related predicates Arg1-Format, Arg2-Format, etc."))

(deffunction Sub-Path-Between-Fn
   (Nth-Domain Sub-Path-Between-Fn 1 Path-Simple)
   (Nth-Domain Sub-Path-Between-Fn 2 Thing)
   (Nth-Domain Sub-Path-Between-Fn 3 Thing)
   (Result-Instance-Of Sub-Path-Between-Fn Path-Simple)
   (Name-In-Cyc Sub-Path-Between-Fn "#$SubPathBetweenFn")
   (Non-Predicate-Function Sub-Path-Between-Fn)
   (Function Sub-Path-Between-Fn)
   (Arity Sub-Path-Between-Fn 3)
   (Function-Arity Sub-Path-Between-Fn 2)
   (Documentation Sub-Path-Between-Fn
    "Given a path PATH and different points X and Y on it, (Sub-Path-Between-Fn PATH X Y) gives a unique subpath SUB of PATH that is between X and Y.  This function should not be used without the context of a Path-System because only with the reference to a path system can we be certain about the existence of such a subpath (e.g., Austin and Texas are different points on I-35, but there is no subpath of I35 that is between Austin and Texas).  To put this in another way, let SYS be any path system.  If PATH is a path in SYS and X and Y are different points in SYS and are also points on PATH, (Sub-Path-Between-Fn PATH X Y) is the only subpath (in SYS) of PATH that is between X and Y.  See Path-In-System.  Note that this function is not defined on the cartesian product Path-Simple x Thing x Thing, but on a proper subset of it."))

(defrelation Molecule
             (Name-In-Cyc Molecule "#$Molecule")
             (Existing-Object-Type Molecule)
             (Subclass-Of Molecule Chemical-Object)
             (Set-Or-Collection Molecule)
             (Arity Molecule 1)
             (Documentation Molecule
              "A collection of microscopic-scale objects; a subset of Chemical-Object.  Every instance of Molecule is a microscopic object whose component atoms are all chemically bonded to each other; typically, this means that the atoms are covalently bonded.  Examples: some instances of Molecule, including molecules of oxygen (O2), ozone (O3), water (H2O), carbon monoxide (CO), carbon dioxide (CO2), etc., contain covalently bonded atoms belonging to the collection Oxygen.  Some highly complex examples of Molecule are those belonging to the collection DNA.  See also Molecule-Fn.
Note: Diamond and other macroscopic covalent solids are excluded from belonging to Molecule by the constraint that instances of Molecule are microscopic."))

(defrelation Pasteurization
             (Name-In-Cyc Pasteurization "#$Pasteurization")
             (Script-Type Pasteurization)
             (Subclass-Of Pasteurization Preserving-Food)
             (Set-Or-Collection Pasteurization)
             (Arity Pasteurization 1)
             (Documentation Pasteurization
              "The heating of a milk product in order to kill off microorganisms that might make it spoil."))

(defrelation Interval-On-Number-Line
             (Name-In-Cyc Interval-On-Number-Line "#$IntervalOnNumberLine")
             (Measurable-Attribute-Type Interval-On-Number-Line)
             (Collection Interval-On-Number-Line)
             (Subclass-Of Interval-On-Number-Line Scalar-Interval)
             (Set-Or-Collection Interval-On-Number-Line)
             (Arity Interval-On-Number-Line 1)
             (Documentation Interval-On-Number-Line
              "A collection of measurable intervals; a subset of Scalar-Interval.  Each element of Interval-On-Number-Line is an interval on the real number line; for example, the interval described by `numbers greater than zero and less than or equal to 10'.  A common special case of such intervals is that of a single point on that line, viz., a number such as five or 125.  Note that such an interval need not be contiguous; e.g., `even numbers between Pi and the square root of 1000' describes a legitimate element of Interval-On-Number-Line.  The collection Real-Number is a subset of Interval-On-Number-Line.  The elements of Interval-On-Number-Line are measured by elements of Dimensionless-Unit-Of-Measure, e.g., units or percentages.  See also Unity, Percent, Unit-Of-Measure."))

(defrelation Biological-Event
             (Name-In-Cyc Biological-Event "#$BiologicalEvent")
             (Temporal-Object-Type Biological-Event)
             (Default-Disjoint-Script-Type Biological-Event)
             (Subclass-Of Biological-Event Physical-Event)
             (Set-Or-Collection Biological-Event)
             (Arity Biological-Event 1)
             (Documentation Biological-Event
              "An event in which a biological thing is a Bodily-Doer."))

(defrelation Respiration
             (Name-In-Cyc Respiration "#$Respiration")
             (Temporal-Stuff-Type Respiration)
             (Default-Disjoint-Script-Type Respiration)
             (Subclass-Of Respiration Bodily-Function-Event-Involuntary)
             (Set-Or-Collection Respiration)
             (Arity Respiration 1)
             (Documentation Respiration
              "The subset of Physiological-Processes in which an organism performs respiration; i.e., it exchanges carbon dioxide for Oxygen which is used to oxygenate (in Vertebrates) hemoglobin, an oxygen carrier in the Blood distributed to all of the organism's cells.  Respiration concerns the exchange of Oxygen and waste gasses with the environment.  Circulation concerns distributing the oxygenated Blood to the cells.  The oxygen carrier (hemoglobin) releases the oxygen to the cells, allowing chemical reactions necessary to sustain the cell life, which in turn sustains the life of the breather."))

(defrelation Visual-Representation-Microtheory
             (Name-In-Cyc Visual-Representation-Microtheory
              "#$VisualRepresentationMicrotheory")
             (Microtheory-Type Visual-Representation-Microtheory)
             (Subclass-Of Visual-Representation-Microtheory
              Propositional-Information-Thing)
             (Set-Or-Collection Visual-Representation-Microtheory)
             (Arity Visual-Representation-Microtheory 1)
             (Documentation Visual-Representation-Microtheory
              "A collection of microtheories.  Each element of Visual-Representation-Microtheory is a context in which to state the propositional content of a particular visual representation.  Visual representations include paintings, photographs, digitized images, moving pictures, statues, etc.  For example, a visual representation microtheory of the Statue-Of-Liberty would include such assertions as `a woman holds up a torch in her right hand', `the woman is dressed in a neo-Classical robe', etc.; it would NOT include such information as, e.g., the Statue-Of-Liberty is made of copper or the Statue-Of-Liberty is in New York harbor."))

(defrelation Textile-Product
             (Name-In-Cyc Textile-Product "#$TextileProduct")
             (Existing-Object-Type Textile-Product)
             (Product-Type Textile-Product)
             (Subclass-Of Textile-Product Artifact)
             (Subclass-Of Textile-Product Solid-Tangible-Product)
             (Set-Or-Collection Textile-Product)
             (Arity Textile-Product 1)
             (Documentation Textile-Product
              "A collection of tangible products.  Each element of Textile-Product is a product made by spinning, weaving, knitting, wrapping, pressing, or other processes used to form fibers into usable materials such as cloth or line.   Examples include elements of the subsets Yarn, Rope, and Cotton-Cloth."))

(defrelation Organization-With-Business-Customers
             (Name-In-Cyc Organization-With-Business-Customers
              "#$OrganizationWithBusinessCustomers")
             (Existing-Object-Type Organization-With-Business-Customers)
             (Subclass-Of Organization-With-Business-Customers
              Commercial-Organization)
             (Set-Or-Collection Organization-With-Business-Customers)
             (Arity Organization-With-Business-Customers 1)
             (Documentation Organization-With-Business-Customers
              "A collection of organizations; a subset of Commercial-Organization.  An element of Organization-With-Business-Customers is a commercial organization most of whose Customers are other Organizations rather than individual Persons."))

(defrelation Fiscal-Quarter
             (Name-In-Cyc Fiscal-Quarter "#$FiscalQuarter")
             (Temporal-Object-Type Fiscal-Quarter)
             (Subclass-Of Fiscal-Quarter Time-Interval)
             (Set-Or-Collection Fiscal-Quarter)
             (Arity Fiscal-Quarter 1)
             (Documentation Fiscal-Quarter
              "Each instance of this collection is a 3-month-long interval of time kept track of by an Agent as part of its financial accounting procedures.  Since the start dates and end dates may vary depending on the organization, instances will be things like Fiscal3rdQuarterOf1995ForCycorp."))

(defrelation Organic-Stuff
             (Name-In-Cyc Organic-Stuff "#$OrganicStuff")
             (Tangible-Stuff-Composition-Type Organic-Stuff)
             (Subclass-Of Organic-Stuff Tangible-Thing)
             (Set-Or-Collection Organic-Stuff)
             (Arity Organic-Stuff 1)
             (Documentation Organic-Stuff
              "A collection of tangible things.  Each element of Organic-Stuff is a tangible thing composed of one or more types of organic Molecule.  Instances of Organic-Stuff usually have their origin in the bodies (or other products) of living things.  Since some organic substances can be synthesized, Organic-Stuff is not a subset of Natural-Tangible-Stuff.  Chemically, instances of Organic-Stuff have fairly (or very) complex carbon-based structures.  Examples include the elements of the collections Oil, DNA, Alcohol-Compound, Ivory, Animal-Body-Part."))

(defrelation Tool
             (Name-In-Cyc Tool "#$Tool")
             (Existing-Object-Type Tool)
             (Subclass-Of Tool Solid-Tangible-Thing)
             (Subclass-Of Tool Physical-Device)
             (Set-Or-Collection Tool)
             (Arity Tool 1)
             (Documentation Tool "A collection of devices; a subset of 
Physical-Device.  An instance of 
Tool is a device which is used by people to 
manipulate and/or alter other objects or the immediate
environment in some way (hence, it does not include
Pom-Poms). Tools are also typically guided by
their user during use (see Device-User-Guided)
and can be used more than once (and is thus 
disjoint with the collection Device-One-Time-Use).
Tool includes 
devices used in many different activities.  
A sampling of subsets shows some of that variety: 
Woodworking-Tool, Carpentry-Tool, Plumbing-Tool, 
Medical-Tool, Cleaning-Implement, Writing-Implement."))

(defrelation Group-Members
             (Subrelation-Of Group-Members Cotemporal)
             (Subrelation-Of Group-Members Structure-Members)
             (Domain Group-Members Group)
             (Range Group-Members Temporal-Thing)
             (Name-In-Cyc Group-Members "#$groupMembers")
             (Cotemporal-Objects-Slot Group-Members)
             (Slot Group-Members)
             (Relation Group-Members)
             (Arity Group-Members 2)
             (Binary-Relation Group-Members)
             (Documentation Group-Members
              "The predicate Group-Members is used to relate a particular group to its individual members.  (Group-Members GROUP MEMBER) means that MEMBER is a member of GROUP.  For example,  the Pyramid-Of-Cheops is a member of the Seven-Wonders-Of-The-Ancient-World.  Or, to say that President Bill Clinton was a member of the Democratic Party throughout 1996, we would say: (Holds-In (Year-Fn 1996) (Group-Members Democratic-Party Bill-Clinton))."))

(defrelation Separation-Event
             (Name-In-Cyc Separation-Event "#$SeparationEvent")
             (Temporal-Object-Type Separation-Event)
             (Default-Disjoint-Script-Type Separation-Event)
             (Subclass-Of Separation-Event Physical-Event)
             (Set-Or-Collection Separation-Event)
             (Arity Separation-Event 1)
             (Documentation Separation-Event
              "A collection of events.  In each Separation-Event, an object is cut, scraped, broken, cracked or pulverized, so that part of the object is no longer attached where it once was.  That part has not necessarily completely separated; it may still be attached in places.  See Separation-Complete for the complete case."))

(defrelation Level-Of-Relaxation-Feeling
             (Name-In-Cyc Level-Of-Relaxation-Feeling
              "#$LevelOfRelaxationFeeling")
             (Sensory-Reaction-Type Level-Of-Relaxation-Feeling)
             (Subclass-Of Level-Of-Relaxation-Feeling
              Internal-Sensory-Attribute)
             (Set-Or-Collection Level-Of-Relaxation-Feeling)
             (Arity Level-Of-Relaxation-Feeling 1)
             (Documentation Level-Of-Relaxation-Feeling
              "An Attribute-Type whose elements represent the qualitative levels of comfort/relaxation/ease that an animal may have.  This feeling is generally internal, and relatively long-lasting (compared with, e.g., the duration of a painful twinge.)  Any positive degree of this Level-Of-Relaxation-Feeling is incompatible with a high level of Muscle-Tenseness, a high Level-Of-Pain, or a high Level-Of-Discomfort."))

(defrelation Wind-Process
             (Name-In-Cyc Wind-Process "#$WindProcess")
             (Temporal-Stuff-Type Wind-Process)
             (Subclass-Of Wind-Process Translation-Flow)
             (Subclass-Of Wind-Process Immediate-Weather-Process)
             (Set-Or-Collection Wind-Process)
             (Arity Wind-Process 1)
             (Documentation Wind-Process
              "The collection of events in which the ambient air at a Geographical-Region (or some significant part of the total air mass) is in motion."))

(deffunction Quotient-Fn
   (Nth-Domain Quotient-Fn 1 Scalar-Interval)
   (Nth-Domain Quotient-Fn 2 Scalar-Interval)
   (Result-Instance-Of Quotient-Fn Scalar-Interval)
   (Name-In-Cyc Quotient-Fn "#$QuotientFn")
   (Function-From-Quantities-To-Quantities Quotient-Fn)
   (Function Quotient-Fn)
   (Arity Quotient-Fn 2)
   (Function-Arity Quotient-Fn 1)
   (Binary-Relation Quotient-Fn)
   (Documentation Quotient-Fn
    "Quotient-Fn is the division operator, a binary mathematical function.  (Quotient-Fn DIVIDEND DIVISOR) yields a new quantity that is the result of dividing the DIVIDEND by DIVISOR.  For example, (Quotient-Fn 24 6) returns 4."))

(defrelation Book
             (Name-In-Cyc Book "#$Book")
             (Existing-Object-Type Book)
             (Subclass-Of Book Published-Material)
             (Set-Or-Collection Book)
             (Arity Book 1)
             (Documentation Book
              "A form of Hardcopy-Information-Bearing-Object consisting of folded, cut, bound, and usually printed sheets.  Books are often Textual-Material, but sometimes contain only images."))

(defrelation Stock-Certificate
             (Name-In-Cyc Stock-Certificate "#$StockCertificate")
             (Existing-Object-Type Stock-Certificate)
             (Subclass-Of Stock-Certificate Official-Document)
             (Subclass-Of Stock-Certificate Id-Document)
             (Set-Or-Collection Stock-Certificate)
             (Arity Stock-Certificate 1)
             (Documentation Stock-Certificate
              "A collection of official documents.  Each element of Stock-Certificate is a document issued by a company to one of its shareholders, certifying the shareholder's ownership of some number of shares of stock in that corporation."))

(defrelation Air-Transportation-Device
             (Transport-Via-Fn Air-Transportation-Device
              |(TRANSPORT-VIA-FN AIR-TRANSPORTATION-DEVICE)|)
             (Name-In-Cyc Air-Transportation-Device
              "#$AirTransportationDevice")
             (Existing-Object-Type Air-Transportation-Device)
             (Subclass-Of Air-Transportation-Device Transportation-Device)
             (Set-Or-Collection Air-Transportation-Device)
             (Arity Air-Transportation-Device 1)
             (Documentation Air-Transportation-Device
              "A collection of physical devices.  An instance of Air-Transportation-Device is a device used for transportation through the air.  For example, the Goodyear Blimp, Air Force One, and the Space-Shuttle-Atlantis.  Subsets of Air-Transportation-Device include the collections Airplane, Helicopter, Hot-Air-Balloon, Ground-To-Orbit-Vehicle (such as Atlas rockets or the Space Shuttles), and so on."))

(defrelation Level-Of-Exhaustion
             (Name-In-Cyc Level-Of-Exhaustion "#$LevelOfExhaustion")
             (Physical-Urge-Type Level-Of-Exhaustion)
             (Subclass-Of Level-Of-Exhaustion Internal-Sensory-Attribute)
             (Subclass-Of Level-Of-Exhaustion Animal-Physiological-Attribute)
             (Set-Or-Collection Level-Of-Exhaustion)
             (Arity Level-Of-Exhaustion 1)
             (Documentation Level-Of-Exhaustion
              "An Attribute-Type whose elements represent the qualitative degrees of exhaustion that an animal may feel.
Note that this predicate is NOT properly used for any other purpose (e.g., to describe metal fatigue, or the depletion of natural resources, or the gradual inhibition that a single cell devlops to repeated stimuli, etc., even though in English the words `exhaustion' and `fatigue' have those meanings.)  This is a good example of how Cyc's internal representation must, and does, disambiguate different concepts even though they might be metaphors for each other, and even though those distinct meanings might be mixed together at a word level in a natural language like English."))

(defrelation Hoc-Object
             (Name-In-Cyc Hoc-Object "#$HOCObject")
             (Existing-Object-Type Hoc-Object)
             (Subclass-Of Hoc-Object Artifact)
             (Set-Or-Collection Hoc-Object)
             (Arity Hoc-Object 1)
             (Documentation Hoc-Object
              "A collection of artifacts.  HOC-Object is a very general collection for all artifacts that are found in places where humans live or work, i.e., in some element of Human-Occupation-Construct (= HOC).  Since these objects are considered to be found indoors, they are all roughly `human-sized'.  Elements include everything from furniture to tools, appliances to artwork, medical examining tables to church altars and pews."))

(defrelation Adjacent-To
             (not (Transitive-Binary-Predicate Adjacent-To))
             (Subrelation-Of Adjacent-To Touches)
             (Slot-Inverse Adjacent-To Adjacent-To)
             (Domain Adjacent-To Spatial-Thing)
             (Range Adjacent-To Spatial-Thing)
             (Name-In-Cyc Adjacent-To "#$adjacentTo")
             (Spatial-Predicate Adjacent-To)
             (Physical-Feature-Describing-Predicate Adjacent-To)
             (Symmetric-Binary-Predicate Adjacent-To)
             (Inter-Existing-Object-Slot Adjacent-To)
             (Slot Adjacent-To)
             (Relation Adjacent-To)
             (Arity Adjacent-To 2)
             (Binary-Relation Adjacent-To)
             (Documentation Adjacent-To
              "arg1 and arg2 are touching such that their region of contact is a line (i.e. not a point).  Also arg1 is neither above nor below arg2."))

(defrelation Internal-Sensory-Attribute
             (Name-In-Cyc Internal-Sensory-Attribute
              "#$InternalSensoryAttribute")
             (Unordered-Attribute-Type Internal-Sensory-Attribute)
             (Subclass-Of Internal-Sensory-Attribute Sensory-Attribute)
             (Set-Or-Collection Internal-Sensory-Attribute)
             (Arity Internal-Sensory-Attribute 1)
             (Documentation Internal-Sensory-Attribute
              "A collection of attributes.  Each element of Internal-Sensory-Attribute is a state of a sentient being in which it experiences within itself some somatic or psycho-somatic feeling, urge, or impulse.  An internal sensory attribute differs from an `external' one in that the sensing agent refers the former to itself and the latter to external objects.  Internal-Sensory-Attribute includes states of feeling hungry, thirsty, tired, or in pain, as well as various bodily urges such as the urge to sneeze, burp, or urinate.  Sensory attributes that may occur with more or less intensity are represented by indicating a Level-Of-Pain, Level-Of-Physical-Pleasure, Level-Of-Stress, etc."))

(defrelation Faces-Object
             (Nth-Domain Faces-Object 1 Partially-Tangible)
             (Nth-Domain Faces-Object 2 Intrinsic-Axis-Of-Object)
             (Nth-Domain Faces-Object 3 Partially-Tangible)
             (Name-In-Cyc Faces-Object "#$facesObject")
             (Ternary-Predicate Faces-Object)
             (Relation Faces-Object)
             (Arity Faces-Object 3)
             (Documentation Faces-Object
              "The Cyc predicate Faces-Object is used to represent the orientation of one object to another. (Faces-Object OBJ1 AXIS1 OBJ2) means that an intrinsic axis projected through OBJ1 (i.e., AXIS1) spatially intersects with the second object, OBJ2.  See also Intrinsic-Axis-Of-Object, Axis-Fn."))

(defrelation Actor-Capacity
             (Nth-Domain Actor-Capacity 1 Something-Existing)
             (Nth-Domain Actor-Capacity 2 Situation)
             (Nth-Domain Actor-Capacity 3 Capacity-Attribute)
             (Name-In-Cyc Actor-Capacity "#$actorCapacity")
             (Ternary-Predicate Actor-Capacity)
             (Relation Actor-Capacity)
             (Arity Actor-Capacity 3)
             (Documentation Actor-Capacity
              "The predicate Actor-Capacity is used to indicate the capacity in which some entity participates in a particular event or situation.  (Actor-Capacity ENTITY SIT CAP) means that ENTITY has an (unspecified) role in SIT with the Capacity-Attribute CAP.  An important use of Actor-Capacity is with the capacity attributes Main-Function or Intended-Function to state that a device is serving its Primary-Function or intended function (i.e., Intended-Behavior-Capable) in a certain situation."))

(defrelation Fungus
             (Name-In-Cyc Fungus "#$Fungus")
             (Biological-Kingdom Fungus)
             (Subclass-Of Fungus Organism-Whole)
             (Set-Or-Collection Fungus)
             (Arity Fungus 1)
             (Documentation Fungus
              "The collection of fungi, the stationary, saprophytic, and symbiotic or parasitic eukaryotic organisms constituting an instance of Biological-Kingdom in many systems of classification.  Fungus includes as subsets the collections Mushroom, Yeast, and Ringworm-Fungus.  Unlike most other instances of Plant, mushrooms are incapable of performing processes of Photosynthesis."))

(deffunction Cubic-Centimeter
   (Args-Isa Cubic-Centimeter Real-Number)
   (Result-Instance-Of Cubic-Centimeter Volume)
   (Result-Instance-Of Cubic-Centimeter Scalar-Interval)
   (Name-In-Cyc Cubic-Centimeter "#$CubicCentimeter")
   (Unit-Of-Volume Cubic-Centimeter)
   (Unit-Of-Measure-No-Prefix Cubic-Centimeter)
   (Cgs-Unit-Of-Measure Cubic-Centimeter)
   (Function Cubic-Centimeter)
   (Documentation Cubic-Centimeter
    "The measurement function used in Cyc to represent the Metric cc, a unit of measure for volume.  See also CGS-Unit-Of-Measure, Unit-Of-Measure."))

(defrelation Script-Performance-Attribute
             (Name-In-Cyc Script-Performance-Attribute
              "#$ScriptPerformanceAttribute")
             (Attribute-Type Script-Performance-Attribute)
             (Subclass-Of Script-Performance-Attribute Attribute-Value)
             (Set-Or-Collection Script-Performance-Attribute)
             (Arity Script-Performance-Attribute 1)
             (Documentation Script-Performance-Attribute
              "The most general type of attribute describing the manner in which an actor performs an action; specializations of this include Correctness-Of-Posture, Competence, Precision, Dexterity, Gracefulness, Creativity, etc.  The elements of Precision, e.g., represent the various qualitative levels such as high precision, low precision, etc."))

(defrelation Geometric-Thing
             (Name-In-Cyc Geometric-Thing "#$GeometricThing")
             (Object-Type Geometric-Thing)
             (Subclass-Of Geometric-Thing Mathematical-Object)
             (Subclass-Of Geometric-Thing Spatial-Thing)
             (Set-Or-Collection Geometric-Thing)
             (Arity Geometric-Thing 1)
             (Documentation Geometric-Thing
              "A collection of mathematical objects.  Each element of Geometric-Thing is a spatial thing that can be described mathematically.  Geometric-Thing includes abstract shapes of various dimensions (hence points, lines, curves, polygons, polyhedra), tensors, frames of reference, angles, etc."))

(defrelation Anger
             (Name-In-Cyc Anger "#$Anger")
             (Feeling-Attribute-Type Anger)
             (Subclass-Of Anger Frustration)
             (Set-Or-Collection Anger)
             (Arity Anger 1)
             (Documentation Anger
              "Intense feeling of displeasure and usually of antagonism.  This is a Collection --- for an explanation of that, see Happiness.  Some more specialized Feeling-Attribute-Types than Anger include Belligerence, etc."))

(defrelation Has-Position-In
             (Nth-Domain Has-Position-In 1 Person)
             (Nth-Domain Has-Position-In 2 Organization)
             (Nth-Domain Has-Position-In 3 Position-Type)
             (Name-In-Cyc Has-Position-In "#$hasPositionIn")
             (Ternary-Predicate Has-Position-In)
             (Relation Has-Position-In)
             (Arity Has-Position-In 3)
             (Documentation Has-Position-In
              "The predicate Has-Position-In is used to relate a particular person to his or her position in a particular organization.  (Has-Position-In PER ORG POS-TYPE) means that the Person PER works in the Organization ORG, in a position of type POS-TYPE.  POS-TYPE may or may not specifically indicate PER's occupational field or training; that is, one individual occupying a position of Manager may be a Marketing-Person, while another is an Electrical-Engineer.  In addition, POS-TYPE may or may not correspond to an official `Job Title' (cf. Has-Title) or be the primary occupation of PER.  Contrast, e.g., (Has-Position-In JerryLewis MarchOfDimes Spokesman) with (Has-Position-In DellaStreet PerryMasonsLawOffice Secretary).  Note that assertions using Has-Position-In should be properly time-constrained, for example with Holds-In."))

(defrelation Spatially-Disjoint-Region-Type
             (Name-In-Cyc Spatially-Disjoint-Region-Type
              "#$SpatiallyDisjointRegionType")
             (Collection Spatially-Disjoint-Region-Type)
             (Subclass-Of Spatially-Disjoint-Region-Type Region-Type)
             (Set-Or-Collection Spatially-Disjoint-Region-Type)
             (Arity Spatially-Disjoint-Region-Type 1)
             (Documentation Spatially-Disjoint-Region-Type
              "A collection of collections; a subset of Region-Type.  Each element of Spatially-Disjoint-Region-Type is a collection of geographical regions, none of whose elements spatially intersects another.  For example, the collection State-United-States is an element of Spatially-Disjoint-Region-Type, because the territories of U.S. states do not overlap.  Other examples of collections that are elements of Spatially-Disjoint-Region-Type: Canadian-Province, Independent-Country, City, and Colony.  A non-example is Ecological-Region, since ecological regions can overlap."))

(defobject Meta-Assertions-For-Poly-Canonicalizing-Assertions
   (Shared-Note Meta-Assertions-For-Poly-Canonicalizing-Assertions)
   (Name-In-Cyc Meta-Assertions-For-Poly-Canonicalizing-Assertions
    "#$MetaAssertionsForPolyCanonicalizingAssertions")
   (Documentation Meta-Assertions-For-Poly-Canonicalizing-Assertions
    "If one wishes to state a fact M about an assertion A, i.e. if one wishes to assert the meta-assertion M(A) and if A canonicalizes into multiple assertions, a_1, a_2...a_n,then one must do a non-standard procedure.  Due to the way the canonicalizer currently (Nov 96) handles meta-assertions, rather than simply asserting M(A), one must distribute the meta-assertion over the results of canonicalization.  That is one must assert M(a_1), M(a_2)...M(a_n). Consider the following example:  Suppose one wanted to assert 
`if a movement occurs then there is a friction Sub-Events, unless the movement is frictionless.'
The way one asserts this is by first asserting the fact without the `unless', i.e.

(ke-assert '(:=>
	     (:Direct-Types ?MOV Movement-Event)
              (:Exists ?FRIC
	      (:and
	       (:Direct-Types ?FRIC Friction-Process)
	       (Sub-Events ?MOV ?FRIC)))) Base-KB)

Because there is an :and with two literals on the right hand side of this rule it canonicalizes into two assertions which then become part of the KB.  One must next find these assertions as they appear in the KB:

(:=>
 (:and
  (:Direct-Types ?MOV Movement-Event)
  (Term-Of-Unit ?FRIC-EVENT146 (SKF-29707602 ?MOV)))
 (:Direct-Types ?FRIC-EVENT146 Friction-Process))

(:=>
 (:and
  (:Direct-Types ?MOV Movement-Event)
  (Term-Of-Unit ?FRIC-EVENT146 (SKF-29707602 ?MOV)))
 (Sub-Events ?MOV ?FRIC-EVENT146)).

Now using these one may state the `unless' part of the rule:

(ke-assert
  '(Except-When
    (:Direct-Types ?MOV Frictionless-Motion)
    (:=>
     (:and
      (:Direct-Types ?MOV Movement-Event)
      (Term-Of-Unit ?FRIC-EVENT146 (SKF-29707602 ?MOV)))
     (:Direct-Types ?FRIC-EVENT146 Friction-Process)))
  Base-KB)

(ke-assert
  '(Except-When
    (:Direct-Types ?MOV Frictionless-Motion)
    (:=>
     (:and
      (:Direct-Types ?MOV Movement-Event)
      (Term-Of-Unit ?FRIC-EVENT146 (SKF-29707602 ?MOV)))
     (Sub-Events ?MOV ?FRIC-EVENT146)))

  Base-KB).

This Shared-Note is true about any Relationship which has Assertion as an argument type."))

(defrelation Movement-Translation-Process
             (Name-In-Cyc Movement-Translation-Process
              "#$Movement-TranslationProcess")
             (Temporal-Stuff-Type Movement-Translation-Process)
             (Script-Type Movement-Translation-Process)
             (Subclass-Of Movement-Translation-Process Movement-Process)
             (Subclass-Of Movement-Translation-Process
              Movement-Translation-Event)
             (Set-Or-Collection Movement-Translation-Process)
             (Arity Movement-Translation-Process 1)
             (Documentation Movement-Translation-Process
              "Movement-Translation-Process is the subset of Movement-Translation-Event whose elements can be pragmatically considered to be continuous processes.  In any instance of Movement-Translation-Process, all time-slices of that process are also themselves elements of Movement-Translation-Process.  
Note that walking is a type of Movement-Translation-Process, even though it involves some nonzero accelerations and jerks.
A non-example would be a plot of the various residences you've lived in (``moved to'') over the course of your lifetime; another non-example would be Captain Kirk beaming up to the Enterprise; another would be the ``tunneling'' of an electron in a tunnel diode.
Note:  If you believe in quantum mechanics, then ultimately all physical motion is series of discrete, discontinous ``hops''.   This is where ``PRAGMATICALLY'' continuous vs. discontinuous comes in; i.e., in a quantum physics context some particular motion might be considered discontinuous, whereas in some naive everyday context that same motion is considered continuous."))

(defrelation Boredom
             (Name-In-Cyc Boredom "#$Boredom")
             (Feeling-Attribute-Type Boredom)
             (Subclass-Of Boredom Apathy)
             (Subclass-Of Boredom Feeling-Attribute)
             (Set-Or-Collection Boredom)
             (Arity Boredom 1)
             (Documentation Boredom
              "A state of dissatisfaction, weariness, or restlessness accompanied by a lack of interest.  This is a Collection --- for an explanation of that, see Happiness.  A related Feeling-Attribute-Type is Apathy."))

(defrelation |(THE-PARTITION TRANSLATION-FLOW TRANSLATION-COMPLETE)|
             (Skolem-Object
              |(THE-PARTITION TRANSLATION-FLOW TRANSLATION-COMPLETE)|)
             (Disjoint-Set-Or-Collection
              |(THE-PARTITION TRANSLATION-FLOW TRANSLATION-COMPLETE)|)
             (Set-Mathematical
              |(THE-PARTITION TRANSLATION-FLOW TRANSLATION-COMPLETE)|)
             (Subclass-Of
              |(THE-PARTITION TRANSLATION-FLOW TRANSLATION-COMPLETE)| Thing)
             (Set-Or-Collection
              |(THE-PARTITION TRANSLATION-FLOW TRANSLATION-COMPLETE)|)
             (Arity |(THE-PARTITION TRANSLATION-FLOW TRANSLATION-COMPLETE)| 1))

(defrelation Ailment-Condition
             (Name-In-Cyc Ailment-Condition "#$AilmentCondition")
             (Physiological-Condition-Type Ailment-Condition)
             (Subclass-Of Ailment-Condition Physiological-Condition)
             (Set-Or-Collection Ailment-Condition)
             (Arity Ailment-Condition 1)
             (Documentation Ailment-Condition
              "The most general collection of ailment events; a subset of Physiological-Condition, and a subset of Event.  An instance of Ailment-Condition is a dynamic state of sickness, injury, or physiological impairment.  Having an ailment is an event:  it has temporal aspects, it progresses dynamically, etc., it is not just `being in some static state of un-wellness.'   Some subsets of Ailment-Condition are: Respiratory-Ailment, Heart-Condition, Cancer, Motion-Sickness, Poisoning, Infection, Injury-Condition.  If a particular person suffers from asthma, that is an element of Ailment-Condition.  Each Ailment-Condition is a state of actual, developed sickness or impairment, rather than the event of getting sick or becoming impaired.  Also note that each type of ailment, such as Asthma, is the set of all `cases' or `instances' of individuals suffering from that condition."))

(defrelation Academic-Professional
             (Name-In-Cyc Academic-Professional "#$AcademicProfessional")
             (Occupation-Type Academic-Professional)
             (Subclass-Of Academic-Professional Professional)
             (Set-Or-Collection Academic-Professional)
             (Arity Academic-Professional 1)
             (Documentation Academic-Professional
              "A collection of persons; a subset of Professional.  Each element of Academic-Professional is a person whose job is to educate and/or to perform research as an affiliate of an academic institution.  This includes members of the teaching and/or research staff of schools, colleges, universities, and research institutes."))

(defrelation Connected-Path-System
             (Name-In-Cyc Connected-Path-System "#$ConnectedPathSystem")
             (Collection Connected-Path-System)
             (Subclass-Of Connected-Path-System Thing)
             (Set-Or-Collection Connected-Path-System)
             (Arity Connected-Path-System 1)
             (Documentation Connected-Path-System
              "The collection of all connected Path-Systems that are not in separate pieces.  For any different points X and Y in such a system SYS, there is a path PATH in SYS that both X and Y are on.  Another way to put this is that SYS is an instance of Connected-Path-System iff for any different points X and Y in SYS, there is a path PATH in SYS such that (Path-Between-In-System PATH X Y SYS) holds.  Note that according to this definition, a connected path system does not have to contain a link--a path system containing a single node will be a connected path system.  If a connected path system contains a link, nevertheless, every two different points must be connected by a path. Note also that because of our treatment of path (see Path-In-System) and our restriction of points in SYS that are not nodes (see Node-In-System), that there is a path between every two points in SYS is equivalent to that there is a path between every two nodes in Sys."))

(defrelation Fish
             (Name-In-Cyc Fish "#$Fish")
             (Biological-Class Fish)
             (Subclass-Of Fish Vertebrate)
             (Subclass-Of Fish Animal)
             (Subclass-Of Fish Non-Person-Animal)
             (Subclass-Of Fish Aquatic-Organism)
             (Set-Or-Collection Fish)
             (Arity Fish 1)
             (Documentation Fish
              "A collection of cold-blooded animals; a subset of Vertebrate.  Each element of Fish has gills, cranium, and fins, and spends all or almost all of its life under water.  The collection Fish excludes so-called star-fish and cuttle-fish, etc., as well as fish-shaped examples of Mammal such as porpoises and whales.  Fish is an instance of Biological-Class."))

(defrelation Wave-Source
             (Nth-Domain Wave-Source 1 Something-Existing)
             (Nth-Domain Wave-Source 2 Something-Existing)
             (Nth-Domain Wave-Source 3 Wave-Propagation-Type)
             (Nth-Domain-Subclass-Of Wave-Source 3 Wave-Propagation)
             (Name-In-Cyc Wave-Source "#$waveSource")
             (Ternary-Predicate Wave-Source)
             (Relation Wave-Source)
             (Arity Wave-Source 3)
             (Documentation Wave-Source
              "The predicate Wave-Source is used to indicate that a type of wave is travelling between a source and a reception point.  (Wave-Source SOURCE ENDPOINT WAVETYPE) means that there is a Wave-Propagation of type WAVETYPE propagating between the From-Location SOURCE and the To-Location ENDPOINT.  For example, (Wave-Source VoiceOfAmerica-Seoul City-Of-Beijing-China Radio-Wave)."))

(defrelation Density
             (Name-In-Cyc Density "#$Density")
             (Derived-Numeric-Attribute-Type Density)
             (Subclass-Of Density Scalar-Interval)
             (Subclass-Of Density Physical-Attribute)
             (Set-Or-Collection Density)
             (Arity Density 1)
             (Documentation Density
              "A collection of physical attributes.  Each element of Density is a measurable physical property of a tangible object, namely, its mass per volume.  Densities may be represented relative to certain substances, e.g., Salt-Water-Density, Fresh-Water-Density, Dense-As-Oil.  Densities of objects are reported using the predicate Density-Of-Object."))

(defrelation Problem-Solving-Cntxt
             (Name-In-Cyc Problem-Solving-Cntxt "#$ProblemSolvingCntxt")
             (Object-Type Problem-Solving-Cntxt)
             (Microtheory-Type Problem-Solving-Cntxt)
             (Collection Problem-Solving-Cntxt)
             (Subclass-Of Problem-Solving-Cntxt Microtheory)
             (Set-Or-Collection Problem-Solving-Cntxt)
             (Arity Problem-Solving-Cntxt 1)
             (Documentation Problem-Solving-Cntxt
              "The collection of microtheories that are used in applications as a means to reason about particular situations.  Every original query takes place in some Problem-Solving-Cntxt (as opposed to a General-Microtheory) which has access --- via the Subcontext-Of relation --- to other relevant microtheories, all the way up to the most general one, the Base-KB.  A Problem-Solving-Cntxt is ususally created temporarily for the problem at hand, and is discarded after the problem is dealt with (unlike a General-Microtheory, which is created for lasting use)."))

(defrelation Query
             (Name-In-Cyc Query "#$Query")
             (Object-Type Query)
             (Subclass-Of Query Illocutionary-Force)
             (Set-Or-Collection Query)
             (Arity Query 1)
             (Documentation Query
              "A collection of illocutionary forces.  Each instance of Query consists of a piece of information contained (perhaps implicitly) in a communication, and which expresses the speaker's intention of asking the listener whether the state of affairs described in the utterance in fact holds.  The speaker's ultimate goal may be either to learn the information or to test the knowledge of the agent queried.   `Speaker' and `listener' are broadly interpreted to mean, respectively, any Sender-Of-Info and Recipient-Of-Info.  See also Illocutionary-Force, Requesting-Information."))

(defrelation University
             (Name-In-Cyc University "#$University")
             (Existing-Object-Type University)
             (Subclass-Of University Educational-Organization)
             (Subclass-Of University Research-Organization)
             (Set-Or-Collection University)
             (Arity University 1)
             (Documentation University
              "A collection of educational organizations.  An element of University is an organization, usually (but not always) called `University', which does university-level teaching and/or research.  Some universities comprise multiple `colleges' and professional schools."))

(defrelation Ingesting
             (Name-In-Cyc Ingesting "#$Ingesting")
             (Temporal-Stuff-Type Ingesting)
             (Script-Type Ingesting)
             (Subclass-Of Ingesting Human-Activity)
             (Subclass-Of Ingesting Directed-Translation)
             (Subclass-Of Ingesting Voluntary-Body-Movement)
             (Subclass-Of Ingesting Biological-Intake-Event)
             (Subclass-Of Ingesting Bodily-Function-Event)
             (Set-Or-Collection Ingesting)
             (Arity Ingesting 1)
             (Documentation Ingesting
              "A collection of events; a subset of Biological-Intake-Event.  Each element of Ingesting is a complex process in which a thing is brought into some organism's mouth from the outside, is swallowed, and is moved to the organism's stomach.  Every element of Ingesting has among its Sub-Events an instance of Swallowing which occurs after the intake.   (Thus, though chewing gum is a Biological-Intake-Event, it is not an Ingesting unless the gum is swallowed.)  An ingesting event ends when the ingested stuff reaches the ingester's stomach (where an instance of Digestion-Event begins -- provided that what was ingested is an element of Edible-Stuff)."))

(defrelation Controlling-Something
             (Name-In-Cyc Controlling-Something "#$ControllingSomething")
             (Temporal-Object-Type Controlling-Something)
             (Script-Type Controlling-Something)
             (Subclass-Of Controlling-Something
              Composite-Physical-And-Mental-Event)
             (Subclass-Of Controlling-Something Purposeful-Action)
             (Set-Or-Collection Controlling-Something)
             (Arity Controlling-Something 1)
             (Documentation Controlling-Something
              "A collection of events; a subset of Purposeful-Action.  An instance of Controlling-Something is a purposeful action in which some Agent intentionally controls some object.  It is not necessary that the agent touch the Object-Controlled, only that s/he have an efficacious means of controlling its action -- thus, instances of Controlling-Something include all instances of Guiding-A-Moving-Object (some of which involve a Remote-Control-Device).  Further subsets: Handling-An-Object, Braking, Steering-A-Device-By-Hand, Playing-A-Musical-Instrument, Cutting-Fabric,  Carrying-While-Locomoting, Flushing-A-Toilet, etc.  Whenever a Control-Device (qv) is being used, for its primary function, presumably a Controlling-Something event is taking place.  Borderline examples include having a conversation by telephone, doing the dishes by hand, and having a cat as a pet."))

(deffunction Month-Fn
   (Nth-Domain Month-Fn 1 Month-Of-Year-Type)
   (Nth-Domain Month-Fn 1 Temporally-Disjoint-Interval-Type)
   (Nth-Domain Month-Fn 1 Annual-Event-Type)
   (Nth-Domain Month-Fn 1 Conventional-Classification-Type)
   (Nth-Domain Month-Fn 2 Calendar-Year)
   (Nth-Domain-Subclass-Of Month-Fn 1 Calendar-Month)
   (Result-Instance-Of Month-Fn Calendar-Month)
   (Name-In-Cyc Month-Fn "#$MonthFn")
   (Individual-Denoting-Function Month-Fn)
   (Non-Predicate-Function Month-Fn)
   (Function Month-Fn)
   (Arity Month-Fn 2)
   (Function-Arity Month-Fn 1)
   (Binary-Relation Month-Fn)
   (Documentation Month-Fn
    "(Month-Fn ?M ?YR) denotes a Calendar-Month -- in particular, the month of type ?M during ?YR.  For example, (Month-Fn February (Year-Fn 1966)) denotes Feb. of 1966.  Note that Month-Fn -- unlike Day-Fn, Hour-Fn, etc. -- does NOT take a number as its first argument."))

(defrelation Cloud-In-Sky
             (Name-In-Cyc Cloud-In-Sky "#$CloudInSky")
             (Existing-Object-Type Cloud-In-Sky)
             (Subclass-Of Cloud-In-Sky Cloud-Of-H2o)
             (Set-Or-Collection Cloud-In-Sky)
             (Arity Cloud-In-Sky 1)
             (Documentation Cloud-In-Sky
              "The collection of clouds (instances of Cloud-Of-H2O) in the sky over some Geographical-Region (as opposed to being at ground-level)."))

(defrelation Soldier
             (Name-In-Cyc Soldier "#$Soldier")
             (Occupation-Type Soldier)
             (Subclass-Of Soldier Military-Person)
             (Subclass-Of Soldier Professional)
             (Set-Or-Collection Soldier)
             (Arity Soldier 1)
             (Documentation Soldier
              "A person having as a profession a branch of Soldiering"))

(defobject Convex
   (Curvature-Of-Surface Convex)
   (Name-In-Cyc Convex "#$Convex")
   (Documentation Convex
    "A surface attribute meaning that the surface's overall shape is dominated by an outward bulge or mound, or consists of projecting corners between planes.  In most contexts, it may have relatively small subregions which are concave or flat, etc., so long as overall shape is convex.  Viewing something as convex assumes a perspective.  From the opposite perspective, on the `other side', a Convex surface would look Concave."))

(defrelation Hat
             (Name-In-Cyc Hat "#$Hat")
             (Product-Type Hat)
             (Existing-Object-Type Hat)
             (Subclass-Of Hat Clothing-Accessory)
             (Set-Or-Collection Hat)
             (Arity Hat 1)
             (Documentation Hat
              "A collection of objects.  Each element of Hat is either a hat or other headgear or hatlike object.  Subsets include Helmet, Swimming-Cap, and Sombrero."))

(defrelation Wave-Source-Direct
             (Nth-Domain Wave-Source-Direct 1 Something-Existing)
             (Nth-Domain Wave-Source-Direct 2 Something-Existing)
             (Nth-Domain Wave-Source-Direct 3 Wave-Propagation-Type)
             (Nth-Domain-Subclass-Of Wave-Source-Direct 3 Wave-Propagation)
             (Subrelation-Of Wave-Source-Direct Wave-Source)
             (Name-In-Cyc Wave-Source-Direct "#$waveSource-Direct")
             (Ternary-Predicate Wave-Source-Direct)
             (Relation Wave-Source-Direct)
             (Arity Wave-Source-Direct 3)
             (Documentation Wave-Source-Direct
              "The predicate Wave-Source-Direct is used to indicate that there is a wave propagation of some type directly between two points.  (Wave-Source-Direct SOURCE ENDPOINT WAVETYPE) means that there is a Wave-Propagation of type WAVETYPE between the From-Location SOURCE and the To-Location ENDPOINT, and the propagation is direct in the sense that there are no significant diffusion or reflection subevents of that Wave-Propagation."))

(defrelation Subcontext-Of
             (Domain Subcontext-Of Microtheory)
             (Range Subcontext-Of Microtheory)
             (Name-In-Cyc Subcontext-Of "#$genlMt")
             (Transitive-Binary-Predicate Subcontext-Of)
             (Reflexive-Binary-Predicate Subcontext-Of)
             (Anti-Symmetric-Binary-Predicate Subcontext-Of)
             (Default-Monotonic-Predicate Subcontext-Of)
             (Microtheory-Predicate Subcontext-Of)
             (Rule-Macro-Predicate Subcontext-Of)
             (Slot Subcontext-Of)
             (Relation Subcontext-Of)
             (Arity Subcontext-Of 2)
             (Binary-Relation Subcontext-Of)
             (Documentation Subcontext-Of
              "(Subcontext-Of SMT GMT) means Microtheory SMT is a specialization of Microtheory GMT.   E.g., (Subcontext-Of Modern-Military-Mt Organization-Mt), which means that all the assertions which are true `content' in the general Organization-Mt context are also true in the more specialized Modern-Military-Mt context.  Another way to think of this is that SMT `has access to' the content of GMT.   Each proposition which is true in GMT is also true in SMT.  The Subcontext-Of relation is transitive; it induces a partial ordering on the set of all microtheories.   

Each assertion in the knowledge base must be explicitly stated to be true in at least one mt.  It will then (by inference) also be true in all the more specialized contexts.  If something is true in the `life in North America' mt, then it should by default be true in the `life in Canada' mt.  I.e., the microtheories are organized into a generalization/specialization lattice by the predicate Subcontext-Of, just as collections are organized into such a lattice by :Direct-Superclasses, and just as predicates are organized into such a lattice by Subrelation-Of.  Just as a collection may have several incommensurable supersets, so too a microtheory may have several incommensurable Genl-Mts.  Just as each and every collection must have some explicitly recorded superset (except for Thing), each and every mt must have some (expicitly recorded) more general mt (except for the Base-KB, which is the most general context, containing universal, timeless truths).  Just as a Cyc concept may have multiple incommensurable sets of which it is an element (via :Direct-Types), so too a Cyc assertion may be declared to be true in a set of incommensurable mts.  For virtually all intents and purposes, Subcontext-Of assertions should go in Base-KB."))

(defrelation Color
             (Synonymous-External-Concept Color Sensus-Information1997 "COLOR")
             (Name-In-Cyc Color "#$Color")
             (Composite-Attribute-Type Color)
             (Subclass-Of Color Physical-Attribute)
             (Subclass-Of Color Sensory-Attribute)
             (Subclass-Of Color Composite-Attribute)
             (Set-Or-Collection Color)
             (Arity Color 1)
             (Documentation Color
              "A collection of attributes; a subset of both Physical-Attribute and Sensory-Attribute.  Each element of Color represents a specific color attribute of some object or substance; e.g., Gold-Color, Lavender-Color, Auburn , Olive-Flesh-Color.  Elements of Color are Composite-Attributes, since they can vary along several dimensions (e.g., hue, brightness).  Indicate a particular object's Color with the predicate Color-Of-Object."))

(defrelation |(TRANSPORT-VIA-FN AIRPLANE)|
             (Skolem-Object |(TRANSPORT-VIA-FN AIRPLANE)|)
             (Script-Type |(TRANSPORT-VIA-FN AIRPLANE)|)
             (Default-Disjoint-Script-Type |(TRANSPORT-VIA-FN AIRPLANE)|)
             (Temporal-Stuff-Type |(TRANSPORT-VIA-FN AIRPLANE)|)
             (Subclass-Of |(TRANSPORT-VIA-FN AIRPLANE)| Transportation-Event)
             (Subclass-Of |(TRANSPORT-VIA-FN AIRPLANE)|
              |(TRANSPORT-VIA-FN AIR-TRANSPORTATION-DEVICE)|)
             (Subclass-Of |(TRANSPORT-VIA-FN AIRPLANE)|
              |(TRANSPORT-VIA-FN TRANSPORTATION-DEVICE-VEHICLE)|)
             (Set-Or-Collection |(TRANSPORT-VIA-FN AIRPLANE)|)
             (Arity |(TRANSPORT-VIA-FN AIRPLANE)| 1)
             (Documentation |(TRANSPORT-VIA-FN AIRPLANE)|
              "Transportation in an Airplane. This includes not only flying (moving through the air, with the plane supoorted by the air), but also such events as taxiing, takeoff and landing."))

(defrelation Animal-Body-Part
             (Name-In-Cyc Animal-Body-Part "#$AnimalBodyPart")
             (Existing-Object-Type Animal-Body-Part)
             (Subclass-Of Animal-Body-Part Animal-Body-Region)
             (Set-Or-Collection Animal-Body-Part)
             (Arity Animal-Body-Part 1)
             (Documentation Animal-Body-Part
              "The collection of all the anatomical parts and physical regions of all living animals; a subset of Organism-Part.  Each element of Animal-Body-Part is a piece of some live animal and thus is itself an instance of Biological-Living-Object.  Animal-Body-Part includes both highly localized organs (e.g., hearts) and physical systems composed of parts distributed throughout an animal's body (such as its circulatory system and nervous system).  
Note: Severed limbs and other parts of dead animals are NOT included in this collection; see Dead-Fn."))

(defrelation Electrical-Device
             (Name-In-Cyc Electrical-Device "#$ElectricalDevice")
             (Existing-Object-Type Electrical-Device)
             (Subclass-Of Electrical-Device Solid-Tangible-Thing)
             (Subclass-Of Electrical-Device Partially-Tangible-Product)
             (Subclass-Of Electrical-Device Powered-Device)
             (Subclass-Of Electrical-Device Physical-Device)
             (Set-Or-Collection Electrical-Device)
             (Arity Electrical-Device 1)
             (Documentation Electrical-Device
              "A collection of physical devices; the most general collection of electrical devices.  Such devices require an input of electrical current (as Energy-Source) in order to perform their intended functions.  Instances of Electrical-Device include both complex devices (e.g., elements of the collections Stereo-System or Computer) and simpler ones (e.g., elements of Electrical-Components and Electronic-Components).
Note:  in some contexts, crystal radios might be classified as inert (unpowered) electrical devices; the same for some sorts of passive radar detectors.  These are exceptional cases, but still elements of this collection.  In other contexts, the power for these devices can be viewed as being supplied from the outside, hence they are clearly `powered' in such contexts."))

(defrelation Likes-Role-In-Activity
             (Nth-Domain Likes-Role-In-Activity 1 Agent)
             (Nth-Domain Likes-Role-In-Activity 2 Actor-Slot)
             (Nth-Domain Likes-Role-In-Activity 3 Event)
             (Name-In-Cyc Likes-Role-In-Activity "#$likesRoleInActivity")
             (Ternary-Predicate Likes-Role-In-Activity)
             (Relation Likes-Role-In-Activity)
             (Arity Likes-Role-In-Activity 3)
             (Documentation Likes-Role-In-Activity
              "(Likes-Role-In-Activity AGT ROLE EVT) means that if the Agent AGT has the relation ROLE to the Event EVT, then AGT is likely to feel some positive measure of Enjoyment.  This predicate is useful to represent sentences such as `Joe likes running' or `Fred liked receiving the money'."))

(defrelation Person
             (Synonymous-External-Concept Person Sensus-Information1997
              "PERSON")
             (Juvenile-Fn Person |(JUVENILE-FN PERSON)|)
             (Transport-Fn Person |(TRANSPORT-FN PERSON)|)
             (Name-In-Cyc Person "#$Person")
             (Organism-Classification-Type Person)
             (Subclass-Of Person Legal-Agent)
             (Subclass-Of Person Primate)
             (Subclass-Of Person Human-Occupation-Construct-Resident)
             (Subclass-Of Person Omnivore)
             (Set-Or-Collection Person)
             (Arity Person 1)
             (Documentation Person
              "The collection of all human beings.  The collection Person constitutes the species Homo Sapiens; thus, Person is an instance of Biological-Species in the Biology-Mt.  (See also Homo-Genus, of which Homo Sapiens is the only nonextinct species.)  Persons constitute the most intelligent subset of Primate, and it is the only class whose elements are known to be naturally capable of speaking a language.  All cultural activity requires participation of persons.  Person excludes non-human legal persons; see Agent."))

(defrelation Something-To-Wear
             (Name-In-Cyc Something-To-Wear "#$SomethingToWear")
             (Existing-Object-Type Something-To-Wear)
             (Subclass-Of Something-To-Wear Non-Powered-Device)
             (Subclass-Of Something-To-Wear Personal-Product)
             (Subclass-Of Something-To-Wear Portable-Object)
             (Subclass-Of Something-To-Wear Tangible-Product)
             (Set-Or-Collection Something-To-Wear)
             (Arity Something-To-Wear 1)
             (Documentation Something-To-Wear
              "A collection of tangible objects.  Each instance of Something-To-Wear is an object that an animal (usually a person) wears on its body, i.e., in a Wearing-Something event.  It is worth remarking that, in such an event, the wearer doesn't have to exert any intentional effort to continue wearing the object.  For example, shirts remain on people's torsos, hats stay on heads, rings on fingers; once in place, dog collars stay on dogs, saddles stay on horses.  By contrast, a hula hoop is NOT an example of Something-To-Wear.  A borderline case is a Purse, which at first blush seems to be something to wear, yet requires carrying by the performer, hence is not a member of this collection.  Similarly, a briefcase is not an Something-To-Wear."))

(defobject Hpkb-Okbc
   (Subclass-Of Facet Predicate)
   (Subclass-Of Slot Predicate)
   (Documentation Hpkb-Okbc
    "The frame hpkb-okbc is a holder for axioms that relate OKBC concepts to HPKB-Upper-Level concepts."))

(deffunction The-Covering
   (Args-Isa The-Covering Set-Or-Collection)
   (Result-Instance-Of The-Covering Set-Mathematical)
   (Name-In-Cyc The-Covering "#$TheCovering")
   (Variable-Arity-Relation The-Covering)
   (Reifiable-Function The-Covering)
   (Function The-Covering)
   (Documentation The-Covering
    "This is a special variable-arity Reifiable-Function that allows one to specify a set of collections or mathematical sets which cover a given set or collection, in order to conveniently state assertions about covering (see Covering).  For example, the fact that the collection Creation-Or-Destruction-Event is covered by the collections Creation-Event and Destruction-Event can be expressed as (Covering Creation-Or-Destruction-Event (The-Covering Creation-Event Destruction-Event))."))

(defrelation Strength
             (Name-In-Cyc Strength "#$Strength")
             (Script-Performance-Attribute-Type Strength)
             (Subclass-Of Strength Animal-Physiological-Attribute)
             (Subclass-Of Strength Scalar-Interval)
             (Subclass-Of Strength Script-Performance-Attribute)
             (Set-Or-Collection Strength)
             (Arity Strength 1)
             (Documentation Strength
              "Strength is the Script-Performance-Attribute-Type for describing actions performed by exerting nontrival force at the times it is necessary."))

(defrelation Hand
             (Name-In-Cyc Hand "#$Hand")
             (Symmetric-Anatomical-Part-Type Hand)
             (Subclass-Of Hand Appendage-Animal-Body-Part)
             (Set-Or-Collection Hand)
             (Arity Hand 1)
             (Documentation Hand
              "The collection of all terminal parts of a Vertebrate forelimb which are structurally suited to function as a grasping organ (as in people, newts, etc.).  E.g., FerdinandTheBull has his forelimbs end in hooves, which are not capable of grasping things, so those are NOT considered Hands."))

(defrelation Permission
             (Name-In-Cyc Permission "#$Permission")
             (Existing-Object-Type Permission)
             (Subclass-Of Permission Agreement)
             (Set-Or-Collection Permission)
             (Arity Permission 1)
             (Documentation Permission
              "A collection of agreements.  Each element of Permission is an agreement specifying some rights or privileges which have been granted to an Agent.  A permission may be an informal agreement between individuals, but many instances are formal and involve permissions granted by a government authority to some agent.  E.g., a driver's license, a marriage license, a visa for entering the U.S., a license to practice medicine."))

(defrelation Pharmacy
             (Name-In-Cyc Pharmacy "#$Pharmacy")
             (Medical-Facility-Type Pharmacy)
             (Subclass-Of Pharmacy Local-Customer-Contact-Point)
             (Subclass-Of Pharmacy Commercial-Organization)
             (Set-Or-Collection Pharmacy)
             (Arity Pharmacy 1)
             (Documentation Pharmacy
              "The collection of (local-level) organizations which sell mainly prescription drugs, but usually also carry non-prescription drugs and other medical supplies that might be needed by a family or individual. (i.e. not a supplier to hospitals).  Sometimes these are free-standing stores, sometimes departments within other stores like drugstores and supermarkets."))

(defrelation Sheet-Of-Some-Stuff
             (Name-In-Cyc Sheet-Of-Some-Stuff "#$SheetOfSomeStuff")
             (Existing-Object-Type Sheet-Of-Some-Stuff)
             (Subclass-Of Sheet-Of-Some-Stuff Partially-Tangible)
             (Set-Or-Collection Sheet-Of-Some-Stuff)
             (Arity Sheet-Of-Some-Stuff 1)
             (Documentation Sheet-Of-Some-Stuff
              "A collection of tangible stuff.  Each element of Sheet-Of-Some-Stuff is a substance which (in its `intrinsic' shape) is continuous and, when flattened, uncrumpled, unfurled, etc, has one dimension which is significantly smaller than the other two dimensions.  The requirement of being a continuous sheet does not preclude some type of penetrability, as in instances of Screen, Netting, or Lace-Cloth.  Belonging to this collection implies nothing about the current configuration of the object; in particular, elements of Sheet-Of-Some-Stuff need not be lying flat.  Aluminum foil on a roll or a bedspread crumpled up on a bed are instances of Sheet-Of-Some-Stuff. Cf. Sheet-Shaped, Two-Dimensional-Shape."))

(defrelation Contact-Location
             (Name-In-Cyc Contact-Location "#$ContactLocation")
             (Contact-Location-Type Contact-Location)
             (Subclass-Of Contact-Location Partially-Tangible)
             (Set-Or-Collection Contact-Location)
             (Arity Contact-Location 1)
             (Documentation Contact-Location
              "A collection of spatial objects.   Each element of Contact-Location is a point at which some particular agent (e.g., corporation or person) may be contacted by any of several means, for any of several purposes.  Contact-Location includes any place to which one may direct one or more of the following: letters, packages, phone calls or voice messages, bills, email, faxes, pages, subpoenas.  Contact locations must be particular--e.g., my house or my office or even my secretary, but not simply `Austin'."))

(defrelation Curvature-Of-Surface
             (Name-In-Cyc Curvature-Of-Surface "#$CurvatureOfSurface")
             (Attribute-Type Curvature-Of-Surface)
             (Subclass-Of Curvature-Of-Surface Attribute-Value)
             (Set-Or-Collection Curvature-Of-Surface)
             (Arity Curvature-Of-Surface 1)
             (Documentation Curvature-Of-Surface
              "The collection of all surface curvature attributes.  These may apply to a particular piece of a surface of an object, or to the whole surface.  For real-world (non-mathematical) surfaces, there is ordinarily some tolerance for minor surface deviations that depends on the context.  Thus a 'flat' surface may have relatively small bumps and crevices."))

(defobject Full-Use-Rights
   (User-Rights-Attribute Full-Use-Rights)
   (Name-In-Cyc Full-Use-Rights "#$FullUseRights")
   (Documentation Full-Use-Rights
    "An attribute of an object with respect to an Agent, meaning that if the Agent has this right to the object, it does not place any restrictions on what the Agent may do with the object.  If there are restrictions on what the Agent may do with the object, they arise from other sources, such as formal and informal laws of behavior.  E.g., even if you have Full-Use-Rights to your car, you can't violate traffic laws, kill people with it, blow it up in a parking lot, etc."))

(defrelation Sales-Agreement
             (Name-In-Cyc Sales-Agreement "#$SalesAgreement")
             (Existing-Object-Type Sales-Agreement)
             (Subclass-Of Sales-Agreement Agreement)
             (Set-Or-Collection Sales-Agreement)
             (Arity Sales-Agreement 1)
             (Documentation Sales-Agreement
              "A collection of agreements.  Each element of Sales-Agreement is an agreement which governs aspects of some Buying activity.  This includes bidding activities (in the subset Sales-Bid-Or-Contract), as well as the instances of Sales-Contract."))

(defrelation National-Postal-Service
             (Name-In-Cyc National-Postal-Service "#$NationalPostalService")
             (Existing-Object-Type National-Postal-Service)
             (Subclass-Of National-Postal-Service Service-Organization)
             (Subclass-Of National-Postal-Service
              Legal-Government-Organization)
             (Set-Or-Collection National-Postal-Service)
             (Arity National-Postal-Service 1)
             (Documentation National-Postal-Service
              "A collection of national postal services run by the governments of their particular countries.  The United States Postal Service would be an example, but United Parcel Service, since it is a private business, wouldn't be."))

(defrelation Surgery
             (Name-In-Cyc Surgery "#$Surgery")
             (Temporal-Object-Type Surgery)
             (Default-Disjoint-Script-Type Surgery)
             (Product-Type Surgery)
             (Subclass-Of Surgery Medical-Care-Event)
             (Set-Or-Collection Surgery)
             (Arity Surgery 1)
             (Documentation Surgery
              "A collection of actions.  An instance of Surgery is a medical care event in which a medical professional cuts a part of the living body, either to examine what's inside (a diagnostic, exploratory surgery) or to treat an ailment (a Medical-Treatment-Event).  Examples of surgeries which are medical treatments include: removal of a foreign body, cancer, an organ that's causing trouble, etc.; insertion of a medical device (e.g, a pacemaker); or repair of some internal structure."))

(defrelation Unordered-Attribute-Type
             (Name-In-Cyc Unordered-Attribute-Type "#$UnorderedAttributeType")
             (Sibling-Disjoint-Collection Unordered-Attribute-Type)
             (Subclass-Of Unordered-Attribute-Type Attribute-Type)
             (Set-Or-Collection Unordered-Attribute-Type)
             (Arity Unordered-Attribute-Type 1)
             (Documentation Unordered-Attribute-Type
              "A collection of collections.  Each element of Unordered-Attribute-Type is a collection of attributes whose values are not ordered over their whole range of possible values.  A collection belonging to Unordered-Attribute-Type contains values that are incommensurable with one another.  For example, the `suit' attribute of playing cards (unlike the number or face value of the cards) is an unordered attribute in card games where no suit is considered higher than another.  The `gender' attribute of animals is an Unordered-Attribute-Type, as well.  By contrast, see Primitive-Attribute-Type."))

(defrelation Acknowledging-Communication-Act
             (Name-In-Cyc Acknowledging-Communication-Act
              "#$Acknowledging-CommunicationAct")
             (Temporal-Object-Type Acknowledging-Communication-Act)
             (Default-Disjoint-Script-Type Acknowledging-Communication-Act)
             (Subclass-Of Acknowledging-Communication-Act
              Communication-Act-Single)
             (Set-Or-Collection Acknowledging-Communication-Act)
             (Arity Acknowledging-Communication-Act 1)
             (Documentation Acknowledging-Communication-Act
              "The collection of actions which are Performed-By one Agent to convey information about the receipt of a prior Communication-Act-Single which was Performed-By another Agent.  An example: Judy saying `No' in response to Jane's prior act of saying `Will you clean the toaster.'"))

(defrelation Vertebrate
             (Synonymous-External-Concept Vertebrate Sensus-Information1997
              "VERTEBRATE")
             (Name-In-Cyc Vertebrate "#$Vertebrate")
             (Biological-Taxon Vertebrate)
             (Subclass-Of Vertebrate Animal)
             (Set-Or-Collection Vertebrate)
             (Arity Vertebrate 1)
             (Documentation Vertebrate
              "A collection of animals; one of the Taxon-Members of the Chordata-Phylum.   Each element of Vertebrate is an animal that has a backbone or spine made of bony or cartilaginous vertebrae, which may be separate or fused.  Vertebrate includes the most familiar animals, viz., the instances of Mammal, Reptile, Bird, Fish.  Some biologists class the 'Vertebrata' as a sub-phylum of the Chordata-Phylum.  Vertebrate excludes Amphioxus."))

(defrelation Grasping-Implement
             (Name-In-Cyc Grasping-Implement "#$GraspingImplement")
             (Existing-Object-Type Grasping-Implement)
             (Subclass-Of Grasping-Implement Hand-Tool)
             (Set-Or-Collection Grasping-Implement)
             (Arity Grasping-Implement 1)
             (Documentation Grasping-Implement
              "A collection of tools.  An instance of Grasping-Implement is a tool which is intended to be used to grasp (and often to subsequently immobilize or control the location/movement of) some other solid object.  Examples include each Vise, each pair of Forceps, each Monkey-Wrench, each pair of Tweezers, etc.  But not a balloon, a syringe, a doorstop, a cage, etc.  A marginal positive example would be a magnetic tool designed to pick up something without actually touching it."))

(defrelation Script-Performance-Attribute-Type
             (Name-In-Cyc Script-Performance-Attribute-Type
              "#$ScriptPerformanceAttributeType")
             (Collection Script-Performance-Attribute-Type)
             (Subclass-Of Script-Performance-Attribute-Type
              Primitive-Attribute-Type)
             (Set-Or-Collection Script-Performance-Attribute-Type)
             (Arity Script-Performance-Attribute-Type 1)
             (Documentation Script-Performance-Attribute-Type
              "A collection of collections.  Each Script-Performance-Attribute-Type is a type of attribute that can be used to describe the manner in which actions are performed.  Examples include: Competence, Precision, Dexterity, Gracefulness, Creativity, etc.  So, e.g., one may run a race with some measure of Gracefulness, some measure of Competence, etc."))

(defrelation Ibt-Copying
             (Name-In-Cyc Ibt-Copying "#$IBTCopying")
             (Temporal-Object-Type Ibt-Copying)
             (Subclass-Of Ibt-Copying Ibt-Generation-Replication)
             (Set-Or-Collection Ibt-Copying)
             (Arity Ibt-Copying 1)
             (Documentation Ibt-Copying
              "A collection of events; a subset of IBT-Generation-Replication.  Each element of IBT-Copying is an event which generates a new IBT (i.e., an element of Information-Bearing-Thing) by copying the information and format from a source IBT (see Information-Origin).  The new IBT encodes approximately the same information in approximately the same way as the source IBT.  Examples: photocopying a document, faxing a document, duplicating a videotape."))

(defrelation Visual-Communicating
             (Name-In-Cyc Visual-Communicating "#$VisualCommunicating")
             (Temporal-Stuff-Type Visual-Communicating)
             (Default-Disjoint-Script-Type Visual-Communicating)
             (Subclass-Of Visual-Communicating Communicating)
             (Set-Or-Collection Visual-Communicating)
             (Arity Visual-Communicating 1)
             (Documentation Visual-Communicating
              "A collection of information transfer events; a subset of Communicating.  Each element of Visual-Communicating is an action in which information is transmitted by visual media.  Every element of Visual-Communicating has at least one Communication-Token which is an instance of Visual-Information-Source.  Examples of Visual-Communicating: a performance by mime Marcel Marceau; Seiji Ozawa conducting the Boston Symphony Orchestra; a policeman directing traffic; shaking a fist at someone in anger; sending a message with flags, light pulses, or smoke signals."))

(defrelation Directed-Translation
             (Name-In-Cyc Directed-Translation "#$DirectedTranslation")
             (Script-Type Directed-Translation)
             (Temporal-Stuff-Type Directed-Translation)
             (Subclass-Of Directed-Translation Purposeful-Action)
             (Subclass-Of Directed-Translation Movement-Translation-Event)
             (Set-Or-Collection Directed-Translation)
             (Arity Directed-Translation 1)
             (Documentation Directed-Translation
              "A collection of events; a subset of Movement-Translation-Event.  Each instance of Directed-Translation is a movement event that is Performed-By an Agent --- that agent intends for the Object-Moving to reach a particular Target.  Examples:  William Tell shooting the arrow off his son's head,  John Wilkes Booth shooting Abraham Lincoln, the last time you tossed a frisbee to someone, a pilot landing an airplane, and a skiier skiing one run of the downhill course."))

(defrelation Employment-Termination
             (Name-In-Cyc Employment-Termination "#$EmploymentTermination")
             (Temporal-Object-Type Employment-Termination)
             (Default-Disjoint-Script-Type Employment-Termination)
             (Subclass-Of Employment-Termination Organizational-Transfer-Out)
             (Subclass-Of Employment-Termination Ending-An-Agreement)
             (Set-Or-Collection Employment-Termination)
             (Arity Employment-Termination 1)
             (Documentation Employment-Termination
              "A collection of events; a subset of Ending-An-Agreement.  Each element of Employment-Termination is an event in which some employee ceases to work for his or her employer.  The termination may be initiated by either party, or it may have been specified in the original Work-Agreement (q.v.).  Different kinds of Employment-Termination are specified by the subsets Resigning, Employee-Layoff, Retirement-Event, etc."))

(defrelation Employee
             (Name-In-Cyc Employee "#$Employee")
             (Occupation-Type Employee)
             (Subclass-Of Employee Professional)
             (Set-Or-Collection Employee)
             (Arity Employee 1)
             (Documentation Employee
              "A collection of persons; a subset of Professional.  Each element of Employee works directly for some business.  Disjoint with Self-Employed-Worker."))

(defrelation Abstract-Information
             (Name-In-Cyc Abstract-Information "#$AbstractInformation")
             (Stuff-Type Abstract-Information)
             (Object-Type Abstract-Information)
             (Subclass-Of Abstract-Information Intangible)
             (Set-Or-Collection Abstract-Information)
             (Arity Abstract-Information 1)
             (Documentation Abstract-Information
              "The collection of all instances of abstract information stored or transmitted in some manner, and representing (to someone potentially at least) something.  Abstract information need not have any propositional content (see Propositional-Information-Thing); a score for music, or a bit-map, are examples.  Note that Abstract-Information is the abstract, intangible information, not any particular physical embodiment.  The same abstract information is often stored in many different physical Information-Bearing-Objects.  Abstract-Information may or may not be digital; it need not be representable in a particular number of bits.  Abstract-Information does not include every abstract Intangible or 'Platonic' concept, only that information that represents something and is (at least potentially) stored or transmitted for that purpose; thus, the ideal regular icosahedron is not in itself an instance of Abstract-Information.  Note also that although most instances of Abstract-Information are Intangible-Individuals, some are Set-Or-Collections such as Biological-Taxons and other Conventional-Classification-Types."))

(defrelation Unit-Of-Charge
             (Name-In-Cyc Unit-Of-Charge "#$UnitOfCharge")
             (Interconvertible-Unit-Type Unit-Of-Charge)
             (Subclass-Of Unit-Of-Charge Unit-Of-Measure)
             (Set-Or-Collection Unit-Of-Charge)
             (Arity Unit-Of-Charge 1)
             (Documentation Unit-Of-Charge
              "The collection of functions which return elements of Electrical-Charge.  E.g., (Coulomb 3) denotes an electrical charge of 3 coulombs."))

(deffunction Meter
   (Args-Isa Meter Real-Number)
   (Result-Instance-Of Meter Distance)
   (Result-Instance-Of Meter Scalar-Interval)
   (Name-In-Cyc Meter "#$Meter")
   (Unit-Of-Distance Meter)
   (Standard-Unit-Of-Measure Meter)
   (Mks-Unit-Of-Measure Meter)
   (Unit-Of-Measure-No-Prefix Meter)
   (Function Meter)
   (Documentation Meter
    "The measurement function used in Cyc to represent the basic unit of measure in the metric system.  The meter is also the basic unit of measure for length in CYC.  See also MKS-Unit-Of-Measure, Unit-Of-Measure."))

(defrelation Hot-Air-Balloon
             (Name-In-Cyc Hot-Air-Balloon "#$HotAirBalloon")
             (Product-Type Hot-Air-Balloon)
             (Existing-Object-Type Hot-Air-Balloon)
             (Subclass-Of Hot-Air-Balloon Air-Transportation-Device)
             (Subclass-Of Hot-Air-Balloon Container-Product)
             (Set-Or-Collection Hot-Air-Balloon)
             (Arity Hot-Air-Balloon 1)
             (Documentation Hot-Air-Balloon
              "The collection of all hot-air buoyant balloons, Air-Transportation-Devices that usually lack a motor or a means of steering.  Each consistes of a gas-bag into which hot air is introduced, and from which a basket or passenger compartment hangs."))

(defrelation News
             (Name-In-Cyc News "#$News")
             (Stuff-Type News)
             (Subclass-Of News Propositional-Information-Thing)
             (Set-Or-Collection News)
             (Arity News 1)
             (Documentation News
              "A collection of abstract (intangible) informational items.  Each element of News consists of some factual information about recent events in the world (or Geographical-Sub-Regions thereof).  News is commonly embodied in newspapers and communicated through radio and television news broadcasts."))

(defrelation Collection-Denoting-Function
             (Name-In-Cyc Collection-Denoting-Function
              "#$CollectionDenotingFunction")
             (Relationship-Type Collection-Denoting-Function)
             (Collection Collection-Denoting-Function)
             (Subclass-Of Collection-Denoting-Function Reifiable-Function)
             (Set-Or-Collection Collection-Denoting-Function)
             (Arity Collection-Denoting-Function 1)
             (Documentation Collection-Denoting-Function
              "The collection of all Cyc functions which return elements of Collection.  Examples: Swimming-Event-Fn, Package-Fn, Molecule-Fn, all produce collections when applied to their proper arguments; e.g., (Molecule-Fn Oxygen) returns the collection of all oxygen molecules.  Note that (:Direct-Superclasses Collection-Denoting-Function Reifiable-Function).  Cf. Individual-Denoting-Function."))

(defrelation Physical-Part-Predicate
             (Name-In-Cyc Physical-Part-Predicate "#$PhysicalPartPredicate")
             (Predicate-Category Physical-Part-Predicate)
             (Subclass-Of Physical-Part-Predicate Part-Predicate)
             (Subclass-Of Physical-Part-Predicate Cotemporal-Predicate)
             (Set-Or-Collection Physical-Part-Predicate)
             (Arity Physical-Part-Predicate 1)
             (Documentation Physical-Part-Predicate
              "A collection of predicates. Instances of Physical-Part-Predicate are used to describe the relationship between a Partially-Tangible and its Physical-Parts."))

(defrelation Speech-Part
             (Name-In-Cyc Speech-Part "#$SpeechPart")
             (Linguistic-Object-Type Speech-Part)
             (Subclass-Of Speech-Part Nonlexical-Linguistic-Object)
             (Set-Or-Collection Speech-Part)
             (Arity Speech-Part 1)
             (Documentation Speech-Part
              "The collection of all parts of speech.  Subsets of Speech-Part include Preposition, Adverb, Simple-Noun, Determiner, Quantifying-Indexical, Punctuation-SP, Pronoun).  To link a specific word with the parts of speech for which it has forms, see Pos-Forms; e.g., You-The-Word has a#$Pronoun form, And-The-Word has a Coordinating-Conjunction form, Hit-The-Word has both Simple-Noun and Verb forms."))

(defrelation Blimp-The-Airship
             (Name-In-Cyc Blimp-The-Airship "#$BlimpTheAirship")
             (Product-Type Blimp-The-Airship)
             (Existing-Object-Type Blimp-The-Airship)
             (Subclass-Of Blimp-The-Airship Transportation-Device-Vehicle)
             (Subclass-Of Blimp-The-Airship Air-Transportation-Device)
             (Subclass-Of Blimp-The-Airship Container-Product)
             (Set-Or-Collection Blimp-The-Airship)
             (Arity Blimp-The-Airship 1)
             (Documentation Blimp-The-Airship
              "The collection of all dirigible, motorized, lighter-than-air craft (airships).  Each generally consists of a gas-filled gas-sack from which a control and passenger cabin hangs (the gas-sack may or may not have rigid reinforcement such as ribs).  A BlimpTheAirship flies more slowly than an Airplane.  They are also called blimps, dirigibles and Zeppelins."))

(defrelation Cost-Breakdown-Slot
             (Name-In-Cyc Cost-Breakdown-Slot "#$CostBreakdownSlot")
             (Predicate-Category Cost-Breakdown-Slot)
             (Subclass-Of Cost-Breakdown-Slot Slot)
             (Subclass-Of Cost-Breakdown-Slot Predicate)
             (Set-Or-Collection Cost-Breakdown-Slot)
             (Arity Cost-Breakdown-Slot 1)
             (Documentation Cost-Breakdown-Slot
              "A collection of predicates.  Each element of Cost-Breakdown-Slot is a binary predicate used to describe some pecuniary aspect of an instance of Buying.  The first argument to every Cost-Breakdown-Slot is an element of Buying and the second argument is always an instance of Money.  Examples: Money-Transferred, Discount, Sales-Tax, Sales-Commission."))

(defrelation Solid-Tangible-Thing
             (Transport-Fn Solid-Tangible-Thing
              |(TRANSPORT-FN SOLID-TANGIBLE-THING)|)
             (Name-In-Cyc Solid-Tangible-Thing "#$SolidTangibleThing")
             (Tangible-Stuff-State-Type Solid-Tangible-Thing)
             (Subclass-Of Solid-Tangible-Thing Tangible-Thing)
             (Set-Or-Collection Solid-Tangible-Thing)
             (Arity Solid-Tangible-Thing 1)
             (Documentation Solid-Tangible-Thing
              "A collection of tangible stuff.  Each element of Solid-Tangible-Thing is a substance that is intrinsically in a Solid-State-Of-Matter.  For example, Ayers-Rock, the quarter-dollar coin I put in the parking meter, the ice cubes in my lemonade, a paper bag and the bagel inside it.  Collections containing the solid phase of any type of stuff can be created using Solid-Fn (q.v.)."))

(defobject Concave
   (Curvature-Of-Surface Concave)
   (Name-In-Cyc Concave "#$Concave")
   (Documentation Concave
    "An attribute of a surface meaning that it is bumped or indented inward.  A concave surface has a pair of points which are both closer to a viewer than points on the surface between them.   Dependinhg on the context, it may have relatively small subregions which have convexities (e.g. wrinkles, small dents, corrugations) or are flat so long as the overall shape is concave.  Saddle-shapes, although convex in certain dimensions, are concave in others and are therefore concave."))

(defrelation Back-Side
             (Name-In-Cyc Back-Side "#$BackSide")
             (Region-Type Back-Side)
             (Subclass-Of Back-Side Side)
             (Set-Or-Collection Back-Side)
             (Arity Back-Side 1)
             (Documentation Back-Side
              "The collection of all the entire back sides (as conventionally understood) of all objects that have distinct Sides, one of which faces in the backwards direction."))

(defobject Grilled
   (Preparation-Attribute Grilled)
   (Subattribute-Of Grilled Cooked)
   (Name-In-Cyc Grilled "#$Grilled")
   (Documentation Grilled
    "The attribute Grilled is a specialized form of Cooked.  Food that is Grilled has been prepared in an event of Grilling-Food, using a BBQ-Grill or an Electric-Grill."))

(defrelation Unit-Of-Capacitance
             (Name-In-Cyc Unit-Of-Capacitance "#$UnitOfCapacitance")
             (Interconvertible-Unit-Type Unit-Of-Capacitance)
             (Subclass-Of Unit-Of-Capacitance Unit-Of-Measure)
             (Set-Or-Collection Unit-Of-Capacitance)
             (Arity Unit-Of-Capacitance 1)
             (Documentation Unit-Of-Capacitance
              "The collection of functions which return elements of Electrical-Capacitance.  E.g., (Farad 20) denotes an electrical capacitance of 20 farads."))

(defrelation Modern-Naval-Ship
             (Name-In-Cyc Modern-Naval-Ship "#$ModernNavalShip")
             (Existing-Object-Type Modern-Naval-Ship)
             (Subclass-Of Modern-Naval-Ship Weapon)
             (Subclass-Of Modern-Naval-Ship Ship)
             (Set-Or-Collection Modern-Naval-Ship)
             (Arity Modern-Naval-Ship 1)
             (Documentation Modern-Naval-Ship
              "The collection of all Ships that have been used since the Nineteenth Century primarily for naval purposes, including military attack and defense, reconnaisance, support, rescue, coastal monitoring, etc.  Such a ship is naval in this sense even if it is not operated by a Navy. Most ModernNavalShips are specifically constructed for naval purposes."))

(defrelation County-Government
             (Name-In-Cyc County-Government "#$CountyGovernment")
             (Existing-Object-Type County-Government)
             (Subclass-Of County-Government Regional-Government)
             (Set-Or-Collection County-Government)
             (Arity County-Government 1)
             (Documentation County-Government
              "The collection of all County governments."))

(defrelation Relationship-Predicate
             (Name-In-Cyc Relationship-Predicate "#$RelationshipPredicate")
             (Predicate-Category Relationship-Predicate)
             (Subclass-Of Relationship-Predicate Intangible-Object-Predicate)
             (Set-Or-Collection Relationship-Predicate)
             (Arity Relationship-Predicate 1)
             (Documentation Relationship-Predicate
              "A collection of predicates.  Each element of Relationship-Predicate is a predicate used to describe relationships between intangible or abstract objects.  Examples: Sub-Equations, Sub-Functions, Max-Quant-Value, Mean-Quant-Value, Expected-Value, Derivatives-Of-Function, Range-Of-Distribution, Inverse-Func, Less-Likely-Than."))

(defrelation Linguistic-Object-Type
             (Name-In-Cyc Linguistic-Object-Type "#$LinguisticObjectType")
             (Collection Linguistic-Object-Type)
             (Subclass-Of Linguistic-Object-Type Object-Type)
             (Set-Or-Collection Linguistic-Object-Type)
             (Arity Linguistic-Object-Type 1)
             (Documentation Linguistic-Object-Type
              "Linguistic-Object-Type is the collection of things which are subsets of Linguistic-Object."))

(defrelation Farmer
             (Name-In-Cyc Farmer "#$Farmer")
             (Occupation-Type Farmer)
             (Subclass-Of Farmer Blue-Collar-Worker)
             (Subclass-Of Farmer Professional)
             (Set-Or-Collection Farmer)
             (Arity Farmer 1)
             (Documentation Farmer
              "A collection of persons; a subset of Professional.  Each element of Farmer is a person who makes (or significantly supplements) his or her income by farming.  This includes growing vegetables, grain, or fruit crops, dairy farming, or raising livestock (e.g., cattle, pigs, sheep, fish) for their meat or other animal products (e.g., wool)."))

(defrelation Hostility
             (Name-In-Cyc Hostility "#$Hostility")
             (Feeling-Attribute-Type Hostility)
             (Subclass-Of Hostility Feeling-Attribute)
             (Set-Or-Collection Hostility)
             (Arity Hostility 1)
             (Documentation Hostility
              "A feeling of strong antagonism towards another agent, organization, or group, sufficient to motivate harmful speech or actions against them.  This is a Collection --- for an explanation of that, see Happiness.  Some more specialized Feeling-Attribute-Types than Hostility include feelings of Hate."))

(defrelation Information-Destination
             (Domain Information-Destination Information-Transfer-Event)
             (Range Information-Destination Temporal-Thing)
             (Name-In-Cyc Information-Destination "#$informationDestination")
             (Role Information-Destination)
             (Slot Information-Destination)
             (Relation Information-Destination)
             (Arity Information-Destination 2)
             (Binary-Relation Information-Destination)
             (Documentation Information-Destination
              "The predicate Information-Destination is used to indicate where information is transferred in a particular information transfer event.  (Information-Destination TRANSFER DEST) means that in the Information-Transfer-Event TRANSFER, the information being transferred is sent, given to, or impressed upon DEST.  DEST is an IBT (i.e., an element of Information-Bearing-Thing) or an agent.  Note that if DEST is an agent, you should probably use the more specific actor slot, Recipient-Of-Info.  Note also that if DEST existed before the transfer, it may have already contained the information."))

(defrelation Interconvertible-Unit-Type
             (Name-In-Cyc Interconvertible-Unit-Type
              "#$InterconvertibleUnitType")
             (Collection Interconvertible-Unit-Type)
             (Subclass-Of Interconvertible-Unit-Type Collection)
             (Set-Or-Collection Interconvertible-Unit-Type)
             (Arity Interconvertible-Unit-Type 1)
             (Documentation Interconvertible-Unit-Type
              "A collection of collections.  Each element of Interconvertible-Unit-Type is a collections of functions (all belonging to Unit-Of-Measure) that are used to measure quantities whose units are convertible into one another.  Some collections of interconvertible units include Unit-Of-Time, Unit-Of-Distance, Unit-Of-CPU-Speed.   For example, Unit-Of-Time includes the functions Hours-Duration and Seconds-Duration (among others).  Any quantity denoted by applying one of those functions can also be expressed in terms of the other.  For example, (Hours-Duration 1) equals (Minutes-Duration 60).  On the other hand, not all the instances of Unit-Of-Measure constitute types of interconvertible units. Unit-Of-Rate is not an element of Interconvertible-Unit-Type; therefore, it does not necessarily follow that quantities denoted by its elements are interconvertible.  For example, Times-Per-Day and Miles-Per-Hour are both elements of Unit-Of-Rate; however, quantities denoted using either function are not convertible into one another."))

(defrelation Country
             (Government-Fn Country |(GOVERNMENT-FN COUNTRY)|)
             (Name-In-Cyc Country "#$Country")
             (Existing-Object-Type Country)
             (Subclass-Of Country Geopolitical-Entity)
             (Set-Or-Collection Country)
             (Arity Country 1)
             (Documentation Country
              "A collection of geopolitical entities.  An element of Country is a nation-state having its own territory, population, and government, whether or not it is fully independent.  For example, Scotland is an element of Country, even though it is a part of the United-Kingdom-Of-Great-Britain-And-Northern-Ireland.  Cf. Independent-Country."))

(defrelation Rowboat
             (Name-In-Cyc Rowboat "#$Rowboat")
             (Product-Type Rowboat)
             (Existing-Object-Type Rowboat)
             (Subclass-Of Rowboat Boat-Water-Transportation-Device)
             (Subclass-Of Rowboat Device-User-Powered)
             (Set-Or-Collection Rowboat)
             (Arity Rowboat 1)
             (Documentation Rowboat "A subcollection of 
Boat-Water-Transportation-Device that contains all boats each 
of which is usually powered by one or more persions' rowing."))

(defrelation Sensory-Response
             (Nth-Domain Sensory-Response 1 Physical-Event)
             (Nth-Domain Sensory-Response 2 Actor-Slot)
             (Nth-Domain Sensory-Response 3 Sensory-Reaction-Type)
             (Nth-Domain Sensory-Response 4 Generic-Attribute)
             (Nth-Domain-Subclass-Of Sensory-Response 3 Sensory-Attribute)
             (Name-In-Cyc Sensory-Response "#$sensoryResponse")
             (Quaternary-Predicate Sensory-Response)
             (Functional-Predicate Sensory-Response)
             (Relation Sensory-Response)
             (Arity Sensory-Response 4)
             (Documentation Sensory-Response
              "(Sensory-Response EVT ROLE SENSTYPE DEGREE) means that a Perceptual-Agent who participates in the Physical-Event EVT in the manner ROLE has an immediate sensory reaction of the Sensory-Reaction-Type SENSTYPE with DEGREE of intensity. For example, Cyc's knowledge base contains a rule that says that if $E is a touching-something-very-cold event, then (Sensory-Response $E Done-By Level-Of-Discomfort Positive) --- i.e., that whoever does that touching action is likely to feel some discomfort. Note that Sensory-Response is one of the few predicates that are quaternary; i.e., that take four arguments."))

(defrelation Ternary-Predicate
             (Name-In-Cyc Ternary-Predicate "#$TernaryPredicate")
             (Relationship-Type Ternary-Predicate)
             (Collection Ternary-Predicate)
             (Subclass-Of Ternary-Predicate Predicate)
             (Set-Or-Collection Ternary-Predicate)
             (Arity Ternary-Predicate 1)
             (Documentation Ternary-Predicate
              "Ternary-Predicate is the collection of all Cyc predicates which take three arguments."))

(defrelation Unit-Vector-Interval
             (Name-In-Cyc Unit-Vector-Interval "#$UnitVectorInterval")
             (Object-Type Unit-Vector-Interval)
             (Subclass-Of Unit-Vector-Interval Vector-Interval)
             (Set-Or-Collection Unit-Vector-Interval)
             (Arity Unit-Vector-Interval 1)
             (Documentation Unit-Vector-Interval
              "The collection Unit-Vector-Interval is a subset of Vector-Interval.  Each element of Unit-Vector-Interval is a vector interval with a magnitude of 1.  Thus, one unit vector differs from another only in direction, since each vector consists of a magnitude and a direction (in a space of n > 1 dimensions).   An element of Unit-Vector-Interval may specify either a precise unit vector or a generalized range of directions such as `in front of'.  See also Unit-Vector-Precise. "))

(defrelation Biological-Class
             (Name-In-Cyc Biological-Class "#$BiologicalClass")
             (Biological-Taxon-Type Biological-Class)
             (Subclass-Of Biological-Class Biological-Taxon)
             (Set-Or-Collection Biological-Class)
             (Arity Biological-Class 1)
             (Documentation Biological-Class
              "The collection of taxonomic subdivisions directly under Biological-Phylum (for animals and for the animal-like organisms in the Protista-Kingdom), or Biological-Division (for the plants and for the plant-like organisms within the Protista-Kingdom)."))

(defrelation Harvesting-A-Plant
             (Name-In-Cyc Harvesting-A-Plant "#$HarvestingAPlant")
             (Temporal-Object-Type Harvesting-A-Plant)
             (Script-Type Harvesting-A-Plant)
             (Subclass-Of Harvesting-A-Plant Directed-Translation)
             (Subclass-Of Harvesting-A-Plant Removing-Something)
             (Subclass-Of Harvesting-A-Plant Transportation-Event)
             (Subclass-Of Harvesting-A-Plant Human-Activity)
             (Set-Or-Collection Harvesting-A-Plant)
             (Arity Harvesting-A-Plant 1)
             (Documentation Harvesting-A-Plant
              "A collection of events.  Each instance of Harvesting-A-Plant is an event in which a plant is harvested.  Harvesting may involve separating some part of the plant and leaving the rest in place (e.g., fruit trees), or it may involve removing the entire plant from its growing location (e.g., carrots)."))

(defrelation Watching-Something
             (Name-In-Cyc Watching-Something "#$WatchingSomething")
             (Temporal-Stuff-Type Watching-Something)
             (Default-Disjoint-Script-Type Watching-Something)
             (Subclass-Of Watching-Something Single-Doer-Action)
             (Subclass-Of Watching-Something Visual-Perception)
             (Subclass-Of Watching-Something Purposeful-Action)
             (Set-Or-Collection Watching-Something)
             (Arity Watching-Something 1)
             (Documentation Watching-Something
              "A collection of events involving the deliberate direction of Visual-Perception
on the part of an Agent."))

(defrelation Decomposition-Process
             (Name-In-Cyc Decomposition-Process "#$DecompositionProcess")
             (Temporal-Stuff-Type Decomposition-Process)
             (Default-Disjoint-Script-Type Decomposition-Process)
             (Subclass-Of Decomposition-Process Transformation-Process)
             (Set-Or-Collection Decomposition-Process)
             (Arity Decomposition-Process 1)
             (Documentation Decomposition-Process
              "A collection of events in which some object decomposes.  I.e., in a Decomposition-Process event, some object's matter undergoes chemical reactions (sometimes mediated by microorganisms) that eventually result in the object losing its shape and material characteristics.  This may sometimes superficially resemble Melting, but it is a different process."))

(defobject Superconductor-Resistance
   (Electrical-Resistance Superconductor-Resistance)
   (Name-In-Cyc Superconductor-Resistance "#$SuperconductorResistance")
   (Documentation Superconductor-Resistance
    "A measurable physical attribute.  Superconductor-Resistance is the element of Electrical-Resistance that describes an object which has absolutely no resistance to the passage of electricity.  That level of resistance is found only in superconductors."))

(defrelation Temporal-Relation
             (Synonymous-External-Concept Temporal-Relation
              Sensus-Information1997 "TEMPORAL-RELATION")
             (Name-In-Cyc Temporal-Relation "#$TemporalRelation")
             (Predicate-Category Temporal-Relation)
             (Subclass-Of Temporal-Relation
              Extensional-Representation-Predicate)
             (Subclass-Of Temporal-Relation Slot)
             (Set-Or-Collection Temporal-Relation)
             (Arity Temporal-Relation 1)
             (Documentation Temporal-Relation
              "Temporal-Relations specify relative positions of Temporal-Things in Time.  Primitive-Temporal-Relations (such as After) interrelate time points, and Complex-Temporal-Relations (such as Post-Events and Later-Sub-Abstractions) interrelate more complicated temporal objects such as a pair of events, a pair of tangible objects, etc."))

(deffunction Times-Per-Minute
   (Args-Isa Times-Per-Minute Real-Number)
   (Result-Instance-Of Times-Per-Minute Frequency)
   (Result-Instance-Of Times-Per-Minute Rate)
   (Result-Instance-Of Times-Per-Minute Scalar-Interval)
   (Name-In-Cyc Times-Per-Minute "#$TimesPerMinute")
   (Unit-Of-Measure-No-Prefix Times-Per-Minute)
   (Unit-Of-Frequency Times-Per-Minute)
   (Function Times-Per-Minute)
   (Documentation Times-Per-Minute "Times per minute -- unit of frequency"))

(defrelation Mental-Object
             (Name-In-Cyc Mental-Object "#$MentalObject")
             (Stuff-Type Mental-Object)
             (Object-Type Mental-Object)
             (Subclass-Of Mental-Object Intangible-Individual)
             (Set-Or-Collection Mental-Object)
             (Arity Mental-Object 1)
             (Documentation Mental-Object
              "Each element of Mental-Object is an intangible object intimately connected in some fashion with mental activity.  This includes objects such as thoughts, emotions, knowledge; events such as thinking and reasoning; and intangible time-like objects such as mental-processing-time and cpu-time."))

(defobject Plus-Infinity
   (Non-Negative-Number Plus-Infinity)
   (Non-Negative-Scalar-Interval Plus-Infinity)
   (Real-Number Plus-Infinity)
   (Name-In-Cyc Plus-Infinity "#$PlusInfinity")
   (Documentation Plus-Infinity
    "Plus-Infinity represents an infinitely large positive number (roughly akin to aleph-null)."))

(deffunction Quarter-Fn
   (Nth-Domain Quarter-Fn 1 Positive-Integer)
   (Nth-Domain Quarter-Fn 2 Calendar-Year)
   (Result-Instance-Of Quarter-Fn Calendar-Quarter)
   (Name-In-Cyc Quarter-Fn "#$QuarterFn")
   (Individual-Denoting-Function Quarter-Fn)
   (Non-Predicate-Function Quarter-Fn)
   (Function Quarter-Fn)
   (Arity Quarter-Fn 2)
   (Function-Arity Quarter-Fn 1)
   (Binary-Relation Quarter-Fn)
   (Documentation Quarter-Fn
    "(Quarter-Fn ?N ?YR) denotes the Nth Calendar-Quarter of the year ?YR. For example, (Quarter-Fn 2 (Year-Fn 1966)) denotes the second quarter of 1966."))

(defrelation Social-Class-Lifestyle
             (Name-In-Cyc Social-Class-Lifestyle "#$SocialClass-Lifestyle")
             (Social-Attribute-Type Social-Class-Lifestyle)
             (Subclass-Of Social-Class-Lifestyle Scalar-Interval)
             (Subclass-Of Social-Class-Lifestyle Social-Status-Attribute)
             (Set-Or-Collection Social-Class-Lifestyle)
             (Arity Social-Class-Lifestyle 1)
             (Documentation Social-Class-Lifestyle
              "The collection of attributes that indicate a person's social class, as determined by the person's general lifestyle, quality of life, and relative access to the (material and security oriented) desiderata of life.  It may depend on a cultural non-material system of social rank, based on birth, office, manners, vocal accent or other factors.  Members of this collection include Lower-Middle-Class, Upper-Class, etc."))

(defrelation Sea
             (Name-In-Cyc Sea "#$Sea")
             (Existing-Object-Type Sea)
             (Subclass-Of Sea Sea-Water)
             (Subclass-Of Sea Water-Saline)
             (Subclass-Of Sea Body-Of-Water)
             (Set-Or-Collection Sea)
             (Arity Sea 1)
             (Documentation Sea
              "A collection of topographical features.  Each element of Sea is a body of salt water as large or larger than a lake.  Ocean is a subset of this collection.  Examples of Sea: Pacific-Ocean, Ionian-Sea, Gulf-Of-Corinth, East-China-Sea, Black-Sea."))

(defrelation Regional-Government
             (Name-In-Cyc Regional-Government "#$RegionalGovernment")
             (Existing-Object-Type Regional-Government)
             (Subclass-Of Regional-Government Legal-Government-Organization)
             (Set-Or-Collection Regional-Government)
             (Arity Regional-Government 1)
             (Documentation Regional-Government
              "A collection of government organizations; a subset of Legal-Government-Organization.  An element of Regional-Government is a government organization which controls a particular geopolitical region (e.g., a country, state, city, county, etc).  The Sub-Organizations of an element of Regional-Government may include such function-specific Departments (q.v.) as legislatures, cabinets, police departments, Boards of Education, and miscellaneous regulatory agencies (which are also Legal-Government-Organizations).  The Sub-Organizations of a Regional-Government do not include other Regional-Governments."))

(defrelation |(SOLID-FN CONCRETE)|
             (Skolem-Object |(SOLID-FN CONCRETE)|)
             (Tangible-Stuff-State-Type |(SOLID-FN CONCRETE)|)
             (Subclass-Of |(SOLID-FN CONCRETE)| Concrete)
             (Subclass-Of |(SOLID-FN CONCRETE)| Solid-Tangible-Thing)
             (Set-Or-Collection |(SOLID-FN CONCRETE)|)
             (Arity |(SOLID-FN CONCRETE)| 1))

(defrelation Frame-Of-Reference
             (Name-In-Cyc Frame-Of-Reference "#$FrameOfReference")
             (Object-Type Frame-Of-Reference)
             (Subclass-Of Frame-Of-Reference Geometric-Thing)
             (Set-Or-Collection Frame-Of-Reference)
             (Arity Frame-Of-Reference 1)
             (Documentation Frame-Of-Reference
              "A collection of geometric things.  Each element of Frame-Of-Reference is a representation of the context in which certain data are to be interpreted.  Such contexts are typically physical (i.e., spatiotemporal), but contexts may also be purely mathematical.  A Cartesian coordinate system represents a frame of reference."))

(defrelation Glass
             (Solid-Fn Glass |(SOLID-FN GLASS)|)
             (Name-In-Cyc Glass "#$Glass")
             (Tangible-Stuff-Composition-Type Glass)
             (Subclass-Of Glass Inanimate-Thing)
             (Subclass-Of Glass Tangible-Thing)
             (Set-Or-Collection Glass)
             (Arity Glass 1)
             (Documentation Glass
              "A collection of tangible things.  Each element of Glass is a piece of glass; e.g., a wine bottle, a plate glass window, a microscope slide, a crystal water goblet, the mirrors of a reflecting telescope."))

(defrelation International-Organization
             (Name-In-Cyc International-Organization
              "#$InternationalOrganization")
             (Existing-Object-Type International-Organization)
             (Subclass-Of International-Organization Organization)
             (Set-Or-Collection International-Organization)
             (Arity International-Organization 1)
             (Documentation International-Organization
              "A collection of organizations.  An element of International-Organization is an organization of international `scope' -- that is, one which has substantial operations, physical facilities, or substantial membership in multiple countries.  International organizations may have individual Persons, Organizations, or countries as members.  They may be political or commercial in nature.  International organizations with countries as members belong to the subset International-Organization-Of-Countries.  Examples of International-Organization: United-Nations-Organization, OPEC, IBM-Inc.  See also International-Org-Member-Country."))

(defrelation Non-Leap-Year
             (The-Partition Non-Leap-Year Leap-Year
              |(THE-PARTITION NON-LEAP-YEAR LEAP-YEAR)|)
             (Name-In-Cyc Non-Leap-Year "#$NonLeapYear")
             (Temporal-Object-Type Non-Leap-Year)
             (Subclass-Of Non-Leap-Year Calendar-Year)
             (Set-Or-Collection Non-Leap-Year)
             (Arity Non-Leap-Year 1)
             (Documentation Non-Leap-Year
              "The collection of Calendar-Years which are not leap years; i.e., calendar years in which February has 28 days"))

(defrelation Collection
             (Name-In-Cyc Collection "#$Collection")
             (Collection Collection)
             (Subclass-Of Collection Set-Or-Collection)
             (Set-Or-Collection Collection)
             (Arity Collection 1)
             (Documentation Collection
              "The collection of all Cyc collections.  Cyc collections are natural kinds or classes, as opposed to mathematical sets; their elements have some common attribute(s).  Each Cyc collection is like a set in so far as it may have elements, subsets, and supersets, and may not have parts or spatial or temporal properties.  Sets, however, differ from collections in that a mathematical set may be an arbitrary set of things which have nothing in common (see Set-Mathematical).  In contrast, the elements of a collection will all have in common some feature(s), some `intensional' qualities.  In addition, two instances of Collection can be co-extensional (i.e., have all the same elements) without being identical, whereas if two arbitrary sets had the same elements, they would be considered equal.   As with any Cyc constant, an instance of Collection should be created only if it is expected to have some purpose or utility.  Moreover, the `best' collections to create are the ones which are impossible to define precisely, yet about which there are rules and other things to say.  E.g., `WhiteCat' is not a good element of Collection to create, because it's easy to define with other Cyc concepts, and there's not much to say about the collection of white cats; but `WhiteCollarWorker' could be a good element of Collection, because it is hard to define exactly, yet there are many things to say about it."))

(defrelation Heart
             (Name-In-Cyc Heart "#$Heart")
             (Unique-Anatomical-Part-Type Heart)
             (Animal-Body-Part-Type Heart)
             (Subclass-Of Heart Organ)
             (Subclass-Of Heart Muscle-Tissue)
             (Set-Or-Collection Heart)
             (Arity Heart 1)
             (Documentation Heart
              "The collection of all hearts.  A Heart is an Organ that pumps blood throughout the body of an Animal."))

(defrelation Food-Utensil
             (Name-In-Cyc Food-Utensil "#$FoodUtensil")
             (Existing-Object-Type Food-Utensil)
             (Subclass-Of Food-Utensil Hoc-Object)
             (Set-Or-Collection Food-Utensil)
             (Arity Food-Utensil 1)
             (Documentation Food-Utensil
              "A collection of objects.  Each element of Food-Utensil is an implement or a container used in preparing or consuming food.  Among its subsets are: Spoon, Carving-Knife, Cooking-Utensil, Food-Vessel, Cutting-Board, and Chop-Stick."))

(deffunction Skolem-Function-Fn
   (Nth-Domain Skolem-Function-Fn 1 Cyc-System-List)
   (Nth-Domain Skolem-Function-Fn 2 Cyc-System-Symbol)
   (Result-Instance-Of Skolem-Function-Fn Thing)
   (Name-In-Cyc Skolem-Function-Fn "#$SkolemFunctionFn")
   (Function-The-Mathematical-Type Skolem-Function-Fn)
   (Function Skolem-Function-Fn)
   (Arity Skolem-Function-Fn 2)
   (Function-Arity Skolem-Function-Fn 1)
   (Binary-Relation Skolem-Function-Fn))

(defrelation Abrading-Something
             (Name-In-Cyc Abrading-Something "#$AbradingSomething")
             (Default-Disjoint-Script-Type Abrading-Something)
             (Subclass-Of Abrading-Something Ablation)
             (Subclass-Of Abrading-Something Physical-Contact-Situation)
             (Subclass-Of Abrading-Something Voluntary-Body-Movement)
             (Set-Or-Collection Abrading-Something)
             (Arity Abrading-Something 1)
             (Documentation Abrading-Something
              "A collection of events.  In an Abrading-Something event, the surface of some object is gradually worn away by scraping or similar physical contact involving friction.  Devices used in elements of Abrading-Something include files and sand paper; elements of Abrading-Something would include the event in which Howard Hughes sanded down the Spruce Goose for the last time, the event in which Lucy Ricardo filed her fingernails just before her singing debut at Rickie's club, etc."))

(defrelation Dead-Animal
             (Name-In-Cyc Dead-Animal "#$DeadAnimal")
             (Existing-Object-Type Dead-Animal)
             (Subclass-Of Dead-Animal Organic-Stuff)
             (Set-Or-Collection Dead-Animal)
             (Arity Dead-Animal 1)
             (Documentation Dead-Animal
              "A subset of Organic-Stuff (and not, of course, of Animal, whose elements must be alive).  Each element of Dead-Animal is a corpse or partial remains of an individual animal, somewhat intact, and prior to any butchering, burning, cooking, dissolving, or fully decomposing."))

(defrelation Unit-Of-Distance
             (Name-In-Cyc Unit-Of-Distance "#$UnitOfDistance")
             (Interconvertible-Unit-Type Unit-Of-Distance)
             (Subclass-Of Unit-Of-Distance Unit-Of-Measure)
             (Set-Or-Collection Unit-Of-Distance)
             (Arity Unit-Of-Distance 1)
             (Documentation Unit-Of-Distance
              "The collection of functions which return elements of Distance; e.g., (Mile 26.2) denotes 26.2 miles."))

(defrelation Legal-Corporation
             (Name-In-Cyc Legal-Corporation "#$LegalCorporation")
             (Existing-Object-Type Legal-Corporation)
             (Subclass-Of Legal-Corporation Organization)
             (Subclass-Of Legal-Corporation Legal-Agent)
             (Set-Or-Collection Legal-Corporation)
             (Arity Legal-Corporation 1)
             (Documentation Legal-Corporation
              "A collection of businesses.  An element of Legal-Corporation is a private, legal, corporate entity with the legal rights to own property, manage itself, and sue or be sued.  It is established by a charter or registration granted by a government.  A corporation's owners have Stock in it and normally elect its Board-Of-Directors, but are usually not active in its operation nor liable for its debts, crimes, or torts."))

(defrelation Vermin
             (Name-In-Cyc Vermin "#$Vermin")
             (Existing-Object-Type Vermin)
             (Subclass-Of Vermin Non-Person-Animal)
             (Set-Or-Collection Vermin)
             (Arity Vermin 1)
             (Documentation Vermin
              "A collection of animals considered undesirable to find living in human habitation buildings or other facilities. "))

(defrelation Target
             (Subrelation-Of Target Actors)
             (Domain Target Generalized-Transfer)
             (Range Target Partially-Tangible)
             (Name-In-Cyc Target "#$target")
             (Actor-Slot Target)
             (Slot Target)
             (Relation Target)
             (Arity Target 2)
             (Binary-Relation Target)
             (Documentation Target
              "(Target TRANS PLACE) means that the Performed-By (or Directing-Agent) of the event TRANS intends that the Transferred-Thing end up at PLACE."))

(defrelation Herbivore
             (Name-In-Cyc Herbivore "#$Herbivore")
             (Existing-Object-Type Herbivore)
             (Subclass-Of Herbivore Animal)
             (Set-Or-Collection Herbivore)
             (Arity Herbivore 1)
             (Documentation Herbivore
              "The collection of animals that do not eat other animals, or parts of animals, but instead eat plants or plant parts.  Ruminant and its subsets Deer and Sheep are subsets of Herbivore."))

(defrelation Preservative-Food
             (Name-In-Cyc Preservative-Food "#$Preservative-Food")
             (Existing-Stuff-Type Preservative-Food)
             (Product-Type Preservative-Food)
             (Subclass-Of Preservative-Food Food-Ingredient-Only)
             (Set-Or-Collection Preservative-Food)
             (Arity Preservative-Food 1)
             (Documentation Preservative-Food
              "Preservatives which are added to food to prevent spoilage."))

(defrelation Concrete
             (Solid-Fn Concrete |(SOLID-FN CONCRETE)|)
             (Name-In-Cyc Concrete "#$Concrete")
             (Tangible-Stuff-Composition-Type Concrete)
             (Subclass-Of Concrete Building-Material)
             (Subclass-Of Concrete Artificial-Material)
             (Set-Or-Collection Concrete)
             (Arity Concrete 1)
             (Documentation Concrete
              "A collection of tangible things.  Each element of Concrete is a piece of an artificial mixture of cement, gravel, sand, and (during mixture, pouring, and forming) water.  Used widely in construction, pieces of concrete are formed into the desired shape while fluid and afterward hardened into a sturdy, durable material.  Examples: bridge pilings, foundations of houses, sidewalks, pieces of IH-35."))

(defrelation Entertainment-Or-Arts-Professional
             (Name-In-Cyc Entertainment-Or-Arts-Professional
              "#$EntertainmentOrArtsProfessional")
             (Occupation-Type Entertainment-Or-Arts-Professional)
             (Subclass-Of Entertainment-Or-Arts-Professional Professional)
             (Set-Or-Collection Entertainment-Or-Arts-Professional)
             (Arity Entertainment-Or-Arts-Professional 1)
             (Documentation Entertainment-Or-Arts-Professional
              "A collection of persons; a subset of Professional.  Each element of Entertainment-Or-Arts-Professional is a person who uses some sort of creative or artistic abilities in the main function of his or her job.  Entertainment-Or-Arts-Professional includes both performing artists and producers of tangible artworks, either creative or commercial.  This collection does NOT include people working on the business side of those professions, such as producers or art dealers, whose Job-Attributes are more similar to those of other business professionals (e.g., managers, marketers, sales representatives) than to the artists'; cf. Entertainment-Or-Arts-Administrator."))

(defobject Bengali-Language
   (Living-Language Bengali-Language)
   (Name-In-Cyc Bengali-Language "#$BengaliLanguage")
   (Documentation Bengali-Language "Language spoken in the Indic area."))

(defrelation Respiratory-System
             (Name-In-Cyc Respiratory-System "#$RespiratorySystem")
             (Unique-Anatomical-Part-Type Respiratory-System)
             (Animal-Body-Part-Type Respiratory-System)
             (Subclass-Of Respiratory-System Biological-Living-Object)
             (Subclass-Of Respiratory-System Animal-Body-Part)
             (Set-Or-Collection Respiratory-System)
             (Arity Respiratory-System 1)
             (Documentation Respiratory-System
              "The collection of all animals' respiratory systems.  A Respiratory-System is composed of body parts (such as the lungs) of the animal, which together function so as to enable it to breathe.
Note: it is generally required that the Respiratory-System (of a Vertebrate) work together with the Circulatory-System (qv), as the air is used to supply needed substances to the blood and to remove waste products from the blood."))

(defrelation Dentist
             (Name-In-Cyc Dentist "#$Dentist")
             (Occupation-Type Dentist)
             (Subclass-Of Dentist Medical-Care-Professional)
             (Set-Or-Collection Dentist)
             (Arity Dentist 1)
             (Documentation Dentist
              "The collection of doctors that are trained with diagnosing and treating diseases of the gums and teeth."))

(defobject Isa-Vs-Main-Constituent-Vs-Constituents
   (Shared-Note Isa-Vs-Main-Constituent-Vs-Constituents)
   (Name-In-Cyc Isa-Vs-Main-Constituent-Vs-Constituents
    "#$IsaVsMainConstituentVsConstituents")
   (Documentation Isa-Vs-Main-Constituent-Vs-Constituents
    "When to use :Direct-Types, Main-Constituent, or Constituents.  We develop the following example as a basis for explaining the differences.  

Consider X, where (:Direct-Types X Water). If we add some other substance(s) to X, to the point where the mixture acquires some salient characteristic(s) different from Water while retaining all the main properties, then we should assert (Main-Constituent X W), where W is the original water -- i.e., (:Direct-Types W Water) -- and X is the whole new mixture of W with some other stuff(s).  Suppose we add enough enough other stuff that the physical properties of the mixture become significantly different from those of water; then we should assert only (Constituents X W).  

:Direct-Types - Use :Direct-Types if X would commonly be referred to as `water', including cases in which a small number of minor characteristics are different due to some admixture.   

Examples (arguably, 3 and 4 are borderline cases): 

1. An instance of (Pure-Fn Water) :Direct-Types Water.  
2. An instance of Water-Ingestible :Direct-Types Water (but may have trace constituents).
3. An instance of Pool-Water :Direct-Types Water (but has some Chlorine as a salient Constituents). 
4. An instance of Sea-Water :Direct-Types Water (but has some Salt-Na-Cl as a salient Constituents).  


Main-Constituent - Use Main-Constituent when X contains other substances besides water, would NOT commonly referred to as `water', and yet has MOST of the material properties of water.  As a rule, most of the properties of the Main-Constituent transfer to the substance it's a part of.  Often such substances have at least one important and/or perceptible characteristic (due to admixture) that is quite different from the properties of water.  

Examples: 

1. An instance of Lemonade is NOT called `water' but has water as a Main-Constituent.  It tastes quite different from water.  It has nutritional (caloric) value.  It is a human-made beverage.  
2. An instance of Coffee-Beverage is NOT called `water' but has water as a Main-Constituent.  It tastes quite different from water.  It contains caffeine.  Also, a specific inference about coffee's (lack of) transparency should override the transparency which would otherwise be inferred from the material properties of its Main-Constituent.  
3. Aqueous hydrochloric acid has many of the properties of its main constituent, water -- for example, transparency, viscosity, density, freezing point, etc.  But it also has the very important difference that it is highly acidic, caustic, etc. -- and attributing to it water's potability would be disastrous.

Constituents - Use Constituents when X is NOT commonly referred to as `water' and has FEW properties of water, even though X contains water.  

Examples:

1. An instance of (Solid-Fn Gelatin) is NOT called `water', and though it has water among its Constituents, gelatin has very few of the properties of water. 
2. An instance of Concrete is NOT called `water'; though it has water among its Constituents, it has none of the salient characteristics of water.
3. An instance  of Mud is NOT called `water' and has few characteristics of water, though water is among its Constituents.  Its Main-Constituent is some portion of Soil."))

(defrelation |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "ELEMENT-OF")|
             (Skolem-Object
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "ELEMENT-OF")|)
             (Slot
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "ELEMENT-OF")|)
             (Relation
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "ELEMENT-OF")|)
             (Arity
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "ELEMENT-OF")| 2)
             (Binary-Relation
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "ELEMENT-OF")|))

(defrelation Space-Point
             (Synonymous-External-Concept Space-Point Sensus-Information1997
              "SPACE-POINT")
             (Synonymous-External-Concept Space-Point Sensus-Information1997
              "ZERO-D-LOCATION")
             (Name-In-Cyc Space-Point "#$SpacePoint")
             (Existing-Object-Type Space-Point)
             (Subclass-Of Space-Point Geometric-Thing)
             (Set-Or-Collection Space-Point)
             (Arity Space-Point 1)
             (Documentation Space-Point
              "A collection of geometrical things. Each Space-Point is an extensionless geometrical point, and thus exists in zero dimensions."))

(defrelation Confidence
             (Name-In-Cyc Confidence "#$Confidence")
             (Feeling-Attribute-Type Confidence)
             (Subclass-Of Confidence Feeling-Attribute)
             (Set-Or-Collection Confidence)
             (Arity Confidence 1)
             (Documentation Confidence
              "The positive emotion felt when one is free
from doubt about an event or object from which the agent feeling
Confidence expects positive contingencies.  For example, one might
say 'I feel confident that tomorrow it will not be rainy'. Do not
confuse this with a personality disposition, e.g. 'Joe is a confident
person.'  (See Personality-Attribute.)  This is a collection; for an
explanation of a typical Feeling-Attribute-Type, see Happiness.
More specialized Feeling-Attribute-Types include Grief,
Self-Confidence, etc."))

(defobject Portugal
   (Entity Portugal)
   (Independent-Country Portugal)
   (Name-In-Cyc Portugal "#$Portugal")
   (Documentation Portugal
    "The nation of Portugal as it has existed throughout time; includes both its physical and its political aspects."))

(defrelation Ear
             (Name-In-Cyc Ear "#$Ear")
             (Symmetric-Anatomical-Part-Type Ear)
             (Subclass-Of Ear Animal-Body-Part)
             (Subclass-Of Ear Vibration-Through-A-Medium-Sensor)
             (Set-Or-Collection Ear)
             (Arity Ear 1)
             (Documentation Ear
              "The organ of hearing, which occur in pairs on most animals"))

(defrelation Constructing
             (Name-In-Cyc Constructing "#$Constructing")
             (Temporal-Stuff-Type Constructing)
             (Default-Disjoint-Script-Type Constructing)
             (Subclass-Of Constructing Making-Something)
             (Set-Or-Collection Constructing)
             (Arity Constructing 1)
             (Documentation Constructing
              "A collection of events.  In each Constructing event, one or more Construction-Artifacts, such as a house, are made or incrementally enlarged or remodeled."))

(defrelation Two-Story-Building
             (Name-In-Cyc Two-Story-Building "#$TwoStoryBuilding")
             (Existing-Object-Type Two-Story-Building)
             (Subclass-Of Two-Story-Building Building)
             (Set-Or-Collection Two-Story-Building)
             (Arity Two-Story-Building 1)
             (Documentation Two-Story-Building
              "Collection of all two story buildings."))

(defrelation Unit-Of-Mass
             (Name-In-Cyc Unit-Of-Mass "#$UnitOfMass")
             (Interconvertible-Unit-Type Unit-Of-Mass)
             (Subclass-Of Unit-Of-Mass Unit-Of-Measure)
             (Set-Or-Collection Unit-Of-Mass)
             (Arity Unit-Of-Mass 1)
             (Documentation Unit-Of-Mass
              "The collection of functions which return elements of Mass.  E.g. (Kilogram 5) denotes 5 kilograms."))

(defrelation Voluntary-Body-Movement
             (Name-In-Cyc Voluntary-Body-Movement "#$VoluntaryBodyMovement")
             (Temporal-Object-Type Voluntary-Body-Movement)
             (Default-Disjoint-Script-Type Voluntary-Body-Movement)
             (Subclass-Of Voluntary-Body-Movement Body-Movement-Event)
             (Set-Or-Collection Voluntary-Body-Movement)
             (Arity Voluntary-Body-Movement 1)
             (Documentation Voluntary-Body-Movement
              "The collection of acts concerned with an agent's intentionally moving one part of its body relative to another part of its body.  The energy source is the agent's own body, not some external force.  Each instance of Waving-A-Hand is an instance of Voluntary-Body-Movement --- the focus of that action is on the hand moving relative to the body.  By way of constrast, an instance of Opening-A-Drawer is probably not going to be an instance of Voluntary-Body-Movement, even though the person opening the drawer probably does move their hand relative to their body, because the focus of the Opening-A-Drawer action is not on the hand moving, but rather on the drawer opening."))

(defobject Non-Exclusive-User-Rights
   (User-Rights-Attribute Non-Exclusive-User-Rights)
   (Name-In-Cyc Non-Exclusive-User-Rights "#$NonExclusiveUserRights")
   (Documentation Non-Exclusive-User-Rights
    "An attribute of an object with respect to an Agent, meaning that the Agent has non-exclusive use of the object.  All Agents can claim this use-right to an object if any Agent can.  This attribute is not the same as Group-User-Rights-Attribute, as there is no specific group to which Agents must belong in order to claim this right.  This is typically used for things so fundamental we hardly consider them `rights.'  E.g., the right to breathe air, use public parking lots, walk the streets as a free person, drive on public roads, etc.  If you think about it, though, you'll realize that there is an implicit `group' that can exercise each of those rights.  So think of it this way:  one can define the group explicitly as a group, and then assert that each member has Group-User-Rights-Attribute (e.g., the group of licensed drivers has the right to drive on public roads), or one could define a context, a Microtheory, in which performers of actions defaulted to members of that group, and in that context the right (e.g., the right to drive on a public road) would be a Non-Exclusive-User-Rights."))

(defrelation Information-Transfer-Event
             (Name-In-Cyc Information-Transfer-Event
              "#$InformationTransferEvent")
             (Temporal-Object-Type Information-Transfer-Event)
             (Script-Type Information-Transfer-Event)
             (Subclass-Of Information-Transfer-Event Generalized-Transfer)
             (Set-Or-Collection Information-Transfer-Event)
             (Arity Information-Transfer-Event 1)
             (Documentation Information-Transfer-Event
              "A collection of events.  Each element of Information-Transfer-Event is an event in which information is transferred from a source (Information-Origin) to a destination (Information-Destination), both of which are either intelligent agents or IBTs (i.e., elements of Information-Bearing-Thing).  Examples: reading a book (transfer from book to reader); saying something to someone (transfer from speaker to listener); machine translation (transfer from an encoded IBT in the source language to an encoded IBT in the target language); OCR scanning (transfer of info from visual information source to another IBT in different format); carving initials in a tree (transfer from agent to IBT), etc.  Note: this is a generalization of the `mtrans' operator in Roger Schank's Conceptual Dependency theory."))

(defrelation Cost-Per-Quantity
             (Nth-Domain Cost-Per-Quantity 1 Stuff-Type)
             (Nth-Domain Cost-Per-Quantity 1 Product-Type)
             (Nth-Domain Cost-Per-Quantity 2 Physical-Amount-Slot)
             (Nth-Domain Cost-Per-Quantity 3 Scalar-Interval)
             (Nth-Domain Cost-Per-Quantity 4 Money)
             (Nth-Domain-Subclass-Of Cost-Per-Quantity 1 Product)
             (Name-In-Cyc Cost-Per-Quantity "#$costPerQuantity")
             (Quaternary-Predicate Cost-Per-Quantity)
             (Relation Cost-Per-Quantity)
             (Arity Cost-Per-Quantity 4)
             (Documentation Cost-Per-Quantity
              "The predicate Cost-Per-Quantity gives the price for a measured amount of some type of stuff.  (Cost-Per-Quantity STUFF UNITS QUANTITY PRICE) means that this kind of STUFF costs PRICE for each QUANTITY of UNITS.  For example, Milk, as measured by volume (i.e., by the predicate Volume-Of-Object), costs about US $3 per gallon."))

(defobject |(MEDIUM-AMOUNT-FN HARDNESS)|
   (Scalar-Interval |(MEDIUM-AMOUNT-FN HARDNESS)|)
   (Hardness |(MEDIUM-AMOUNT-FN HARDNESS)|)
   (Skolem-Object |(MEDIUM-AMOUNT-FN HARDNESS)|))

(defrelation Shaving-Something
             (Name-In-Cyc Shaving-Something "#$ShavingSomething")
             (Temporal-Stuff-Type Shaving-Something)
             (Default-Disjoint-Script-Type Shaving-Something)
             (Subclass-Of Shaving-Something Movement-Event)
             (Subclass-Of Shaving-Something Intrinsic-State-Change-Event)
             (Subclass-Of Shaving-Something Separation-Complete)
             (Subclass-Of Shaving-Something Handling-A-Device)
             (Set-Or-Collection Shaving-Something)
             (Arity Shaving-Something 1)
             (Documentation Shaving-Something
              "A collection of events.  In each Shaving-Something event, thin pieces of material on an object's surface are removed.  An example would be someone whittling a wooden spoon, someone using a lathe to make a table leg, someone scraping the top layer of mold and cheese off a brick of cheese that was left in the refrigerator just a little too long, etc.  
WARNING: an event in which someone ``shaves'' their body hair (a Shaving-Body event) from one's face, legs, etc. with a shaver or razor is NOT a  Shaving-Something event; rather, it is an element of the collection Cutting-Something.  If one uses a depilatory such as Nair, then one could actually ``shave'' (genuinely a Shaving-Something event) the resultant coating of depilatory and separated hair ends away. "))

(defrelation Appropriating-Something
             (Name-In-Cyc Appropriating-Something "#$AppropriatingSomething")
             (Temporal-Object-Type Appropriating-Something)
             (Default-Disjoint-Script-Type Appropriating-Something)
             (Subclass-Of Appropriating-Something Gaining-User-Rights)
             (Subclass-Of Appropriating-Something Taking-Something)
             (Set-Or-Collection Appropriating-Something)
             (Arity Appropriating-Something 1)
             (Documentation Appropriating-Something
              "A collection of events; a subset of Taking-Something and of Gaining-User-Rights.  In an instance of Appropriating-Something, an Agent takes something that no one else has user rights over, such as air for breathing, or some object which at that time belongs to no one (e.g.,a dime lying in the street).
Note: The English verb `appropriate' can also mean to take something away from someone else, against their will and wrongfully, but that is not what is meant here.  For that, see Stealing-Generic."))

(defobject Commissioned
   (Work-Status Commissioned)
   (Name-In-Cyc Commissioned "#$Commissioned")
   (Documentation Commissioned
    "An attribute; an element of Work-Status.  The attribute of being paid on a commission basis for work done."))

(defrelation March
             (Name-In-Cyc March "#$March")
             (Month-Of-Year-Type March)
             (Subclass-Of March Calendar-Month)
             (Set-Or-Collection March)
             (Arity March 1))

(defrelation Precipitation-Process
             (Name-In-Cyc Precipitation-Process "#$PrecipitationProcess")
             (Temporal-Stuff-Type Precipitation-Process)
             (Subclass-Of Precipitation-Process Immediate-Weather-Process)
             (Subclass-Of Precipitation-Process Translation-Single-Path)
             (Subclass-Of Precipitation-Process Translation-Complete)
             (Subclass-Of Precipitation-Process Movement-Translation-Process)
             (Subclass-Of Precipitation-Process Emitting-An-Object)
             (Subclass-Of Precipitation-Process
              Composite-Physical-And-Mental-Event)
             (Set-Or-Collection Precipitation-Process)
             (Arity Precipitation-Process 1)
             (Documentation Precipitation-Process
              "A collection of physical processes; a subset of Weather-Event.  Elements of Precipitation-Process are meteorological processes in which atmospheric clouds precipitate rain, snow, or other forms of H2O precipitation."))

(defrelation Transporter
             (Subrelation-Of Transporter Object-Moving)
             (Subrelation-Of Transporter Instrument-Generic)
             (Subrelation-Of Transporter Constraining-Object)
             (Domain Transporter Transportation-Event)
             (Range Transporter Solid-Tangible-Thing)
             (Name-In-Cyc Transporter "#$transporter")
             (Irreflexive-Binary-Predicate Transporter)
             (Actor-Slot Transporter)
             (Asymmetric-Binary-Predicate Transporter)
             (Slot Transporter)
             (Relation Transporter)
             (Arity Transporter 2)
             (Binary-Relation Transporter)
             (Documentation Transporter
              "This predicate relates, e.g., a sleigh-ride event to the sleigh being used to transport the people and goods.  (Transporter MOVE OBJ) means that OBJ enables or facilitates the conveyance of what is transported (the animals, goods, people, etc. that are the Transportees) in the Transportation-Event MOVE.  OBJ itself is an Object-Moving in MOVE, so a catapult is not a Transporter because it doesn't come with its victims.  OBJ will generally hold, support, contain, etc. the Transportees throughout the MOVE event.  OBJ may or may not supply the motive force in the event MOVE; e.g., a child's wagon, a bicycle, a sleigh, and a paper bag can all be Transporters.  More examples are automobiles, wheelchairs, dogsleds, and parachutes.  Carrier pigeons are transporters when performing the function for which they were bred; a horse is a Transporter when it is being ridden but a Provider-Of-Motive-Force when pulling a cart or plow or sleigh.Some cautions and refinements, however: (i) although automobiles are Transporters, they should have the more specific role designation of Vehicle (q.v.) because they are also Self-Powered-Devices.   When your car is being towed by a towtruck, and you are riding along inside as it gets towed, then in that special case the car is just a Transporter (of you) and the towtruck is the Vehicle of that event.  (ii) Another more specific role designation for some Transporters -- those which are Physical-Devices -- is Device-Used (q.v.); e.g., the use of crutches in hobbling, ice skates in skating, and sneakers in walking.  See also the :Documentation on Transportation-Event.  (iii) The organism locomoting in a Locomotion-Event may be a Transporter if carrying something other than itself (Carrying-While-Locomoting qv.) .  In other cases an organism may be a Transportees, e.g. someone riding a bike or skating.  Note that the organism must be the Provider-Of-Motive-Force in these cases."))

(deffunction Cylinder-Fn
   (Nth-Domain Cylinder-Fn 1 Distance)
   (Nth-Domain Cylinder-Fn 2 Distance)
   (Result-Instance-Of Cylinder-Fn Three-Dimensional-Shape)
   (Result-Instance-Of Cylinder-Fn Abstract-Shape)
   (Name-In-Cyc Cylinder-Fn "#$CylinderFn")
   (Shape-Function Cylinder-Fn)
   (Function Cylinder-Fn)
   (Arity Cylinder-Fn 2)
   (Function-Arity Cylinder-Fn 1)
   (Binary-Relation Cylinder-Fn)
   (Documentation Cylinder-Fn
    "The Cyc function Cylinder-Fn is a Shape-Function (q.v.).  (Cylinder-Fn L D) that returns an abstract cylinder of length L and diameter D.  For example, a particular beer mug Can-Contain-Shapes (Cylinder-Fn (Inch 10) (Inch 5))."))

(defrelation Transferring-Ownership
             (Name-In-Cyc Transferring-Ownership "#$TransferringOwnership")
             (Temporal-Object-Type Transferring-Ownership)
             (Default-Disjoint-Script-Type Transferring-Ownership)
             (Subclass-Of Transferring-Ownership Transferring-Possession)
             (Set-Or-Collection Transferring-Ownership)
             (Arity Transferring-Ownership 1)
             (Documentation Transferring-Ownership
              "A collection of events; a subset of Transferring-Possession.  In an instance of Transferring-Ownership, a transfer of ownership occurs.  This means that in such an event there is a transfer from one Agent to another of Full-Use-Rights and Exclusive-User-Rights (over the Object-Of-Possession-Transfer).  Often there is some `consideration' for this transfer, of course --- see Exchange-Of-User-Rights."))

(defrelation Animal-Sound
             (Name-In-Cyc Animal-Sound "#$AnimalSound")
             (Temporal-Stuff-Type Animal-Sound)
             (Subclass-Of Animal-Sound Audible-Sound)
             (Subclass-Of Animal-Sound Information-Bearing-Wave-Propagation)
             (Set-Or-Collection Animal-Sound)
             (Arity Animal-Sound 1)
             (Documentation Animal-Sound
              "A collection of information bearing things (IBTs); a subset of Information-Bearing-Wave-Propagation.  Each element of Animal-Sound is a sound of a type which originally was, and typically is, made by an animal using just its body parts (though such a sound may subsequently have been reproduced by imitation or recording).  For example, instances of Birdsong, Neighing-Sound, Purring-Sound, Barking-Sound, Braying-Sound.  Note that the restriction to sounds produced by body parts alone excludes noises produced by moving external objects; i.e., Animal-Sound does NOT include rustling the leaves underfoot, splashing water, or playing a musical instrument."))

(deffunction Border-Between-Fn
   (Nth-Domain Border-Between-Fn 1 Geographical-Region)
   (Nth-Domain Border-Between-Fn 2 Geographical-Region)
   (Result-Instance-Of Border-Between-Fn Line)
   (Result-Instance-Of Border-Between-Fn Border)
   (Name-In-Cyc Border-Between-Fn "#$BorderBetweenFn")
   (Reifiable-Function Border-Between-Fn)
   (Commutative-Relation Border-Between-Fn)
   (Individual-Denoting-Function Border-Between-Fn)
   (Function Border-Between-Fn)
   (Arity Border-Between-Fn 2)
   (Function-Arity Border-Between-Fn 1)
   (Binary-Relation Border-Between-Fn)
   (Documentation Border-Between-Fn
    "(Border-Between-Fn REG1 REG2), applied to two individual Geographical-Regions REG1 REG2, returns the unique entire Geopolitical-Border that separates them.   To identify arbitrarily large or small segments of borders see Forms-Border-Part.  The border returned by Border-Between-Fn may be discontinuous (such the border between France and Spain, interrupted by Andorra), or circular (such as the border between Italy and San Marino), or in abnormal cases it may even have multiple disconnected and nested cyclic fragments (the border between Belgium and Netherlands, due to the Baarle-Nassau and Baarle-Hartog enclaves), or move back and forth periodically (such as at the Isle des Faisans).  Nonetheless, (Border-Between-Fn REG1 REG2) must denote exactly one object since Border-Between-Fn is a function.  Reference to nonexistant borders such (Border-Between-Fn Albania United-States-Of-America) should cause Cyc to realize that they are undefined.  For example, if Cyc concludes that (Borders-On United-States-Of-America Albania) is not true, then it should conclude (Undefined (Border-Between-Fn Albania United-States-Of-America)).
 "))

(defrelation Intrinsic-Axis-Of-Object
             (Name-In-Cyc Intrinsic-Axis-Of-Object "#$IntrinsicAxisOfObject")
             (Object-Type Intrinsic-Axis-Of-Object)
             (Subclass-Of Intrinsic-Axis-Of-Object Vector-Interval)
             (Set-Or-Collection Intrinsic-Axis-Of-Object)
             (Arity Intrinsic-Axis-Of-Object 1)
             (Documentation Intrinsic-Axis-Of-Object
              "The collection of all intrinsic axes of objects, being the conventional or obvious axes depending on shape, movement or function of the object.  For example, for a chest-of-drawers, the intrinsic axes are top-to-bottom, side-to-side, and front-to-back.  See also Axis-Fn.  Each intrinsic axis is a direction relative to the object's orientation."))

(defobject Note-For-Unit-Of-Measure-With-Prefix-And-No-Prefix
   (Shared-Note Note-For-Unit-Of-Measure-With-Prefix-And-No-Prefix)
   (Name-In-Cyc Note-For-Unit-Of-Measure-With-Prefix-And-No-Prefix
    "#$NoteForUnitOfMeasureWithPrefixAndNoPrefix")
   (Documentation Note-For-Unit-Of-Measure-With-Prefix-And-No-Prefix
    "Elements of Unit-Of-Measure-No-Prefix denote units of measure that don't have a multiplicative prefix (e.g. `kilo', `micro', `billion').  Inch and Meters-Per-Second are such elements.  On the other hand, elements of Unit-Of-Measure-With-Prefix do have multiplicative prefixes; examples include Centimeters-Per-Second, (Micro Gram), Kilo-Watt, and Grams-Per-Milliliter.  We need these constants in order to prevent references to terms such as ((Micro (Micro Gram)) 5) or ((Kilo (Centimeters-Per-Second)) 3.2).  If we didn't have these restrictions, equal quantities would allow for an undesirable level of possible names for a quantity, e.g. ((Micro (Kilo Gram)) 1) would refer to the same quantity as ((Kilo (Micro Gram)) 1) would refer to the same quantity as (Gram .001), etc."))

(defrelation Pharmacist
             (Name-In-Cyc Pharmacist "#$Pharmacist")
             (Medical-Specialty-Type Pharmacist)
             (Subclass-Of Pharmacist Medical-Care-Professional)
             (Set-Or-Collection Pharmacist)
             (Arity Pharmacist 1)
             (Documentation Pharmacist
              "The collection of professionals who are trained and licensed to prepare and distribute legal drugs."))

(defrelation Predicate
             (Synonymous-External-Concept Predicate Sensus-Information1997
              "RELATIONALPROCESS")
             (Name-In-Cyc Predicate "#$Predicate")
             (Object-Type Predicate)
             (Collection Predicate)
             (Subclass-Of Predicate Function-The-Mathematical-Type)
             (Set-Or-Collection Predicate)
             (Arity Predicate 1)
             (Documentation Predicate
              "The set of all Cyc predicates.  Each element of Predicate is a truth-functional relationship in Cyc which takes some number of arguments; each of those arguments must be of some particular type.  For example, the predicate :Direct-Superclasses, which represents the subset/superset relation between collections, takes two arguments; each argument must be an element of Collection.  The numbers and types of arguments to particular predicates are specified by explicit assertions using Arity, Arg1-Isa, Arg2-Isa, etc., Arg1-Genl, Arg2-Genl, etc.  Our example :Direct-Superclasses has Arity 2, and both its Arg1-Isa and its Arg2-Isa have the value Collection.  







Informally, you can think of elements of Predicate as functions that always return either true or false.  More formally, when an element of Predicate is applied to the legal number and type of arguments, an expression is formed which is a well-formed formula (wff) in CycL.  Such expressions are called `atomic formulas' if they contain variables, and `gafs' (short for `ground atomic formulas') if they contain no variables.  







Note that in Cyc, relationships involving opaque contexts (such as modal contexts, propositional attitudes) are NOT included in Predicate; see Modal-Relationship instead.  Quantifiers and logical operators are also excluded from Predicate; see Quantifier, Logical-Connective.











Currently (July 1996), the KB includes predicates of 1, 2, 3, 4, and 5 arguments; i.e., Arity may have a value between 1 and 5, inclusive.  The KB also includes some predicates of variable arity (see Variable-Arity-Relation).  Unary predicates, which take just one single argument (e.g., `-- is a person' or `-- is white', are usually represented in Cyc by elements of Collection or Attribute-Value, rather than of Predicate; but see also Unary-Predicate.  Naming strings for elements of Predicate always begin with a lowercase letter."))

(defrelation Female-Person
             (Synonymous-External-Concept Female-Person Sensus-Information1997
              "FEMALE")
             (The-Partition Female-Person Male-Person
              |(THE-PARTITION FEMALE-PERSON MALE-PERSON)|)
             (Name-In-Cyc Female-Person "#$FemalePerson")
             (Existing-Object-Type Female-Person)
             (Subclass-Of Female-Person Female-Animal)
             (Subclass-Of Female-Person Person)
             (Set-Or-Collection Female-Person)
             (Arity Female-Person 1)
             (Documentation Female-Person
              "The collection of all female persons."))

(defobject Vertical-Direction
   (Terrestrial-Direction Vertical-Direction)
   (Name-In-Cyc Vertical-Direction "#$VerticalDirection")
   (Documentation Vertical-Direction
    "The element of Vector-Interval that comprises all the vectors that are parallel to Up-Directly and Down-Directly."))

(defrelation Visual-Perception
             (Name-In-Cyc Visual-Perception "#$VisualPerception")
             (Temporal-Stuff-Type Visual-Perception)
             (Default-Disjoint-Script-Type Visual-Perception)
             (Subclass-Of Visual-Perception Perceiving)
             (Set-Or-Collection Visual-Perception)
             (Arity Visual-Perception 1)
             (Documentation Visual-Perception
              "The collection of sensory Perceivings in which a Perceptual-Agent Sees something by means of an Electro-Magnetic-Radiation-Sensor detecting wavelengths of visible light, and thereby acquires information about it.
Note:  one eye is sufficient for Visual-Perception, and limited short-distance Depth-Perception, but `true' long-distance Depth-Perception requires two eyes."))

(defrelation |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "REPRESENTATIONAL-OBJECT")|
             (Skolem-Object
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "REPRESENTATIONAL-OBJECT")|)
             (Collection
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "REPRESENTATIONAL-OBJECT")|)
             (Subclass-Of
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "REPRESENTATIONAL-OBJECT")|
              Thing)
             (Set-Or-Collection
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "REPRESENTATIONAL-OBJECT")|)
             (Arity
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "REPRESENTATIONAL-OBJECT")|
              1))

(defrelation Wind-Powered-Device
             (Name-In-Cyc Wind-Powered-Device "#$WindPoweredDevice")
             (Existing-Object-Type Wind-Powered-Device)
             (Subclass-Of Wind-Powered-Device Kinetic-Energy-Powered-Device)
             (Set-Or-Collection Wind-Powered-Device)
             (Arity Wind-Powered-Device 1)
             (Documentation Wind-Powered-Device
              "The subset of Kinetic-Energy-Powered-Device (q.v.) whose elements are powered by the wind.  For example, instances of the collection Windmill."))

(defrelation Tensile-Strength
             (High-Amount-Fn Tensile-Strength
              |(HIGH-AMOUNT-FN TENSILE-STRENGTH)|)
             (Very-High-Amount-Fn Tensile-Strength
              |(VERY-HIGH-AMOUNT-FN TENSILE-STRENGTH)|)
             (Low-Amount-Fn Tensile-Strength
              |(LOW-AMOUNT-FN TENSILE-STRENGTH)|)
             (Very-Low-Amount-Fn Tensile-Strength
              |(VERY-LOW-AMOUNT-FN TENSILE-STRENGTH)|)
             (Medium-Amount-Fn Tensile-Strength
              |(MEDIUM-AMOUNT-FN TENSILE-STRENGTH)|)
             (Name-In-Cyc Tensile-Strength "#$TensileStrength")
             (Derived-Numeric-Attribute-Type Tensile-Strength)
             (Subclass-Of Tensile-Strength Scalar-Interval)
             (Subclass-Of Tensile-Strength Physical-Attribute)
             (Set-Or-Collection Tensile-Strength)
             (Arity Tensile-Strength 1)
             (Documentation Tensile-Strength
              "A collection of attributes; a subset of Physical-Attribute.  Each element of Tensile-Strength describes a specific capacity of a physical object to be deformed.  The higher the deformability, the lower the force required to deform the object.  Different tensile strengths may be represented using a Generic-Value-Function.  Tensile strengths of objects are indicated with the predicate Tensile-Strength-Of-Substance."))

(defrelation Information-Recording-Process
             (Name-In-Cyc Information-Recording-Process
              "#$InformationRecordingProcess")
             (Temporal-Stuff-Type Information-Recording-Process)
             (Default-Disjoint-Script-Type Information-Recording-Process)
             (Subclass-Of Information-Recording-Process Physical-Event)
             (Subclass-Of Information-Recording-Process Ibo-Creation)
             (Set-Or-Collection Information-Recording-Process)
             (Arity Information-Recording-Process 1)
             (Documentation Information-Recording-Process
              "A collection of events in which information is recorded, using an Information-Recording-Device.  Every Information-Recording-Process produces an Information-Bearing-Object."))

(defrelation Having-A-Meal
             (Name-In-Cyc Having-A-Meal "#$HavingAMeal")
             (Temporal-Object-Type Having-A-Meal)
             (Default-Disjoint-Script-Type Having-A-Meal)
             (Subclass-Of Having-A-Meal Purposeful-Action)
             (Subclass-Of Having-A-Meal Human-Activity)
             (Subclass-Of Having-A-Meal Destruction-Event)
             (Set-Or-Collection Having-A-Meal)
             (Arity Having-A-Meal 1)
             (Documentation Having-A-Meal
              "A collection of events.  Each element of Having-A-Meal is an event in which one or more diners consume a meal.  In addition to Having-Breakfast, Having-Lunch, and Having-Dinner, this includes Having-A-Snack (among other subsets).  Typically, instances of Having-A-Meal include people eating some food and drinking one or more beverages."))

(defrelation Insect
             (Name-In-Cyc Insect "#$Insect")
             (Biological-Class Insect)
             (Subclass-Of Insect Arthropod)
             (Set-Or-Collection Insect)
             (Arity Insect 1)
             (Documentation Insect
              "A collection of animals; a subset of Arthropod.  Each element of Insect is a small arthropod whose body is segmented into thirds, with three pairs of legs, and one or two pairs of wings.  The most familiar members of Arthropod are the 'bugs' encountered in human daily life.  Some insects bite, some infest houses, and some carry disease.  Insect is an instance of Biological-Class."))

(defrelation Object-Moving
             (Subrelation-Of Object-Moving Transferred-Thing)
             (Subrelation-Of Object-Moving Temporally-Intersects)
             (Domain Object-Moving Movement-Event)
             (Range Object-Moving Partially-Tangible)
             (Name-In-Cyc Object-Moving "#$objectMoving")
             (Actor-Slot Object-Moving)
             (Asymmetric-Binary-Predicate Object-Moving)
             (Slot Object-Moving)
             (Relation Object-Moving)
             (Arity Object-Moving 2)
             (Binary-Relation Object-Moving)
             (Documentation Object-Moving
              "The predicate Object-Moving is used to refer to an object which is moving in a particular Movement-Event.  (Object-Moving MOVE OBJECT) means that OBJECT is in motion at some point during the Movement-Event MOVE and this movement is focal in MOVE.  In some cases, such as an instance of Locomotion-Event, OBJECT causes MOVE directly.  OBJECT's motion in MOVE may be translational, rotational, or some combination of these.  OBJECT may be a solid -- such as an animal, an automobile, or a tennis ball -- or a fluid, such as lava flowing or a warm air mass rising."))

(defrelation Educational-Degree
             (Name-In-Cyc Educational-Degree "#$EducationalDegree")
             (Object-Type Educational-Degree)
             (Subclass-Of Educational-Degree Credential)
             (Set-Or-Collection Educational-Degree)
             (Arity Educational-Degree 1)
             (Documentation Educational-Degree
              "A collection of abstract (intangible) objects which consist of information about an agent.  Each element of Educational-Degree is a credential conferred, by some instance of Educational-Organization, on a student who has successfully completed a prescribed course of study there.  Educational-Degree includes high school, associate, baccalaureate, licensate, magisterial, professional, and doctoral degrees, etc."))

(deffunction Months-Duration
   (Args-Isa Months-Duration Real-Number)
   (Result-Instance-Of Months-Duration Scalar-Interval)
   (Result-Instance-Of Months-Duration Time-Quantity)
   (Name-In-Cyc Months-Duration "#$MonthsDuration")
   (Unit-Of-Time Months-Duration)
   (Unit-Of-Measure-No-Prefix Months-Duration)
   (Unit-Of-Measure Months-Duration)
   (Function Months-Duration)
   (Documentation Months-Duration
    "This is a function that takes one or two numbers and returns, as its value, some amount of Time.  An expression of the form (Months-Duration ?min ?max) denotes a quantity of Time that is at least ?min months and at most ?max months.  (Months-Duration ?num) denotes a quantity of Time that is exactly ?num months."))

(defrelation Calendar-Second
             (Name-In-Cyc Calendar-Second "#$CalendarSecond")
             (Collection Calendar-Second)
             (Calendar-Covering-Type Calendar-Second)
             (Subclass-Of Calendar-Second Date)
             (Set-Or-Collection Calendar-Second)
             (Arity Calendar-Second 1)
             (Documentation Calendar-Second
              "The collection of seconds that make up the calendar.  Sixty of these Time-Intervals contiguously divide up each Calendar-Minute (qv)"))

(defobject Continent-Of-Asia
   (Continent Continent-Of-Asia)
   (Entity Continent-Of-Asia)
   (Name-In-Cyc Continent-Of-Asia "#$ContinentOfAsia")
   (Documentation Continent-Of-Asia
    "The world's largest continent, joined in the west with Europe (which may be considered a peninsula of Asia) to form the Eurasian land mass (Continent-Of-Eurasia).  The Continent-Of-Asia occupies much of the northern half of the Eastern-Hemisphere-Region."))

(defrelation Promise
             (Name-In-Cyc Promise "#$Promise")
             (Object-Type Promise)
             (Subclass-Of Promise Illocutionary-Force)
             (Set-Or-Collection Promise)
             (Arity Promise 1)
             (Documentation Promise
              "A collection of illocutionary forces.  Each instance of Promise consists of a piece of information contained (perhaps implicitly) in a communication, and which expresses the speaker's intention of assuring the listener that s/he, the speaker, will in the future perform the action described in that utterance and/or bring about the situation described therein.  A promise, unlike an offer, is not conditional on the acceptance of the listener.   `Speaker' and `listener' are broadly interpreted to mean, respectively, any Sender-Of-Info and Recipient-Of-Info.  See also Illocutionary-Force, Making-A-Promise."))

(defrelation Air
             (Name-In-Cyc Air "#$Air")
             (Tangible-Stuff-State-Type Air)
             (Subclass-Of Air Mixture)
             (Subclass-Of Air Gaseous-Tangible-Thing)
             (Set-Or-Collection Air)
             (Arity Air 1)
             (Documentation Air
              "A collection of tangibles; a subset of Gaseous-Tangible-Thing.  Each element of Air is one `piece' among all the portions of the atmosphere of the Earth, considered as a substance present in various places, in various quantities, under various pressures, etc.  Examples: the Air-In-Austin; the stuffy air in my office; the thin air atop Annapurna.  See also The-Atmosphere-Qua-Single-Piece-Of-Stuff, which is all ambient Air on the planet taken as a single object."))

(defrelation Situation
             (Name-In-Cyc Situation "#$Situation")
             (Collection Situation)
             (Subclass-Of Situation Individual)
             (Set-Or-Collection Situation)
             (Arity Situation 1)
             (Documentation Situation
              "Situation is the collection of situations.  A situation is a state of affairs; it identifies roles played by objects involved in the situation, and it articulates the relationships between those roles.  One important partitioning of Situation is:

(1) Event --- the dynamic situations.
(2) Static-Situation. --- they exist in time, but are not dynamic, more a set of relationships among objects.  E.g., consider the situation of Bill Clinton sitting in his easy chair on the evening of 7/4/96.   There are participant objects such as Bill and the chair, there are relationships such as the seat of the chair supporting his bottom and his weight being off his feet, etc.  There is a fuzzy line between Events and Static-Situations: one could think of Bill as `carrying out the process of sitting' while he's in his easy chair.  
(3) atemporal situations.  There are some abstract, non-spatial, non-temporal instances of Situation.  This is not very common, though; most situations of interest have (dynamic or static) temporal properties, and are instances of Temporal-Thing.  "))

(defrelation Kinetic-Energy-Powered-Device
             (Name-In-Cyc Kinetic-Energy-Powered-Device
              "#$KineticEnergyPoweredDevice")
             (Existing-Object-Type Kinetic-Energy-Powered-Device)
             (Subclass-Of Kinetic-Energy-Powered-Device Powered-Device)
             (Set-Or-Collection Kinetic-Energy-Powered-Device)
             (Arity Kinetic-Energy-Powered-Device 1)
             (Documentation Kinetic-Energy-Powered-Device
              "A collection of devices; a subset of Powered-Device.  An instance of Kinetic-Energy-Powered-Device does not have an `on-board' energy source incorporated into it, at least not one supplying the bulk of the power requirements of the device.  Instead, its operating power is supplied by the kinetic energy from something else in motion -- such as animal muscle power (including human labor), wind energy, or hydraulic power.  Examples include elements of the collections Hammer and Piano-Acoustic. (Contrast with Self-Powered-Device --- e.g., an electric organ is a Self-Powered-Device, not a Kinetic-Energy-Powered-Device.)"))

(defrelation Element-Stuff
             (Name-In-Cyc Element-Stuff "#$ElementStuff")
             (Tangible-Stuff-Composition-Type Element-Stuff)
             (Subclass-Of Element-Stuff Inanimate-Thing)
             (Subclass-Of Element-Stuff Tangible-Thing)
             (Set-Or-Collection Element-Stuff)
             (Arity Element-Stuff 1)
             (Documentation Element-Stuff
              "A collection of tangible substances; a subset of Tangible-Thing.  Every instance of Element-Stuff is a piece of tangible stuff, composed of a quantity of atoms, all of which are of the same chemical element.  That is, every atom in an individual piece of Element-Stuff has the same number of protons in its atomic nucleus as does every other atom in that piece.  For example, all pieces of carbon are instances of Element-Stuff.   All pieces of two of Carbon's subsets, Diamond and Graphite, also are instances of Element-Stuff.  On the other hand, instances of Water, because they are constituted of both (some) Hydrogen and (some) Oxygen atoms, do not belong to the collection Element-Stuff."))

(defrelation Food-And-Drink
             (Name-In-Cyc Food-And-Drink "#$FoodAndDrink")
             (Product-Type Food-And-Drink)
             (Existing-Stuff-Type Food-And-Drink)
             (Subclass-Of Food-And-Drink Edible-Stuff)
             (Set-Or-Collection Food-And-Drink)
             (Arity Food-And-Drink 1)
             (Documentation Food-And-Drink
              "A collection of edible stuff.  Each element of the collection Food-And-Drink is a food or beverage of a type which people or animals (or whatever the current microtheory is restricting its attention to --- e.g., some species of oil-eating bacteria) can and normally do consume.   Elements of Food-And-Drink may or may not require further preparation before the eaters find them palatable, medically safe, digestable, etc.  See Food-Ready-To-Eat for the subset of these items that are ready for immediate consumption.  In various microtheories, the elements of Food-And-Drink will be restricted or expanded; e.g., in the Human-Activities-Mt this collection is limited to only foods or beverages that modern-day human beings consume.  Some examples of Food-And-Drink includes a scoop of ice cream (an instance of Ice-Cream), a pepperoni pizza (an instance of Pizza), an apple (an instance of Edible-Fruit), a lump of bread-dough (an instance of Dough which, after preparation, will become an instance of edible Bread), a double espresso (an instance of Coffee-Beverage), a mouthful of hay that a horse is about to swallow (an instance of Hay), etc.  The latter (the hay) is not an instance of Food-And-Drink in the Human-Activities-Mt.  Note that Food-And-Drink does NOT include such things as spices, condiments, sauces, drugs, etc., which --- though they are nevertheless Edible-Stuff --- do not constitute a food by themselves; those belong to other subsets of Edible-Stuff but not to Food-And-Drink.  E.g., a particular pinch of oregano would be an instance of Food-Ingredient-Only (q.v.).  Also see: Default-Disjoint-Food-Types."))

(defrelation Inanimate-Object-Natural
             (Synonymous-External-Concept Inanimate-Object-Natural
              Sensus-Information1997 "NATURAL-OBJECT")
             (Name-In-Cyc Inanimate-Object-Natural "#$InanimateObject-Natural")
             (Existing-Object-Type Inanimate-Object-Natural)
             (Subclass-Of Inanimate-Object-Natural Inanimate-Thing-Natural)
             (Set-Or-Collection Inanimate-Object-Natural)
             (Arity Inanimate-Object-Natural 1)
             (Documentation Inanimate-Object-Natural
              "A collection of natural (i.e. not man-made) objects. It is a subclass of Inanimate-Thing-Natural, distinguished from it mainly by only having subclasses which are existing object-types. Thus, Celestial-Object would be a subclass of this collection, but Dirt would not."))

(defrelation Mixing
             (Name-In-Cyc Mixing "#$Mixing")
             (Temporal-Stuff-Type Mixing)
             (Default-Disjoint-Script-Type Mixing)
             (Subclass-Of Mixing Creation-Event)
             (Subclass-Of Mixing Handling-An-Object)
             (Set-Or-Collection Mixing)
             (Arity Mixing 1)
             (Documentation Mixing
              "A collection of events.  In each Mixing, two or more substances are combined to form a Mixture."))

(defrelation |(SOLID-FN METAL)|
             (Skolem-Object |(SOLID-FN METAL)|)
             (Tangible-Stuff-State-Type |(SOLID-FN METAL)|)
             (Subclass-Of |(SOLID-FN METAL)| Metal)
             (Subclass-Of |(SOLID-FN METAL)| Solid-Tangible-Thing)
             (Set-Or-Collection |(SOLID-FN METAL)|)
             (Arity |(SOLID-FN METAL)| 1))

(defrelation Medical-Specialty-Type
             (Name-In-Cyc Medical-Specialty-Type "#$MedicalSpecialtyType")
             (Collection Medical-Specialty-Type)
             (Subclass-Of Medical-Specialty-Type Occupation-Type)
             (Set-Or-Collection Medical-Specialty-Type)
             (Arity Medical-Specialty-Type 1)
             (Documentation Medical-Specialty-Type
              "The collection of all medical worker types, divided up by specialty."))

(defrelation Hour-Of-Day-Type
             (Name-In-Cyc Hour-Of-Day-Type "#$HourOfDayType")
             (Cyclical-Interval-Group-Type Hour-Of-Day-Type)
             (Subclass-Of Hour-Of-Day-Type Temporally-Disjoint-Interval-Type)
             (Subclass-Of Hour-Of-Day-Type Time-Of-Day-Type)
             (Set-Or-Collection Hour-Of-Day-Type)
             (Arity Hour-Of-Day-Type 1)
             (Documentation Hour-Of-Day-Type
              "A collection of collections. Instances Hour-Of-Day-Type are 24 canonical subsets of Calendar-Hour, such as Time-Of-Day-8AM.  This is a proper subset of Time-Of-Day-Type, which could include larger or smallers times of the day, such as `before noon' (which in Cyc in named Time-Of-Day-AM)."))

(defrelation Climate-Cycle-Type
             (Name-In-Cyc Climate-Cycle-Type "#$ClimateCycleType")
             (Sibling-Disjoint-Collection Climate-Cycle-Type)
             (Subclass-Of Climate-Cycle-Type Script-Type)
             (Subclass-Of Climate-Cycle-Type Temporal-Object-Type)
             (Set-Or-Collection Climate-Cycle-Type)
             (Arity Climate-Cycle-Type 1)
             (Documentation Climate-Cycle-Type
              "A collection of collections.  Each element of Climate-Cycle-Type is a collection of (extended) events which are weather processes of one type or another.  Examples of elements of Climate-Cycle-Type are Temperate-Climate-Cycle and Steppe-Climate-Cycle.  
Note: in practice, there is little need to create terms denoting members of the collections belonging to Climate-Cycle-Type; so long as one just wants to state what TYPE of climate a particular region has, simply use the predicate Has-Climate-Type with the appropriate subset of Annual-Climate-Cycle (q.v.).  See also Has-Climate-Type."))

(defrelation Human-Occupation-Construct-Resident
             (Name-In-Cyc Human-Occupation-Construct-Resident
              "#$HumanOccupationConstructResident")
             (Existing-Object-Type Human-Occupation-Construct-Resident)
             (Subclass-Of Human-Occupation-Construct-Resident Animal)
             (Set-Or-Collection Human-Occupation-Construct-Resident)
             (Arity Human-Occupation-Construct-Resident 1)
             (Documentation Human-Occupation-Construct-Resident
              "The collection of those Animals that (commonly) reside in Human-Occupation-Constructs -- i.e., in structures that also house people.  This mostly just includes domestic pets and people."))

(defrelation Shared-Note
             (Name-In-Cyc Shared-Note "#$SharedNote")
             (Object-Type Shared-Note)
             (Collection Shared-Note)
             (Subclass-Of Shared-Note Text-Group)
             (Subclass-Of Shared-Note Individual)
             (Set-Or-Collection Shared-Note)
             (Arity Shared-Note 1)
             (Documentation Shared-Note
              "Shared-Note is an element of the Cyc collection Documentation-Constant.  Each instance of Shared-Note is a constant which contain only documentation (usually a :Documentation) about two or more constants (not including that documentation constant).  See Shared-Notes for more information."))

(defrelation |(THE-COVERING CREATION-EVENT DESTRUCTION-EVENT)|
             (Skolem-Object |(THE-COVERING CREATION-EVENT DESTRUCTION-EVENT)|)
             (Set-Mathematical
              |(THE-COVERING CREATION-EVENT DESTRUCTION-EVENT)|)
             (Subclass-Of |(THE-COVERING CREATION-EVENT DESTRUCTION-EVENT)|
              Thing)
             (Set-Or-Collection
              |(THE-COVERING CREATION-EVENT DESTRUCTION-EVENT)|)
             (Arity |(THE-COVERING CREATION-EVENT DESTRUCTION-EVENT)| 1))

(defrelation Motorboat
             (Name-In-Cyc Motorboat "#$Motorboat")
             (Product-Type Motorboat)
             (Existing-Object-Type Motorboat)
             (Subclass-Of Motorboat Transportation-Device-Vehicle)
             (Subclass-Of Motorboat Boat-Water-Transportation-Device)
             (Set-Or-Collection Motorboat)
             (Arity Motorboat 1)
             (Documentation Motorboat
              "The collection of all boats usually powered by motors (including in-board and out-board motors).  If a boat is primarily a Sailboat, but has a back-up motor to use when becalmed or piloting, that is not enough to make it a Motorboat.  To be more precise, this collection is the intersection of Boat-Water-Transportation-Device, Internal-Combustion-Powered-Device and Transportation-Device-Vehicle."))

(defrelation Raininess
             (Medium-Amount-Fn Raininess |(MEDIUM-AMOUNT-FN RAININESS)|)
             (High-Amount-Fn Raininess |(HIGH-AMOUNT-FN RAININESS)|)
             (Low-Amount-Fn Raininess |(LOW-AMOUNT-FN RAININESS)|)
             (Name-In-Cyc Raininess "#$Raininess")
             (Primitive-Attribute-Type Raininess)
             (Subclass-Of Raininess Weather-Attribute)
             (Subclass-Of Raininess Scalar-Interval)
             (Subclass-Of Raininess Physical-Attribute)
             (Set-Or-Collection Raininess)
             (Arity Raininess 1)
             (Documentation Raininess
              "A collection of attributes; a subset of Scalar-Interval.  Each element of Raininess describes the intensity with which it is raining at an Outdoor-Location.  (At the low extreme, it is not raining at all.)  Degrees of raininess may be represented qualitatively (e.g., Rainy), or using Generic-Value-Functions.  The raininess of a location is indicated with the predicate Raininess-Of-Region."))

(defrelation Shape-Describing-Predicate
             (Name-In-Cyc Shape-Describing-Predicate
              "#$ShapeDescribingPredicate")
             (Predicate-Category Shape-Describing-Predicate)
             (Subclass-Of Shape-Describing-Predicate
              Extensional-Representation-Predicate)
             (Subclass-Of Shape-Describing-Predicate
              Physical-Feature-Describing-Predicate)
             (Set-Or-Collection Shape-Describing-Predicate)
             (Arity Shape-Describing-Predicate 1)
             (Documentation Shape-Describing-Predicate
              "A collection of predicates.  Each element of Shape-Describing-Predicate is a predicate used in assertions about abstract shapes and shape-like configurations, such as posture.  Examples: Shape, Xy-Cross-Section-Shape, Yz-Cross-Section-Shape-Type, Continuously-Connected-To, Posture-Of-Animal."))

(defrelation Inanimate-Thing-Natural
             (Name-In-Cyc Inanimate-Thing-Natural "#$InanimateThing-Natural")
             (Temporal-Stuff-Type Inanimate-Thing-Natural)
             (Subclass-Of Inanimate-Thing-Natural Inanimate-Thing)
             (Set-Or-Collection Inanimate-Thing-Natural)
             (Arity Inanimate-Thing-Natural 1)
             (Documentation Inanimate-Thing-Natural
              "A collection of tangibles. Each element of Inanimate-Thing-Natural is an Inanimate-Thing that is not man-made. Thus, the Moon-Of-Earth and  the Atlantic-Ocean belong to this class, but the Arc-De-Triomphe does not."))

(defrelation Student
             (Name-In-Cyc Student "#$Student")
             (Occupation-Type Student)
             (Subclass-Of Student Person)
             (Set-Or-Collection Student)
             (Arity Student 1)
             (Documentation Student
              "A collection of persons.  Each element of Student is someone who studies at an academic institution.  This collection includes students at all levels of study in all types of educational institutions."))

(defrelation Memory
             (Name-In-Cyc Memory "#$Memory")
             (Stuff-Type Memory)
             (Subclass-Of Memory Mental-Information)
             (Set-Or-Collection Memory)
             (Arity Memory 1)
             (Documentation Memory
              "A collection of mental information.  Each element of Memory is the propositional content of a mental state in which a person recalls past events.  Most commonly those memories concern first-person experiences, but they may include recollections of anything that the person has learned in the past."))

(defobject Hindi-Language
   (Living-Language Hindi-Language)
   (Name-In-Cyc Hindi-Language "#$HindiLanguage")
   (Documentation Hindi-Language "Language spoken in the Indic area."))

(defrelation May
             (Name-In-Cyc May "#$May")
             (Month-Of-Year-Type May)
             (Subclass-Of May Calendar-Month)
             (Set-Or-Collection May)
             (Arity May 1))

(defrelation Vegetable-Food
             (Name-In-Cyc Vegetable-Food "#$Vegetable-Food")
             (Default-Disjoint-Food-Type Vegetable-Food)
             (Existing-Stuff-Type Vegetable-Food)
             (Subclass-Of Vegetable-Food Vegetable-Matter)
             (Subclass-Of Vegetable-Food Food)
             (Set-Or-Collection Vegetable-Food)
             (Arity Vegetable-Food 1)
             (Documentation Vegetable-Food
              "A collection of edible stuff.  Each element of Vegetable-Food is a foodstuff which is derived from a plant and is ordinarily considered a vegetable; e.g., a carrot (an instance of Carrot-Foodstuff), a potato (an instance of Potato-Foodstuff), a lima bean (a Bean-Foodstuff), a tomato (a Tomato-Foodstuff).

Note: Vegetable-Food includes certain plant parts that are technically classified as fruits by botanists, but which are treated as vegetables in food classification -- such as tomatoes.  These would, e.g., be found in the vegetables section of a supermarket, and they satisfy more of the axioms about vegetables than those about fruits (e.g., sweetness.)"))

(defrelation Attribute-Value
             (Synonymous-External-Concept Attribute-Value
              Sensus-Information1997 "QUALITY")
             (Name-In-Cyc Attribute-Value "#$AttributeValue")
             (Attribute-Type Attribute-Value)
             (Collection Attribute-Value)
             (Subclass-Of Attribute-Value Intangible-Individual)
             (Subclass-Of Attribute-Value Individual)
             (Set-Or-Collection Attribute-Value)
             (Arity Attribute-Value 1)
             (Documentation Attribute-Value
              "The set of all attributes represented in Cyc. Attribute-Value includes quantities, such as 5 inches (i.e., (Inch 5)) or 1000 dollars per year (i.e., (Dollars-Per-Year 1000)), as well as qualities like Hilly, Rough, Device-On, etc., which can be used to make assertions about the state of some tangible object."))

(defrelation Monera-Kingdom
             (Name-In-Cyc Monera-Kingdom "#$MoneraKingdom")
             (Biological-Kingdom Monera-Kingdom)
             (Subclass-Of Monera-Kingdom Thing)
             (Set-Or-Collection Monera-Kingdom)
             (Arity Monera-Kingdom 1)
             (Documentation Monera-Kingdom
              "A biological kingdom including bacteria, blue green algae, and prochlorophytes (recently discovered).  All members are prokaryotes - their cells lack a nuclear membrane and other internal organelles."))

(defrelation Leg
             (Name-In-Cyc Leg "#$Leg")
             (Symmetric-Anatomical-Part-Type Leg)
             (Subclass-Of Leg Appendage-Animal-Body-Part)
             (Set-Or-Collection Leg)
             (Arity Leg 1)
             (Documentation Leg
              "The collection of all Animal appendages used for locomotion overland, supporting the animal and moving it along by walking, running, etc.  Thus wings, fins, etc., are not Legs.  The Foot-Animal-Body-Part is considered part of the Leg"))

(defrelation Temperature
             (Name-In-Cyc Temperature "#$Temperature")
             (Fundamental-Numeric-Attribute-Type Temperature)
             (Subclass-Of Temperature Scalar-Interval)
             (Subclass-Of Temperature Physical-Attribute)
             (Set-Or-Collection Temperature)
             (Arity Temperature 1)
             (Documentation Temperature
              "A collection of physical attributes.  Each element of Temperature is an amount of heat in a particular instance of Partially-Tangible.  Elements of Temperature may be either a fixed interval, such as 98.6 degrees Fahrenheit, or a range, such as Human-Habitable-Temperature.  See Unit-Of-Temperature for the units used by Cyc to measure temperatures."))

(defrelation Synonymous-External-Concept
             (Nth-Domain Synonymous-External-Concept 1 Thing)
             (Nth-Domain Synonymous-External-Concept 2 Indexed-Info-Source)
             (Nth-Domain Synonymous-External-Concept 3 Character-String)
             (Name-In-Cyc Synonymous-External-Concept
              "#$synonymousExternalConcept")
             (Ternary-Predicate Synonymous-External-Concept)
             (Relation Synonymous-External-Concept)
             (Arity Synonymous-External-Concept 3)
             (Documentation Synonymous-External-Concept
              "(Synonymous-External-Concept ?TERM ?SOURCE ?STRING) means that the Cyc
concept ?TERM is synonymous with the concept named by ?STRING in the
external data source ?SOURCE."))

(defrelation Unique-Anatomical-Part-Type
             (Name-In-Cyc Unique-Anatomical-Part-Type
              "#$UniqueAnatomicalPartType")
             (Sibling-Disjoint-Collection Unique-Anatomical-Part-Type)
             (Subclass-Of Unique-Anatomical-Part-Type Existing-Object-Type)
             (Set-Or-Collection Unique-Anatomical-Part-Type)
             (Arity Unique-Anatomical-Part-Type 1)
             (Documentation Unique-Anatomical-Part-Type
              "A collection of collections.  Instances are types of Organism-Parts that occur uniquely in the organisms (Organism-Whole) that have them.  For example, Head-Animal-Body-Part."))

(defrelation Information-Bearing-Wave-Propagation
             (Name-In-Cyc Information-Bearing-Wave-Propagation
              "#$InformationBearingWavePropagation")
             (Temporal-Stuff-Type Information-Bearing-Wave-Propagation)
             (Subclass-Of Information-Bearing-Wave-Propagation
              Wave-Propagation)
             (Subclass-Of Information-Bearing-Wave-Propagation
              Information-Bearing-Thing)
             (Set-Or-Collection Information-Bearing-Wave-Propagation)
             (Arity Information-Bearing-Wave-Propagation 1)
             (Documentation Information-Bearing-Wave-Propagation
              "A collection of information bearing things (IBTs).  Each element of Information-Bearing-Wave-Propagation is a Wave-Propagation (q.v.) event that carries information, for an interpreter which understands its conventions.  Examples of Information-Bearing-Wave-Propagation include sounds, radio signals, and images of visible light.  These eventlike IBTs should be contrasted with the relatively static, persistent, objectlike IBTs in the collection Information-Bearing-Object."))

(defrelation Feels-Response-On-Body-Region
             (Nth-Domain Feels-Response-On-Body-Region 1 Perceptual-Agent)
             (Nth-Domain Feels-Response-On-Body-Region 2 Existing-Object-Type)
             (Nth-Domain Feels-Response-On-Body-Region 3 Sensory-Reaction-Type)
             (Nth-Domain Feels-Response-On-Body-Region 4 Generic-Attribute)
             (Nth-Domain-Subclass-Of Feels-Response-On-Body-Region 2
              Animal-Body-Region)
             (Name-In-Cyc Feels-Response-On-Body-Region
              "#$feelsResponseOnBodyRegion")
             (Quaternary-Predicate Feels-Response-On-Body-Region)
             (Functional-Predicate Feels-Response-On-Body-Region)
             (Relation Feels-Response-On-Body-Region)
             (Arity Feels-Response-On-Body-Region 4)
             (Documentation Feels-Response-On-Body-Region
              "The Cyc predicate Feels-Response-On-Body-Region is used to represent localized somatic feelings of a perceptive being. (Feels-Response-On-Body-Region AGT BODYPARTTYPE SENS DEGREE) means that the Perceptual-Agent AGT feels on its body, in the area specified by BODYPARTTYPE, the sensory reaction SENS with an intensity of DEGREE.  For example, Cyc's knowledge base contains an assertion that the very same part of one's body doesn't feel both hot and cold at the same time.  Feels-Response-On-Body-Region can also be used to state symptoms, e.g., when you're feverish, your head feels hot.  See also Sensory-Reaction-Type."))

(defrelation Beneficiary
             (Overlapping-External-Concept Beneficiary Sensus-Information1997
              "CLIENT")
             (Domain Beneficiary Event)
             (Range Beneficiary Agent)
             (Name-In-Cyc Beneficiary "#$beneficiary")
             (Role Beneficiary)
             (Slot Beneficiary)
             (Relation Beneficiary)
             (Arity Beneficiary 2)
             (Binary-Relation Beneficiary)
             (Documentation Beneficiary
              "(Beneficiary ACT AGT) means that the Agent AGT benefits from the performance of the action ACT.  Some desire or interest of AGT is served, enabled, helped, or satisfied by the performance of ACT."))

(defrelation Relation-Type
             (Nth-Domain Relation-Type 1 Slot)
             (Nth-Domain Relation-Type 2 Collection)
             (Nth-Domain Relation-Type 3 Collection)
             (Name-In-Cyc Relation-Type "#$relationType")
             (Ternary-Predicate Relation-Type)
             (Rule-Macro-Predicate Relation-Type)
             (Relation Relation-Type)
             (Arity Relation-Type 3)
             (Documentation Relation-Type
              "(Relation-Type SLOT COL1 COL2) means that, for every instance of COL1 (INS1), there is some instance of COL2 (INS2) such that (SLOT INS1 INS2) holds.  Relation-Type is thus redundant with a huge set of commonly-occurring rules.  By having this predicate (along with an axiom defining it, and, eventually, coded support for quick inferencing with it), those rules can be stated more tersely and reasoning at the collection level is possible."))

(defobject Flexible
   (Physical-Structural-Attribute Flexible)
   (Name-In-Cyc Flexible "#$Flexible")
   (Documentation Flexible
    "A physical attribute.  Flexible is the Physical-Structural-Attribute of a tangible object that can be flexed, twisted, contorted.  Flexible objects which retain their contorted shape are described as Bendable (q.v.)."))

(defrelation Border
             (Name-In-Cyc Border "#$Border")
             (Object-Type Border)
             (Subclass-Of Border Spatial-Thing)
             (Set-Or-Collection Border)
             (Arity Border 1)
             (Documentation Border
              "The collection of all lines, linear regions, or dividing planes or surfaces--physical or abstract--that each constitutes the boundary between (Forms-Border-Between) two regions (i.e., two elements of Spatial-Thing)."))

(defrelation Financial-Account
             (Name-In-Cyc Financial-Account "#$FinancialAccount")
             (Account-Type Financial-Account)
             (Subclass-Of Financial-Account Account)
             (Set-Or-Collection Financial-Account)
             (Arity Financial-Account 1)
             (Documentation Financial-Account
              "A collection of intangible objects.  Each element of Financial-Account is an instance of Account (q.v.) which is denominated in units of Money.  Examples: savings accounts, credit card accounts, vendor accounts."))

(defrelation Numeric-Comparison
             (Overlapping-External-Concept Numeric-Comparison
              Sensus-Information1997 "SCALED-COMPARISON")
             (Synonymous-External-Concept Numeric-Comparison
              Sensus-Information1997 "NUMBER-FOCUSING")
             (Name-In-Cyc Numeric-Comparison "#$NumericComparison")
             (Relationship-Type Numeric-Comparison)
             (Subclass-Of Numeric-Comparison Slot)
             (Set-Or-Collection Numeric-Comparison)
             (Arity Numeric-Comparison 1)
             (Documentation Numeric-Comparison
              "A collection comprising the predicates used to compare elements of Scalar-Interval.  Examples: Greater-Than-Or-Equal-To, Greater-Than, Numerically-Equal.  Note that `less than' and `less than or equal to' are simply inverses of Greater-Than and Greater-Than-Or-Equal-To.  E.g., in Cyc `A is less than B' is written as (Greater-Than B A)."))

(defobject Right-Side-Up
   (Orientation-Attribute Right-Side-Up)
   (Name-In-Cyc Right-Side-Up "#$RightSideUp")
   (Documentation Right-Side-Up
    "(Orientation OBJECT Right-Side-Up) means that OBJECT's intrinsic top (e.g., the lid of a teapot) is above (Above-Directly) its intrinsic bottom (e.g., bowl of a teapot)."))

(defrelation Cyc-System-Object
             (Name-In-Cyc Cyc-System-Object "#$CycSystemObject")
             (Object-Type Cyc-System-Object)
             (Subclass-Of Cyc-System-Object Computational-Object)
             (Set-Or-Collection Cyc-System-Object)
             (Arity Cyc-System-Object 1)
             (Documentation Cyc-System-Object
              "The collection of computational (i.e., abstract, intangible, syntactically structured) objects which make up Cyc's CycL-based system."))

(defrelation Shaping-Something
             (Name-In-Cyc Shaping-Something "#$ShapingSomething")
             (Temporal-Stuff-Type Shaping-Something)
             (Default-Disjoint-Script-Type Shaping-Something)
             (Subclass-Of Shaping-Something Handling-An-Object)
             (Subclass-Of Shaping-Something Intrinsic-State-Change-Event)
             (Set-Or-Collection Shaping-Something)
             (Arity Shaping-Something 1)
             (Documentation Shaping-Something
              "A collection of events.  In each Shaping-Something, something (usually a more or less `plastic' object) is given a definite shape.  In many, but not all, cases (e.g., Making-Pottery), an instance of Shaping-Something is also a Creation-Event,   Normally, elements of Shaping-Something are concerned with the basic, overall shape of an object.  Thus, a Polishing-Something event, which doesn't affect the basic shape of the Object-Of-State-Change, is not a Shaping-Something."))

(defrelation Touches-Directly
             (not (Transitive-Binary-Predicate Touches-Directly))
             (Subrelation-Of Touches-Directly Cotemporal)
             (Subrelation-Of Touches-Directly Touches)
             (Slot-Inverse Touches-Directly Touches-Directly)
             (Domain Touches-Directly Partially-Tangible)
             (Range Touches-Directly Partially-Tangible)
             (Name-In-Cyc Touches-Directly "#$touchesDirectly")
             (Symmetric-Binary-Predicate Touches-Directly)
             (Physical-Feature-Describing-Predicate Touches-Directly)
             (Spatial-Predicate Touches-Directly)
             (Reflexive-Binary-Predicate Touches-Directly)
             (Cotemporal-Objects-Slot Touches-Directly)
             (Slot Touches-Directly)
             (Relation Touches-Directly)
             (Arity Touches-Directly 2)
             (Binary-Relation Touches-Directly)
             (Documentation Touches-Directly
              "(Touches-Directly THIS THAT) means that THIS and THAT are in direct physical contact.  That is, there exists a region on both objects where the distance between their surfaces is zero.  If in doubt, use Touches rather than Touches-Directly."))

(defrelation Nonlexical-Linguistic-Object
             (Name-In-Cyc Nonlexical-Linguistic-Object
              "#$NonlexicalLinguisticObject")
             (Linguistic-Object-Type Nonlexical-Linguistic-Object)
             (Subclass-Of Nonlexical-Linguistic-Object Linguistic-Object)
             (Set-Or-Collection Nonlexical-Linguistic-Object)
             (Arity Nonlexical-Linguistic-Object 1)
             (Documentation Nonlexical-Linguistic-Object
              "The collection of linguistic objects which are not morphemes, but which nonetheless make up part of a language system; e.g., the parts of speech."))

(defrelation Measuring-Something
             (Name-In-Cyc Measuring-Something "#$MeasuringSomething")
             (Temporal-Object-Type Measuring-Something)
             (Default-Disjoint-Script-Type Measuring-Something)
             (Subclass-Of Measuring-Something Purposeful-Action)
             (Subclass-Of Measuring-Something Thinking)
             (Set-Or-Collection Measuring-Something)
             (Arity Measuring-Something 1)
             (Documentation Measuring-Something
              "A collection of events.  Each element of Measuring-Something is an event in which an agent uses a physical device to measure some physical attribute of a tangible object.  The last part of such an event involves the perception (and perhaps recording) of a Measurement-Result by some instance of#$PerceptualAgent.  See also Measurement-Fn."))

(defrelation Static-Situation
             (Name-In-Cyc Static-Situation "#$StaticSituation")
             (Temporal-Stuff-Type Static-Situation)
             (Subclass-Of Static-Situation Something-Existing)
             (Subclass-Of Static-Situation Situation)
             (Set-Or-Collection Static-Situation)
             (Arity Static-Situation 1)
             (Documentation Static-Situation
              "Static-Situations are states of affairs between two or more things, persisting statically over some time interval. Static-Situations always have a temporal extent; they usually have a tangible and spatial extent.   As an example, consider the situation of Bill Clinton sitting in his easy chair on the evening of 7/4/96.   There are participant objects such as Bill and the chair, there are relationships such as the seat of the chair supporting his bottom and his weight being off his feet, etc.   It happens at a particular time and place, but there is no active, dynamic Event that is going on. "))

(defobject Mediterranean-Sea
   (Sea Mediterranean-Sea)
   (Entity Mediterranean-Sea)
   (Name-In-Cyc Mediterranean-Sea "#$MediterraneanSea")
   (Documentation Mediterranean-Sea
    "A strategically important small sea between southern Europe, western Asia (the Levant), and northern Africa."))

(defrelation |(TRANSPORT-VIA-FN AIR-TRANSPORTATION-DEVICE)|
             (Skolem-Object |(TRANSPORT-VIA-FN AIR-TRANSPORTATION-DEVICE)|)
             (Temporal-Stuff-Type
              |(TRANSPORT-VIA-FN AIR-TRANSPORTATION-DEVICE)|)
             (Script-Type |(TRANSPORT-VIA-FN AIR-TRANSPORTATION-DEVICE)|)
             (Default-Disjoint-Script-Type
              |(TRANSPORT-VIA-FN AIR-TRANSPORTATION-DEVICE)|)
             (Subclass-Of |(TRANSPORT-VIA-FN AIR-TRANSPORTATION-DEVICE)|
              Transportation-Event)
             (Subclass-Of |(TRANSPORT-VIA-FN AIR-TRANSPORTATION-DEVICE)|
              |(TRANSPORT-VIA-FN TRANSPORTATION-DEVICE)|)
             (Set-Or-Collection |(TRANSPORT-VIA-FN AIR-TRANSPORTATION-DEVICE)|)
             (Arity |(TRANSPORT-VIA-FN AIR-TRANSPORTATION-DEVICE)| 1)
             (Documentation |(TRANSPORT-VIA-FN AIR-TRANSPORTATION-DEVICE)|
              "A collection of events.  An instance of (Transport-Via-Fn Air-Transportation-Device) is a transportation event in which a Vehicle designed to travel through the atmosphere or outer space is used.  Examples include instances of the would-be collections hang gliding, airplane tranportation, flying the space shuttle, hot air ballon transport.  Note: This collection does not include Flying-Flapping-Wings, which is what birds do."))

(defrelation Organizational-Chart
             (Name-In-Cyc Organizational-Chart "#$OrganizationalChart")
             (Existing-Object-Type Organizational-Chart)
             (Subclass-Of Organizational-Chart Information-Bearing-Object)
             (Subclass-Of Organizational-Chart Structured-Information-Source)
             (Set-Or-Collection Organizational-Chart)
             (Arity Organizational-Chart 1)
             (Documentation Organizational-Chart
              "A collection of information bearing objects (IBOs); a subset of Structured-Information-Source.  Each element of Organizational-Chart is an IBO that graphically or in outline fashion depicts information about the control structure or resource use structure of an organization.  E.g., a diagram of Exxon Corporation's top managers showing their reporting structure."))

(defrelation Reflexive-Binary-Predicate
             (Name-In-Cyc Reflexive-Binary-Predicate
              "#$ReflexiveBinaryPredicate")
             (Collection Reflexive-Binary-Predicate)
             (Predicate-Category Reflexive-Binary-Predicate)
             (Subclass-Of Reflexive-Binary-Predicate Slot)
             (Set-Or-Collection Reflexive-Binary-Predicate)
             (Arity Reflexive-Binary-Predicate 1)
             (Documentation Reflexive-Binary-Predicate
              "The collection of all binary predicates ?pred such that  (:=> (:and (:Direct-Types ?PRED Reflexive-Binary-Predicate) (Arg1-Isa ?PRED ?ARG1) (Arg2-Isa ?PRED ?ARG2) (:Direct-Types ?OBJ ?ARG1) (:Direct-Types ?OBJ ?ARG2)) (?PRED ?OBJ ?OBJ))."))

(defrelation Cyc-System-List-Or-Atom
             (Name-In-Cyc Cyc-System-List-Or-Atom "#$CycSystemListOrAtom")
             (Object-Type Cyc-System-List-Or-Atom)
             (Subclass-Of Cyc-System-List-Or-Atom Cyc-System-Object)
             (Set-Or-Collection Cyc-System-List-Or-Atom)
             (Arity Cyc-System-List-Or-Atom 1)
             (Documentation Cyc-System-List-Or-Atom
              "A collection including both the lists and the atomic data belonging to the CycL substrate of the Cyc System."))

(defrelation Porosity
             (Very-Low-Amount-Fn Porosity |(VERY-LOW-AMOUNT-FN POROSITY)|)
             (Medium-Amount-Fn Porosity |(MEDIUM-AMOUNT-FN POROSITY)|)
             (No-Amount-Fn Porosity |(NO-AMOUNT-FN POROSITY)|)
             (High-Amount-Fn Porosity |(HIGH-AMOUNT-FN POROSITY)|)
             (Very-High-Amount-Fn Porosity |(VERY-HIGH-AMOUNT-FN POROSITY)|)
             (Low-Amount-Fn Porosity |(LOW-AMOUNT-FN POROSITY)|)
             (Name-In-Cyc Porosity "#$Porosity")
             (Primitive-Attribute-Type Porosity)
             (Subclass-Of Porosity Physical-Attribute)
             (Subclass-Of Porosity Scalar-Interval)
             (Set-Or-Collection Porosity)
             (Arity Porosity 1)
             (Documentation Porosity
              "A collection of attributes; a subset of Physical-Attribute.  Each element of Porosity represents a specific porosity of some physical object.  Different porosities may be represented using Generic-Value-Functions.  Porosities of objects are indicated with the predicate Porosity-Of-Object."))

(defobject Note-About-Stating-Exceptions-In-Cyc-L
   (Shared-Note Note-About-Stating-Exceptions-In-Cyc-L)
   (Name-In-Cyc Note-About-Stating-Exceptions-In-Cyc-L
    "#$NoteAboutStatingExceptionsInCycL")
   (Documentation Note-About-Stating-Exceptions-In-Cyc-L "The formula
  (Except-When
    P(?x0 ... ?xn)
    Q(?x0 ... ?xn)))

states that, in situations where assertion Q would apply to a set of
bindings for variables ?x0 ... ?xn, the conclusion is allowed 
`except when'
  P(?x0 ... ?xn)
is true for these variable bindings.  The formula
  (Except-For [term] Q(?x0))
states that, in situations where assertion Q would apply to a variable
?x0, the conclusion is allowed `except for' the situations where [term]
is the binding for ?x0.  To be well-formed, Q must be a rule with
exactly one free variable.

By definition, Except-For is merely syntactic sugar:
  (Except-For [term] Q(?x0)) 
  <=> 
  (Except-When (equals ?x0 [term]) Q(?x0))
Since an Except-When statement is a meta-statement about some rule 
Q(?x0 ... ?xn), the statement is not well-formed if Q(?x0 ... ?xn) is
not already an assertion in the KB.  Also, strictly speaking, P and Q in
the Except-When merely must share some variables rather than all
variables as it's been written above.

These constructs replace `abnormal' at the EL (epistemological level).  Old assertions of the form:

  (:=>
    P(?x0 ... ?xn)
    (abnormal R(?x0 ... ?xn) Q(?x0 ... ?xn)))

become:

  (Except-When
    P(?x0 ... ?xn)
    Q(?x0 ... ?xn))

The predicate `abnormal' has not actually gone away, but was modified for use as the HL (Heuristic Level) implementation of Except-When.  Like Term-Of-Unit, `abnormal' should be viewed as an inference-maintained predicate, and human beings should not be manually asserting things using `abnormal.' 

;;;
;; EXAMPLES
;;;

Rule1: `birds fly'
(:=>
  (:Direct-Types ?BIRD Bird)
  (Behavior-Capable ?BIRD Flying-Flapping-Wings Performed-By))

Exception1: `for penguins, the ``birds fly'' rule does not apply'
(Except-When (:Direct-Types ?BIRD Penguin) [Rule1])

Exception2: `the ``birds fly'' rule does not apply to Tweety'
(Except-For Tweety [Rule1])

Exception3: `for an animal with an injured wing, the ``birds fly'' rule does not apply'
(Except-When
  (#and (Anatomical-Parts ?BIRD ?WING) (:Direct-Types ?WING Wing-Animal-Body-Part) (Has-Physiological-Attributes ?WING Injured))
  [Rule1])

Rule2: ``dogs who like the same cat like each other''
(:=>
 (?and  (:Direct-Types ?DOG1 Dog) (:Direct-Types ?DOG2 Dog) (:Direct-Types ?CAT Cat) (Likes-As-Friend ?DOG1 ?CAT) (Likes-As-Friend ?DOG2 ?CAT))
 (Likes-As-Friend ?DOG1 ?DOG2))

Exception3: `Rex does not like other dogs according to ``Rule2'''
(Except-When (Equals ?DOG1 Rex) [Rule2])

Exception4: `Fifi is not liked by other dogs according to `Rule2'''
(Except-When (Equals ?DOG2 Fifi) [Rule2])

Exception5: `Morris is not such a cat according to ``Rule2'''
(Except-When (Equals ?CAT Morris) [Rule2])"))

(defrelation Feels-Towards-Event
             (Nth-Domain Feels-Towards-Event 1 Intelligent-Agent)
             (Nth-Domain Feels-Towards-Event 1 Person)
             (Nth-Domain Feels-Towards-Event 2 Event)
             (Nth-Domain Feels-Towards-Event 3 Feeling-Attribute-Type)
             (Nth-Domain Feels-Towards-Event 4 Generic-Attribute)
             (Nth-Domain-Subclass-Of Feels-Towards-Event 3 Feeling-Attribute)
             (Name-In-Cyc Feels-Towards-Event "#$feelsTowardsEvent")
             (Quaternary-Predicate Feels-Towards-Event)
             (Relation Feels-Towards-Event)
             (Arity Feels-Towards-Event 4)
             (Documentation Feels-Towards-Event
              "(Feels-Towards-Event AGT EVT EMOTYPE DEGREE) means that the Intelligent-Agent AGT feels a feeling of the Feeling-Attribute-Type EMOTYPE towards the Event EVT, with intensity DEGREE.
Note: the first argument can be a non-human intelligent agent, such as a dog or a company, because we often ascribe feelings and emotions to them, and they often behave consistently with having such feelings and emotions. "))

(defrelation Urban-Area
             (Name-In-Cyc Urban-Area "#$UrbanArea")
             (Existing-Object-Type Urban-Area)
             (Subclass-Of Urban-Area Human-Residence-Area)
             (Set-Or-Collection Urban-Area)
             (Arity Urban-Area 1)
             (Documentation Urban-Area
              "A collection of geographical regions; a subset of Human-Residence-Area.  Each element of Urban-Area is a region that has urban features.  Elements of Urban-Area can be as small as an urban neighborhood, or as big as, say, the New York City Metropolitan Area.  By default, urbanness is an intrinsic property of such areas; i.e., every subregion of an element of Urban-Area is also an instance of Urban-Area.  Examples: UT-Austin-Campus, Westlake-Hills, City-Of-Austin-TX, City-Of-Toulouse-France, City-Of-Murmansk-USSR, City-Of-Taipei-Taiwan, Research-Triangle-Park."))

(defrelation Information-Updating
             (Name-In-Cyc Information-Updating "#$InformationUpdating")
             (Temporal-Stuff-Type Information-Updating)
             (Subclass-Of Information-Updating Information-Transfer-Event)
             (Set-Or-Collection Information-Updating)
             (Arity Information-Updating 1)
             (Documentation Information-Updating
              "A collection of information transfer events.  Each element of Information-Updating is an event in which the information content of an IBO (i.e., an element of Information-Bearing-Object) is altered, either by removing or by adding information, or both.  Note that this is possible only for tangible IBOs."))

(defrelation Line
             (Name-In-Cyc Line "#$Line")
             (Object-Type Line)
             (Subclass-Of Line Geometric-Thing)
             (Set-Or-Collection Line)
             (Arity Line 1)
             (Documentation Line
              "A collection of geometical things.  Each instance of Line is a one-dimensional path through two- or three-dimensional space, whether curved or straight.  Formally, this is a 1-manifold."))

(defrelation Transferred-Thing
             (Subrelation-Of Transferred-Thing Pre-Actors)
             (Subrelation-Of Transferred-Thing Post-Actors)
             (Domain Transferred-Thing Generalized-Transfer)
             (Range Transferred-Thing Something-Existing)
             (Name-In-Cyc Transferred-Thing "#$transferredThing")
             (Actor-Slot Transferred-Thing)
             (Asymmetric-Binary-Predicate Transferred-Thing)
             (Irreflexive-Binary-Predicate Transferred-Thing)
             (Slot Transferred-Thing)
             (Relation Transferred-Thing)
             (Arity Transferred-Thing 2)
             (Binary-Relation Transferred-Thing)
             (Documentation Transferred-Thing
              "The Cyc predicate Transferred-Thing is used to identify the object whose external relationships change in some event considered generically as a `transfer'.  (Transferred-Thing TRANSFER OBJ) means that OBJ is being moved, transferred, exchanged, etc., in the Generalized-Transfer event TRANSFER.  In general, and if possible, it is preferable to use a more specialized instance of Actor-Slot than Transferred-Thing (e.g., Object-Moving for physical transfer of an object; Object-Of-Possession-Transfer for an object that changes possession but not necessarily location; and so on)."))

(defrelation Cereal-Food-Group
             (Name-In-Cyc Cereal-Food-Group "#$CerealFoodGroup")
             (Food-Group-Type Cereal-Food-Group)
             (Subclass-Of Cereal-Food-Group Food-Or-Drink-Composite)
             (Subclass-Of Cereal-Food-Group Vegetable-Matter)
             (Subclass-Of Cereal-Food-Group Edible-Stuff)
             (Set-Or-Collection Cereal-Food-Group)
             (Arity Cereal-Food-Group 1)
             (Documentation Cereal-Food-Group
              "The food group consisting of grain products such as breads and cereals. Food that contains a significant amount of grain products should be specs of this."))

(defrelation Dislikes-Role-In-Activity
             (Nth-Domain Dislikes-Role-In-Activity 1 Agent)
             (Nth-Domain Dislikes-Role-In-Activity 2 Actor-Slot)
             (Nth-Domain Dislikes-Role-In-Activity 3 Event)
             (Name-In-Cyc Dislikes-Role-In-Activity "#$dislikesRoleInActivity")
             (Ternary-Predicate Dislikes-Role-In-Activity)
             (Relation Dislikes-Role-In-Activity)
             (Arity Dislikes-Role-In-Activity 3)
             (Documentation Dislikes-Role-In-Activity
              "(Dislikes-Role-In-Activity AGT ROLE EVT) means that if the Agent AGT has the relation ROLE to the Event EVT, then AGT is likely to feel Dissatisfaction.  This predicate is useful to represent sentences such as `Joe dislikes running' or `Fred disliked receiving the flogging'."))

(deffunction Square-Mile
   (Args-Isa Square-Mile Real-Number)
   (Result-Instance-Of Square-Mile Area)
   (Result-Instance-Of Square-Mile Scalar-Interval)
   (Name-In-Cyc Square-Mile "#$SquareMile")
   (Unit-Of-Area Square-Mile)
   (Fps-Unit-Of-Measure Square-Mile)
   (Unit-Of-Measure-No-Prefix Square-Mile)
   (Function Square-Mile)
   (Documentation Square-Mile
    "The measurement function used in Cyc to represent the square mile used as a unit of measure for area, within the British (FPS) system.  See also FPS-Unit-Of-Measure, Unit-Of-Measure."))

(defrelation Religion
             (Name-In-Cyc Religion "#$Religion")
             (Belief-System-Type Religion)
             (Subclass-Of Religion Belief-System)
             (Set-Or-Collection Religion)
             (Arity Religion 1)
             (Documentation Religion
              "The collection of all religions or equivalent sets of beliefs that answer the `big questions' about creation, existence, etc.  Some elements of this are: Animist-Religion, Catholicism, Atheism, etc."))

(defrelation |(TRANSPORT-VIA-FN ANIMAL)|
             (Skolem-Object |(TRANSPORT-VIA-FN ANIMAL)|)
             (Temporal-Stuff-Type |(TRANSPORT-VIA-FN ANIMAL)|)
             (Script-Type |(TRANSPORT-VIA-FN ANIMAL)|)
             (Subclass-Of |(TRANSPORT-VIA-FN ANIMAL)| Transportation-Event)
             (Subclass-Of |(TRANSPORT-VIA-FN ANIMAL)| Purposeful-Action)
             (Set-Or-Collection |(TRANSPORT-VIA-FN ANIMAL)|)
             (Arity |(TRANSPORT-VIA-FN ANIMAL)| 1)
             (Documentation |(TRANSPORT-VIA-FN ANIMAL)|
              "Transportation in which an animal provides the force for movement.  Includes horses and other animals carrying people and objects, people carrying objects and other people, etc."))

(defrelation Mental-Activity
             (Name-In-Cyc Mental-Activity "#$MentalActivity")
             (Script-Type Mental-Activity)
             (Temporal-Object-Type Mental-Activity)
             (Subclass-Of Mental-Activity Animal-Activity)
             (Subclass-Of Mental-Activity Mental-Event)
             (Set-Or-Collection Mental-Activity)
             (Arity Mental-Activity 1)
             (Documentation Mental-Activity
              "The collection of all actions which involve some mental activity on the part of at least one doer (see Done-By).  Consciously carrying out some activity, solving a math problem, engaging in a conversation, are all examples of Mental-Activity."))

(defrelation Audible-Sound
             (Wave-Emission-Fn Audible-Sound
              |(WAVE-EMISSION-FN AUDIBLE-SOUND)|)
             (Name-In-Cyc Audible-Sound "#$AudibleSound")
             (Wave-Propagation-Type Audible-Sound)
             (Subclass-Of Audible-Sound Sound)
             (Set-Or-Collection Audible-Sound)
             (Arity Audible-Sound 1)
             (Documentation Audible-Sound
              "A collection of events; a subset of Sound.  Each element of Audible-Sound is a sound within the Frequency range of human hearing."))

(defrelation State-United-States
             (Name-In-Cyc State-United-States "#$State-UnitedStates")
             (Spatially-Disjoint-Region-Type State-United-States)
             (Subclass-Of State-United-States State-Geopolitical)
             (Set-Or-Collection State-United-States)
             (Arity State-United-States 1)
             (Documentation State-United-States
              "A collection of geopolitical sub-regions.  Each of the (currently 50) elements of State-United-States is a State in the United-States-Of-America; i.e., Alabama-State, Alaska-State, Arizona-State, Arkansas-State, etc."))

(defrelation Money-Tender-Type
             (Name-In-Cyc Money-Tender-Type "#$MoneyTenderType")
             (Collection Money-Tender-Type)
             (Subclass-Of Money-Tender-Type Existing-Object-Type)
             (Set-Or-Collection Money-Tender-Type)
             (Arity Money-Tender-Type 1)
             (Documentation Money-Tender-Type
              "A collection of collections.  Each element of Money-Tender-Type is a collection of objects of a type commonly offered in payment for goods, services, fees, wage-work, etc.  Examples include Currency, Credit-Card, Travellers-Check, Money-Order, Postage-Stamp, Check-Tender-Object, etc."))

(defrelation Function-The-Mathematical-Type
             (Name-In-Cyc Function-The-Mathematical-Type
              "#$FunctionTheMathematicalType")
             (Relationship-Type Function-The-Mathematical-Type)
             (Collection Function-The-Mathematical-Type)
             (Subclass-Of Function-The-Mathematical-Type
              Function-Or-Functional-Predicate)
             (Subclass-Of Function-The-Mathematical-Type Relationship)
             (Set-Or-Collection Function-The-Mathematical-Type)
             (Arity Function-The-Mathematical-Type 1)
             (Documentation Function-The-Mathematical-Type
              "A collection of mathematical objects.  Each element of Function-The-Mathematical-Type takes some arguments and returns a unique value.  Examples: Time-Elapsed-Fn, Interval-Max-Fn, Skolem-Function, Plus-Fn.  Note that Predicate is a subset of Function-The-Mathematical-Type, because predicates can be thought of as functions that return only (either) true or false."))

(defobject |(GOVERNMENT-FN INDONESIA-THE-NATION)|
   (Regional-Government |(GOVERNMENT-FN INDONESIA-THE-NATION)|)
   (Skolem-Object |(GOVERNMENT-FN INDONESIA-THE-NATION)|)
   (Documentation |(GOVERNMENT-FN INDONESIA-THE-NATION)|
    "GOVERNMENT OF INDONESIA"))

(defrelation Electrical-Resistance
             (Name-In-Cyc Electrical-Resistance "#$ElectricalResistance")
             (Derived-Numeric-Attribute-Type Electrical-Resistance)
             (Subclass-Of Electrical-Resistance Scalar-Interval)
             (Subclass-Of Electrical-Resistance Physical-Attribute)
             (Set-Or-Collection Electrical-Resistance)
             (Arity Electrical-Resistance 1)
             (Documentation Electrical-Resistance
              "A collection of attributes; a subset of Physical-Attribute.  Each element of Electrical-Resistance is an attribute which measures the resistance to electrical flow through an object.  Examples: Insulator-Resistance, Conductor-Resistance, Semiconductor-Resistance, Superconductor-Resistance."))

(defrelation Infection-Transmission-Event
             (Name-In-Cyc Infection-Transmission-Event
              "#$InfectionTransmissionEvent")
             (Temporal-Object-Type Infection-Transmission-Event)
             (Script-Type Infection-Transmission-Event)
             (Subclass-Of Infection-Transmission-Event
              Intrinsic-State-Change-Event)
             (Subclass-Of Infection-Transmission-Event Generalized-Transfer)
             (Set-Or-Collection Infection-Transmission-Event)
             (Arity Infection-Transmission-Event 1)
             (Documentation Infection-Transmission-Event
              "The collection of events in which some instance of Infection is transmitted from one member of Biological-Living-Object to another."))

(defrelation Ablation
             (Name-In-Cyc Ablation "#$Ablation")
             (Temporal-Stuff-Type Ablation)
             (Default-Disjoint-Script-Type Ablation)
             (Subclass-Of Ablation Removing-Something)
             (Subclass-Of Ablation Intrinsic-State-Change-Event)
             (Subclass-Of Ablation Separation-Complete)
             (Set-Or-Collection Ablation)
             (Arity Ablation 1)
             (Documentation Ablation
              "A collection of events.  In an Ablation, a (usually relatively thin) layer of material is removed from the surface of an object."))

(defrelation Automobile
             (Transport-Via-Fn Automobile |(TRANSPORT-VIA-FN AUTOMOBILE)|)
             (Name-In-Cyc Automobile "#$Automobile")
             (Product-Type Automobile)
             (Existing-Object-Type Automobile)
             (Subclass-Of Automobile Humanly-Occupied-Spatial-Object)
             (Subclass-Of Automobile Road-Vehicle)
             (Subclass-Of Automobile Contact-Location)
             (Set-Or-Collection Automobile)
             (Arity Automobile 1)
             (Documentation Automobile
              "A collection of transportation devices -- those commonly known as `passenger cars.'  An instance of Automobile is an element of Road-Vehicle which was designed for carrying about 4 passengers (give or take a factor of 2).  In addition to midsize cars, Automobile includes elements belonging to the subsets Sports-Car and Van.  This collection does NOT include motorcycles, pickups, buses, tractors, etc."))

(defrelation Top-Side
             (Name-In-Cyc Top-Side "#$TopSide")
             (Region-Type Top-Side)
             (Subclass-Of Top-Side Side)
             (Set-Or-Collection Top-Side)
             (Arity Top-Side 1)
             (Documentation Top-Side
              "The collection of all the entire top sides (as conventionally understood) of all objects that have distinct Sides, one of which faces up."))

(deffunction The-Set
   (Args-Isa The-Set Thing)
   (Result-Instance-Of The-Set Set-Mathematical)
   (Name-In-Cyc The-Set "#$TheSet")
   (Commutative-Relation The-Set)
   (Variable-Arity-Relation The-Set)
   (Non-Predicate-Function The-Set)
   (Function The-Set)
   (Documentation The-Set
    "(The-Set E1 E2 ... En) denotes the Set-Mathematical consisting of the elements E1 through En.  The-Set is a variable arity relation, taking one or more arguments.  All the arguments must be ground terms; variables are not allowed."))

(defrelation Belief-System
             (Name-In-Cyc Belief-System "#$BeliefSystem")
             (Belief-System-Type Belief-System)
             (Subclass-Of Belief-System Mental-Object)
             (Set-Or-Collection Belief-System)
             (Arity Belief-System 1)
             (Documentation Belief-System
              "The collection of ideologies (systems of belief) in terms of which an agent characterizes (i.e., makes sense of) their world.  Elements of this set include: Vegetarian-Beliefs, German-Nazi-Ideology, Republican-Ideology, Communist-Ideology, Pacifist-Ideology, Atheism, etc. See also Conventional-Classification-System."))

(defrelation Visa-Permit
             (Name-In-Cyc Visa-Permit "#$Visa-Permit")
             (Existing-Object-Type Visa-Permit)
             (Subclass-Of Visa-Permit Credential)
             (Subclass-Of Visa-Permit Permission)
             (Subclass-Of Visa-Permit Legal-Agreement)
             (Set-Or-Collection Visa-Permit)
             (Arity Visa-Permit 1)
             (Documentation Visa-Permit
              "A collection of permissions.  Each element of Visa-Permit is an authorization issued by the government of some country to one (or more) person(s), stating that s/he is allowed to enter that country and remain for a certain period of time while engaging in certain specified activities (e.g., study, travel, work).  Examples: (United States) H1-Work-Visa, F1-Work-Visa, Green-Card."))

(defrelation Private-Sector-Employee
             (Name-In-Cyc Private-Sector-Employee "#$PrivateSectorEmployee")
             (Occupation-Type Private-Sector-Employee)
             (Subclass-Of Private-Sector-Employee Professional)
             (Set-Or-Collection Private-Sector-Employee)
             (Arity Private-Sector-Employee 1)
             (Documentation Private-Sector-Employee
              "A collection of persons; a subset of Professional.  Each element of Private-Sector-Employee is a worker who is not paid a salary or wage by a governmental organization.  For example, employees of publicly traded corporations are elements of Private-Sector-Employee.  Note: Private sector employees may contract with a government organization as consultants, however."))

(defrelation Composition-Predicate
             (Name-In-Cyc Composition-Predicate "#$CompositionPredicate")
             (Predicate-Category Composition-Predicate)
             (Subclass-Of Composition-Predicate Physical-Part-Predicate)
             (Set-Or-Collection Composition-Predicate)
             (Arity Composition-Predicate 1)
             (Documentation Composition-Predicate
              "A collection of predicates; one of several subsets of Part-Predicate.  The collection Composition-Predicate contains predicates which are used to relate Partially-Tangible things to the substances (pieces of stuffs) which compose them.  Composition-Predicates are instance-level (i.e, they relate Individuals, not Collections), although typically they are used in inferences about specific kinds of things.  Examples include Constituents, Main-Constituent Solvent, Solute, Suspending-Fluid, Suspended-Part, Atmosphere-Component."))

(defrelation Time-Of-Day-Type
             (Name-In-Cyc Time-Of-Day-Type "#$TimeOfDayType")
             (Collection Time-Of-Day-Type)
             (Subclass-Of Time-Of-Day-Type Conventional-Classification-Type)
             (Subclass-Of Time-Of-Day-Type Temporal-Object-Type)
             (Set-Or-Collection Time-Of-Day-Type)
             (Arity Time-Of-Day-Type 1)
             (Documentation Time-Of-Day-Type
              "A collection of collections, whose elements are some class of time of day, such as Time-Of-Day-PM, Time-Of-Day-9AM, Time-Of-Day-Midnight-Hour, and so on."))

(defobject |(HIGH-AMOUNT-FN RIGIDITY)|
   (Scalar-Interval |(HIGH-AMOUNT-FN RIGIDITY)|)
   (Rigidity |(HIGH-AMOUNT-FN RIGIDITY)|)
   (Skolem-Object |(HIGH-AMOUNT-FN RIGIDITY)|))

(defrelation Topographical-Feature
             (Name-In-Cyc Topographical-Feature "#$TopographicalFeature")
             (Existing-Object-Type Topographical-Feature)
             (Subclass-Of Topographical-Feature Outdoor-Location)
             (Subclass-Of Topographical-Feature Surface-On-Tangible-Object)
             (Set-Or-Collection Topographical-Feature)
             (Arity Topographical-Feature 1)
             (Documentation Topographical-Feature
              "A collection of geographical regions.  Each element of Topographical-Feature is a three dimensional feature of a planet's surface, typically with boundaries defined by formations of rock, dirt, water, etc., or by significant changes in elevation.  Some important subsets include the collections Mountain, Mountain-Range, Peninsula, Harbor, Shoreline, Arroyo.  Collections of regions defined by the presence of human artifacts (e.g., City-Skyline) or ecological characteristics (e.g., Forest-Wild) do NOT belong among the subsets of Topographical-Feature.  Examples of Topographical-Feature: Kyushu-Island-Japan, Saint-Thomas-Island, Lake-Erie, Victoria-Falls, Malay-Peninsula."))

(defrelation Formal-Product
             (Name-In-Cyc Formal-Product "#$FormalProduct")
             (Product-Type Formal-Product)
             (Subclass-Of Formal-Product Product)
             (Set-Or-Collection Formal-Product)
             (Arity Formal-Product 1)
             (Documentation Formal-Product
              "A collection of products.  Each element of Formal-Product is a complete packaged product, including everything the customer gets when the product is purchased, e.g., the Main-Product, packaging, enclosures, warranties, etc.  The typical packaged product as the retailer stocks it on the shelf and sells it at the register."))

(defrelation Piece-Of-Free-Space
             (Name-In-Cyc Piece-Of-Free-Space "#$PieceOfFreeSpace")
             (Existing-Stuff-Type Piece-Of-Free-Space)
             (Subclass-Of Piece-Of-Free-Space Air)
             (Subclass-Of Piece-Of-Free-Space Pure-Space)
             (Subclass-Of Piece-Of-Free-Space Partially-Tangible)
             (Set-Or-Collection Piece-Of-Free-Space)
             (Arity Piece-Of-Free-Space 1)
             (Documentation Piece-Of-Free-Space
              "Elements of Piece-Of-Free-Space are contiguous regions of ``empty'' yet tangible space, such as the interior of a room or sky above a city.  Typically (but not necessarily), a Piece-Of-Free-Space is associated with a geographical region or some physical boundaries that define its edges."))

(defrelation Radio-Wave
             (Name-In-Cyc Radio-Wave "#$RadioWave")
             (Temporal-Stuff-Type Radio-Wave)
             (Script-Type Radio-Wave)
             (Subclass-Of Radio-Wave Electromagnetic-Radiation)
             (Set-Or-Collection Radio-Wave)
             (Arity Radio-Wave 1)
             (Documentation Radio-Wave
              "A collection of events; a subset of Electromagnetic-Radiation. Each element of Radio-Wave is an instance of electromagnetic radiation having a wavelength in the range from approximately 1 centimeters (1x10^8 Angstrom) to 3,000,000 meters (3x10^18 Angstrom), and a frequency of approximately 10^8 Hertz to 10^2 Hertz.  This includes the spectrum for RadioWave-UHF, RadioWave-VHF, RadioWave-FM, RadioWave-AM, and several other types of common use Electromagnetic-Radiation."))

(defrelation Quaternary-Predicate
             (Name-In-Cyc Quaternary-Predicate "#$QuaternaryPredicate")
             (Collection Quaternary-Predicate)
             (Relationship-Type Quaternary-Predicate)
             (Subclass-Of Quaternary-Predicate Predicate)
             (Set-Or-Collection Quaternary-Predicate)
             (Arity Quaternary-Predicate 1)
             (Documentation Quaternary-Predicate
              "Quaternary-Predicate is the collection of all Cyc predicates which take four arguments."))

(defrelation Currency
             (Group-Fn Currency |(GROUP-FN CURRENCY)|)
             (Name-In-Cyc Currency "#$Currency")
             (Money-Tender-Type Currency)
             (Subclass-Of Currency Portable-Object)
             (Subclass-Of Currency Information-Bearing-Object)
             (Subclass-Of Currency Tender-Object)
             (Subclass-Of Currency Visual-Information-Source)
             (Set-Or-Collection Currency)
             (Arity Currency 1)
             (Documentation Currency
              "A collection of physical objects.  An instance of Currency is a physical object generally accepted as legal tender (i.e., not checks or credit cards) and used as a means of transferring a quantity of Money between some elements of Agent.  Elements of Currency may be coins, items of precious metal, paper bills for which precious objects are payable by a government to the bearer on demand, or unbacked paper bills required by a government to be accepted for payment of debts.  Elements of Currency are typically backed by and issued by national governments.
Note: This collection includes all instances of legal tender, worldwide and historically.  But, for better or worse, the notion of legal tender is context-dependent.  Normally what counts as currency is relative to the country one is in; legal tender in the United States is not the same as legal tender in China.  (Though US dollars may have excellent value on the black market.)  What counts as legal tender depends on historical events as well, since a government may change, withdraw, or cancel some types of currency it previously authorized.  Also, conquest of one country by another usually brings about the collapse of the loser's currency.  A Confederate ten dollar bill, e.g., is not an element of Currency in the context of twentieth century Alabama, even though it belongs to Currency in a different context."))

(defrelation Movement-Periodic
             (Name-In-Cyc Movement-Periodic "#$Movement-Periodic")
             (Temporal-Stuff-Type Movement-Periodic)
             (Subclass-Of Movement-Periodic Movement-Event)
             (Set-Or-Collection Movement-Periodic)
             (Arity Movement-Periodic 1)
             (Documentation Movement-Periodic
              "A collection of events, and a subset of Movement-Event.  An element of this collection is an Event in which the Object-Moving returns repeatedly to a certain location or orientation at more or less regular time intervals.  E.g., the motion of a seesaw one afternoon; the dribbling of a basketball in place by Magic Johnson; the motion of a slinky going down a staircase as it periodically changes its orientation through a fixed, repetive series of orientations."))

(defrelation Named-Roadway
             (Name-In-Cyc Named-Roadway "#$NamedRoadway")
             (Existing-Object-Type Named-Roadway)
             (Subclass-Of Named-Roadway Street-Generic)
             (Set-Or-Collection Named-Roadway)
             (Arity Named-Roadway 1)
             (Documentation Named-Roadway
              "The collection of named parts (stretches or segments) of roadways.  (Not roadway the stuff.)  Instances are named pieces of roadways (or highways or streets) which have names and lengths, and (usually) intersect with other roads. "))

(defrelation Female-Animal
             (Synonymous-External-Concept Female-Animal Sensus-Information1997
              "FEMALE-ANIMAL")
             (Name-In-Cyc Female-Animal "#$FemaleAnimal")
             (Organism-Classification-Type Female-Animal)
             (Subclass-Of Female-Animal Animal)
             (Set-Or-Collection Female-Animal)
             (Arity Female-Animal 1)
             (Documentation Female-Animal
              "The collection of all female animals."))

(defrelation Human-Child
             (Name-In-Cyc Human-Child "#$HumanChild")
             (Existing-Object-Type Human-Child)
             (Subclass-Of Human-Child |(JUVENILE-FN PERSON)|)
             (Set-Or-Collection Human-Child)
             (Arity Human-Child 1)
             (Documentation Human-Child
              "The collection of all Persons in the childhood stage of life.  Functionally, this ends when the child begins to take responsibility for themselves, work, have children of their own,... or, at latest, when the person's age greatly exceeds that at which most people reach those milestones.  Generally, this means that it spans the period from birth to teenage years.   This is highly dependent on context, of course; childhood in Shakespeare's culture ended around age 12."))

(defrelation Knowledge-Base
             (Name-In-Cyc Knowledge-Base "#$KnowledgeBase")
             (Object-Type Knowledge-Base)
             (Subclass-Of Knowledge-Base Database-Abstract-Content)
             (Subclass-Of Knowledge-Base Conventional-Classification-System)
             (Set-Or-Collection Knowledge-Base)
             (Arity Knowledge-Base 1)
             (Documentation Knowledge-Base
              "A collection of intangible individuals;
a subset of Database-Abstract-Content. Each element
of Knowledge-Base is a database that attempts to
represent the structure of at least part of the world.
Instances include Cyc and SENSUS-Information1997."))

(defrelation Sports-Event
             (Name-In-Cyc Sports-Event "#$SportsEvent")
             (Temporal-Object-Type Sports-Event)
             (Default-Disjoint-Script-Type Sports-Event)
             (Subclass-Of Sports-Event Athletic-Activity)
             (Set-Or-Collection Sports-Event)
             (Arity Sports-Event 1)
             (Documentation Sports-Event
              "The collection of individual sports events, such as a single game of baseball, an individual 100M race, etc.  An entire sandlot baseball game would be a Sports-Event, but one inning wouldn't be.  A double-header could be viewed as a single Sports-Event, though, even though each half of it was also a Sports-Event.  Several Sports-Events can be organized into a Sports-Formal-Competition.  One single double-header evening of baseball would not be a Sports-Formal-Competition, nor one single tennis match, etc.  
note:  The collection Sports-Event does not include every Athletic-Activity; e.g., Rocky training for his boxing match, a group of kids racing to the bus stop, a person skiing for pleasure, etc. are not instances of Sports-Event."))

(defrelation Sensory-Attribute
             (Name-In-Cyc Sensory-Attribute "#$SensoryAttribute")
             (Unordered-Attribute-Type Sensory-Attribute)
             (Subclass-Of Sensory-Attribute
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "SENSE-AND-MEASURE-QUALITY")|)
             (Subclass-Of Sensory-Attribute Attribute-Value)
             (Set-Or-Collection Sensory-Attribute)
             (Arity Sensory-Attribute 1)
             (Documentation Sensory-Attribute
              "A collection of attributes.  Each element of Sensory-Attribute is a sensory datum detectable by sentient beings.  Sensory-Attribute includes colors, odors, tastes, sounds, and feels, as well as the various feelings represented by its subset Internal-Sensory-Attribute.  Examples of Sensory-Attribute: Rough, Smooth, Slimy, Golden-Color, Very-Bright-Light-Intensity, (High-Amount-Fn Noise-Level-Attribute)."))

(defrelation |(THE-PARTITION ARTIFACT INANIMATE-THING-NATURAL)|
             (Skolem-Object |(THE-PARTITION ARTIFACT INANIMATE-THING-NATURAL)|)
             (Disjoint-Set-Or-Collection
              |(THE-PARTITION ARTIFACT INANIMATE-THING-NATURAL)|)
             (Set-Mathematical
              |(THE-PARTITION ARTIFACT INANIMATE-THING-NATURAL)|)
             (Subclass-Of |(THE-PARTITION ARTIFACT INANIMATE-THING-NATURAL)|
              Thing)
             (Set-Or-Collection
              |(THE-PARTITION ARTIFACT INANIMATE-THING-NATURAL)|)
             (Arity |(THE-PARTITION ARTIFACT INANIMATE-THING-NATURAL)| 1))

(defrelation Renting
             (Name-In-Cyc Renting "#$Renting")
             (Default-Disjoint-Script-Type Renting)
             (Temporal-Object-Type Renting)
             (Subclass-Of Renting Money-Transaction)
             (Subclass-Of Renting Temporary-Change-Of-User-Rights)
             (Subclass-Of Renting Transferring-Possession)
             (Subclass-Of Renting Making-Something-Available)
             (Subclass-Of Renting Commercial-Activity)
             (Subclass-Of Renting Monetary-Exchange-Of-User-Rights)
             (Subclass-Of Renting Purposeful-Action)
             (Set-Or-Collection Renting)
             (Arity Renting 1)
             (Documentation Renting
              "A collection of events; a subset of Monetary-Exchange-Of-User-Rights (among other supersets).  Each element of Renting is an event during which one agent grants to another agent the use of an object (owned or controlled by the first agent) in exchange for some remuneration.  The schedule of payment may vary, depending upon the rental period, type of object involved, type of usage granted, and/or other considerations.  The agent providing the object to rent is called the From-Possessor; the agent paying to use the object is called the To-Possessor.  Those agents enter into an Agreement (q.v.).  Examples of Renting might include:  Fred renting a particular apartment last year; Jane renting a car all this week; Jack renting a canoe on Saturday morning. See also Primary-Role-Use-Rights."))

(defrelation Product-Standard
             (Name-In-Cyc Product-Standard "#$ProductStandard")
             (Object-Type Product-Standard)
             (Subclass-Of Product-Standard Propositional-Information-Thing)
             (Subclass-Of Product-Standard Intangible-Existing-Thing)
             (Set-Or-Collection Product-Standard)
             (Arity Product-Standard 1)
             (Documentation Product-Standard
              "A collection of specifications.  Each element of Product-Standard is a precise description applied to the instances of a particular Product-Type.  Manufacturers of that product type agree explicitly or in practice, or they may obey a government requirement, to make product designs following the specifications stated in the standard, so that products within the type will all have certain features in common.  For example, telephones and television sets fulfil certain product standards.  The resultant interchangeability allows compatibility with other devices and products, with public utilities, commercial trading expectations, governement purchasing requirements, etc."))

(defrelation Male-Person
             (Synonymous-External-Concept Male-Person Sensus-Information1997
              "MALE")
             (Name-In-Cyc Male-Person "#$MalePerson")
             (Existing-Object-Type Male-Person)
             (Subclass-Of Male-Person Male-Animal)
             (Subclass-Of Male-Person Person)
             (Set-Or-Collection Male-Person)
             (Arity Male-Person 1)
             (Documentation Male-Person "The collection of all male persons."))

(defrelation Starts-Relative-To-Start-Of
             (Nth-Domain Starts-Relative-To-Start-Of 1 Temporal-Thing)
             (Nth-Domain Starts-Relative-To-Start-Of 2 Time-Quantity)
             (Nth-Domain Starts-Relative-To-Start-Of 3 Temporal-Thing)
             (Name-In-Cyc Starts-Relative-To-Start-Of
              "#$startsRelativeToStartOf")
             (Ternary-Predicate Starts-Relative-To-Start-Of)
             (Relation Starts-Relative-To-Start-Of)
             (Arity Starts-Relative-To-Start-Of 3)
             (Documentation Starts-Relative-To-Start-Of
              " (Starts-Relative-To-Start-Of ?X ?D ?Y) means that ?X starts duration ?D after ?Y starts.  That is, the Starting-Point of ?X is after the Starting-Point of ?Y, by an amount of time ?D."))

(defobject |(MEDIUM-AMOUNT-FN FLAMMABILITY)|
   (Scalar-Interval |(MEDIUM-AMOUNT-FN FLAMMABILITY)|)
   (Flammability |(MEDIUM-AMOUNT-FN FLAMMABILITY)|)
   (Skolem-Object |(MEDIUM-AMOUNT-FN FLAMMABILITY)|))

(defrelation Clothing-Outfit
             (Name-In-Cyc Clothing-Outfit "#$ClothingOutfit")
             (Existing-Object-Type Clothing-Outfit)
             (Product-Type Clothing-Outfit)
             (Subclass-Of Clothing-Outfit Sheet-Of-Some-Stuff)
             (Subclass-Of Clothing-Outfit Something-To-Wear)
             (Subclass-Of Clothing-Outfit Group)
             (Set-Or-Collection Clothing-Outfit)
             (Arity Clothing-Outfit 1)
             (Documentation Clothing-Outfit
              "A collection of objects.  Every element of Clothing-Outfit is a group of `coordinated' items that are intended to be worn together; e.g., an instance of Three-Piece-Suit, consisting of one suit jacket, one vest, and one pair of long pants.  Clothing outfits are often sold or provided together as a set; e.g., military uniforms, business suits, scuba gear.  A clothing outfit may include some accessories, as well as garments.  Cf. Clothing-Item."))

(defobject Transparent
   (Transparency Transparent)
   (Name-In-Cyc Transparent "#$Transparent")
   (Documentation Transparent
    "Transparent is a Physical-Attribute representing a specific degree of Transparency.  Transparent objects transmit enough light to see clear images.  See also Transparency-Of-Object."))

(defrelation Measuring-Device
             (Name-In-Cyc Measuring-Device "#$MeasuringDevice")
             (Existing-Object-Type Measuring-Device)
             (Subclass-Of Measuring-Device Physical-Device)
             (Set-Or-Collection Measuring-Device)
             (Arity Measuring-Device 1)
             (Documentation Measuring-Device
              "A collection of physical devices.  An instance of Measuring-Device is a device used for measuring some quantity such as Distance, Volume, Temperature, etc.  Examples include the odometer in your car (an Odometer), the graduated glass measuring cup in your kitchen (a Measuring-Cup), and the thermostat on your wall (a Temperature-Measuring-Device, although it is also a Control-Device.)"))

(defrelation Single-Doer-Action
             (Name-In-Cyc Single-Doer-Action "#$SingleDoerAction")
             (Script-Type Single-Doer-Action)
             (Subclass-Of Single-Doer-Action Action)
             (Set-Or-Collection Single-Doer-Action)
             (Arity Single-Doer-Action 1)
             (Documentation Single-Doer-Action
              "A collection of actions.  Each element of Single-Doer-Action is an action which can have only one `doer' (i.e., only one agent `doing' it).  Such events may be intentional or not.  Most bodily functions belong to subsets of this collection, because the only agent of a normal bodily function is the agent whose body it is  (e.g., Heartbeating, Bleeding).  For a type of action to be a subset of Single-Doer-Action, it must be inconsistent to assert, for any member of the subset, both (Done-By ACT X) and (Done-By ACT Y), where X and Y are different.  In contrast, Carrying-While-Locomoting is NOT a subset of Single-Doer-Action.  For, although an action of that kind might often be done by only one performer, it is also common for two or more people to cooperate in carrying something."))

(defrelation Research-Organization
             (Name-In-Cyc Research-Organization "#$ResearchOrganization")
             (Existing-Object-Type Research-Organization)
             (Subclass-Of Research-Organization Organization)
             (Set-Or-Collection Research-Organization)
             (Arity Research-Organization 1)
             (Documentation Research-Organization
              "A collection of organizations.  An element of Research-Organization is an organization that carries out basic or applied research as its Main-Function (or one of its Main-Functions).  It may or may not be a commercial, or a governmental, organization.  For example, United-States-Space-Program, Thomas J. Watson Research Laboratory at IBM-Inc, and the Hoover Institute."))

(defrelation Posture
             (Name-In-Cyc Posture "#$Posture")
             (Sibling-Disjoint-Attribute-Type Posture)
             (Unordered-Attribute-Type Posture)
             (Subclass-Of Posture Body-Part-Position)
             (Subclass-Of Posture Animal-Physiological-Attribute)
             (Set-Or-Collection Posture)
             (Arity Posture 1)
             (Documentation Posture
              "The collection of postures, which are types of attributes that describe bodily configurations and/or orientations of Animals.  Some Postures are: Upright-Posture, Kneeling-Posture, Lying-On-Back-Posture, Prone-Posture, Leaning-On-Knuckles-Posture, Forward-Flying-Posture."))

(defrelation Competition
             (Name-In-Cyc Competition "#$Competition")
             (Script-Type Competition)
             (Temporal-Object-Type Competition)
             (Subclass-Of Competition Purposeful-Action)
             (Subclass-Of Competition Social-Occurrence)
             (Set-Or-Collection Competition)
             (Arity Competition 1)
             (Documentation Competition
              "The collection of situations in which one or more Agents are striving to be the sole exemplar of some high value judgement, or the highest value along some comparative or metric scale.  Arm wrestling, football, fighting for prey, competitive courting, racing, rodeo events, etc. are examples.  See also Competition-Expr.
Note: `striving' may be a bit of overstatement, as sometimes the competitors may even be unaware that a competition has been going on until after it is over, such as the first year a `Best Restaurant in Austin' award is given out."))

(defrelation |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "SET")|
             (Skolem-Object
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "SET")|)
             (Collection |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "SET")|)
             (Subclass-Of |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "SET")|
              Thing)
             (Set-Or-Collection
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "SET")|)
             (Arity |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "SET")| 1))

(defrelation Flowery-Plant
             (Name-In-Cyc Flowery-Plant "#$FloweryPlant")
             (Existing-Object-Type Flowery-Plant)
             (Subclass-Of Flowery-Plant Flowering-Plant)
             (Set-Or-Collection Flowery-Plant)
             (Arity Flowery-Plant 1)
             (Documentation Flowery-Plant
              "A collection of plants.  Each element of Flowery-Plant is a flowering plant that is actually and visibly in flower (i.e., has flowers showing).  The collection Flowery-Plant includes flowering bushes and trees with visible flowers.  This collection represents a commonsense category, not the official Biological-Taxon Flowering-Plant."))

(defrelation Electro-Magnetic-Radiation-Sensor
             (Name-In-Cyc Electro-Magnetic-Radiation-Sensor
              "#$ElectroMagneticRadiationSensor")
             (Existing-Object-Type Electro-Magnetic-Radiation-Sensor)
             (Subclass-Of Electro-Magnetic-Radiation-Sensor Sensor)
             (Set-Or-Collection Electro-Magnetic-Radiation-Sensor)
             (Arity Electro-Magnetic-Radiation-Sensor 1)
             (Documentation Electro-Magnetic-Radiation-Sensor
              "A subset of Sensor, namely those sensors that detect Electromagnetic-Radiation."))

(defrelation Scientific-Field-Of-Study
             (Name-In-Cyc Scientific-Field-Of-Study "#$ScientificFieldOfStudy")
             (Object-Type Scientific-Field-Of-Study)
             (Subclass-Of Scientific-Field-Of-Study Field-Of-Study)
             (Set-Or-Collection Scientific-Field-Of-Study)
             (Arity Scientific-Field-Of-Study 1)
             (Documentation Scientific-Field-Of-Study
              "A collection of fields of study.  Each element of Scientific-Field-Of-Study is a specialized body of knowledge, theory, hypothesis, observations, and problems, which are the propositional contents of the systematic endeavor to explain the natural world by rational (and frequently, quantifiable) methods, including induction, falsifiable hypotheses tested by repeatable physical experiments, and deductive proof.  Scientific-Field-Of-Study includes the traditional hard sciences (e.g., Physics, Chemistry), the life sciences (e.g., Biology, Genetics, Toxicology), and Mathematics."))

(defrelation Self-Powered-Device
             (Name-In-Cyc Self-Powered-Device "#$SelfPoweredDevice")
             (Existing-Object-Type Self-Powered-Device)
             (Subclass-Of Self-Powered-Device Mechanical-Device)
             (Subclass-Of Self-Powered-Device Powered-Device)
             (Set-Or-Collection Self-Powered-Device)
             (Arity Self-Powered-Device 1)
             (Documentation Self-Powered-Device
              "A collection of Mechanical-Devices, classified by the main way of supplying the force needed to operate them.  Self-Powered-Device is a subset of Powered-Device.  An instance of Self-Powered-Device has an `on-board' part which converts some kind of potential energy into force.  That may be a battery and motor to convert electricity stored in the battery into kinetic energy (as in a cordless electric drill); other examples are the elements of Automobile, which (typically) convert gasoline and battery power to get the energy to move the vehicle.  Some muscle power is involved in operating both a cordless drill and an automobile, but not the main part of the power, in either case.  Negative exemplars of a Self-Powered-Device include a Bicycle (powered by the person that rides it) a Cable Car (pulled along by cabled embedded in the street) and subway train (often powered by an electrified `third rail')."))

(defrelation Single-Residence-Unit
             (Name-In-Cyc Single-Residence-Unit "#$SingleResidenceUnit")
             (Product-Type Single-Residence-Unit)
             (Existing-Object-Type Single-Residence-Unit)
             (Subclass-Of Single-Residence-Unit Modern-Human-Residence)
             (Set-Or-Collection Single-Residence-Unit)
             (Arity Single-Residence-Unit 1)
             (Documentation Single-Residence-Unit
              "A collection of human residences.  Each element of Single-Residence-Unit is either a modern-style detached house, an apartment, or another instance of Modern-Human-Residence designed to accomodate either a single person or a single family (i.e., instance of Family-Cohabitation-Unit).  Usually, each element of Single-Residence-Unit has a unique mailing address."))

(defrelation Cyc-El-Variable
             (Name-In-Cyc Cyc-El-Variable "#$CycELVariable")
             (Object-Type Cyc-El-Variable)
             (Collection Cyc-El-Variable)
             (Subclass-Of Cyc-El-Variable Cyc-System-Variable)
             (Subclass-Of Cyc-El-Variable Cyc-System-Symbol)
             (Set-Or-Collection Cyc-El-Variable)
             (Arity Cyc-El-Variable 1)
             (Documentation Cyc-El-Variable
              "The collection of variables that appear in elements of Cyc-Expression.  Strings used for elements of Cyc-EL-Variable must begin with the character `?'; e.g., ?X, ?AGENT, ?PROP."))

(defrelation Sensor
             (Name-In-Cyc Sensor "#$Sensor")
             (Existing-Object-Type Sensor)
             (Subclass-Of Sensor Tangible-Thing)
             (Set-Or-Collection Sensor)
             (Arity Sensor 1)
             (Documentation Sensor
              "The collection of devices, biological or artificial, that gather information.  
Note:  If a well-known named part of such an entity does the data-gathering, then generally only those parts are considered sensors, not the whole entity.  E.g., even though a person gathers information, we generally do not consider them to be a sensor, but rather the sensors are their eyes, ears, skin, etc.  In a context such as an ophthalmology convention, `well-known part' has a different binding, and they would consider just certain parts of the eye to be sensors."))

(defrelation Brain
             (Name-In-Cyc Brain "#$Brain")
             (Animal-Body-Part-Type Brain)
             (Unique-Anatomical-Part-Type Brain)
             (Subclass-Of Brain Organ)
             (Set-Or-Collection Brain)
             (Arity Brain 1)
             (Documentation Brain
              "The collection of all Animal brains.  An individual Brain is an Organ which controls most bodily movement, recieves sensory input from the body and objects outside the body, and in which the mind operates, being the locus for all Mental-Objects."))

(defobject |(VERY-HIGH-AMOUNT-FN FRAGILITY)|
   (Scalar-Interval |(VERY-HIGH-AMOUNT-FN FRAGILITY)|)
   (Fragility |(VERY-HIGH-AMOUNT-FN FRAGILITY)|)
   (Skolem-Object |(VERY-HIGH-AMOUNT-FN FRAGILITY)|))

(defrelation Account
             (Name-In-Cyc Account "#$Account")
             (Account-Type Account)
             (Subclass-Of Account Authorized-Agreement)
             (Subclass-Of Account Legal-Agreement)
             (Set-Or-Collection Account)
             (Arity Account 1)
             (Documentation Account
              "A collection of objects; a subset of Legal-Agreement.  Each element of Account is a recorded obligation (of some particular type) between specified parties, consisting of `funds' which typically can be added to and drawn upon.  Examples include the instances of Retirement-Account, Travel-Expense-Account, and of the many types of Financial-Account.  Note that the contents of an account need not be monetary; for example, the contents may be amounts of time, as in the subsets Vacation-Account or a Sick-Leave-Account.  Account does NOT include debt obligations of fixed face value that cannot be increased or reduced (such as a bond)."))

(defrelation Season-Of-Year
             (Name-In-Cyc Season-Of-Year "#$SeasonOfYear")
             (Temporal-Object-Type Season-Of-Year)
             (Subclass-Of Season-Of-Year Weather-Event)
             (Set-Or-Collection Season-Of-Year)
             (Arity Season-Of-Year 1)
             (Documentation Season-Of-Year
              "A collection of events -- specifically, the seasons that occur as Sub-Events of an Annual-Climate-Cycle.  For example, the elements of Winter-Season are all instances of Season-Of-Year."))

(defrelation Gen-Mass-Noun
             (Nth-Domain Gen-Mass-Noun 1 Reifiable-Term)
             (Name-In-Cyc Gen-Mass-Noun "#$genMassNoun")
             (Unary-Predicate Gen-Mass-Noun)
             (Relation Gen-Mass-Noun)
             (Set-Or-Collection Gen-Mass-Noun)
             (Arity Gen-Mass-Noun 1)
             (Documentation Gen-Mass-Noun
              "This predicate is a flag to indicate when a given constant should be treated as a mass noun in English paraphrases.  See also Pretty-Name."))

(defrelation Leap-Year
             (Name-In-Cyc Leap-Year "#$LeapYear")
             (Temporal-Object-Type Leap-Year)
             (Subclass-Of Leap-Year Calendar-Year)
             (Set-Or-Collection Leap-Year)
             (Arity Leap-Year 1)
             (Documentation Leap-Year
              "The collection of Calendar-Years which are leap years; i.e., calendar years in which February has 29 days"))

(defrelation Creation-Event
             (The-Covering Creation-Event Destruction-Event
              |(THE-COVERING CREATION-EVENT DESTRUCTION-EVENT)|)
             (Name-In-Cyc Creation-Event "#$CreationEvent")
             (Temporal-Object-Type Creation-Event)
             (Script-Type Creation-Event)
             (Subclass-Of Creation-Event Action)
             (Subclass-Of Creation-Event Creation-Or-Destruction-Event)
             (Set-Or-Collection Creation-Event)
             (Arity Creation-Event 1)
             (Documentation Creation-Event
              "A collection of events.  In each element of Creation-Event, at least one instance of Entity (the Outputs-Created) is brought into existence."))

(defrelation Transportation-Device
             (Transport-Via-Fn Transportation-Device
              |(TRANSPORT-VIA-FN TRANSPORTATION-DEVICE)|)
             (Name-In-Cyc Transportation-Device "#$TransportationDevice")
             (Existing-Object-Type Transportation-Device)
             (Subclass-Of Transportation-Device Conveyance)
             (Set-Or-Collection Transportation-Device)
             (Arity Transportation-Device 1)
             (Documentation Transportation-Device
              "A collection of transportation devices; a subset of Conveyance.  Each element of Transportation-Device is an artifact designed to play the role of Transporter in transportation events.  Such devices enable something to be moved, by (for example) carrying, pulling, or pushing the transported things (Transportees).  Transportation devices may or may not have their own power source (see Self-Powered-Device).  Those which do, such as automobiles and speedboats, constitute the specialization Transportation-Device-Vehicle.  Other transportation devices require an external motive force, e.g., instances of Wheelbarrow or Bicycle.  (For more examples, see Muscle-Powered-Device.)  Because Transporter and Transportees are specializations of Object-Moving, it follows that any object in the role of Transporter moves as a whole with those objects playing the role of Transportees.  Since any instance of Transportation-Device has playing the role of Transporter as its intendend function, stationary objects which cause motion, such as conveyor belts, escalators, rocket launchers, slingshots, etc. are excluded from the category of Transportation-Device.  Also excluded are devices which, although they facilitate travel, are worn rather than 'ridden on', 'ridden with', or 'ridden in'.  Ice skates, shoes, skis and other specializations of Wearable-Conveyance fit this exclusionary criterion. 
Note that this is not the collection of all objects that can be used as transporters. For example, in an event of a man riding on a horse, the horse is the transporter but not an instance of Transportation-Device since a horse is not an artifact. So the main difference between transporters and transportation devices is that the latter have to be artifacts while the former do not."))

(defrelation Executive
             (Name-In-Cyc Executive "#$Executive")
             (Occupation-Type Executive)
             (Subclass-Of Executive Professional)
             (Subclass-Of Executive Leader)
             (Set-Or-Collection Executive)
             (Arity Executive 1)
             (Documentation Executive
              "A collection of people.  An instance of Executive is a person who holds an executive managerial positions in some Organization.  Among the members of Executive are top managers of organizations, including corporate officers (Company-President, etc.), Chiefs of Staff, Generals, Admirals and others like Chief Corporate Counsel, Managing Partner, Producer, Chief Scientist, Chief Engineer, as well as other upper and upper-middle managers."))

(defrelation Represents-Agent-In-Event
             (Nth-Domain Represents-Agent-In-Event 1 Agent)
             (Nth-Domain Represents-Agent-In-Event 2 Agent)
             (Nth-Domain Represents-Agent-In-Event 3 Temporal-Thing)
             (Name-In-Cyc Represents-Agent-In-Event "#$representsAgentInEvent")
             (Ternary-Predicate Represents-Agent-In-Event)
             (Relation Represents-Agent-In-Event)
             (Arity Represents-Agent-In-Event 3)
             (Documentation Represents-Agent-In-Event
              "ARG1 represents ARG2 in the event ARG3.  ARG2 often has multiple entries, when ARG1 is appointed to represent the group's interests."))

(defrelation Modern-Human-Residence
             (Name-In-Cyc Modern-Human-Residence "#$ModernHumanResidence")
             (Product-Type Modern-Human-Residence)
             (Existing-Object-Type Modern-Human-Residence)
             (Subclass-Of Modern-Human-Residence Human-Residence)
             (Subclass-Of Modern-Human-Residence Modern-Shelter-Construction)
             (Set-Or-Collection Modern-Human-Residence)
             (Arity Modern-Human-Residence 1)
             (Documentation Modern-Human-Residence
              "A collection of objects; a subset of both Human-Residence and Modern-Shelter-Construction.  Each element of Modern-Human-Residence is a humanly constructed shelter of a modern type, in which people live.  Such residences are the typical dwellings in the developed world of the late 20th century and may be found in the more affluent regions of the developing world.  Examples include houses in suburban `developments', modern apartment buildings, `modular' homes, etc."))

(defobject North-West-Generally
   (Geographical-Direction North-West-Generally)
   (Name-In-Cyc North-West-Generally "#$NorthWest-Generally")
   (Documentation North-West-Generally
    "The general direction of NorthWest.  The Vector-Interval comprising the cone-shaped set of vectors pointing (from some reference point) within approximately forty-five degrees of pointing in the same direction as North-West-Directly."))

(defrelation Travel-Time
             (Nth-Domain Travel-Time 1 Spatial-Thing)
             (Nth-Domain Travel-Time 2 Spatial-Thing)
             (Nth-Domain Travel-Time 3 Script-Type)
             (Nth-Domain Travel-Time 4 Time-Quantity)
             (Nth-Domain-Subclass-Of Travel-Time 3 Movement-Translation-Event)
             (Name-In-Cyc Travel-Time "#$travelTime")
             (Quaternary-Predicate Travel-Time)
             (Relation Travel-Time)
             (Arity Travel-Time 4)
             (Documentation Travel-Time
              "(Travel-Time OBJ1 OBJ2 MOVEMENT) means how long it would usually take the transported object to get from OBJ1 to OBJ2 in an event of type MOVEMENT."))

(defrelation Positive-Vested-Interest
             (not (Transitive-Binary-Predicate Positive-Vested-Interest))
             (not (Symmetric-Binary-Predicate Positive-Vested-Interest))
             (not (Anti-Symmetric-Binary-Predicate Positive-Vested-Interest))
             (not (Asymmetric-Binary-Predicate Positive-Vested-Interest))
             (not (Reflexive-Binary-Predicate Positive-Vested-Interest))
             (not (Irreflexive-Binary-Predicate Positive-Vested-Interest))
             (Domain Positive-Vested-Interest Agent)
             (Range Positive-Vested-Interest Temporal-Thing)
             (Name-In-Cyc Positive-Vested-Interest "#$positiveVestedInterest")
             (Slot Positive-Vested-Interest)
             (Relation Positive-Vested-Interest)
             (Arity Positive-Vested-Interest 2)
             (Binary-Relation Positive-Vested-Interest)
             (Documentation Positive-Vested-Interest
              "(Positive-Vested-Interest AGT OBJ) means Agent AGT has a positive interest in the object OBJ or in the good fortune of OBJ.  Generally, AGT will be helped or pleased by the preservation or enhancement of OBJ.
Note:  the restriction of OBJ to Temporal-Thing means that it would be incorrect to use this predicate to say that Douglas Adams has a Positive-Vested-Interest in the number 42.  Rather, what he has a vested interest in is public popularity and faddism focusing on that number.  A fad is a Temporal-Thing, but the number 42 isn't."))

(defobject |(VERY-LOW-AMOUNT-FN TENSILE-STRENGTH)|
   (Scalar-Interval |(VERY-LOW-AMOUNT-FN TENSILE-STRENGTH)|)
   (Tensile-Strength |(VERY-LOW-AMOUNT-FN TENSILE-STRENGTH)|)
   (Skolem-Object |(VERY-LOW-AMOUNT-FN TENSILE-STRENGTH)|))

(defrelation Connector
             (Name-In-Cyc Connector "#$Connector")
             (Existing-Object-Type Connector)
             (Subclass-Of Connector Non-Powered-Device)
             (Set-Or-Collection Connector)
             (Arity Connector 1)
             (Documentation Connector
              "A collection of physical devices.  An instance of Connector is a device which connects two objects.  A connector (or part of it) may be a part incorporated into one or both of the objects connected, or a connector may be a totally separate device.  Examples include elements of the collections Button-The-Fastener, Staple, Nail, and many more."))

(defrelation Household-Appliance
             (Name-In-Cyc Household-Appliance "#$HouseholdAppliance")
             (Existing-Object-Type Household-Appliance)
             (Subclass-Of Household-Appliance Mechanical-Device)
             (Subclass-Of Household-Appliance Powered-Device)
             (Subclass-Of Household-Appliance Hoc-Object)
             (Set-Or-Collection Household-Appliance)
             (Arity Household-Appliance 1)
             (Documentation Household-Appliance
              "A collection of devices, a subset of Mechanical-Device. It includes those mechanical devices typically found inside a Human-Residence.  An instance of Household-Appliance is a device used in one of the tasks typically carried on in a home, such as food preparation, food storage, laundry, household cleaning, personal cleaning, cooling or heating the house for comfort, etc.  Examples include elements of the collections Oven, Refrigerator, Clothes-Dryer,  Vacuum-Cleaner, Hot-Water-Heater, Furnace.  Note that a bed, which naively is thought of as having no moving parts, is not a mechanical device, and hence not a Household-Appliance --- the same is true for most chairs, tables, sofas, and other articles of furniture."))

(defrelation Ovum
             (Name-In-Cyc Ovum "#$Ovum")
             (Existing-Object-Type Ovum)
             (Subclass-Of Ovum Eukaryotic-Cell)
             (Set-Or-Collection Ovum)
             (Arity Ovum 1)
             (Documentation Ovum
              "A subset of Cell.  Ovum is the collection of specialized gamete cells produced by meiosis in the reproductive tract of female animals.  Each ovum usually has half the number of chromosomes that regular body cells do, and when fertilized by a spermatozoon, it becomes a zygote and continues to develop into a mature individual.  Also called 'egg'.  See also Female-Animal, Sexual-Reproduction-Event."))

(defrelation Calendar-Quarter
             (Name-In-Cyc Calendar-Quarter "#$CalendarQuarter")
             (Collection Calendar-Quarter)
             (Calendar-Covering-Type Calendar-Quarter)
             (Subclass-Of Calendar-Quarter Date)
             (Set-Or-Collection Calendar-Quarter)
             (Arity Calendar-Quarter 1)
             (Documentation Calendar-Quarter
              "The collection of calendar quarters that divide up a calendar year into four parts.  For each year, the first of its four quarters includes January, February, and March; the second includes April, May, and June, and so on."))

(defrelation Hardness
             (Very-High-Amount-Fn Hardness |(VERY-HIGH-AMOUNT-FN HARDNESS)|)
             (Low-Amount-Fn Hardness |(LOW-AMOUNT-FN HARDNESS)|)
             (Very-Low-Amount-Fn Hardness |(VERY-LOW-AMOUNT-FN HARDNESS)|)
             (Medium-Amount-Fn Hardness |(MEDIUM-AMOUNT-FN HARDNESS)|)
             (Name-In-Cyc Hardness "#$Hardness")
             (Material-Strength-Type Hardness)
             (Subclass-Of Hardness Scalar-Interval)
             (Subclass-Of Hardness Physical-Attribute)
             (Set-Or-Collection Hardness)
             (Arity Hardness 1)
             (Documentation Hardness
              "A collection of attributes; a subset of Physical-Attribute.  Each element of Hardness is an attribute describing how much pressure a tangible material can withstand before deforming or fragmenting.  Hardnesses may be characterized using a Generic-Value-Function (q.v.), or relative to certain substances, e.g., Hard-As-A-Rock.  Hardnesses of objects are reported using the predicate Hardness-Of-Object."))

(defrelation Sibling-Disjoint-Attribute-Type
             (Name-In-Cyc Sibling-Disjoint-Attribute-Type
              "#$SiblingDisjointAttributeType")
             (Sibling-Disjoint-Collection Sibling-Disjoint-Attribute-Type)
             (Subclass-Of Sibling-Disjoint-Attribute-Type Attribute-Type)
             (Subclass-Of Sibling-Disjoint-Attribute-Type Collection)
             (Set-Or-Collection Sibling-Disjoint-Attribute-Type)
             (Arity Sibling-Disjoint-Attribute-Type 1)
             (Documentation Sibling-Disjoint-Attribute-Type
              "A collection of collections.  Each element of Sibling-Disjoint-Attribute-Type is a collection of attributes.  If COL is such a collection, then nothing can have two instances of COL as attributes unless those two instances are related in a Subattribute-Of relationship to each other.  For example, Marital-Status-Of-People is an element of Sibling-Disjoint-Attribute-Type; no person can have (at the same time) the Marital-Status Married and the Marital-Status Single.  However, a person could have both the status Single and the status Divorced, if Single is a Subattribute-Of of Divorced.  See also Sibling-Disjoint-Collection."))

(defrelation Bodily-Function-Event
             (Name-In-Cyc Bodily-Function-Event "#$BodilyFunctionEvent")
             (Temporal-Stuff-Type Bodily-Function-Event)
             (Default-Disjoint-Script-Type Bodily-Function-Event)
             (Subclass-Of Bodily-Function-Event Single-Doer-Action)
             (Subclass-Of Bodily-Function-Event Physiological-Process)
             (Subclass-Of Bodily-Function-Event Animal-Activity)
             (Set-Or-Collection Bodily-Function-Event)
             (Arity Bodily-Function-Event 1)
             (Documentation Bodily-Function-Event
              "The collection of animal activities that are regular bodily functions; examples include: a particular eating event, a particular breathing event, etc."))

(defrelation Weather-Event
             (Name-In-Cyc Weather-Event "#$WeatherEvent")
             (Temporal-Object-Type Weather-Event)
             (Default-Disjoint-Script-Type Weather-Event)
             (Subclass-Of Weather-Event
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "AMBIENT-PROCESS")|)
             (Subclass-Of Weather-Event Physical-Event)
             (Set-Or-Collection Weather-Event)
             (Arity Weather-Event 1)
             (Documentation Weather-Event
              "A collection of events.  Each element of Weather-Event is a meteorological event of some duration, occurring over some spatial region.  Some weather events are almost instantaneous (e.g., elements of the collection Lightning-Event); others encompass an entire Annual-Climate-Cycle.  Spatially, weather events may cover a small locality or a large portion of a continent.  Weather events are regional weather (in the short term) and are, or partially constitute, the annual climate of a region (in the long term)."))

(defrelation Adjective
             (Name-In-Cyc Adjective "#$Adjective")
             (Linguistic-Object-Type Adjective)
             (Subclass-Of Adjective Speech-Part)
             (Set-Or-Collection Adjective)
             (Arity Adjective 1)
             (Documentation Adjective
              "The collecton of all adjectives. Adjectives are words which can modify nouns. Many adjectives have comparative and superlative forms. Example: `red'."))

(defrelation Conventional-Classification-System
             (Name-In-Cyc Conventional-Classification-System
              "#$ConventionalClassificationSystem")
             (Object-Type Conventional-Classification-System)
             (Subclass-Of Conventional-Classification-System
              Abstract-Information)
             (Set-Or-Collection Conventional-Classification-System)
             (Arity Conventional-Classification-System 1)
             (Documentation Conventional-Classification-System
              "The collection of all agreed-upon or conventional classification systems, each consisting of Conventional-Classification-Types.  In such systems, a change or reclassification is possible by a decision of an authority, or by a changed social agreement, without changing the intrinsic facts about the actual objects in the category.  (This applies only to named or known classification systems or schemas, and not to everything under the sun as might be urged by some 1990's-era postmodernist deconstructionist literary criticism theorists.)"))

(defrelation Athletic-Activity
             (Name-In-Cyc Athletic-Activity "#$AthleticActivity")
             (Script-Type Athletic-Activity)
             (Subclass-Of Athletic-Activity Exercising)
             (Set-Or-Collection Athletic-Activity)
             (Arity Athletic-Activity 1)
             (Documentation Athletic-Activity
              "Any athletic activity, not just sports events.  E.g., spelunking, or going for a jog, or shooting a few hoops."))

(defobject |(LOW-AMOUNT-FN TENSILE-STRENGTH)|
   (Scalar-Interval |(LOW-AMOUNT-FN TENSILE-STRENGTH)|)
   (Tensile-Strength |(LOW-AMOUNT-FN TENSILE-STRENGTH)|)
   (Skolem-Object |(LOW-AMOUNT-FN TENSILE-STRENGTH)|))

(deffunction Minute-Fn
   (Nth-Domain Minute-Fn 1 Non-Negative-Integer)
   (Nth-Domain Minute-Fn 2 Calendar-Hour)
   (Result-Instance-Of Minute-Fn Calendar-Minute)
   (Name-In-Cyc Minute-Fn "#$MinuteFn")
   (Individual-Denoting-Function Minute-Fn)
   (Non-Predicate-Function Minute-Fn)
   (Function Minute-Fn)
   (Arity Minute-Fn 2)
   (Function-Arity Minute-Fn 1)
   (Binary-Relation Minute-Fn)
   (Documentation Minute-Fn
    "(Minute-Fn ?M ?H) denotes a Calendar-Minute -- in particular, minute number ?M of hour ?H.  For example, (Minute-Fn 12 (Hour-Fn 18 (Day-Fn 14 (Month-Fn February (Year-Fn 1966))))) denotes 6:12pm Feb. 14th, 1966"))

(defrelation Meta-Predicate
             (Name-In-Cyc Meta-Predicate "#$MetaPredicate")
             (Predicate-Category Meta-Predicate)
             (Subclass-Of Meta-Predicate Meta-Relation)
             (Set-Or-Collection Meta-Predicate)
             (Arity Meta-Predicate 1)
             (Documentation Meta-Predicate
              "A collection of predicates. Each element of Meta-Predicate can be used to define other predicates."))

(defrelation Angle
             (Name-In-Cyc Angle "#$Angle")
             (Object-Type Angle)
             (Subclass-Of Angle Geometric-Thing)
             (Set-Or-Collection Angle)
             (Arity Angle 1)
             (Documentation Angle
              "A collection of Geometric-Things.  Each element of Angle is a pair of line segments, planes (or, more generally, n-dimensional hyperplanes) that share an endpoint, edge (or, more generally, an [n-1]-dimensional hyperedge)."))

(defrelation Government-Military-Organization
             (Name-In-Cyc Government-Military-Organization
              "#$GovernmentMilitaryOrganization")
             (Existing-Object-Type Government-Military-Organization)
             (Subclass-Of Government-Military-Organization
              Legal-Government-Organization)
             (Subclass-Of Government-Military-Organization
              Military-Organization)
             (Set-Or-Collection Government-Military-Organization)
             (Arity Government-Military-Organization 1)
             (Documentation Government-Military-Organization
              "The collection of all Military-Organizations which belong to, and are directed by, the governing body of a geographical region or international organization.  The government organization may be a national government, state or provincial government, or an international governing body such as the United-Nations-Organization.  The military forces may include armies, navies, air forces, military border patrols, coast guards, etc.  This collection excludes private armies and mercenary forces."))

(defrelation Service-Event
             (Name-In-Cyc Service-Event "#$ServiceEvent")
             (Temporal-Object-Type Service-Event)
             (Script-Type Service-Event)
             (Subclass-Of Service-Event Composite-Physical-And-Mental-Event)
             (Subclass-Of Service-Event Purposeful-Action)
             (Set-Or-Collection Service-Event)
             (Arity Service-Event 1)
             (Documentation Service-Event
              "A collection of events.  Each element of Service-Event is an event in which one agent (or set of agents) does something for another agent (or set of agents).  The former is the Provider-Of-Service; the latter is the Recipient-Of-Service.  A service event may involve maintenance, repair, or refurbishing of some object belonging to the Recipient-Of-Service (including care of his/her person); a service event may involve gathering or transmitting information, providing advice, entertainment, transportation, etc.  Service events may or may not be done for payment."))

(defobject |(MEDIUM-AMOUNT-FN SHEAR-STRENGTH)|
   (Scalar-Interval |(MEDIUM-AMOUNT-FN SHEAR-STRENGTH)|)
   (Shear-Strength |(MEDIUM-AMOUNT-FN SHEAR-STRENGTH)|)
   (Skolem-Object |(MEDIUM-AMOUNT-FN SHEAR-STRENGTH)|))

(defrelation Nucleon
             (Name-In-Cyc Nucleon "#$Nucleon")
             (Existing-Object-Type Nucleon)
             (Subclass-Of Nucleon Sub-Atomic-Particle)
             (Set-Or-Collection Nucleon)
             (Arity Nucleon 1)
             (Documentation Nucleon
              "A collection of objects; a subset of Sub-Atomic-Particle.  Each instance of Nucleon is a subatomic particle normally found in some atomic nucleus.   Nucleon has two subsets, Proton and Neutron.  Every instance of Atomic-Nucleus is composed of some number of Nucleons."))

(defrelation Calendar-Minute
             (Name-In-Cyc Calendar-Minute "#$CalendarMinute")
             (Collection Calendar-Minute)
             (Calendar-Covering-Type Calendar-Minute)
             (Subclass-Of Calendar-Minute Date)
             (Set-Or-Collection Calendar-Minute)
             (Arity Calendar-Minute 1)
             (Documentation Calendar-Minute
              "The collection of minutes that make up the calendar.  These are contiguous and disjoint time intervals, except of course for particular instances that represent exactly the same 60-second-long time interval.  See Calendar-Day.  Sixty of these partition each Calendar-Hour"))

(defrelation Non-Powered-Device
             (The-Partition Non-Powered-Device Powered-Device
              |(THE-PARTITION NON-POWERED-DEVICE POWERED-DEVICE)|)
             (Name-In-Cyc Non-Powered-Device "#$NonPoweredDevice")
             (Existing-Object-Type Non-Powered-Device)
             (Subclass-Of Non-Powered-Device Physical-Device)
             (Set-Or-Collection Non-Powered-Device)
             (Arity Non-Powered-Device 1)
             (Documentation Non-Powered-Device
              "A collection of tangible objects; a subset of Physical-Device.  An instance of Non-Powered-Device is a device which is `inert' as opposed to being powered in any way.  Non-powered devices do not need to have any kind of energy supplied to them in order to function -- not even kinetic energy supplied by a user (except perhaps to move them into place).  E.g., a coat hanger.  Once you hang a coat up on it, it does its function without any motion, without any energy being converted or used, etc.  So this collection is a much smaller collection that than consisting merely of devices which don't require fuel or electricity (e.g., a hammer).  It should be noted that an inert device need not be Stationary during use (though many are); for example, tires are inert devices in the sense that once they are placed on a vehicle they don't require any energy input to do their job, which is, in essence `hanging onto a wheel no matter what!'.  A steering wheel, on the other hand, is not a Non-Powered-Device.  Further examples of Non-Powered-Devices include a table, a floor mat, a bookshelf, an auto ramp, a bookmark, a support column, and a shirt."))

(defobject South-Generally
   (Geographical-Direction South-Generally)
   (Name-In-Cyc South-Generally "#$South-Generally")
   (Documentation South-Generally
    "The general direction of South.  The element of Vector-Interval that comprises the cone-shaped set of vectors pointing (from some reference point) within approximately forty-five degrees of pointing in the same direction as South-Directly."))

(deffunction Dollars-Per-Year
   (Args-Isa Dollars-Per-Year Real-Number)
   (Result-Instance-Of Dollars-Per-Year Monetary-Flow-Rate)
   (Result-Instance-Of Dollars-Per-Year Scalar-Interval)
   (Result-Instance-Of Dollars-Per-Year Rate)
   (Name-In-Cyc Dollars-Per-Year "#$DollarsPerYear")
   (Unit-Of-Monetary-Flow-Rate Dollars-Per-Year)
   (Unit-Of-Measure-No-Prefix Dollars-Per-Year)
   (Function Dollars-Per-Year)
   (Documentation Dollars-Per-Year
    "An element of Unit-Of-Monetary-Flow-Rate; the amount of Money in dollars earned, spent, or transferred in a year."))

(defrelation Perceiving-Slot
             (Name-In-Cyc Perceiving-Slot "#$PerceivingSlot")
             (Relationship-Type Perceiving-Slot)
             (Subclass-Of Perceiving-Slot Slot)
             (Set-Or-Collection Perceiving-Slot)
             (Arity Perceiving-Slot 1)
             (Documentation Perceiving-Slot
              "A collection of predicates.  Each element of Perceiving-Slot is a binary predicate relating a perceiver and an object or event (not a sense-datum) that s/he perceives in the mode specified by the predicate; e.g., Sees, Hears, Smells, Perceives-By-Touching, Tastes.  Assertions that use a predicate belonging to Perceiving-Slot imply that some perception event occurs during the time that the assertion holds.  See also Perceiving and its subsets."))

(defrelation Credential
             (Name-In-Cyc Credential "#$Credential")
             (Object-Type Credential)
             (Subclass-Of Credential Propositional-Information-Thing)
             (Subclass-Of Credential Abstract-Information)
             (Subclass-Of Credential Mental-Object)
             (Subclass-Of Credential Temporal-Thing)
             (Set-Or-Collection Credential)
             (Arity Credential 1)
             (Documentation Credential
              "A collection of intangible objects which consist of propositional information about an agent.  Credential is a subset of Propositional-Information-Thing (q.v.).  Each element of Credential is specific information about one agent, provided by another agent; the information content of a credential consists of favorable, enabling, or empowering propositional declarations.  As represented in Cyc, credentials are intangible information, but each element of Credential usually has some associated physical document (e.g., a diploma associated with a college degree, a driver's license).  A credential may certify that the holder (i.e., the subject of the credential) has a particular skill (e.g., legal bar certification, ability to drive); has completed certain training (e.g., GED schooling, Ph.D. requirements; is allowed to do a certain thing (e.g., travel visa, permission slip); and so on.  Recommendations are considered a kind of credential."))

(defobject North-West-Directly
   (Geographical-Direction North-West-Directly)
   (Unit-Vector-Precise North-West-Directly)
   (Name-In-Cyc North-West-Directly "#$NorthWest-Directly")
   (Documentation North-West-Directly
    "The precise Northwest direction from any geographic point other than a pole."))

(defrelation Anti-Transitive-Binary-Predicate
             (Name-In-Cyc Anti-Transitive-Binary-Predicate
              "#$AntiTransitiveBinaryPredicate")
             (Predicate-Category Anti-Transitive-Binary-Predicate)
             (Subclass-Of Anti-Transitive-Binary-Predicate Slot)
             (Subclass-Of Anti-Transitive-Binary-Predicate
              Irreflexive-Binary-Predicate)
             (Set-Or-Collection Anti-Transitive-Binary-Predicate)
             (Arity Anti-Transitive-Binary-Predicate 1)
             (Documentation Anti-Transitive-Binary-Predicate
              "A collection of predicates; the subset of :Slot whose elements represent anti-transitive relations.  A predicate F is an element of Anti-Transitive-Binary-Predicate if and only if F is a binary predicate and, for every X,Y,Z in the domain of F, (:not (:and (F X Y)(F Y Z)(F X Z))).  

Note this additional restriction: A Cyc predicate F can be an element of Anti-Transitive-Binary-Predicate only if the type (i.e., arg-Isa) constraint applicable to F's first argument is not disjoint with the type constraint applicable to F's second argument.  See also Note-On-Argument-Typing-And-Properties-Of-Relations."))

(defrelation Safeness
             (Name-In-Cyc Safeness "#$Safeness")
             (Script-Performance-Attribute-Type Safeness)
             (Subclass-Of Safeness Script-Performance-Attribute)
             (Set-Or-Collection Safeness)
             (Arity Safeness 1)
             (Documentation Safeness
              "Safeness is the Script-Performance-Attribute-Type for describing actions in which the performer acts without endangering itself or others."))

(defrelation Mob
             (Name-In-Cyc Mob "#$Mob")
             (Stuff-Type Mob)
             (Subclass-Of Mob Group)
             (Set-Or-Collection Mob)
             (Arity Mob 1)
             (Documentation Mob
              "A collection of objects; a subset of Group.  Each element of Mob is a group that contains a large number of objects or events of the same type.  Mobs typically have too many members to enumerate or reify; one rarely refers to particular mob members, or at most refers to relatively few of them.  Examples: the Andes-Mountains is a mob of mountains; each element of Galaxy is a mob of stars; a cup of sand is a mob of grains of sand; and making popcorn involves a mob of corn kernel bursting events."))

(defrelation |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "CAUSE-EFFECT")|
             (Skolem-Object
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "CAUSE-EFFECT")|)
             (Slot
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "CAUSE-EFFECT")|)
             (Relation
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "CAUSE-EFFECT")|)
             (Arity
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "CAUSE-EFFECT")| 2)
             (Binary-Relation
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "CAUSE-EFFECT")|))

(defrelation Scalar-Interval
             (Name-In-Cyc Scalar-Interval "#$ScalarInterval")
             (Object-Type Scalar-Interval)
             (Collection Scalar-Interval)
             (Subclass-Of Scalar-Interval N-Tuple-Interval)
             (Subclass-Of Scalar-Interval Attribute-Value)
             (Set-Or-Collection Scalar-Interval)
             (Arity Scalar-Interval 1)
             (Documentation Scalar-Interval
              "A collection of mathematical objects; a subset of N-Tuple-Interval.  For a measurable quantity, the ordered sequence of possible values may be thought of as a line.  Each element of Scalar-Interval is a line segment (or point) on such a line, representing a range of consecutive values.  The most common case is where the line is just the real number line, and the scalar interval is either a a contiguous set of points there (i.e., a range of numbers) or just a single point there (i.e., a number).  Another common case is where the line has some unit of measure marked off, such as meters.  In relation to the latter kind of interval, see also Unit-Of-Measure."))

(defrelation Money-Transaction
             (Name-In-Cyc Money-Transaction "#$MoneyTransaction")
             (Temporal-Object-Type Money-Transaction)
             (Default-Disjoint-Script-Type Money-Transaction)
             (Subclass-Of Money-Transaction Money-Transfer)
             (Subclass-Of Money-Transaction Commercial-Activity)
             (Subclass-Of Money-Transaction Transferring-Possession)
             (Subclass-Of Money-Transaction Transaction)
             (Set-Or-Collection Money-Transaction)
             (Arity Money-Transaction 1)
             (Documentation Money-Transaction
              "A collection of events.  Each element of Money-Transaction is an event in which a transfer of money occurs.  Thus, buying something, investing, making a donation, executing a bequest and exchanging currency, are all examples of Money-Transaction events."))

(defrelation Duration
             (Domain Duration Temporal-Thing)
             (Range Duration Time-Quantity)
             (Name-In-Cyc Duration "#$duration")
             (Interval-Based-Quantity-Slot Duration)
             (Slot Duration)
             (Relation Duration)
             (Arity Duration 2)
             (Binary-Relation Duration)
             (Documentation Duration
              "(Duration ?X ?Y) means that ?Y is length of time Temporal-Thing ?X happened/existed.  For a continuous Temporal-Thing, this is the same as its Measure (the elapsed time from start to end.)  But for a discontinuous Temporal-Thing, the Duration is strictly less than the Measure.  For example, the Duration of `the Mondays during May of 1996' is (Days-Duration 4), whereas the Measure of that same temporal object is (Days-Duration 22).
Note:  Unfortunately, in some disciplines, such as Real Analysis, these two terms' definitions are switched!  In such contexts, one could assert to Cyc that the preferred denotation of Duration was Measure-The-Word, and that the preferred denotation of Measure was Duration-The-Word, but notice that the two concepts --- Measure and Duration --- are still distinct and useful in that discipline, they just happen to have different names there."))

(defrelation Physiological-Attribute
             (Name-In-Cyc Physiological-Attribute "#$PhysiologicalAttribute")
             (Unordered-Attribute-Type Physiological-Attribute)
             (Subclass-Of Physiological-Attribute Attribute-Value)
             (Set-Or-Collection Physiological-Attribute)
             (Arity Physiological-Attribute 1)
             (Documentation Physiological-Attribute
              "The collection of attributes related to a plant or animal organism's physiological characteristics.  Some examples include Flexed, Deaf, Injured, Fertile, Swollen, Acid-Indigestion, etc."))

(defrelation State-Capital
             (Name-In-Cyc State-Capital "#$StateCapital")
             (Existing-Object-Type State-Capital)
             (Subclass-Of State-Capital Capital-City-Of-Region)
             (Subclass-Of State-Capital City)
             (Set-Or-Collection State-Capital)
             (Arity State-Capital 1)
             (Documentation State-Capital
              "A collection of cities.  Each element of State-Capital is a city that is the capital city of the geopolitical state in which it is located.  Note that this collection is for capitals of all the elements in State-Geopolitical (q.v.), not just members of the subset State-United-States.  Examples: City-Of-Juneau-AK, City-Of-Lansing-MI, City-Of-Annapolis-MD, Quebec City, Edmonton, Perth (Austr.), Xian, Guangzhou, Lahore."))

(defrelation |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "ADDRESSEE-ORIENTED-VERBAL-PROCESS")|
             (Skolem-Object
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "ADDRESSEE-ORIENTED-VERBAL-PROCESS")|)
             (Collection
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "ADDRESSEE-ORIENTED-VERBAL-PROCESS")|)
             (Script-Type
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "ADDRESSEE-ORIENTED-VERBAL-PROCESS")|)
             (Temporal-Stuff-Type
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "ADDRESSEE-ORIENTED-VERBAL-PROCESS")|)
             (Subclass-Of
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "ADDRESSEE-ORIENTED-VERBAL-PROCESS")|
              Communicating)
             (Set-Or-Collection
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "ADDRESSEE-ORIENTED-VERBAL-PROCESS")|)
             (Arity
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "ADDRESSEE-ORIENTED-VERBAL-PROCESS")|
              1))

(defrelation Virus
             (Name-In-Cyc Virus "#$Virus")
             (Organism-Classification-Type Virus)
             (Subclass-Of Virus Organism-Whole)
             (Subclass-Of Virus Biological-Living-Object)
             (Set-Or-Collection Virus)
             (Arity Virus 1)
             (Documentation Virus
              "The collection of tiny microbes called viruses, each consisting mainly of a capsid (capsule chamber) containing viral DNA or RNA.  Viruses have no cells, but reproduce by inserting into living cells the viral DNA or RNA, which then uses cellular mechanisms to create new viruses.  Viruses cause many diseases in all other organisms; some can infect elements of Bacterium.  Virus excludes prions, bacteria, rickettsia, and protists."))

(defrelation Inter-Arg-Isa3-1
             (Nth-Domain Inter-Arg-Isa3-1 1 Predicate)
             (Nth-Domain Inter-Arg-Isa3-1 2 Collection)
             (Nth-Domain Inter-Arg-Isa3-1 3 Collection)
             (Name-In-Cyc Inter-Arg-Isa3-1 "#$interArgIsa3-1")
             (Ternary-Predicate Inter-Arg-Isa3-1)
             (Relation Inter-Arg-Isa3-1)
             (Arity Inter-Arg-Isa3-1 3)
             (Documentation Inter-Arg-Isa3-1
              "(Inter-Arg-Isa3-1 PRED INDEPENDENT-ARG-COL DEPENDENT-ARG-COL) Base-KB) means that, when an instance of INDEPENDENT-ARG-COL appears as the third argument to PRED, the first argument in that assertion is constrained to be an instance of DEPENDENT-ARG-COL."))

(defrelation Feeling-Attribute
             (Name-In-Cyc Feeling-Attribute "#$FeelingAttribute")
             (Composite-Attribute-Type Feeling-Attribute)
             (Stuff-Type Feeling-Attribute)
             (Subclass-Of Feeling-Attribute Scalar-Interval)
             (Subclass-Of Feeling-Attribute Mental-Attribute)
             (Set-Or-Collection Feeling-Attribute)
             (Arity Feeling-Attribute 1)
             (Documentation Feeling-Attribute
              "The collection of attributes describing emotions and mental feelings.  An element of this set would be a particular `amount' of happiness, of confidence, of fear, etc.  Obviously there are no real `units of measure' for these quantities, but one can certainly say that the `amount' of happiness one felt at one's wedding was `more' than the happiness they felt at their college graduation ceremony, etc.  There are functions, such as Low-Amount-Fn, which take a Primitive-Attribute-Type (such as the instances of Feeling-Attribute-Type) and return as their value a certain-sized amount of that attribute-type; e.g., (Low-Amount-Fn Confidence) is an expression whose value is a low amount of confidence, and that in turn will be an element of Confidence, and also an element of Feeling-Attribute, and also an element of Attribute-Value, etc.  See especially the various subsets of Feeling-Attribute.
Note that Feeling-Attribute is NOT an element of Feeling-Attribute-Type.  Since Feeling-Attribute-Type is a subset of Primitive-Attribute-Type, any element of Feeling-Attribute-Type (such as Happiness) should have a total order among all its elements.  All the elements of Feeling-Attribute can't be placed in a total order (for example, how can we compare 'low happiness' with 'low contempt'?), so it should not be an element of Feeling-Attribute-Type."))

(defrelation Irreflexive-Binary-Predicate
             (Name-In-Cyc Irreflexive-Binary-Predicate
              "#$IrreflexiveBinaryPredicate")
             (Collection Irreflexive-Binary-Predicate)
             (Predicate-Category Irreflexive-Binary-Predicate)
             (Subclass-Of Irreflexive-Binary-Predicate Slot)
             (Set-Or-Collection Irreflexive-Binary-Predicate)
             (Arity Irreflexive-Binary-Predicate 1)
             (Documentation Irreflexive-Binary-Predicate
              "A collection of predicates; the subset of :Slot whose elements represent antireflexive relations.  A predicate F is an element of Irreflexive-Binary-Predicate if and only if F is a binary predicate and, for every X in the domain of F, (:not (F X X)).  Examples: Spouse, Causes, North-Of, Temporally-Disjoint. 
Note this additional restriction: A Cyc predicate F can be an element of Irreflexive-Binary-Predicate only if the type (i.e., arg-Isa) constraint applicable to F's first argument is not disjoint with the type constraint applicable to F's second argument.  See also Note-On-Argument-Typing-And-Properties-Of-Relations."))

(defrelation |(TRANSPORT-FN SEMI-SOLID-TANGIBLE-THING)|
             (Skolem-Object |(TRANSPORT-FN SEMI-SOLID-TANGIBLE-THING)|)
             (Script-Type |(TRANSPORT-FN SEMI-SOLID-TANGIBLE-THING)|)
             (Subclass-Of |(TRANSPORT-FN SEMI-SOLID-TANGIBLE-THING)|
              Transporting-Goods)
             (Set-Or-Collection |(TRANSPORT-FN SEMI-SOLID-TANGIBLE-THING)|)
             (Arity |(TRANSPORT-FN SEMI-SOLID-TANGIBLE-THING)| 1))

(defrelation Unit-Of-Money
             (Name-In-Cyc Unit-Of-Money "#$UnitOfMoney")
             (Interconvertible-Unit-Type Unit-Of-Money)
             (Subclass-Of Unit-Of-Money Unit-Of-Measure)
             (Set-Or-Collection Unit-Of-Money)
             (Arity Unit-Of-Money 1)
             (Documentation Unit-Of-Money
              "A collection of Cyc functions.  Dollar-United-States, Peso-Mexico, and Yen-Japan are each elements of this collection (along with functions for many other nations's monetary units).  Each of these is a function which, given real numbers as arguments, returns an instance of the collection Money (q.v.).  For example, (Dollar-United-States 5.99) denotes an element of Money whose size, or amount, is five dollars and 99 cents, expressed in the `unit of measure' US dollars; in short, (Dollar-United-States 5.99) denotes $5.99.  

Note: The monetary values associated with the members of Unit-Of-Money, and the exchange rates between them, fluctuate (sometimes widely) over very short periods of time -- daily, even hourly.  In being heavily time-dependent, Unit-Of-Money is unlike most other subsets of Unit-Of-Measure."))

(defrelation Inter-Arg-Isa3-5
             (Nth-Domain Inter-Arg-Isa3-5 1 Predicate)
             (Nth-Domain Inter-Arg-Isa3-5 2 Collection)
             (Nth-Domain Inter-Arg-Isa3-5 3 Collection)
             (Name-In-Cyc Inter-Arg-Isa3-5 "#$interArgIsa3-5")
             (Ternary-Predicate Inter-Arg-Isa3-5)
             (Relation Inter-Arg-Isa3-5)
             (Arity Inter-Arg-Isa3-5 3)
             (Documentation Inter-Arg-Isa3-5
              "(Inter-Arg-Isa3-5 PRED INDEPENDENT-ARG-COL DEPENDENT-ARG-COL) Base-KB) means that, when an instance of INDEPENDENT-ARG-COL appears as the third argument to PRED, the fifth argument in that assertion is constrained to be an instance of DEPENDENT-ARG-COL."))

(defobject Part-Time
   (Work-Status Part-Time)
   (Name-In-Cyc Part-Time "#$PartTime")
   (Documentation Part-Time
    "An attribute; an element of Work-Status.  The attribute of being a part-time worker."))

(defrelation Complex-Temporal-Relation
             (Name-In-Cyc Complex-Temporal-Relation
              "#$ComplexTemporalRelation")
             (Predicate-Category Complex-Temporal-Relation)
             (Subclass-Of Complex-Temporal-Relation Temporal-Relation)
             (Set-Or-Collection Complex-Temporal-Relation)
             (Arity Complex-Temporal-Relation 1)
             (Documentation Complex-Temporal-Relation
              "Instances of Complex-Temporal-Relation are predicates used to interrelate instances of Temporal-Thing in time.  Some of them (e.g., Starts-After-Ending-Of) make statements about the relationship of the beginning and/or end of their first argument to the beginning and/or end of their second argument.  One can think of this as an interval-based theory of time.  Some of them (e.g., Temporally-Intersects and Temporally-Subsumes) make statements about the relationship of the entire set of points that is their first argument to the entire set of points that is their second argument.  One can think of this as a set-theoretic theory of time."))

(defrelation Calendar-Year
             (Name-In-Cyc Calendar-Year "#$CalendarYear")
             (Collection Calendar-Year)
             (Calendar-Covering-Type Calendar-Year)
             (Subclass-Of Calendar-Year Date)
             (Set-Or-Collection Calendar-Year)
             (Arity Calendar-Year 1)
             (Documentation Calendar-Year
              "The collection of years that make up the calendar.  For example, The-Year1972, The-Year494BC."))

(defobject |(HIGH-AMOUNT-FN TENSILE-STRENGTH)|
   (Scalar-Interval |(HIGH-AMOUNT-FN TENSILE-STRENGTH)|)
   (Tensile-Strength |(HIGH-AMOUNT-FN TENSILE-STRENGTH)|)
   (Skolem-Object |(HIGH-AMOUNT-FN TENSILE-STRENGTH)|))

(defrelation Animal-Body-Part-Type
             (Name-In-Cyc Animal-Body-Part-Type "#$AnimalBodyPartType")
             (Sibling-Disjoint-Collection Animal-Body-Part-Type)
             (Subclass-Of Animal-Body-Part-Type Existing-Object-Type)
             (Set-Or-Collection Animal-Body-Part-Type)
             (Arity Animal-Body-Part-Type 1)
             (Documentation Animal-Body-Part-Type
              "The collection of all the types of Animal-Body-Parts.  An Animal-Body-Part-Type  is a characterization of body parts by structure and/or function.   Some elements of this collection include Spinal-Column, Eyelash, Nervous-System, Urethra, Wing-Animal-Body-Part, Heel-Of-Palm, etc.  As can be seen from those examples, Animal-Body-Part-Type is not organized along species/order/class/phylum/... taxonomic lines."))

(defrelation Marine-Corps
             (Name-In-Cyc Marine-Corps "#$MarineCorps")
             (Existing-Object-Type Marine-Corps)
             (Subclass-Of Marine-Corps Military-Organization)
             (Set-Or-Collection Marine-Corps)
             (Arity Marine-Corps 1)
             (Documentation Marine-Corps
              "A collection of military organizations.  An instance of Marine-Corps is a military organization, modern or historical, composed mainly of soldiers (i.e., combat personnel) who serve on ships or in conjunction with naval forces, with the purpose of defending or attacking coastal areas."))

(defrelation Killing-Biological
             (Name-In-Cyc Killing-Biological "#$Killing-Biological")
             (Temporal-Object-Type Killing-Biological)
             (Default-Disjoint-Script-Type Killing-Biological)
             (Subclass-Of Killing-Biological Destruction-Event)
             (Subclass-Of Killing-Biological Animal-Activity)
             (Set-Or-Collection Killing-Biological)
             (Arity Killing-Biological 1)
             (Documentation Killing-Biological
              "A collection of events.  In each instance of this collection, one living organism ends the life of another, either intentionally or unintentionally."))

(defrelation Time-Of-Day-Pm
             (Name-In-Cyc Time-Of-Day-Pm "#$TimeOfDay-PM")
             (Time-Of-Day-Type Time-Of-Day-Pm)
             (Subclass-Of Time-Of-Day-Pm Time-Of-Day)
             (Set-Or-Collection Time-Of-Day-Pm)
             (Arity Time-Of-Day-Pm 1)
             (Documentation Time-Of-Day-Pm
              "The collection of half-days from Noon to Midnight.  See Calendar-Day."))

(defobject Primary-User-Rights
   (User-Rights-Attribute Primary-User-Rights)
   (Name-In-Cyc Primary-User-Rights "#$PrimaryUserRights")
   (Documentation Primary-User-Rights
    "An attribute of an object with respect to an Agent, meaning that the agent who holds this kind of User-Rights-Attribute to an object has priority to use that object, over other agents who can also claim a right to use it.  E.g., parents have Primary-User-Rights to the family car.  Note that the attribute Primary-User-Rights makes sense only for objects to which Group-User-Rights-Attributes apply, since there must be multiple authorized users in order for priority of claims to occur."))

(defrelation Fictional-Context
             (Name-In-Cyc Fictional-Context "#$FictionalContext")
             (Microtheory-Type Fictional-Context)
             (Subclass-Of Fictional-Context Counterfactual-Context)
             (Set-Or-Collection Fictional-Context)
             (Arity Fictional-Context 1)
             (Documentation Fictional-Context
              "The collection of Counterfactual-Contexts which are (1) created intentionally, not by error or chance or gradual evolution and accretion in a culture, and (2) typically are the information content of some Information-Bearing-Thing, and (3) are not expected (by their creator) to be believed as factual, nor do their creators believe them to be factual.  In addition to asserting fictional propositions about existing things, a Fictional-Context may include terms for nonexistent things.  Examples: Lord-Of-The-Rings, Adventures-Of-Huckleberry-Finn."))

(defrelation Body-Movement-Event
             (Name-In-Cyc Body-Movement-Event "#$BodyMovementEvent")
             (Default-Disjoint-Script-Type Body-Movement-Event)
             (Temporal-Object-Type Body-Movement-Event)
             (Subclass-Of Body-Movement-Event Animal-Activity)
             (Subclass-Of Body-Movement-Event Single-Doer-Action)
             (Subclass-Of Body-Movement-Event Movement-Event)
             (Set-Or-Collection Body-Movement-Event)
             (Arity Body-Movement-Event 1)
             (Documentation Body-Movement-Event
              "The collection of activities in which an Animal agent moves a part of its own body, whether consciously and intentionally or reflexively.  Body-Movement-Event includes subsets such as Taking-A-Step, Blocking-A-Punch, Hiccoughing, and Blinking-Ones-Eyes."))

(defrelation Illumination-Mode-Attribute
             (Name-In-Cyc Illumination-Mode-Attribute
              "#$IlluminationModeAttribute")
             (Unordered-Attribute-Type Illumination-Mode-Attribute)
             (Subclass-Of Illumination-Mode-Attribute Attribute-Value)
             (Set-Or-Collection Illumination-Mode-Attribute)
             (Arity Illumination-Mode-Attribute 1)
             (Documentation Illumination-Mode-Attribute
              "A collection of attributes.  Each element of Illumination-Mode-Attribute describes something about the type of illumination falling on a region or an object.  For example, Direct-Illumination, Indirect-Illumination, Reflected-Illumination, Part-Direct-Part-Indirect."))

(defrelation User-Rights-Attribute
             (Name-In-Cyc User-Rights-Attribute "#$UserRightsAttribute")
             (Unordered-Attribute-Type User-Rights-Attribute)
             (Subclass-Of User-Rights-Attribute Attribute-Value)
             (Set-Or-Collection User-Rights-Attribute)
             (Arity User-Rights-Attribute 1)
             (Documentation User-Rights-Attribute
              "A collection of attributes.  An instance of User-Rights-Attribute describes what right an agent has to use something.  For example, the rights of an owner of a house can be distinguished from the rights of a renter by specifying the appropriate User-Rights-Attributes.  Elements of User-Rights-Attributes include: Full-Use-Rights (the agent can do whatever s/he wants with it), Exclusive-User-Rights (the agent is the only authorized user), Primary-User-Rights (this agent's uses take priority over everyone else's), Group-User-Rights-Attribute (the agent's right to use something depends on membership in a group), and more."))

(defrelation Exports
             (Domain Exports Geopolitical-Entity)
             (Range Exports Product-Type)
             (Slot-Value-Subclass-Of Exports Partially-Tangible)
             (Name-In-Cyc Exports "#$exports")
             (Process-Predicate Exports)
             (Slot Exports)
             (Relation Exports)
             (Arity Exports 2)
             (Binary-Relation Exports)
             (Documentation Exports
              "(exports REGION THING) means that the region REGION has substantial regular exports of the commodity THING."))

(defrelation Selling-Organization
             (Name-In-Cyc Selling-Organization "#$SellingOrganization")
             (Existing-Object-Type Selling-Organization)
             (Subclass-Of Selling-Organization Commercial-Service-Organization)
             (Set-Or-Collection Selling-Organization)
             (Arity Selling-Organization 1)
             (Documentation Selling-Organization
              "A collection of organizations.  Each element of Selling-Organization is an organization whose main function is to sell things by conducting sales activities.  Examples: sales departments (e.g., the sales department of Toyota-The-Company); advertising agencies; and retailers (e.g., Walden-Books-The-Company, K-Mart-Company)."))

(defrelation Perceptual-Agent
             (Synonymous-External-Concept Perceptual-Agent
              Sensus-Information1997 "CONSCIOUS-BEING")
             (Name-In-Cyc Perceptual-Agent "#$PerceptualAgent")
             (Existing-Object-Type Perceptual-Agent)
             (Subclass-Of Perceptual-Agent Individual-Agent)
             (Set-Or-Collection Perceptual-Agent)
             (Arity Perceptual-Agent 1)
             (Documentation Perceptual-Agent
              "The collection of all sentient agents.  Elements of Perceptual-Agent are beings capable of doing instances of Perceiving.  Furthermore, in many cases the information that a perceptual agent gathers is input that can influence its other actions."))

(defrelation Calendar-Hour
             (Name-In-Cyc Calendar-Hour "#$CalendarHour")
             (Collection Calendar-Hour)
             (Calendar-Covering-Type Calendar-Hour)
             (Subclass-Of Calendar-Hour Date)
             (Subclass-Of Calendar-Hour Time-Of-Day)
             (Set-Or-Collection Calendar-Hour)
             (Arity Calendar-Hour 1)
             (Documentation Calendar-Hour
              "The collection of hours that make up the calendar.  These are contiguous and disjoint time intervals, except of course for particular instances that represent exactly the same 60-minute-long time interval.  See Calendar-Day."))

(defrelation Ceiling-Of-A-Room
             (Name-In-Cyc Ceiling-Of-A-Room "#$CeilingOfARoom")
             (Existing-Object-Type Ceiling-Of-A-Room)
             (Subclass-Of Ceiling-Of-A-Room Part-Of-Building)
             (Set-Or-Collection Ceiling-Of-A-Room)
             (Arity Ceiling-Of-A-Room 1)
             (Documentation Ceiling-Of-A-Room
              "The collection of all ceilings of every instance of Room-In-A-Construction.  Note that, unlike walls, ceilings are conventionally considered to be 'one-sided' objects.  The other side of a Ceiling-Of-A-Room may be a Roof-Of-A-Construction, or in a Modern-Shelter-Construction, more probably the Floor-In-A-Construction in another room."))

(defrelation Temporally-Disjoint-Interval-Type
             (Name-In-Cyc Temporally-Disjoint-Interval-Type
              "#$TemporallyDisjointIntervalType")
             (Collection Temporally-Disjoint-Interval-Type)
             (Subclass-Of Temporally-Disjoint-Interval-Type
              Temporal-Object-Type)
             (Set-Or-Collection Temporally-Disjoint-Interval-Type)
             (Arity Temporally-Disjoint-Interval-Type 1)
             (Documentation Temporally-Disjoint-Interval-Type
              "(:Direct-Types ?X Temporally-Disjoint-Interval-Type) means that any two distinct instances of ?X are Temporally-Disjoint.  It is true that (:Direct-Types Wednesday Temporally-Disjoint-Interval-Type because no Wednesday can temporally intersect any other (distinct) Wednesday.  [See also Mutually-Disjoint-Interval-Collection.]"))

(defrelation Handling-An-Object
             (Name-In-Cyc Handling-An-Object "#$HandlingAnObject")
             (Temporal-Stuff-Type Handling-An-Object)
             (Default-Disjoint-Script-Type Handling-An-Object)
             (Subclass-Of Handling-An-Object Action-On-Object)
             (Subclass-Of Handling-An-Object Physical-Contact-Situation)
             (Subclass-Of Handling-An-Object Controlling-Something)
             (Set-Or-Collection Handling-An-Object)
             (Arity Handling-An-Object 1)
             (Documentation Handling-An-Object
              "A collection of events; a subset of both Controlling-Something and Physical-Contact-Event.  An instance of Handling-An-Object is an event in which an object is touched and manipulated by some Agent.  Examples of Handling-An-Object include instances of  Holding-An-Object and of Causing-Another-Objects-Translational-Motion.  So just holding a rock in your hand is a Handling-An-Object; so is washing your cereal bowl (an instance of Washing-Dishes), cutting a loose thread on your shirt (an instance of Cutting-A-Thread), and carrying the rock from one place to another (an instance of Carrying-While-Locomoting.)  One very important class of Handling-An-Object instances involve operating some hand-held device --- i.e., events which are instances of the collection Handling-A-Device.   I.e., the performer handles an object which happens to be a device, but not just lugging it around but actually employing it for its intended Primary-Function --- not merely to look at it or rearrange or relocate it.  For example, if you move a fork from the dishwasher to the silverware drawer, that's just Handling-An-Object; if you use that fork to eat some food, though, that is an instance of Handling-A-Device."))

(defrelation Directing-Agent
             (Subrelation-Of Directing-Agent Deliberate-Actors)
             (Domain Directing-Agent Event)
             (Range Directing-Agent Agent)
             (Name-In-Cyc Directing-Agent "#$directingAgent")
             (Actor-Slot Directing-Agent)
             (Slot Directing-Agent)
             (Relation Directing-Agent)
             (Arity Directing-Agent 2)
             (Binary-Relation Directing-Agent)
             (Documentation Directing-Agent
              "(Directing-Agent ACT AGENT) means that AGENT is one of the agents that is in control of or directing ACT, but not necessarily directly performing it.  If, in the event ACT, an agent other than AGENT has the Performed-By role, then that performer's actions in ACT are directed by AGENT.  For example, (Directing-Agent PSOBicentennialConcertOfBeethovensNinth #WilliamSteinberg) is true, because Steinberg was the conductor of that concert; he directed the many other musicians who performed in that event.  Another case: (Directing-Agent MassacreAtMyLai LtWilliamCalley).  The type of direction implied by Directing-Agent is the kind that can be accomplished by AGENT communicating its desires to the actual performer(s) of ACT.  So, a person would be the Directing-Agent in a clothes-washing event Done-By a washing machine ONLY in those contexts in which we can consider the machine an agent, acting intentionally."))

(defrelation November
             (Name-In-Cyc November "#$November")
             (Month-Of-Year-Type November)
             (Subclass-Of November Calendar-Month)
             (Set-Or-Collection November)
             (Arity November 1))

(defrelation Pronoun
             (Name-In-Cyc Pronoun "#$Pronoun")
             (Linguistic-Object-Type Pronoun)
             (Subclass-Of Pronoun Speech-Part)
             (Set-Or-Collection Pronoun)
             (Arity Pronoun 1)
             (Documentation Pronoun
              "The collection of all pronouns. Pronouns are indexicals which can replace nouns. Example: `she'."))

(defrelation Involuntary-Body-Movement
             (Name-In-Cyc Involuntary-Body-Movement
              "#$InvoluntaryBodyMovement")
             (Temporal-Stuff-Type Involuntary-Body-Movement)
             (Default-Disjoint-Script-Type Involuntary-Body-Movement)
             (Subclass-Of Involuntary-Body-Movement
              Bodily-Function-Event-Involuntary)
             (Subclass-Of Involuntary-Body-Movement Body-Movement-Event)
             (Set-Or-Collection Involuntary-Body-Movement)
             (Arity Involuntary-Body-Movement 1)
             (Documentation Involuntary-Body-Movement
              "The collection of involuntary bodily movements, those movements in which an Animal's body does the action automatically -- the agent's consent doesn't enter into it.  Subsets of Involuntary-Body-Movement include Heartbeating, Sneezing, Snoring, etc."))

(defrelation Pride
             (Name-In-Cyc Pride "#$Pride")
             (Feeling-Attribute-Type Pride)
             (Subclass-Of Pride Self-Confidence)
             (Subclass-Of Pride Approval)
             (Set-Or-Collection Pride)
             (Arity Pride 1)
             (Documentation Pride
              "Self-esteem based upon one's actions, possessions, or relationships.  Vanity is not necessarily entailed by Pride.  This is a collection; see Happiness.  More specialized Feeling-Attribute-Types include Pride-Of-Membership, Pride-Of-Accomplishment, Vanity, Patriotism, etc. "))

(defrelation Grilling-Food
             (Name-In-Cyc Grilling-Food "#$GrillingFood")
             (Script-Type Grilling-Food)
             (Subclass-Of Grilling-Food Cooking-Food)
             (Set-Or-Collection Grilling-Food)
             (Arity Grilling-Food 1)
             (Documentation Grilling-Food
              "Cooking food on a BBQ-Grill or an Electric-Grill."))

(defrelation Performed-By
             (Subrelation-Of Performed-By Done-By)
             (Subrelation-Of Performed-By Deliberate-Actors)
             (Domain Performed-By Action)
             (Range Performed-By Agent)
             (Name-In-Cyc Performed-By "#$performedBy")
             (Actor-Slot Performed-By)
             (Slot Performed-By)
             (Relation Performed-By)
             (Arity Performed-By 2)
             (Binary-Relation Performed-By)
             (Documentation Performed-By
              "The predicate Performed-By relates an event to an agent who performs it deliberately, which in Cyc means, intentionally and volitionally.  (Performed-By ACT DOER) means that the agent DOER deliberately does the action ACT.  DOER must be an Agent.  For example, (Performed-By Assassination-Of-President-Lincoln John-Wilkes-Booth).  If ACT has multiple performers, ACT will be Performed-By each of them.  See also Deliberate-Actors, Done-By."))

(defrelation Area-Of-Object
             (Subrelation-Of Area-Of-Object
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "AREA")|)
             (Domain Area-Of-Object Partially-Tangible)
             (Range Area-Of-Object Area)
             (Name-In-Cyc Area-Of-Object "#$areaOfObject")
             (Physical-Attribute-Description-Slot Area-Of-Object)
             (Physical-Amount-Slot Area-Of-Object)
             (Slot Area-Of-Object)
             (Relation Area-Of-Object)
             (Arity Area-Of-Object 2)
             (Binary-Relation Area-Of-Object)
             (Documentation Area-Of-Object
              "A general slot to denote the area of some object.  This could be the area of a Geographical-Region, a desk top, or a cross-section of wire."))

(defrelation Cloud-Of-H2o
             (Name-In-Cyc Cloud-Of-H2o "#$CloudOfH2O")
             (Existing-Object-Type Cloud-Of-H2o)
             (Subclass-Of Cloud-Of-H2o Suspension)
             (Set-Or-Collection Cloud-Of-H2o)
             (Arity Cloud-Of-H2o 1)
             (Documentation Cloud-Of-H2o
              "A cloud of particles of liquid or solid water in the atmosphere covering a Geographical-Region."))

(defrelation Veterinary-Hospital
             (Name-In-Cyc Veterinary-Hospital "#$VeterinaryHospital")
             (Existing-Object-Type Veterinary-Hospital)
             (Subclass-Of Veterinary-Hospital Local-Customer-Contact-Point)
             (Subclass-Of Veterinary-Hospital Medical-Care-Organization)
             (Set-Or-Collection Veterinary-Hospital)
             (Arity Veterinary-Hospital 1)
             (Documentation Veterinary-Hospital
              "The collection of all local organizations that provide professional medical care to non-human animals.  Note that this is not a specialization of Hospital.  The names may be the same, but hospitals provide medical care to persons only."))

(defrelation Navy-Personnel
             (Name-In-Cyc Navy-Personnel "#$NavyPersonnel")
             (Occupation-Type Navy-Personnel)
             (Subclass-Of Navy-Personnel Military-Person)
             (Set-Or-Collection Navy-Personnel)
             (Arity Navy-Personnel 1)
             (Documentation Navy-Personnel "A collection of people, a subset 
of Military-Person. Each element of this collection is
somebody who works for a Navy."))

(defrelation Cyc-System-List
             (Name-In-Cyc Cyc-System-List "#$CycSystemList")
             (Object-Type Cyc-System-List)
             (Collection Cyc-System-List)
             (Subclass-Of Cyc-System-List List-Sequence)
             (Subclass-Of Cyc-System-List Cyc-System-List-Or-Atom)
             (Subclass-Of Cyc-System-List Individual)
             (Set-Or-Collection Cyc-System-List)
             (Arity Cyc-System-List 1)
             (Documentation Cyc-System-List
              "A collection of tuples (see Tuple).  Each element of Cyc-System-List is an ordered list of items enclosed in parentheses.  Cyc system lists are those things that pass the Defn-Iff LISTP, i.e., those things considered by the Cyc System to be lists."))

(defrelation Mental-Attribute
             (Name-In-Cyc Mental-Attribute "#$MentalAttribute")
             (Attribute-Type Mental-Attribute)
             (Subclass-Of Mental-Attribute Attribute-Value)
             (Set-Or-Collection Mental-Attribute)
             (Arity Mental-Attribute 1)
             (Documentation Mental-Attribute
              "A collection of attributes.  Each element of Mental-Attribute is an attribute which pertains to an agent's mental state or mental ability.  Examples: High-Intelligence, Legally-Drunk, Visual-Awareness, Inattentive-Mental-Activity-Level."))

(defrelation Cyclical-Interval-Group-Type
             (Name-In-Cyc Cyclical-Interval-Group-Type
              "#$CyclicalIntervalGroupType")
             (Collection Cyclical-Interval-Group-Type)
             (Subclass-Of Cyclical-Interval-Group-Type
              Mutually-Disjoint-Interval-Collection)
             (Set-Or-Collection Cyclical-Interval-Group-Type)
             (Arity Cyclical-Interval-Group-Type 1)
             (Documentation Cyclical-Interval-Group-Type
              "(:Direct-Types ?X Cyclical-Interval-Group-Type) means that ?X is a collection of interval types whose instances recur in a set pattern throughout all of calendar history.  ?X must partition all of time: the elements of ?X must be mutually disjoint, and unioned altogether they must encompass all time.  For example, ?X could be the set of the seven calendar days (Monday through Sunday), or the set of the twelve calendar months (January through December).  I.e., (:Direct-Types Day-Of-Week-Type Cyclical-Interval-Group-Type) and (:Direct-Types Month-Of-Year-Type Cyclical-Interval-Group-Type).  `Recurring in a set pattern' generally means that one can put the elements of ?X in order, say X1, X2,..., Xn, and there will be an instance of X1 immediately followed by an instance of X2 (that instance x2a of X2 will be Contiguous-After that instance x1a of X1),  and there will be an instance of X3 immediately following that particular instance of X2, and there will be an instance of X4 immediately following that instance of X3, etc.  One final note:  when we arrange elements of ?X into such a pattern X1,...Xn (whose repetitions then `tile' all time), n may be larger than the cardinality of ?X.  E.g., ?X might be the set with just the 2 elements WeekendDay (the union of the set Saturday and the set Sunday) and WeekDay, and then the arrangement that tiles all time is 5 contiguous WeekDays followed by 2 contiguous WeekendDays."))

(defrelation Domesticated-Animal-Food
             (Name-In-Cyc Domesticated-Animal-Food "#$DomesticatedAnimalFood")
             (Product-Type Domesticated-Animal-Food)
             (Existing-Stuff-Type Domesticated-Animal-Food)
             (Subclass-Of Domesticated-Animal-Food Tangible-Product)
             (Set-Or-Collection Domesticated-Animal-Food)
             (Arity Domesticated-Animal-Food 1)
             (Documentation Domesticated-Animal-Food
              "A collection of tangible stuff; a subset of Tangible-Product.  Each element of Domesticated-Animal-Food is a foodstuff produced by human beings and intended for consumption by domesticated animals.  This collection includes feed manufactured for horses, cattle, chickens, and other farm animals, as well as `pet foods'."))

(defrelation Ocean-Liner
             (Name-In-Cyc Ocean-Liner "#$OceanLiner")
             (Existing-Object-Type Ocean-Liner)
             (Subclass-Of Ocean-Liner Transportation-Device-Vehicle)
             (Subclass-Of Ocean-Liner Ship)
             (Set-Or-Collection Ocean-Liner)
             (Arity Ocean-Liner 1)
             (Documentation Ocean-Liner
              "The subcollection of Ship that contains all ocean liners, i.e., ships that by design can transport a large number of people across oceans."))

(defobject Blue-Collar
   (Job-Attribute Blue-Collar)
   (Name-In-Cyc Blue-Collar "#$BlueCollar")
   (Documentation Blue-Collar
    "An attribute; an element of Job-Attribute.  Blue collar jobs are those requiring a relatively high proportion of manual/physical labor."))

(defrelation Organism-Part
             (Name-In-Cyc Organism-Part "#$OrganismPart")
             (Existing-Object-Type Organism-Part)
             (Subclass-Of Organism-Part Biological-Living-Object)
             (Set-Or-Collection Organism-Part)
             (Arity Organism-Part 1)
             (Documentation Organism-Part
              "The collection of all the anatomical parts of all living organisms.  It includes gross anatomical parts and microscopic anatomical parts of every individual of every species."))

(deffunction Plus-Fn
   (Args-Isa Plus-Fn Scalar-Interval)
   (Result-Instance-Of Plus-Fn Scalar-Interval)
   (Name-In-Cyc Plus-Fn "#$PlusFn")
   (Evaluatable-Function Plus-Fn)
   (Non-Predicate-Function Plus-Fn)
   (Variable-Arity-Relation Plus-Fn)
   (Commutative-Relation Plus-Fn)
   (Function-From-Quantities-To-Quantities Plus-Fn)
   (Function Plus-Fn)
   (Documentation Plus-Fn
    "Plus-Fn is Cyc's addition operator; it is a variable-arity mathematical function.  Plus-Fn takes a variable number of quantities as arguments, and it yields a new quantity which is the result of adding those arguments together.  All of the arguments to Plus-Fn must be elements of Scalar-Interval, as is its result.  Examples: (Plus-Fn 2 3 4) returns 9; (Plus-Fn (Meter 1.5) (Meter 0.7)) returns (Meter 2.2).  See also Variable-Arity-Relation."))

(defrelation Motorcycle
             (Transport-Via-Fn Motorcycle |(TRANSPORT-VIA-FN MOTORCYCLE)|)
             (Name-In-Cyc Motorcycle "#$Motorcycle")
             (Existing-Object-Type Motorcycle)
             (Subclass-Of Motorcycle Transportation-Device-Vehicle)
             (Subclass-Of Motorcycle Land-Transportation-Device)
             (Set-Or-Collection Motorcycle)
             (Arity Motorcycle 1)
             (Documentation Motorcycle
              "The collection of all motorcycles, two-wheeled motorized personal transport devices.  A motorcycle lacks a cab or compartment to protect the driver from wind and weather.  Since motorcycles are used both on and off road, this is not a spec of Road-Vehicle."))

(defrelation Suspension
             (Name-In-Cyc Suspension "#$Suspension")
             (Existing-Stuff-Type Suspension)
             (Subclass-Of Suspension Mixture)
             (Set-Or-Collection Suspension)
             (Arity Suspension 1)
             (Documentation Suspension
              "A collection of tangible stuffs; a subset of Mixture.  Each instance of Suspension is a mixture which has exactly one Suspending-Fluid and at least one kind of Suspended-Part.  Each of the Suspended-Parts is an instance of Particle, and there are a mob of them.  Some suspensions are fairly stable (e.g., mayonnaise), while others tend to separate quickly (e.g., sugar stirred into cold lemonade).  Other examples of Suspension: a cloud, a spray of aerosol deodorant."))

(defobject Single-Entry
   (Format Single-Entry)
   (Name-In-Cyc Single-Entry "#$SingleEntry")
   (Documentation Single-Entry
    "Argument places of Cyc predicates may have specified formats that constrain their values.  Single-Entry is a format constraint used to indicate that there is at most one value in a certain argument place, when all other arguments are fixed.  For example, the Arg2-Format  of Mother is Single-Entry, since an animal can only have one mother.  See also Format, and contrast with Set-The-Format."))

(defrelation Military-Person
             (Name-In-Cyc Military-Person "#$MilitaryPerson")
             (Occupation-Type Military-Person)
             (Subclass-Of Military-Person Professional)
             (Set-Or-Collection Military-Person)
             (Arity Military-Person 1)
             (Documentation Military-Person
              "A collection of persons; a subset of Professional.  Each element of Military-Person is a person who works for some Military-Organization, usually holding some Military-Title or rank.  Subsets include Military-Officer and Enlisted-Person."))

(defrelation April
             (Name-In-Cyc April "#$April")
             (Month-Of-Year-Type April)
             (Subclass-Of April Calendar-Month)
             (Set-Or-Collection April)
             (Arity April 1))

(defrelation Approval
             (Name-In-Cyc Approval "#$Approval")
             (Feeling-Attribute-Type Approval)
             (Subclass-Of Approval Satisfaction)
             (Set-Or-Collection Approval)
             (Arity Approval 1)
             (Documentation Approval
              "The emotion of viewing positively a state of affairs or other agent's actions.  This is a collection; for an explanation of a typical Feeling-Attribute-Type, see Happiness."))

(defrelation Social-Ritual
             (Name-In-Cyc Social-Ritual "#$SocialRitual")
             (Script-Type Social-Ritual)
             (Subclass-Of Social-Ritual Social-Gathering)
             (Subclass-Of Social-Ritual Ritual)
             (Set-Or-Collection Social-Ritual)
             (Arity Social-Ritual 1)
             (Documentation Social-Ritual
              "The collection of social events in which some kind of ritual is performed.  E.g., a wedding, an awards ceremony, a baptism, an inauguration, a graduation ceremony, etc.
Note: In Cyc's ontology, the collection Inauguration is not exactly a subset of Social-Ritual; e.g., it is not true that (:Direct-Types The1992InaugurationOfGeorgeBushAsPresidentOfTheUSA  Social-Ritual).  This is because there are many aspects to an Inauguration, besides the social ritual aspects.  E.g., there is the political aspect, namely the legitimate change of chief executive of a nation.  The carrying out of the `script' for an inauguration (i.e., the ceremony itself) is an element of the collection Social-Ritual. "))

(defrelation Emission
             (Name-In-Cyc Emission "#$Emission")
             (Temporal-Object-Type Emission)
             (Subclass-Of Emission Transfer-Out)
             (Set-Or-Collection Emission)
             (Arity Emission 1)
             (Documentation Emission
              "A collection of processes; a subset of Generalized-Transfer.  Each element of Emission is an event in which something `comes out' of an object that actively contributes to that thing's emission (e.g., it is a Provider-Of-Motive-Force).  The source is indicated with the predicate Emitter. An entire Translocation is associated with an emission, and these are related through the predicate Transfer-Out-Sub-Event.  If the thing which `comes out' is an instance of Partially-Tangible, then the event belongs to a more specific collection, Emitting-An-Object (q.v.). If the associated element of Translocation is an instance of Wave-Propagation, then the emission belongs to the more specialized collection, Emitting-A-Wave (q.v.)."))

(defrelation Service-Organization
             (Name-In-Cyc Service-Organization "#$ServiceOrganization")
             (Existing-Object-Type Service-Organization)
             (Subclass-Of Service-Organization Organization)
             (Set-Or-Collection Service-Organization)
             (Arity Service-Organization 1)
             (Documentation Service-Organization
              "A collection of organizations.  Each element of Service-Organization is an organization whose main function is to provide some set of services, i.e., to perform certain service events.  A service organization may be a subsidiary, a department, or an independent organization.  A service organization may or may not be a for-profit organization; see the subset Commercial-Service-Organization.  Examples: Federal-Express; the mail department at MCC; New-York-Hospital; the US-Medicare-Administration; the Jiffy Lube at Guadalupe and 38th St; Threadgills restaurant; KEYE-TV in Austin, TX."))

(defrelation Multi-Graph
             (Name-In-Cyc Multi-Graph "#$MultiGraph")
             (Collection Multi-Graph)
             (Subclass-Of Multi-Graph Set-With-Structure)
             (Set-Or-Collection Multi-Graph)
             (Arity Multi-Graph 1)
             (Documentation Multi-Graph
              "An instance of Path-System-Type and a subcollection of Path-System.  Each instance of Multi-Graph is an instance of Path-System in which the only points are nodes in the system and all paths are made of links (i.e., no intermediate points along links). Sometime such a system is called a graph or multi-graph in graph theory.  A Multi-Graph consists of nodes interconnected by links, with loops on single nodes allowed, and with multiple links between the same two nodes also allowed.  (For a graph with no parallel links and no loops, see Simple-Graph-Graph-Theoretic."))

(defrelation Medical-Testing
             (Name-In-Cyc Medical-Testing "#$MedicalTesting")
             (Script-Type Medical-Testing)
             (Temporal-Object-Type Medical-Testing)
             (Subclass-Of Medical-Testing Medical-Care-Event)
             (Subclass-Of Medical-Testing Thinking)
             (Set-Or-Collection Medical-Testing)
             (Arity Medical-Testing 1)
             (Documentation Medical-Testing
              "A collection of events in which some aspect of a patient's physiological condition is evaluated using medical procedures.  An instance of Medical-Testing is a test done on a patient -- or, often, on a sample taken from the patient's body -- in order to gather information (a) about the patient's general state of health, (b) to help in making a diagnosis, (c) to determine or monitor the severity of a known condition of the patient's.  The collection Medical-Testing includes an enormous variety of procedures in modern Western medicine, from simple blood tests to complex MRIs."))

(defrelation |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "SOLID-MATERIAL")|
             (Skolem-Object
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "SOLID-MATERIAL")|)
             (Collection
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "SOLID-MATERIAL")|)
             (Subclass-Of
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "SOLID-MATERIAL")|
              Thing)
             (Set-Or-Collection
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "SOLID-MATERIAL")|)
             (Arity
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "SOLID-MATERIAL")|
              1))

(defrelation Energy-Conversion-Process
             (Name-In-Cyc Energy-Conversion-Process
              "#$EnergyConversionProcess")
             (Temporal-Stuff-Type Energy-Conversion-Process)
             (Default-Disjoint-Script-Type Energy-Conversion-Process)
             (Subclass-Of Energy-Conversion-Process Physical-Event)
             (Subclass-Of Energy-Conversion-Process Transformation-Event)
             (Set-Or-Collection Energy-Conversion-Process)
             (Arity Energy-Conversion-Process 1)
             (Documentation Energy-Conversion-Process
              "A collection of events.  In each instance of Energy-Conversion-Process, energy is converted from one form to another."))

(defrelation Twilight
             (Name-In-Cyc Twilight "#$Twilight")
             (Temporal-Object-Type Twilight)
             (Subclass-Of Twilight Qualitative-Time-Of-Day)
             (Set-Or-Collection Twilight)
             (Arity Twilight 1)
             (Documentation Twilight
              "The union of the two collections of time intervals Dawn and Dusk.  Each Twilight is a situation where the sky is indirectly illuminated by the Sun, either just before a Sunrise or just after a Sunset."))

(defrelation Outdoor-Location
             (Name-In-Cyc Outdoor-Location "#$OutdoorLocation")
             (Existing-Object-Type Outdoor-Location)
             (Subclass-Of Outdoor-Location Ecological-Region)
             (Set-Or-Collection Outdoor-Location)
             (Arity Outdoor-Location 1)
             (Documentation Outdoor-Location
              "A collection of geographical regions.  Each element of Outdoor-Location is a region of outdoor space, i.e., a region which is directly subject to atmospheric weather.  Objects found in an outdoor location are In-Immersed-Fully in the atmosphere of Earth.  Thus, as defined here, Outdoor-Location does NOT include elements of Underwater-Location or places that are Underground.  OutdoorLocations include large geographical regions.  Among the elements of Outdoor-Location are instances of the subsets Lawn, Meadow, Ski-Slope, Beach, Swamp (and many others).  Note: Outdoor-Location is a collection of places, rather than an attribute; to represent the concept of being outside, see Outdoors-Exposed-To-Weather.  Of course, elements of Outdoor-Location have the Location-State attribute of being Outdoors-Exposed-To-Weather."))

(defrelation Level-Of-A-Construction
             (Name-In-Cyc Level-Of-A-Construction "#$LevelOfAConstruction")
             (Existing-Object-Type Level-Of-A-Construction)
             (Subclass-Of Level-Of-A-Construction Space-In-Ahoc)
             (Set-Or-Collection Level-Of-A-Construction)
             (Arity Level-Of-A-Construction 1)
             (Documentation Level-Of-A-Construction
              "The levels, also called floors or storeys, of a Construction-Artifact.  Levels are regions in space; they are not two-dimensional planes."))

(defrelation Body-Part-Position
             (Name-In-Cyc Body-Part-Position "#$BodyPartPosition")
             (Attribute-Type Body-Part-Position)
             (Subclass-Of Body-Part-Position Physiological-Attribute)
             (Set-Or-Collection Body-Part-Position)
             (Arity Body-Part-Position 1)
             (Documentation Body-Part-Position
              "The collection of attributes describing the position of a body part (or a whole body).  A Body-Part-Position may be determined relative to the body's environment (as with Postures) or merely with respect to the body part itself (e.g., Flexed, Extended)."))

(defrelation Feels-Sensation
             (Nth-Domain Feels-Sensation 1 Biological-Living-Object)
             (Nth-Domain Feels-Sensation 2 Sensory-Reaction-Type)
             (Nth-Domain Feels-Sensation 3 Generic-Attribute)
             (Nth-Domain-Subclass-Of Feels-Sensation 2 Sensory-Attribute)
             (Name-In-Cyc Feels-Sensation "#$feelsSensation")
             (Ternary-Predicate Feels-Sensation)
             (Functional-Predicate Feels-Sensation)
             (Relation Feels-Sensation)
             (Arity Feels-Sensation 3)
             (Documentation Feels-Sensation
              "(Feels-Sensation BLO SENSTYPE DEGREE) means that the Biological-Living-Object BLO feels a sensation of type SENSTYPE with the intensity DEGREE.  Feels-Sensation may be used to describe an organism's feeling during a particular time period or activity (see Holds-In); for example, we might say of a particular person who is doing yoga: (Holds-In `TodaysYoga' (Feels-Sensation Prakriti Level-Of-Relaxation-Feeling Very-High).  Note that the first argument of Feels-Sensation could also be filled by a part of an organism, e.g., `John F. Kennedy's head'; however, by using the more specialized predicate Feels-Response-On-Body-Region (q.v.), we can express localized feelings without reifying each such region."))

(defrelation Diagnosing-And-Repairing-Something
             (Name-In-Cyc Diagnosing-And-Repairing-Something
              "#$DiagnosingAndRepairingSomething")
             (Default-Disjoint-Script-Type Diagnosing-And-Repairing-Something)
             (Subclass-Of Diagnosing-And-Repairing-Something
              Intrinsic-State-Change-Event)
             (Subclass-Of Diagnosing-And-Repairing-Something Action-On-Object)
             (Subclass-Of Diagnosing-And-Repairing-Something Purposeful-Action)
             (Subclass-Of Diagnosing-And-Repairing-Something Human-Activity)
             (Set-Or-Collection Diagnosing-And-Repairing-Something)
             (Arity Diagnosing-And-Repairing-Something 1)
             (Documentation Diagnosing-And-Repairing-Something
              "The collection of all actions of diagnosing and repairing something, in a very broad sense.  Such events can range from fixing a Physical-Device (e.g., the last time you took your car in to be fixed), to killing pests that infest a place.  All such actions involve an intrinsic change in the thing which undergoes repairs.  Notice that a diagnosis action alone, or a repair action alone, would not be elements of this collection; they could be Sub-Events of an element of this collection."))

(defrelation Protective-Attire
             (Name-In-Cyc Protective-Attire "#$ProtectiveAttire")
             (Product-Type Protective-Attire)
             (Existing-Object-Type Protective-Attire)
             (Subclass-Of Protective-Attire Something-To-Wear)
             (Subclass-Of Protective-Attire Sheet-Of-Some-Stuff)
             (Set-Or-Collection Protective-Attire)
             (Arity Protective-Attire 1)
             (Documentation Protective-Attire
              "A collection of objects.  Each element of Protective-Attire is something to wear that is designed for protection from the elements or from injury.  Some subsets of Protective-Attire include the collections Snow-Goggles, Surgical-Glove, Welding-Mask, Helmet, Boxing-Head-Gear, Face-Mask-For-Catcher, Firefighters-Coat, Rain-Gear."))

(defrelation Morning
             (Name-In-Cyc Morning "#$Morning")
             (Temporal-Object-Type Morning)
             (Subclass-Of Morning Qualitative-Time-Of-Day)
             (Set-Or-Collection Morning)
             (Arity Morning 1)
             (Documentation Morning
              "A Morning is an Event where the Sun apparently `rises' and `moves' to its `highest' position in the daily cycle, i.e. from a Sunrise to the ensuing noon (the latter of which is the Starting-Point of a Time-Of-Day-Noon-Hour)  Each ?M which :Direct-Types Morning is Contiguous-After an Overnight, and an Afternoon is Contiguous-After ?M; and ?M overlaps the start of a Midday."))

(defrelation |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "STRIVING")|
             (Skolem-Object
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "STRIVING")|)
             (Collection
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "STRIVING")|)
             (Subclass-Of
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "STRIVING")|
              Intangible-Individual)
             (Set-Or-Collection
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "STRIVING")|)
             (Arity |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "STRIVING")|
              1))

(defrelation Turning-Off-Powered-Device
             (Name-In-Cyc Turning-Off-Powered-Device
              "#$TurningOffPoweredDevice")
             (Temporal-Object-Type Turning-Off-Powered-Device)
             (Default-Disjoint-Script-Type Turning-Off-Powered-Device)
             (Subclass-Of Turning-Off-Powered-Device Changing-Device-State)
             (Set-Or-Collection Turning-Off-Powered-Device)
             (Arity Turning-Off-Powered-Device 1)
             (Documentation Turning-Off-Powered-Device
              "The collection of actions in which the Device-State of a Physical-Device changes from Device-On to Device-Off."))

(defrelation Train-Car
             (Name-In-Cyc Train-Car "#$TrainCar")
             (Product-Type Train-Car)
             (Existing-Object-Type Train-Car)
             (Subclass-Of Train-Car Land-Transportation-Device)
             (Subclass-Of Train-Car Container-Product)
             (Set-Or-Collection Train-Car)
             (Arity Train-Car 1)
             (Documentation Train-Car
              "The collection of train cars (or train carriages), non-motored wheeled vehicles that run on Railways.  When they are to be moved they are coupled together to form trains pulled by train engines.  There are freight TrainCars, and passenger TrainCars for transporting people."))

(defrelation List-Without-Repetition
             (Name-In-Cyc List-Without-Repetition "#$ListWithoutRepetition")
             (Stuff-Type List-Without-Repetition)
             (Subclass-Of List-Without-Repetition Totally-Ordered-Set)
             (Subclass-Of List-Without-Repetition List-Sequence)
             (Set-Or-Collection List-Without-Repetition)
             (Arity List-Without-Repetition 1)
             (Documentation List-Without-Repetition
              "The collection of all those List-Sequences, for each of which, no element appears more than once in the list.  (In general a List-Sequence and Series may have repeated elements.)  See also Series-Without-Repetition."))

(defrelation September
             (Name-In-Cyc September "#$September")
             (Month-Of-Year-Type September)
             (Subclass-Of September Calendar-Month)
             (Set-Or-Collection September)
             (Arity September 1))

(defrelation Dissolving
             (Name-In-Cyc Dissolving "#$Dissolving")
             (Temporal-Stuff-Type Dissolving)
             (Default-Disjoint-Script-Type Dissolving)
             (Subclass-Of Dissolving Destruction-Event)
             (Set-Or-Collection Dissolving)
             (Arity Dissolving 1)
             (Documentation Dissolving
              "A collection of events.  In each instance of this collection, a solvent and a solute mix to form a solution."))

(defrelation Asymmetric-Binary-Predicate
             (Name-In-Cyc Asymmetric-Binary-Predicate
              "#$AsymmetricBinaryPredicate")
             (Predicate-Category Asymmetric-Binary-Predicate)
             (Collection Asymmetric-Binary-Predicate)
             (Subclass-Of Asymmetric-Binary-Predicate Slot)
             (Subclass-Of Asymmetric-Binary-Predicate
              Irreflexive-Binary-Predicate)
             (Subclass-Of Asymmetric-Binary-Predicate
              Anti-Symmetric-Binary-Predicate)
             (Set-Or-Collection Asymmetric-Binary-Predicate)
             (Arity Asymmetric-Binary-Predicate 1)
             (Documentation Asymmetric-Binary-Predicate
              "A collection of predicates; the subset of Anti-Symmetric-Binary-Predicate whose elements represent asymmetric relations.  A predicate F is an element of Asymmetric-Binary-Predicate if and only if F is a binary predicate and (F X Y) implies (:not (F Y X)).  For example, North-Of, Children, Greater-Than, Overrides.



Note this additional restriction: A Cyc predicate F can be an element of Asymmetric-Binary-Predicate only if the type (i.e., arg-Isa) constraint applicable to F's first argument is not disjoint with the type constraint applicable to F's second argument.  See also Note-On-Argument-Typing-And-Properties-Of-Relations."))

(defrelation |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "LANGUAGE")|
             (Skolem-Object
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "LANGUAGE")|)
             (Collection
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "LANGUAGE")|)
             (Subclass-Of
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "LANGUAGE")|
              Communication-Convention)
             (Set-Or-Collection
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "LANGUAGE")|)
             (Arity |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "LANGUAGE")|
              1))

(defrelation Anatomical-Resource-Required
             (Nth-Domain Anatomical-Resource-Required 1 Animal-Activity)
             (Nth-Domain Anatomical-Resource-Required 2 Existing-Object-Type)
             (Nth-Domain Anatomical-Resource-Required 3 Non-Negative-Integer)
             (Nth-Domain-Subclass-Of Anatomical-Resource-Required 2
              Animal-Body-Part)
             (Name-In-Cyc Anatomical-Resource-Required
              "#$anatomicalResourceRequired")
             (Ternary-Predicate Anatomical-Resource-Required)
             (Relation Anatomical-Resource-Required)
             (Arity Anatomical-Resource-Required 3)
             (Documentation Anatomical-Resource-Required
              "(Anatomical-Resource-Required ACT BODYPARTTYPE NUM) means that the successful doer of ACT must have this many (NUM) of the Animal-Body-Part-Type BODYPARTTYPE.  For example, if VOLANT is an element of Flying-Flapping-Wings, then (Anatomical-Resource-Required VOLANT Wing-Animal-Body-Part 2)."))

(defrelation Space-In-Ahoc
             (Name-In-Cyc Space-In-Ahoc "#$SpaceInAHOC")
             (Existing-Object-Type Space-In-Ahoc)
             (Subclass-Of Space-In-Ahoc Cavity)
             (Subclass-Of Space-In-Ahoc Human-Occupation-Construct)
             (Set-Or-Collection Space-In-Ahoc)
             (Arity Space-In-Ahoc 1)
             (Documentation Space-In-Ahoc
              "A collection of open spatial regions.  Each element of Space-In-AHOC is a space found inside some instance of Human-Occupation-Construct (= HOC).  Elements include all major spaces inside any Human-Occupation-Construct, including not only rooms (elements of Room-In-A-Construction), but halls, elevator shafts, attics, stairwells, and the spaces inside trains, cars, and airplanes that are designed for human occupation.  Other building parts which are not open spatial regions (e.g., walls, plumbing, etc.) are NOT included in this collection; cf. Part-Of-Building.  Space-In-AHOC is Disjoint-With the collection Outdoor-Location."))

(defrelation Qualitative-Time-Of-Day
             (Name-In-Cyc Qualitative-Time-Of-Day "#$QualitativeTimeOfDay")
             (Temporal-Object-Type Qualitative-Time-Of-Day)
             (Subclass-Of Qualitative-Time-Of-Day Event)
             (Set-Or-Collection Qualitative-Time-Of-Day)
             (Arity Qualitative-Time-Of-Day 1)
             (Documentation Qualitative-Time-Of-Day
              "Instances of Qualitative-Time-Of-Day are Events, not just Time-Intervals.  They are celestial events such as instances of Dawn, Morning, Evening, etc.   On Planet-Earth, each of these is of course synchronized with the daily cycle of the calendar, but its absolute timing (Starting-Point and Ending-Point) depends on the season and the observer's location on the planet's surface."))

(defrelation Research
             (Name-In-Cyc Research "#$Research")
             (Temporal-Stuff-Type Research)
             (Default-Disjoint-Script-Type Research)
             (Subclass-Of Research Human-Activity)
             (Set-Or-Collection Research)
             (Arity Research 1)
             (Documentation Research
              "What some members of ResearchOrganizations do"))

(defrelation Consultant
             (Name-In-Cyc Consultant "#$Consultant")
             (Occupation-Type Consultant)
             (Subclass-Of Consultant Business-Person)
             (Subclass-Of Consultant Professional)
             (Set-Or-Collection Consultant)
             (Arity Consultant 1)
             (Documentation Consultant
              "A collection of persons; a subset of Professional.  Each element of Consultant works with some business in a consulting capacity.  Consultants can be self employed, or they can work for a consulting company."))

(defrelation Consumable-Product
             (Name-In-Cyc Consumable-Product "#$ConsumableProduct")
             (Existing-Stuff-Type Consumable-Product)
             (Product-Type Consumable-Product)
             (Subclass-Of Consumable-Product Tangible-Product)
             (Set-Or-Collection Consumable-Product)
             (Arity Consumable-Product 1)
             (Documentation Consumable-Product
              "A collection of tangible stuff; a subset of Tangible-Product.  Each element of Consumable-Product is a product of which any portion can be used only once.  A portion of a Consumable-Product is `used up', i.e., destroyed or transformed into an unusable or waste form, during normal use.  Note: `consumable' here does mean necessarily consumed by mouth; the consumption may be any use of the product."))

(defrelation |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "LANGUAGE-RELATED-OBJECT")|
             (Skolem-Object
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "LANGUAGE-RELATED-OBJECT")|)
             (Collection
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "LANGUAGE-RELATED-OBJECT")|)
             (Subclass-Of
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "LANGUAGE-RELATED-OBJECT")|
              Communication-Convention)
             (Set-Or-Collection
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "LANGUAGE-RELATED-OBJECT")|)
             (Arity
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "LANGUAGE-RELATED-OBJECT")|
              1))

(defrelation Composite-Attribute-Type
             (Name-In-Cyc Composite-Attribute-Type "#$CompositeAttributeType")
             (Collection Composite-Attribute-Type)
             (Subclass-Of Composite-Attribute-Type Attribute-Type)
             (Set-Or-Collection Composite-Attribute-Type)
             (Arity Composite-Attribute-Type 1)
             (Documentation Composite-Attribute-Type
              "A collection of collections.  Every element of Composite-Attribute-Type is a collection of attributes which is a subset of Composite-Attribute (q.v.)."))

(defrelation Has-Title
             (Nth-Domain Has-Title 1 Person)
             (Nth-Domain Has-Title 2 Title)
             (Nth-Domain Has-Title 3 Organization)
             (Name-In-Cyc Has-Title "#$hasTitle")
             (Ternary-Predicate Has-Title)
             (Relation Has-Title)
             (Arity Has-Title 3)
             (Documentation Has-Title
              "The predicate Has-Title relates a person to a title that s/he holds in an organization.  (Has-Title PER TITLE ORG) means that the Person PER has the Title TITLE in the Organization ORG.  Elements of Title are linguistic objects usually related to positions or other qualifications that a person has.  A person generally has a title only while actually holding the related position; e.g., (Has-Title Lenat Principal-Scientist-Title Cyc-Group) tells us Doug Lenat's title at the Cyc Project while under MCC's organizational structure.  A noteworthy class of exceptions is Courtesy-Title (q.v.), which include forms of address such as `Mr.' and `Ms.', plus some titles which by courtesy the holders retain for life, such as (in the U.S.) `President' and military rank designations (e.g., officers retired from the armed services).
Note: Elements of Title belong to the set Linguistic-Object, while positions themselves are represented by persons (cf. Position-Type).  Cf. Has-Position-In."))

(defrelation Pure-Compound-Type
             (Name-In-Cyc Pure-Compound-Type "#$PureCompoundType")
             (Collection Pure-Compound-Type)
             (Subclass-Of Pure-Compound-Type Tangible-Stuff-Composition-Type)
             (Set-Or-Collection Pure-Compound-Type)
             (Arity Pure-Compound-Type 1)
             (Documentation Pure-Compound-Type
              "A collection of collections.  Every instance of Pure-Compound-Type is a collection which is a subset of both Pure-Compound and of some particular Chemical-Compound-Type (e.g., Carbon, Water, Cellulose).  Each instance of Pure-Compound-Type is defined ONLY by the properties of its Chemical-Compound-Type, and of Pure-Compound (q.v.).  For example, (Pure-Fn Fructose) is an instance of Pure-Compound-Type, but the subsets of Fructose, such as (say) `pure fructose derived from honey' would not be instances of Pure-Compound-Type."))

(defrelation Device-State
             (Name-In-Cyc Device-State "#$DeviceState")
             (Unordered-Attribute-Type Device-State)
             (Subclass-Of Device-State Attribute-Value)
             (Set-Or-Collection Device-State)
             (Arity Device-State 1)
             (Documentation Device-State
              "A collection of states that devices can be in, including: Device-On, Device-Off, Recording-States, Cocked-State, Folded, Off-Hook, Unlocked, and many others."))

(defrelation Trapping
             (Name-In-Cyc Trapping "#$Trapping")
             (Script-Type Trapping)
             (Temporal-Object-Type Trapping)
             (Subclass-Of Trapping Taking-Custody-Of-Animal)
             (Set-Or-Collection Trapping)
             (Arity Trapping 1)
             (Documentation Trapping
              "A collection of events.  In an instance of Trapping, an animal is taken into custody by using a device that physically captures the body of the animal.  The animal may or may not be killed in the event."))

(defrelation |(WAVE-EMISSION-FN VISIBLE-LIGHT)|
             (Skolem-Object |(WAVE-EMISSION-FN VISIBLE-LIGHT)|)
             (Script-Type |(WAVE-EMISSION-FN VISIBLE-LIGHT)|)
             (Temporal-Stuff-Type |(WAVE-EMISSION-FN VISIBLE-LIGHT)|)
             (Subclass-Of |(WAVE-EMISSION-FN VISIBLE-LIGHT)| Emitting-A-Wave)
             (Set-Or-Collection |(WAVE-EMISSION-FN VISIBLE-LIGHT)|)
             (Arity |(WAVE-EMISSION-FN VISIBLE-LIGHT)| 1)
             (Documentation |(WAVE-EMISSION-FN VISIBLE-LIGHT)|
              "A collection of events; a subset of Emitting-A-Wave. Each element of (Wave-Emission-Fn Visible-Light) is an event in which an instance of Visible-Light is emitted from some Wave-Source. Examples: the burning of a candle; the shining of a light bulb; a firefly's glowing. Almost every instance of (Wave-Emission-Fn Visible-Light) will also emit instances of other types of Electromagnetic-Radiation other than Visible-Light."))

(defrelation Airline-Company
             (Name-In-Cyc Airline-Company "#$AirlineCompany")
             (Existing-Object-Type Airline-Company)
             (Subclass-Of Airline-Company Business)
             (Subclass-Of Airline-Company Transportation-Company)
             (Set-Or-Collection Airline-Company)
             (Arity Airline-Company 1)
             (Documentation Airline-Company
              "The collection of all air transportation companies.  An element of Airline-Company is a Transportation-Company that operates airplanes to transport goods or people in exchange for money."))

(defrelation Title
             (Name-In-Cyc Title "#$Title")
             (Linguistic-Object-Type Title)
             (Subclass-Of Title Linguistic-Object)
             (Set-Or-Collection Title)
             (Arity Title 1)
             (Documentation Title
              "The collection of all titles: proper nouns (noun phrases) that relate to a person's status and/or function/role in an organization.  E.g., Senior-Vice-President-Title, Member-Of-Technical-Staff-Title, Reverend-Title, Father-Title, Miss, etc.  Note that this concept is not (closely) related to the title of a book or work of art, nor to the nicknames for a place, etc."))

(defrelation Published-Material
             (Name-In-Cyc Published-Material "#$PublishedMaterial")
             (Existing-Object-Type Published-Material)
             (Subclass-Of Published-Material Information-Bearing-Object)
             (Set-Or-Collection Published-Material)
             (Arity Published-Material 1)
             (Documentation Published-Material
              "A collection of information bearing objects (IBOs).  Each element of Published-Material is an IBO that belongs to a set of multiple copies which have identical information contents, embodied in similar physical form, and which have been produced for distribution.  Published-Material includes the published elements of Textual-Material (e.g., books and magazines); software duplicated for sale or distribution; and mass-produced elements of Recorded-Sound-Product.  Periodicals, advertisements, commercial films, annual business reports, tax schedules, all are sub-classes of Published-Material.  Examples of Published-Material: Cycorp's copy of `The New York Times' for July 4, 1996; my paperback copy of the novel `Parade's End'; Bill's copy of OS/2; Lisa's copy of `The White Album'.  See also Specified-Information-Bearing-Thing-Type."))

(defrelation United-States-Person
             (Name-In-Cyc United-States-Person "#$UnitedStatesPerson")
             (Nationality United-States-Person)
             (Subclass-Of United-States-Person Person)
             (Set-Or-Collection United-States-Person)
             (Arity United-States-Person 1)
             (Documentation United-States-Person
              "A collection of persons.  Each element of United-States-Person is a person who either was born in the United-States-Of-America or is currently among that country's Citizens."))

(deffunction Kilometers-Per-Hour
   (Args-Isa Kilometers-Per-Hour Real-Number)
   (Result-Instance-Of Kilometers-Per-Hour Scalar-Interval)
   (Result-Instance-Of Kilometers-Per-Hour Speed)
   (Result-Instance-Of Kilometers-Per-Hour Vector-Interval)
   (Name-In-Cyc Kilometers-Per-Hour "#$KilometersPerHour")
   (Unit-Of-Speed Kilometers-Per-Hour)
   (Mks-Unit-Of-Measure Kilometers-Per-Hour)
   (Function Kilometers-Per-Hour)
   (Documentation Kilometers-Per-Hour
    "(Kilometers-Per-Hour NUMBER) returns a dimensionless rate or speed of NUMBER kilometers per hour."))

(deffunction Times-Fn
   (Args-Isa Times-Fn Scalar-Interval)
   (Result-Instance-Of Times-Fn Scalar-Interval)
   (Name-In-Cyc Times-Fn "#$TimesFn")
   (Function-From-Quantities-To-Quantities Times-Fn)
   (Commutative-Relation Times-Fn)
   (Variable-Arity-Relation Times-Fn)
   (Function Times-Fn)
   (Documentation Times-Fn
    "Times-Fn is the multiplication operator, a mathematical function.  Times-Fn takes a variable number of quantities as arguments, and it yields a new quantity which is the result of multiplying the arguments together.  (Times-Fn 2 3 4) returns 24.  See also Variable-Arity-Relation."))

(defrelation Fear
             (Name-In-Cyc Fear "#$Fear")
             (Feeling-Attribute-Type Fear)
             (Subclass-Of Fear Feeling-Attribute)
             (Set-Or-Collection Fear)
             (Arity Fear 1)
             (Documentation Fear
              "Unpleasant emotion manifested by painful agitation in the presence or awareness of danger.   Fear implies anxiety and loss of courage.  This is a collection; for an explanation of a typical Feeling-Attribute-Type, see Happiness.   A more specialized Feeling-Attribute-Type than Fear is Dread."))

(defrelation Calendar-Month
             (Name-In-Cyc Calendar-Month "#$CalendarMonth")
             (Collection Calendar-Month)
             (Calendar-Covering-Type Calendar-Month)
             (Subclass-Of Calendar-Month Date)
             (Set-Or-Collection Calendar-Month)
             (Arity Calendar-Month 1)
             (Documentation Calendar-Month
              "The collection of months that make up the calendar.  This is a collection of disjoint but contiguous time intervals.  One of its subsets is February, which is the set of all Februaries; one of its elements is February 1992 (Month-Fn February (Year-Fn 1992)), a particular time interval."))

(defrelation Unit-Of-Concentration
             (Name-In-Cyc Unit-Of-Concentration "#$UnitOfConcentration")
             (Interconvertible-Unit-Type Unit-Of-Concentration)
             (Subclass-Of Unit-Of-Concentration Unit-Of-Measure)
             (Set-Or-Collection Unit-Of-Concentration)
             (Arity Unit-Of-Concentration 1)
             (Documentation Unit-Of-Concentration
              "The collection of functions which return elements of Concentration-Strength-Generic (i.e., mass of some element of Existing-Stuff-Type per unit of Volume).  E.g., (Grams-Per-Milliliter 0.1) denotes a concentration of 0.1 grams per milliliter of one substance within another."))

(defrelation Circulatory-System
             (Name-In-Cyc Circulatory-System "#$CirculatorySystem")
             (Animal-Body-Part-Type Circulatory-System)
             (Subclass-Of Circulatory-System Static-Situation)
             (Subclass-Of Circulatory-System Animal-Body-Part)
             (Set-Or-Collection Circulatory-System)
             (Arity Circulatory-System 1)
             (Documentation Circulatory-System
              "The collection of all animals' circulatory systems.  A Circulatory-System is a system of organs and body parts, found in Vertebrates and some other animals, which function together to circulate the animal's blood throughout its body, supplying needed substances to its cells and removing waste products from them.  A Circulatory-System is generally composed of Blood-Vessels, Heart, Spleen, etc., considered as an interrelated functional system of each animal. 
Note:  It generally has a close linkage to the respiration system, as the blood comes in contact with fresh air to divest itself of the waste products it has collected from the body's cells and to acquire new needed substances to take to the body's cells."))

(defobject |(MEDIUM-AMOUNT-FN ELASTICITY)|
   (Scalar-Interval |(MEDIUM-AMOUNT-FN ELASTICITY)|)
   (Elasticity |(MEDIUM-AMOUNT-FN ELASTICITY)|)
   (Skolem-Object |(MEDIUM-AMOUNT-FN ELASTICITY)|)
   (Documentation |(MEDIUM-AMOUNT-FN ELASTICITY)|
    "will eventually re-expand after compression"))

(defrelation Psychological-Ailment
             (Name-In-Cyc Psychological-Ailment "#$PsychologicalAilment")
             (Physiological-Condition-Type Psychological-Ailment)
             (Subclass-Of Psychological-Ailment Ailment-Condition)
             (Set-Or-Collection Psychological-Ailment)
             (Arity Psychological-Ailment 1)
             (Documentation Psychological-Ailment
              "The collection of ailments that are classified as psychological due to their origin and/or manifestation in the mind of the sufferer rather than (or at least in addition to, and perhaps causing) manifestations in the sufferer's body.  Having a brain tumor is not an element of this collection, but imagining that you have one is an element of Psychological-Ailment, and so is the deep case of depression you fall into once you believe (rightly or wrongly) that you have a brain tumor.  Some subsets of this collection are the collections Phobia, Depression-Psychological-Condition, and Panic-Attack."))

(defrelation Local-Government-Organization
             (Name-In-Cyc Local-Government-Organization
              "#$LocalGovernmentOrganization")
             (Existing-Object-Type Local-Government-Organization)
             (Subclass-Of Local-Government-Organization
              Legal-Government-Organization)
             (Subclass-Of Local-Government-Organization Local-Organization)
             (Set-Or-Collection Local-Government-Organization)
             (Arity Local-Government-Organization 1)
             (Documentation Local-Government-Organization
              "A collection of government organizations; a subset of Local-Organization.  An element of Local-Government-Organization is any government organization -- whether federal, state, county, or municipal -- that is specific to, i.e., has jurisdiction and/or services generally limited to, one (local) location.  For example, a Board of Education of a particular school district is a Local-Government-Organization, because its authority extends to schools in a limited (local) area; in the U.S., such a Board answers to another Local-Government-Organization, typically a city or township government.  In another example, an element of Veterans-Administration-Medical-Center is a local organization in terms of its service area, but bureaucratically it belongs to the U.S. Federal government; thus, Veterans-Administration-Medical-Center is a subset of both Local-Government-Organization and US-Federal-Government-Organization."))

(defrelation Emitting-An-Object
             (Name-In-Cyc Emitting-An-Object "#$EmittingAnObject")
             (Temporal-Object-Type Emitting-An-Object)
             (Default-Disjoint-Script-Type Emitting-An-Object)
             (Subclass-Of Emitting-An-Object Emission)
             (Subclass-Of Emitting-An-Object Translation-Location-Change)
             (Set-Or-Collection Emitting-An-Object)
             (Arity Emitting-An-Object 1)
             (Documentation Emitting-An-Object
              "A collection of events; and a subset of Emission.  An instance of Emitting-An-Object is an emission event in which there is some Partially-Tangible which is the Object-Emitted, i.e., the thing which `comes out' of the Emitter of the event.  The Object-Emitted goes from (From-Location) a place inside of the Emitter to (To-Location) some place that is not within the Emitter.  The Emitter plays an active role (Done-By and Provider-Of-Motive-Force) in the emission.  Examples: the birth of a baby, a bullet shot from a gun, a venonous snake depositing poison.  Negative examples:  a person leaving a building (the building is not active), throwing a ball (the ball was not inside the person before the throwing)."))

(defrelation Naval-Ship-Base
             (Name-In-Cyc Naval-Ship-Base "#$NavalShipBase")
             (Existing-Object-Type Naval-Ship-Base)
             (Subclass-Of Naval-Ship-Base Contact-Location)
             (Subclass-Of Naval-Ship-Base Humanly-Occupied-Spatial-Object)
             (Subclass-Of Naval-Ship-Base Grounds-Of-Organization)
             (Set-Or-Collection Naval-Ship-Base)
             (Arity Naval-Ship-Base 1)
             (Documentation Naval-Ship-Base
              "The collection of all naval bases with facilities for Modern-Naval-Ships, or operated by a Navy."))

(defrelation Sperm-Cell
             (Name-In-Cyc Sperm-Cell "#$SpermCell")
             (Existing-Object-Type Sperm-Cell)
             (Subclass-Of Sperm-Cell Eukaryotic-Cell)
             (Subclass-Of Sperm-Cell Animal-Blo)
             (Set-Or-Collection Sperm-Cell)
             (Arity Sperm-Cell 1)
             (Documentation Sperm-Cell
              "A subset of Cell.  Sperm-Cell is the collection of specialized gamete cells which are produced by meiosis in the reproductive tract of male animals.  Each sperm cell usually has half the number of chromosomes that regular body cells do, and when it fertilizes an ovum, the ovum becomes a zygote and continues to develop into a mature individual.  See also Male-Animal, Sexual-Reproduction-Event."))

(defobject Sitting-Posture
   (Posture Sitting-Posture)
   (Name-In-Cyc Sitting-Posture "#$SittingPosture")
   (Documentation Sitting-Posture
    "The attribute that describes, most generically, an Animal in a seated position.  The exact nature of the position depends upon the typical body structure of the animal's species."))

(defrelation Taking-Custody-Of-Animal
             (Name-In-Cyc Taking-Custody-Of-Animal "#$TakingCustodyOfAnimal")
             (Script-Type Taking-Custody-Of-Animal)
             (Temporal-Object-Type Taking-Custody-Of-Animal)
             (Subclass-Of Taking-Custody-Of-Animal Transferring-Possession)
             (Subclass-Of Taking-Custody-Of-Animal Taking-Something)
             (Set-Or-Collection Taking-Custody-Of-Animal)
             (Arity Taking-Custody-Of-Animal 1)
             (Documentation Taking-Custody-Of-Animal
              "A collection of events.  In an instance of Taking-Custody-Of-Animal, an Agent takes physical control of a (human or non-human) animal.  This collection includes trapping animals, kidnapping people (or animals), and also what the police do after they arrest a person for a crime.  The animal may or may not be taken alive."))

(defrelation Human-Given-Name-String
             (Name-In-Cyc Human-Given-Name-String "#$HumanGivenNameString")
             (Id-String-Type Human-Given-Name-String)
             (Subclass-Of Human-Given-Name-String Id-String)
             (Subclass-Of Human-Given-Name-String Human-Name-String)
             (Set-Or-Collection Human-Given-Name-String)
             (Arity Human-Given-Name-String 1)
             (Documentation Human-Given-Name-String
              "The collection of non-family name strings such ``Betty'' and ``Phillip'' which are given as first or middle names (in most Western countries), usually shortly after birth.   This also includes nicknames like ``Red'' or ``The Refrigerator''.
Note: elements of this collection are really just character strings, not reified concepts like ''TheNameBetty'' that might be used to represent character strings."))

(defrelation Infection
             (Name-In-Cyc Infection "#$Infection")
             (Physiological-Condition-Type Infection)
             (Subclass-Of Infection Ailment-Condition)
             (Set-Or-Collection Infection)
             (Arity Infection 1)
             (Documentation Infection
              "A collection of ailments; a subset of Ailment-Condition.  An instance of Infection is a disease condition in which microorganisms are abnormally present (or abnormally numerous) within an animal's body.  The microorganisms involved in an infection may be some instance of the collections Bacterium, Virus, or Protista-Kingdom.  Specialized subsets of Infection include: Bronchitis, Tonsillitis, Sexually-Transmitted-Infection (which has further subsets).  A particular case of tonsilitis is thus an element of the collection Infection."))

(defrelation Transportation-Event
             (Name-In-Cyc Transportation-Event "#$TransportationEvent")
             (Temporal-Object-Type Transportation-Event)
             (Subclass-Of Transportation-Event Translation-Location-Change)
             (Subclass-Of Transportation-Event Translation-Complete)
             (Subclass-Of Transportation-Event Translation-Single-Path)
             (Subclass-Of Transportation-Event
              Causing-Another-Objects-Translational-Motion)
             (Set-Or-Collection Transportation-Event)
             (Arity Transportation-Event 1)
             (Documentation Transportation-Event
              "A collection of events.  An instance of Transportation-Event is an event in which one object (in the role of Transporter) aids in the translational movement of another object (having the role of Transportees), so that both objects move together along the same Pathway-Complete.  Optionally, one of these objects, or some third object moving along with them, provides the force to make the movement happen (Provider-Of-Motive-Force).  Examples of transportation events include automobile transporation, dogs pulling goods on a sled, a wagon with groceries rolling down a hill, a person carrying a suitcase down the street, etc.  In that last case, note that the Transporter is the suitcase, not the person.  Things which are NOT Transportation-Events (as defined above): a river conveying some flotsam, the wind blowing a leaf, a conveyor belt moving a widget to the next person on the assembly line, or a walking beast of burden without Transportees on it.  In the first 3 of those, the would-be Transporter doesn't actually change its overall location; in the fourth case, the unburdened beast has no Transportees.  
Note:  This is a good example, by the way, of how Cyc concepts must be, and are, less ambiguous than words in English or any other natural language.  The cost of this is a larger vocabulary that must be used carefully, but the benefits are the ability to share knowledge in un-preconceived ways with others who subscribe to the same set of terms and intended meanings."))

(defrelation Liquid-Asset
             (Name-In-Cyc Liquid-Asset "#$LiquidAsset")
             (Existing-Object-Type Liquid-Asset)
             (Subclass-Of Liquid-Asset Something-Existing)
             (Set-Or-Collection Liquid-Asset)
             (Arity Liquid-Asset 1)
             (Documentation Liquid-Asset
              "A collection of objects.  Each element of Liquid-Asset is either an instance of Currency or some asset that is readily convertible to currency by selling or borrowing againstit.  Examples: stocks, bonds, money market accounts."))

(defrelation |(TRANSPORT-VIA-FN BUS-ROAD-VEHICLE)|
             (Skolem-Object |(TRANSPORT-VIA-FN BUS-ROAD-VEHICLE)|)
             (Temporal-Stuff-Type |(TRANSPORT-VIA-FN BUS-ROAD-VEHICLE)|)
             (Script-Type |(TRANSPORT-VIA-FN BUS-ROAD-VEHICLE)|)
             (Subclass-Of |(TRANSPORT-VIA-FN BUS-ROAD-VEHICLE)|
              Transportation-Event)
             (Subclass-Of |(TRANSPORT-VIA-FN BUS-ROAD-VEHICLE)|
              |(TRANSPORT-VIA-FN BUS-ROAD-VEHICLE)|)
             (Subclass-Of |(TRANSPORT-VIA-FN BUS-ROAD-VEHICLE)|
              |(TRANSPORT-VIA-FN TRANSPORTATION-DEVICE-VEHICLE)|)
             (Subclass-Of |(TRANSPORT-VIA-FN BUS-ROAD-VEHICLE)|
              |(TRANSPORT-VIA-FN LAND-TRANSPORTATION-DEVICE)|)
             (Subclass-Of |(TRANSPORT-VIA-FN BUS-ROAD-VEHICLE)|
              |(TRANSPORT-VIA-FN TRANSPORTATION-DEVICE)|)
             (Subclass-Of |(TRANSPORT-VIA-FN BUS-ROAD-VEHICLE)|
              |(TRANSPORT-VIA-FN ROAD-VEHICLE)|)
             (Set-Or-Collection |(TRANSPORT-VIA-FN BUS-ROAD-VEHICLE)|)
             (Arity |(TRANSPORT-VIA-FN BUS-ROAD-VEHICLE)| 1))

(defrelation Name-Of-Agent
             (Subrelation-Of Name-Of-Agent Name-String)
             (Domain Name-Of-Agent Agent)
             (Range Name-Of-Agent Proper-Name-String)
             (Name-In-Cyc Name-Of-Agent "#$nameOfAgent")
             (Intangible-Object-Predicate Name-Of-Agent)
             (Slot Name-Of-Agent)
             (Relation Name-Of-Agent)
             (Arity Name-Of-Agent 2)
             (Binary-Relation Name-Of-Agent)
             (Documentation Name-Of-Agent
              "(Name-Of-Agent AGT STRING) means STRING is the name(s) of AGT.  AGT can be a Person, Animal, Organization, etc.  In most contexts, this means that AGT may normally be called STRING, in that context, and should therefore include their Salutation if the context is a formal one, should omit their Last-Name if it is unambiguous and the context is an intimate one, etc.."))

(defrelation Volume
             (Name-In-Cyc Volume "#$Volume")
             (Derived-Numeric-Attribute-Type Volume)
             (Subclass-Of Volume Scalar-Interval)
             (Subclass-Of Volume Physical-Attribute)
             (Set-Or-Collection Volume)
             (Arity Volume 1)
             (Documentation Volume
              "A collection of physical attributes.  Each element of Volume is an amount of three-dimensional space occupied by one or more three-dimensional objects.  Elements of Volume may be either a fixed interval, such as the volume of a five-gallon aquarium, or a range, such as 'fits in a bread box'.  See Unit-Of-Volume for the units used by Cyc to measure volumes."))

(defrelation Arm
             (Name-In-Cyc Arm "#$Arm")
             (Symmetric-Anatomical-Part-Type Arm)
             (Subclass-Of Arm Appendage-Animal-Body-Part)
             (Set-Or-Collection Arm)
             (Arity Arm 1)
             (Documentation Arm
              "The collection of all animal arms.  An Arm of an animal is one of its Animal-Body-Parts, more particularly one of its appendages, a limb which it uses for manipulation moreso than for locomotion.  A Hand is considered part of an Arm."))

(defrelation Visual-Mark
             (Name-In-Cyc Visual-Mark "#$VisualMark")
             (Existing-Stuff-Type Visual-Mark)
             (Subclass-Of Visual-Mark Visual-Information-Source)
             (Set-Or-Collection Visual-Mark)
             (Arity Visual-Mark 1)
             (Documentation Visual-Mark
              "A collection of information bearing things (IBTs); a subset of Visual-Information-Source.  Each element of Visual-Mark is a visible marking on some object.  Visual markings may be applied to an object using ink, paint, or pencil; they may be engraved into or molded out of the object's material; they may be made of other objects affixed to or resting on the object (e.g., a plaque bearing a house number); or they may consist of contrasting areas of color or light level (e.g., markings on a computer screen)."))

(defrelation Biological-Stage-Of-Development
             (Name-In-Cyc Biological-Stage-Of-Development
              "#$BiologicalStageOfDevelopment")
             (Existing-Object-Type Biological-Stage-Of-Development)
             (Subclass-Of Biological-Stage-Of-Development
              Biological-Living-Object)
             (Set-Or-Collection Biological-Stage-Of-Development)
             (Arity Biological-Stage-Of-Development 1)
             (Documentation Biological-Stage-Of-Development
              "The collection of all the particular stages of existence of all living things.  Each element of Biological-Stage-Of-Development is a spatiotemporal portion of the life of some instance of Biological-Living-Object.  Typical cases (i.e., subsets) include Larva, Pupa, Adult-Animal, etc.  For example, the pupal stage of a particular Monarch butterfly, or my American Beauty rose bush during the stage when it was blooming last year, or Teddy Roosevelt during his 13th year.  See also the related Cyc predicates Developmental-Successor and Developmental-Stages.



"))

(defrelation Intelligent-Agent
             (Group-Fn Intelligent-Agent |(GROUP-FN INTELLIGENT-AGENT)|)
             (Name-In-Cyc Intelligent-Agent "#$IntelligentAgent")
             (Existing-Object-Type Intelligent-Agent)
             (Subclass-Of Intelligent-Agent Agent)
             (Set-Or-Collection Intelligent-Agent)
             (Arity Intelligent-Agent 1)
             (Documentation Intelligent-Agent
              "The collection of all intelligent agents.  Each element of Intelligent-Agent is an agent that is capable of having knowledge which it employs in its actions.  An intelligent agent Knows-About certain things, and having Beliefs (and possibly Goals) concerning those things may influence its actions.  In addition to persons, Cyc considers certain social beings, such as business and government organizations, and intelligent machines, to be intelligent agents.  See also Agent, Performed-By."))

(defrelation Inter-Arg-Isa5-1
             (Nth-Domain Inter-Arg-Isa5-1 1 Quintary-Predicate)
             (Nth-Domain Inter-Arg-Isa5-1 2 Collection)
             (Nth-Domain Inter-Arg-Isa5-1 3 Collection)
             (Name-In-Cyc Inter-Arg-Isa5-1 "#$interArgIsa5-1")
             (Ternary-Predicate Inter-Arg-Isa5-1)
             (Relation Inter-Arg-Isa5-1)
             (Arity Inter-Arg-Isa5-1 3)
             (Documentation Inter-Arg-Isa5-1
              "(Inter-Arg-Isa5-1 PRED INDEPENDENT-ARG-COL DEPENDENT-ARG-COL) Base-KB) means that, when an instance of INDEPENDENT-ARG-COL appears as the fifth argument to PRED, the first argument in that assertion is constrained to be an instance of DEPENDENT-ARG-COL."))

(defobject Microwaved
   (Preparation-Attribute Microwaved)
   (Subattribute-Of Microwaved Cooked)
   (Name-In-Cyc Microwaved "#$Microwaved")
   (Documentation Microwaved
    "The attribute Microwaved is a specialized form of Cooked.  Food that is Microwaved has been prepared in an event of Microwaving, using a Microwave-Oven."))

(defobject Hungry
   (Level-Of-Hunger Hungry)
   (Order-Of-Magnitude-Interval Hungry)
   (Name-In-Cyc Hungry "#$Hungry")
   (Documentation Hungry "Hungry"))

(defrelation |(THE-COVERING GAINING-USER-RIGHTS LOSING-USER-RIGHTS)|
             (Skolem-Object
              |(THE-COVERING GAINING-USER-RIGHTS LOSING-USER-RIGHTS)|)
             (Set-Mathematical
              |(THE-COVERING GAINING-USER-RIGHTS LOSING-USER-RIGHTS)|)
             (Subclass-Of
              |(THE-COVERING GAINING-USER-RIGHTS LOSING-USER-RIGHTS)| Thing)
             (Set-Or-Collection
              |(THE-COVERING GAINING-USER-RIGHTS LOSING-USER-RIGHTS)|)
             (Arity |(THE-COVERING GAINING-USER-RIGHTS LOSING-USER-RIGHTS)| 1))

(defrelation Inter-Arg-Isa4-2
             (Nth-Domain Inter-Arg-Isa4-2 1 Predicate)
             (Nth-Domain Inter-Arg-Isa4-2 2 Collection)
             (Nth-Domain Inter-Arg-Isa4-2 3 Collection)
             (Name-In-Cyc Inter-Arg-Isa4-2 "#$interArgIsa4-2")
             (Ternary-Predicate Inter-Arg-Isa4-2)
             (Relation Inter-Arg-Isa4-2)
             (Arity Inter-Arg-Isa4-2 3)
             (Documentation Inter-Arg-Isa4-2
              "(Inter-Arg-Isa4-2 PRED INDEPENDENT-ARG-COL DEPENDENT-ARG-COL) Base-KB) means that, when an instance of INDEPENDENT-ARG-COL appears as the fourth argument to PRED, the second argument in that assertion is constrained to be an instance of DEPENDENT-ARG-COL."))

(defrelation Spacecraft
             (Transport-Via-Fn Spacecraft |(TRANSPORT-VIA-FN SPACECRAFT)|)
             (Name-In-Cyc Spacecraft "#$Spacecraft")
             (Existing-Object-Type Spacecraft)
             (Subclass-Of Spacecraft Transportation-Device)
             (Set-Or-Collection Spacecraft)
             (Arity Spacecraft 1)
             (Documentation Spacecraft
              "The collection of transportation devices deployed entirely in outer space, or whose trajectories leave the atmosphere of the planet they're launched from, in order to orbit the planet or to travel away from it beyond its gravitational field."))

(defrelation Electronic-Device
             (Name-In-Cyc Electronic-Device "#$ElectronicDevice")
             (Product-Type Electronic-Device)
             (Existing-Object-Type Electronic-Device)
             (Subclass-Of Electronic-Device Tangible-Product)
             (Subclass-Of Electronic-Device Electrical-Device)
             (Set-Or-Collection Electronic-Device)
             (Arity Electronic-Device 1)
             (Documentation Electronic-Device
              "A collection of devices which use electronic circuitry.  More specifically, any instance of Electronic-Device uses electricity to convey information and not just for power.  Usually transistors, diodes, or other semiconductor circuitry are involved."))

(defrelation Air-Force-Personnel
             (Name-In-Cyc Air-Force-Personnel "#$AirForcePersonnel")
             (Occupation-Type Air-Force-Personnel)
             (Subclass-Of Air-Force-Personnel Military-Person)
             (Set-Or-Collection Air-Force-Personnel)
             (Arity Air-Force-Personnel 1)
             (Documentation Air-Force-Personnel
              "A collection of people, a subset 
of Military-Person. Each element of this collection is
somebody who works for an Air-Force."))

(defrelation Local-Organization
             (Name-In-Cyc Local-Organization "#$LocalOrganization")
             (Existing-Object-Type Local-Organization)
             (Subclass-Of Local-Organization Organization)
             (Set-Or-Collection Local-Organization)
             (Arity Local-Organization 1)
             (Documentation Local-Organization
              "A collection of organizations.  An element of Local-Organization is an organization having local `scope' -- that is, members distributed in a local area (a Neighborhood, City, rural region, etc.) or having a local area of activity and concern, as opposed to statewide, national, or international organizations."))

(defobject Rigid
   (Physical-Structural-Attribute Rigid)
   (Name-In-Cyc Rigid "#$Rigid")
   (Documentation Rigid
    "A physical attribute.  Rigid is the Physical-Structural-Attribute of solids which are stiff--neither flexible nor foldable nor elastic.  Examples of rigid things: bricks, wooden boards, steel.  Non-rigid things: sand, rubber, cloth.  Borderline: lampshades."))

(defrelation |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "SIZE")|
             (Skolem-Object
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "SIZE")|)
             (Measurable-Attribute-Type
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "SIZE")|)
             (Subclass-Of
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "SIZE")|
              Physical-Attribute)
             (Set-Or-Collection
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "SIZE")|)
             (Arity |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "SIZE")| 1))

(defrelation Physiological-Condition-Type
             (Name-In-Cyc Physiological-Condition-Type
              "#$PhysiologicalConditionType")
             (Collection Physiological-Condition-Type)
             (Subclass-Of Physiological-Condition-Type Script-Type)
             (Set-Or-Collection Physiological-Condition-Type)
             (Arity Physiological-Condition-Type 1)
             (Documentation Physiological-Condition-Type
              "A collection of collections.  Each Physiological-Condition-Type is a coherent set of Physiological-Conditions characterizing some non-instantaneous aspect of an organism.  Some sample elements are: Menopause, Sickle-Cell-Anemia, Infection, Malnutrition, etc."))

(defrelation Device-Single-User
             (Name-In-Cyc Device-Single-User "#$Device-SingleUser")
             (Existing-Object-Type Device-Single-User)
             (Subclass-Of Device-Single-User Partially-Tangible)
             (Subclass-Of Device-Single-User Physical-Device)
             (Set-Or-Collection Device-Single-User)
             (Arity Device-Single-User 1)
             (Documentation Device-Single-User "A collection of devices.  
One can classify devices according to how many simultaneous 
users they typically have.  An instance of Device-Single-User
is any device that typically has/requires exactly one (i.e., 
one and only one) user.  A screwdriver (an instance of 
Screwdriver) is a Device-Single-User, but a grand piano 
(an instance of Grand-Piano) is not.  A borderline non-example 
is a car --- although only one person operates it, several can 
`use' it at once, i.e. derive the value of its primary function 
which is transportation.  So a car is not a Device-Single-User.
A borderline example is a telephone -- although it requires 
two or more users (each on telephones) for meaningful use, 
each phone generally has just one user at a time.  
So a telephone is a Device-Single-User but a telephone-circuit is not."))

(deffunction Meaning-In-System-Fn
   (Nth-Domain Meaning-In-System-Fn 1 Indexed-Info-Source)
   (Nth-Domain Meaning-In-System-Fn 2 Character-String)
   (Result-Instance-Of Meaning-In-System-Fn Thing)
   (Name-In-Cyc Meaning-In-System-Fn "#$MeaningInSystemFn")
   (Reifiable-Function Meaning-In-System-Fn)
   (Function Meaning-In-System-Fn)
   (Arity Meaning-In-System-Fn 2)
   (Function-Arity Meaning-In-System-Fn 1)
   (Binary-Relation Meaning-In-System-Fn)
   (Documentation Meaning-In-System-Fn
    "The function (MeaningInSystemFn INFOSOURCE STRING), applied to a character string or code STRING in some external information system INFOSOURCE, returns whatever concept is meant by that string or code in that system.  For example, the value of (Meaning-In-System-Fn Word-Net-Information ''N221566'') is the concept (or WordNet `synset') represented by the synonyms (rampart|bulwark|wall), meaning 'an embankment built around a space for defensive purposes' in the WordNet system.  The STRING can have any format chosen by the person who builds the representation of the external system; usually it will include some index string that is used as an identifier in the external system.  In addition, the STRING may arbitrarily contain any further characters or information, depending on how the external information is selected and processed.  This function allows you to relate a concept in an external system to an arbitrarily complicated expression composed of Cyc concepts.  If the external concept has a direct, exact mapping to a single Cyc constant, then it is better to use the predicate Synonymous-External-Concept rather than this function.  If the there is a direct correspondence to one Cyc constant, but it is only an approximate correspondence of meaning, you can use Overlapping-External-Concept."))

(defrelation |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "SOURCE-DESTINATION")|
             (Skolem-Object
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "SOURCE-DESTINATION")|)
             (Slot
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "SOURCE-DESTINATION")|)
             (Relation
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "SOURCE-DESTINATION")|)
             (Arity
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "SOURCE-DESTINATION")|
              2)
             (Binary-Relation
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "SOURCE-DESTINATION")|))

(defrelation Nutrient
             (Name-In-Cyc Nutrient "#$Nutrient")
             (Tangible-Stuff-Composition-Type Nutrient)
             (Subclass-Of Nutrient Edible-Stuff)
             (Set-Or-Collection Nutrient)
             (Arity Nutrient 1)
             (Documentation Nutrient
              "A collection of tangible stuff.  Each element of Nutrient is a substances considered necessary or beneficial in the diet of a person or animal.  Nutrients in food or pills are often listed on the package label.  Some types of Nutrient include its subsets Edible-Sodium, Protein, Edible-Calcium, Edible-Iron, Vitamin."))

(defrelation Level-Of-Hunger
             (Name-In-Cyc Level-Of-Hunger "#$LevelOfHunger")
             (Physical-Urge-Type Level-Of-Hunger)
             (Subclass-Of Level-Of-Hunger Internal-Sensory-Attribute)
             (Subclass-Of Level-Of-Hunger Animal-Physiological-Attribute)
             (Subclass-Of Level-Of-Hunger Scalar-Interval)
             (Set-Or-Collection Level-Of-Hunger)
             (Arity Level-Of-Hunger 1)
             (Documentation Level-Of-Hunger
              "A collection of Animal-Physiological-Attributes that express how hungry an Animal is (e.g., Hungry, Not-Hungry, Starving).  These Level-Of-Hunger attributes are the first argument to the predicate Hunger-Level-Of (q.v.)."))

(defrelation Amount-Of-Sales-By-To-During
             (Nth-Domain Amount-Of-Sales-By-To-During 1 Agent)
             (Nth-Domain Amount-Of-Sales-By-To-During 2 Agent)
             (Nth-Domain Amount-Of-Sales-By-To-During 3 Time-Interval)
             (Nth-Domain Amount-Of-Sales-By-To-During 4 Product-Type)
             (Nth-Domain Amount-Of-Sales-By-To-During 5 Money)
             (Nth-Domain-Subclass-Of Amount-Of-Sales-By-To-During 4 Product)
             (Name-In-Cyc Amount-Of-Sales-By-To-During
              "#$amountOfSalesByToDuring")
             (Functional-Predicate Amount-Of-Sales-By-To-During)
             (Quintary-Predicate Amount-Of-Sales-By-To-During)
             (Relation Amount-Of-Sales-By-To-During)
             (Arity Amount-Of-Sales-By-To-During 5)
             (Documentation Amount-Of-Sales-By-To-During
              "The predicate Amount-Of-Sales-By-To-During is used to indicate how much of a certain product was sold by a particular seller to a particular buyer.  (Amount-Of-Sales-By-To-During SELLER BUYER TIMEPD PRODTYPE REVENUE) means that, during the Time-Interval TIMEPD, SELLER (an Agent) sold to BUYER (another Agent) some amount of the Product-Type PRODTYPE, worth the total amount of Money REVENUE.  For example, to say that a restaurant, Threadgills, sold $3000 worth of their pumpkin pies to a local grocery store in November, we would say: (Amount-Of-Sales-By-To-During Threadgills HEBAt2222 (Month-Fn November (Year-Fn 1996)) Pumpkin-Pie (Dollar-United-States 3000))."))

(defrelation List-Sequence
             (Name-In-Cyc List-Sequence "#$List-Sequence")
             (Object-Type List-Sequence)
             (Subclass-Of List-Sequence Tuple)
             (Set-Or-Collection List-Sequence)
             (Arity List-Sequence 1)
             (Documentation List-Sequence
              "The collection of all lists or finite sequences of items, as an abstract notion.  A List-Sequence is a special kind of Tuple that is a finite structure with a first and last member-position, and for each member-postion but the last, there is a succesor member-position.   A List-Sequence, like other Tuples, allows repetition of its members -- the same item can appear at multiple member-positions in the list.  A list can be viewed formally as a function from a finite index set of counting numbers, beginning with one or zero, into the domain of Things or perhaps some more restrictive domain.  Unlike Series, List-Sequence is purely abstract and the only implied relation between an item and its successor is the successor relation of the list itself.  List-Sequence is, technically, more specific than Tuple only in that the index set must be the counting numbers in their usual order rather than some other index set."))

(defrelation Electrical-Conductor
             (Name-In-Cyc Electrical-Conductor "#$ElectricalConductor")
             (Existing-Object-Type Electrical-Conductor)
             (Subclass-Of Electrical-Conductor Physical-Conducting-Media)
             (Set-Or-Collection Electrical-Conductor)
             (Arity Electrical-Conductor 1)
             (Documentation Electrical-Conductor
              "A collection of tangible things; a subset of Physical-Conducting-Media.  Each element of Electrical-Conductor is a physical thing that can conduct electricity; e.g., a power cord, an electrical plug, a piece of metal."))

(defrelation Intangible-Individual
             (Name-In-Cyc Intangible-Individual "#$IntangibleIndividual")
             (Object-Type Intangible-Individual)
             (Subclass-Of Intangible-Individual Intangible)
             (Subclass-Of Intangible-Individual Individual)
             (Set-Or-Collection Intangible-Individual)
             (Arity Intangible-Individual 1)
             (Documentation Intangible-Individual "The collection of intangible 
individuals, a subset of Intangible and of Individual.  
The elements of Intangible-Individual do not have mass, volume, 
color, etc.  E.g., hours, ideas, algorithms, integers, 
distances, and so on. However, as a subset of Individual, 
this collection EXCLUDES sets and collections, which are
elements of Intangible but not of Intangible-Individual."))

(defrelation Requires-For-Role
             (Nth-Domain Requires-For-Role 1 Situation)
             (Nth-Domain Requires-For-Role 2 Collection)
             (Nth-Domain Requires-For-Role 3 Role)
             (Name-In-Cyc Requires-For-Role "#$requiresForRole")
             (Ternary-Predicate Requires-For-Role)
             (Relation Requires-For-Role)
             (Arity Requires-For-Role 3)
             (Documentation Requires-For-Role
              "(Requires-For-Role ?SIT ?COL ?ROLE) means that success of the Situation ?SIT depends upon the existence of an element of the collection ?COL playing the role ?ROLE in ?SIT."))

(defrelation Negative-Integer
             (Name-In-Cyc Negative-Integer "#$NegativeInteger")
             (Measurable-Attribute-Type Negative-Integer)
             (Subclass-Of Negative-Integer Integer)
             (Subclass-Of Negative-Integer Negative-Number)
             (Set-Or-Collection Negative-Integer)
             (Arity Negative-Integer 1)
             (Documentation Negative-Integer
              "Negative-Integer is a subset of Integer.  Each element of Negative-Integer is a whole number less than zero; thus, -4, but not 0 or 4 or -4.3."))

(defrelation Movement-Non-Periodic
             (Name-In-Cyc Movement-Non-Periodic "#$Movement-NonPeriodic")
             (Temporal-Object-Type Movement-Non-Periodic)
             (Subclass-Of Movement-Non-Periodic Movement-Event)
             (Set-Or-Collection Movement-Non-Periodic)
             (Arity Movement-Non-Periodic 1)
             (Documentation Movement-Non-Periodic
              "Movement-Non-Periodic is a subset of Movement-Event.  Each element of this collection is an Event in which the Object-Moving does not return to a previous location or orientation (either not at all or only in a chaotic fashion).  E.g., the motion of a basketball being dribbled by Magic Johnson as he runs downcourt.  For contrast, see Movement-Periodic."))

(defrelation Right-Object
             (Name-In-Cyc Right-Object "#$RightObject")
             (Existing-Object-Type Right-Object)
             (Subclass-Of Right-Object Partially-Tangible)
             (Set-Or-Collection Right-Object)
             (Arity Right-Object 1)
             (Documentation Right-Object
              "The collection of objects that are meant for, or are found on and distinctively structured for, the right side of some larger entity or ensemble of parts.  Examples include right hands, right shoes, right automobile turning signals."))

(defrelation Infection-Type
             (Name-In-Cyc Infection-Type "#$InfectionType")
             (Sibling-Disjoint-Collection Infection-Type)
             (Subclass-Of Infection-Type Physiological-Condition-Type)
             (Set-Or-Collection Infection-Type)
             (Arity Infection-Type 1)
             (Documentation Infection-Type
              "Elements are the subsets of Infection.  This type collection may be removed from the KB."))

(defrelation |(TRANSPORT-VIA-FN AUTOMOBILE)|
             (Skolem-Object |(TRANSPORT-VIA-FN AUTOMOBILE)|)
             (Temporal-Stuff-Type |(TRANSPORT-VIA-FN AUTOMOBILE)|)
             (Script-Type |(TRANSPORT-VIA-FN AUTOMOBILE)|)
             (Subclass-Of |(TRANSPORT-VIA-FN AUTOMOBILE)| Transportation-Event)
             (Subclass-Of |(TRANSPORT-VIA-FN AUTOMOBILE)|
              |(TRANSPORT-VIA-FN AUTOMOBILE)|)
             (Subclass-Of |(TRANSPORT-VIA-FN AUTOMOBILE)|
              |(TRANSPORT-VIA-FN TRANSPORTATION-DEVICE-VEHICLE)|)
             (Subclass-Of |(TRANSPORT-VIA-FN AUTOMOBILE)|
              |(TRANSPORT-VIA-FN LAND-TRANSPORTATION-DEVICE)|)
             (Subclass-Of |(TRANSPORT-VIA-FN AUTOMOBILE)|
              |(TRANSPORT-VIA-FN TRANSPORTATION-DEVICE)|)
             (Subclass-Of |(TRANSPORT-VIA-FN AUTOMOBILE)|
              |(TRANSPORT-VIA-FN ROAD-VEHICLE)|)
             (Set-Or-Collection |(TRANSPORT-VIA-FN AUTOMOBILE)|)
             (Arity |(TRANSPORT-VIA-FN AUTOMOBILE)| 1))

(defrelation Skin
             (Name-In-Cyc Skin "#$Skin")
             (Animal-Body-Part-Type Skin)
             (Subclass-Of Skin Solid-Tangible-Thing)
             (Subclass-Of Skin Tactile-Sensor)
             (Subclass-Of Skin Vibration-Through-A-Medium-Sensor)
             (Subclass-Of Skin Sheet-Of-Some-Stuff)
             (Subclass-Of Skin Animal-Body-Part)
             (Set-Or-Collection Skin)
             (Arity Skin 1)
             (Documentation Skin
              "A (piece of) skin serves as outer protective and tactile sensory covering for (part of) an animal's body.  This is the collection of all pieces of skin.  Some examples include TheGoldenFleece (an entire skin) and YulBrynnersScalp (a small portion of his skin)."))

(deffunction Unity
   (Args-Isa Unity Real-Number)
   (Result-Instance-Of Unity Scalar-Interval)
   (Result-Instance-Of Unity Interval-On-Number-Line)
   (Name-In-Cyc Unity "#$Unity")
   (Unit-Of-Measure Unity)
   (Dimensionless-Unit-Of-Measure Unity)
   (Unit-Of-Measure-No-Prefix Unity)
   (Standard-Unit-Of-Measure Unity)
   (Function Unity)
   (Documentation Unity
    "Unity is the standard unit of measure for dimensionless quantities.  Like other elements of Unit-Of-Measure, Unity is a variable-arity function whose (one or two) arguments are instances of Real-Number.  Unlike most other elements of Unit-Of-Measure, Unity returns a dimensionless quantity, simply a real number without physical dimensions attached.  Thus, the value of (Unity .10) is equal to the point scalar 0.10, which is also the same quantity as (Percent 10).  Both (Unity .10) and 0.10 are legitimate instances of Real-Number; however, only 0.10 is a legitimate element of Real-Number (q.v.).  Unity can be used to return a dimensionless real-number interval as well as a point value; e.g., (Unity 3 4) returns the interval that is the range of numbers between 3 and 4, inclusive."))

(defrelation Genetic-Condition
             (Name-In-Cyc Genetic-Condition "#$GeneticCondition")
             (Physiological-Condition-Type Genetic-Condition)
             (Subclass-Of Genetic-Condition Chronic-Condition)
             (Subclass-Of Genetic-Condition Congenital-Condition)
             (Subclass-Of Genetic-Condition Physiological-Condition)
             (Set-Or-Collection Genetic-Condition)
             (Arity Genetic-Condition 1)
             (Documentation Genetic-Condition
              "A collection of physiological conditions.  An instance of Genetic-Condition is an abnormal condition which developed in a particular organism due to that organism's genetic configuration.  Such conditions are not contagious as infections are, but they may be hereditary.  They are often harmful, in fact they are often Ailment-Conditions, such as encephalitis.  Occasionally, though the mutation is beneficial, in which case it would be wrong to also label it an Ailment-Condition."))

(defrelation Inter-Arg-Isa1-3
             (Nth-Domain Inter-Arg-Isa1-3 1 Predicate)
             (Nth-Domain Inter-Arg-Isa1-3 2 Collection)
             (Nth-Domain Inter-Arg-Isa1-3 3 Collection)
             (Name-In-Cyc Inter-Arg-Isa1-3 "#$interArgIsa1-3")
             (Ternary-Predicate Inter-Arg-Isa1-3)
             (Relation Inter-Arg-Isa1-3)
             (Arity Inter-Arg-Isa1-3 3)
             (Documentation Inter-Arg-Isa1-3
              "(Inter-Arg-Isa1-3 PRED INDEPENDENT-ARG-COL DEPENDENT-ARG-COL) Base-KB) means that, when an instance of INDEPENDENT-ARG-COL appears as the first argument to PRED, the third argument in that assertion is constrained to be an instance of DEPENDENT-ARG-COL."))

(defrelation |(TRANSPORT-FN LIQUID-TANGIBLE-THING)|
             (Skolem-Object |(TRANSPORT-FN LIQUID-TANGIBLE-THING)|)
             (Script-Type |(TRANSPORT-FN LIQUID-TANGIBLE-THING)|)
             (Subclass-Of |(TRANSPORT-FN LIQUID-TANGIBLE-THING)|
              Transporting-Goods)
             (Set-Or-Collection |(TRANSPORT-FN LIQUID-TANGIBLE-THING)|)
             (Arity |(TRANSPORT-FN LIQUID-TANGIBLE-THING)| 1))

(defrelation Intensional-Representation-Predicate
             (Name-In-Cyc Intensional-Representation-Predicate
              "#$IntensionalRepresentationPredicate")
             (Predicate-Category Intensional-Representation-Predicate)
             (Subclass-Of Intensional-Representation-Predicate Predicate)
             (Set-Or-Collection Intensional-Representation-Predicate)
             (Arity Intensional-Representation-Predicate 1)
             (Documentation Intensional-Representation-Predicate
              "A collection of predicates.  Each element of Intensional-Representation-Predicate is a predicate used to form assertions about the properties of collections.  These predicates implement the intensional structure of the ontology; e.g., Citizens, Units-Measuring-This-Quantity, Has-Department-Types, Granule-Of-Time, Object-Type-Transported, Contrary-Feelings."))

(defrelation Explosion
             (Name-In-Cyc Explosion "#$Explosion")
             (Temporal-Object-Type Explosion)
             (Script-Type Explosion)
             (Subclass-Of Explosion Decomposition-Process)
             (Subclass-Of Explosion Energy-Conversion-Process)
             (Set-Or-Collection Explosion)
             (Arity Explosion 1)
             (Documentation Explosion
              "A collection of events.  Each instance of Explosion is an event that involve an extremely violent, chaotic release of energy.  It is not exactly controlled, even in the best circumstances, though it may be contained and channelled to do useful work (such as within the cylinders of a car engine, or such as when a hole is blasted for a backyard swimming pool.)"))

(defrelation Pregnancy-Ending-Event
             (Name-In-Cyc Pregnancy-Ending-Event "#$PregnancyEndingEvent")
             (Script-Type Pregnancy-Ending-Event)
             (Temporal-Object-Type Pregnancy-Ending-Event)
             (Subclass-Of Pregnancy-Ending-Event Intrinsic-State-Change-Event)
             (Subclass-Of Pregnancy-Ending-Event Biological-Event)
             (Set-Or-Collection Pregnancy-Ending-Event)
             (Arity Pregnancy-Ending-Event 1)
             (Documentation Pregnancy-Ending-Event
              "The collection of events which terminate a pregnancy, including birth, abortion, and miscarriage."))

(defrelation Rotation-Non-Periodic
             (Name-In-Cyc Rotation-Non-Periodic "#$Rotation-NonPeriodic")
             (Temporal-Object-Type Rotation-Non-Periodic)
             (Subclass-Of Rotation-Non-Periodic Movement-Non-Periodic)
             (Subclass-Of Rotation-Non-Periodic Movement-Rotation)
             (Set-Or-Collection Rotation-Non-Periodic)
             (Arity Rotation-Non-Periodic 1)
             (Documentation Rotation-Non-Periodic
              "The set of all rotational movements in which rotation occurs in a nonperiodic fashion; e.g., the turning of a knob on a kitchen appliance or a radio dial, or movements of a trackball.  See also Rotation-Periodic for the context-sensitive nature of this dichotomy."))

(defrelation Organism-Whole
             (Synonymous-External-Concept Organism-Whole Sensus-Information1997
              "ANIMATE-OBJECT")
             (Name-In-Cyc Organism-Whole "#$Organism-Whole")
             (Existing-Object-Type Organism-Whole)
             (Subclass-Of Organism-Whole Biological-Living-Object)
             (Set-Or-Collection Organism-Whole)
             (Arity Organism-Whole 1)
             (Documentation Organism-Whole
              "The collection of all elements of Biological-Living-Object which are wholes, not parts of other biological living objects (BLOs).  Most members of Organism-Whole are capable of existing and reproducing while physically separate from other organisms (with allowances for sexual reproduction).  Abnormal BLOs which are nonetheless considered to belong to Organism-Whole include elements of Virus, as well as sterile hybrids and colony organisms like those in slime molds or the elements of Portuguese-Man-Of-War.  All of those organisms operate by DNA- and RNA-controlled mechanisms."))

(defrelation Cleaning-Implement
             (Name-In-Cyc Cleaning-Implement "#$CleaningImplement")
             (Existing-Object-Type Cleaning-Implement)
             (Subclass-Of Cleaning-Implement Cleaning-Device)
             (Subclass-Of Cleaning-Implement Hand-Tool)
             (Set-Or-Collection Cleaning-Implement)
             (Arity Cleaning-Implement 1)
             (Documentation Cleaning-Implement "A collection of tools; a subset 
of Hand-Tool and also of Cleaning-Device.  An instance of Cleaning-Implement is any hand-held tool used for cleaning something.  Cleaning implements are used in a wide variety of activities and settings; some subsets include the collections Mop, Dental-Pick, Electric-Tooth-Brush, Wash-Cloth, Facial-Tissue, Shoe-Brush.  Many cleaning implements are intended for wiping, scrubbing, or polishing surfaces to remove patches of Dirt."))

(defrelation Exchangers
             (Subrelation-Of Exchangers Social-Participants)
             (Subrelation-Of Exchangers Performed-By)
             (Subrelation-Of Exchangers Post-Actors)
             (Subrelation-Of Exchangers Pre-Actors)
             (Domain Exchangers Exchange-Of-User-Rights)
             (Range Exchangers Agent)
             (Name-In-Cyc Exchangers "#$exchangers")
             (Actor-Slot Exchangers)
             (Asymmetric-Binary-Predicate Exchangers)
             (Irreflexive-Binary-Predicate Exchangers)
             (Slot Exchangers)
             (Relation Exchangers)
             (Arity Exchangers 2)
             (Binary-Relation Exchangers)
             (Documentation Exchangers
              "The predicate Exchangers is used to identify the (typically, two) Agents involved in an instance of Exchange-Of-User-Rights.   In such an event, each of the Exchangers gives up possession of one thing and gains possession of another which was previously possessed by the other agent.  (Exchangers EXCH AGENT) means that AGENT is one of the parties having such a dual role in the Exchange-Of-User-Rights EXCH.  Every instance of Exchange-Of-User-Rights has two sub-events which are instances of Transferring-Possession (e.g., a dollar bill goes in one direction and some french fries and a few coins go in the other direction.)  Each of the Exchangers is both a To-Possessor (in one of the two Transferring-Possession sub-events of EXCH) and a From-Possessor (in the other sub-event)."))

(defrelation State-Geopolitical
             (Name-In-Cyc State-Geopolitical "#$State-Geopolitical")
             (Existing-Object-Type State-Geopolitical)
             (Subclass-Of State-Geopolitical Country-Subsidiary)
             (Subclass-Of State-Geopolitical Geopolitical-Entity)
             (Set-Or-Collection State-Geopolitical)
             (Arity State-Geopolitical 1)
             (Documentation State-Geopolitical
              "A collection of geopolitical entities which are sub-divisions of countries.  An element of State-Geopolitical is a ``state-equivalent,'' i.e., a region whose political government is at the very next administrative level down from the national level.  In different countries, such a main geopolitical subdivision may be called variously a `region', a `state', a `province', a `prefecture', a `department', a `parish', or something else.  In the U.S.A., it is called a `state'.  See also Province."))

(defrelation Quintary-Predicate
             (Name-In-Cyc Quintary-Predicate "#$QuintaryPredicate")
             (Relationship-Type Quintary-Predicate)
             (Collection Quintary-Predicate)
             (Subclass-Of Quintary-Predicate Predicate)
             (Set-Or-Collection Quintary-Predicate)
             (Arity Quintary-Predicate 1)
             (Documentation Quintary-Predicate
              "Quintary-Predicate is the collection of all Cyc predicates which take five arguments."))

(defrelation Inhaling
             (Name-In-Cyc Inhaling "#$Inhaling")
             (Temporal-Stuff-Type Inhaling)
             (Default-Disjoint-Script-Type Inhaling)
             (Subclass-Of Inhaling Body-Movement-Event)
             (Subclass-Of Inhaling Biological-Intake-Event)
             (Set-Or-Collection Inhaling)
             (Arity Inhaling 1)
             (Documentation Inhaling
              "The collection of all body movement events in which an animal takes air in through an appropriate portal (Mouth, Nose) and passes it into its Lungs.  The elements of Breathing all have Sub-Events which are Inhalings."))

(defrelation Vector-Precise
             (Name-In-Cyc Vector-Precise "#$Vector-Precise")
             (Object-Type Vector-Precise)
             (Subclass-Of Vector-Precise Vector-Interval)
             (Set-Or-Collection Vector-Precise)
             (Arity Vector-Precise 1)
             (Documentation Vector-Precise
              "A collection of vectors; a subset of Vector-Interval.  Each element of Vector-Precise is an exactly indicated (i.e., point) vector, such as `5 feet due West'.  Both direction and distance are precise.  Thus, Vector-Precise is to Vector-Interval what Scalar-Point-Value is to Scalar-Interval.  Vector-Precise includes all the instances of Unit-Vector-Precise."))

(defrelation Work-Agreement
             (Name-In-Cyc Work-Agreement "#$WorkAgreement")
             (Existing-Object-Type Work-Agreement)
             (Subclass-Of Work-Agreement Agreement)
             (Set-Or-Collection Work-Agreement)
             (Arity Work-Agreement 1)
             (Documentation Work-Agreement
              "A collection of intangible objects; a subset of Agreement.  Every element of Work-Agreement is an agreement between an employer and an employee, regarding the duties and remuneration which pertain to that worker's job for that employer.  Elements of Work-Agreement consist of various Sub-Agreements, typically including elements of Job-Description, Compensation-Package, and some Code-Of-Conduct."))

(defrelation Oil
             (Name-In-Cyc Oil "#$Oil")
             (Tangible-Stuff-Composition-Type Oil)
             (Subclass-Of Oil Organic-Stuff)
             (Set-Or-Collection Oil)
             (Arity Oil 1)
             (Documentation Oil
              "A collection of tangible things.  Each element of Oil is a piece of some type of typically viscous, primarily hydrophobic liquid hydrocarbon.  For example, portions of Heating-Oil, Motor-Oil, Peanut-Oil, Olive-Oil, etc."))

(defrelation Attitude-Towards-Object
             (Nth-Domain Attitude-Towards-Object 1 Animal)
             (Nth-Domain Attitude-Towards-Object 2 Individual)
             (Nth-Domain Attitude-Towards-Object 3 Feeling-Attribute-Type)
             (Nth-Domain Attitude-Towards-Object 4 Generic-Attribute)
             (Nth-Domain-Subclass-Of Attitude-Towards-Object 3
              Feeling-Attribute)
             (Name-In-Cyc Attitude-Towards-Object "#$attitudeTowardsObject")
             (Quaternary-Predicate Attitude-Towards-Object)
             (Functional-Predicate Attitude-Towards-Object)
             (Relation Attitude-Towards-Object)
             (Arity Attitude-Towards-Object 4)
             (Documentation Attitude-Towards-Object
              "Attitude-Towards-Object(AGT OBJ EMOTYPE DEGREE) means that the Sentient-Animal AGT has the attitude EMOTYPE (see Feeling-Attribute-Type) about the Individual OBJ with DEGREE of intensity.  By `attitude' we mean a possibly latent and/or long-lasting feeling.  To refer to feelings that AGT experiences immediately and consciously towards OBJ, use Feels-Towards-Object."))

(deffunction Angstrom
   (Args-Isa Angstrom Real-Number)
   (Result-Instance-Of Angstrom Distance)
   (Result-Instance-Of Angstrom Scalar-Interval)
   (Name-In-Cyc Angstrom "#$Angstrom")
   (Unit-Of-Distance Angstrom)
   (Mks-Unit-Of-Measure Angstrom)
   (Unit-Of-Measure-With-Prefix Angstrom)
   (Function Angstrom)
   (Documentation Angstrom
    "Extremely small unit of length, used especially for measuring the wavelength of light, derived by dividing a meter by 10,000,000,000.  Abbreviation: A (with a little circle on the top of the `A').  1 A = 1/10,000,000,000 (i.e., 10^-10) meter."))

(defobject Steamed
   (Preparation-Attribute Steamed)
   (Subattribute-Of Steamed Cooked)
   (Name-In-Cyc Steamed "#$Steamed")
   (Documentation Steamed
    "The attribute Steamed is a specialized form of Cooked.  Food that is Steamed has been prepared in an event of Steaming-Food."))

(defobject Masculine
   (Gender-Of-Living-Thing Masculine)
   (Linguistic-Object Masculine)
   (Name-In-Cyc Masculine "#$Masculine")
   (Documentation Masculine
    "Masculine is a gender, indicating either that an Animal or Plant is male, or that a word has what is called masculine gender."))

(defrelation Combustion-Process
             (Name-In-Cyc Combustion-Process "#$CombustionProcess")
             (Temporal-Stuff-Type Combustion-Process)
             (Default-Disjoint-Script-Type Combustion-Process)
             (Subclass-Of Combustion-Process Decomposition-Process)
             (Subclass-Of Combustion-Process Energy-Conversion-Process)
             (Subclass-Of Combustion-Process
              Composite-Physical-And-Mental-Event)
             (Set-Or-Collection Combustion-Process)
             (Arity Combustion-Process 1)
             (Documentation Combustion-Process
              "A collection of events.  Each Combustion-Process  is an event in which rapid oxidation is taking place.  These always have heat as an output and often involve emission of light as well (typically, flames).  The Object-Acted-On in a Combustion-Process is at least partly consumed.  See also Flammability."))

(defrelation Temporal-Stuff-Type
             (Name-In-Cyc Temporal-Stuff-Type "#$TemporalStuffType")
             (Collection Temporal-Stuff-Type)
             (Subclass-Of Temporal-Stuff-Type Stuff-Type)
             (Set-Or-Collection Temporal-Stuff-Type)
             (Arity Temporal-Stuff-Type 1)
             (Documentation Temporal-Stuff-Type
              "A collection of collections.  Each element of each element of Temporal-Stuff-Type is temporally substance-like.  Consider, e.g., Animal-Walking-Process, the set of all walking events.  Consider a particular walking event.  Videotape it.  Play back a few seconds of that videotape, showing one of many Time-Slices of the original walking event.  That shorter video is still clearly going to be a video of a walking event.  So the collection Animal-Walking-Process (the set of all walking events) is an element of Temporal-Stuff-Type; it is NOT an element of Temporal-Object-Type (q.v.).



Of course, there is a Granule-Of-Time for Animal-Walking-Process, namely, Taking-A-Step, such that any Time-Slices shorter than that are likely not to be considered real walking events.   This is analogous to granule-size for physical substance types such as peanut butter (the granules there are a peanut piece, a glob of peanut oil, etc.) or wood (the granule there is an individual plant cell).



More esoterically, consider a time slice of a person.   `Albert Einstein while at Princeton' was still a person.  So Person (the set of all people) is an element of Temporal-Stuff-Type.  All tangible objects are temporally stuff-like in this fashion.



If a collection COL :Direct-Types Temporal-Stuff-Type, it is reasonable to state axioms about the temporally intrinsic properties of COL's instances --- properties such as rate of speed, cost per pound, kinds of actors, etc."))

(defrelation Unintended-Loss-Of-User-Rights
             (Name-In-Cyc Unintended-Loss-Of-User-Rights
              "#$UnintendedLossOfUserRights")
             (Temporal-Object-Type Unintended-Loss-Of-User-Rights)
             (Subclass-Of Unintended-Loss-Of-User-Rights Losing-User-Rights)
             (Set-Or-Collection Unintended-Loss-Of-User-Rights)
             (Arity Unintended-Loss-Of-User-Rights 1)
             (Documentation Unintended-Loss-Of-User-Rights
              "Nondeliberate loss of some User-Rights-Attribute; for example, when something is stolen, appropriated, or, in some cases, simply lost."))

(defrelation |(GROUP-FN EVENT)|
             (Skolem-Object |(GROUP-FN EVENT)|)
             (Object-Type |(GROUP-FN EVENT)|)
             (Subclass-Of |(GROUP-FN EVENT)| Event)
             (Subclass-Of |(GROUP-FN EVENT)| Group)
             (Set-Or-Collection |(GROUP-FN EVENT)|)
             (Arity |(GROUP-FN EVENT)| 1))

(defrelation Tuple
             (Synonymous-External-Concept Tuple Sensus-Information1997
              "ORDERED-SET")
             (Name-In-Cyc Tuple "#$Tuple")
             (Object-Type Tuple)
             (Subclass-Of Tuple Mathematical-Object)
             (Subclass-Of Tuple Situation)
             (Set-Or-Collection Tuple)
             (Arity Tuple 1)
             (Documentation Tuple
              "A collection of mathematical objects.  Each element of Tuple is a complex which contains some number (greater than or equal to 1) of ordered (or otherwise indexed) components (it might be a pair, a triple, etc., or there may be a function from column names into their value domains).  For example, Blood-Pressure-Reading is a specialized subset of Tuple; each element of Blood-Pressure-Reading is an ordered or column-indexed pair (of numbers), in which the first is the systolic reading, the second the diastolic reading.  Components of tuples need not be restricted to numbers; for example, the entries in a data base (e.g., my address book) also qualify as tuples, whose components are name, address, phone, email address, etc.   A significant subset of Tuple is N-Tuple-Interval (q.v.), whose elements are tuples consisting of intervals only; e.g., complex numbers, physical vectors.  Technically, if the index set for the Tuple is the counting numbers in their usual order, then the implied order alone can be used to pick a member of the tuple, and the tuple is in fact a List-Sequence.  In the general case, any index set (distinct column names, for example, in a relational database) may be used to index the members of a tuple, not just their order-postion numbers."))

(defrelation Mouth
             (Name-In-Cyc Mouth "#$Mouth")
             (Animal-Body-Part-Type Mouth)
             (Unique-Anatomical-Part-Type Mouth)
             (Subclass-Of Mouth Biological-Living-Object)
             (Subclass-Of Mouth Animal-Body-Part)
             (Set-Or-Collection Mouth)
             (Arity Mouth 1)
             (Documentation Mouth
              "The collection of all animal mouths.  A mouth is a container Animal-Body-Part of an Animal.  It has an opening (a Portal) to the region outside the organism.  Through that opening, the animal ingests tangible substances from the environment, such as food, water, air, etc.  Additional activities, such as Chewing, may occur in the Mouth, and it may participate in other activities such as talking, kissing, etc."))

(defrelation Air-Force
             (Name-In-Cyc Air-Force "#$AirForce")
             (Existing-Object-Type Air-Force)
             (Subclass-Of Air-Force Military-Organization)
             (Set-Or-Collection Air-Force)
             (Arity Air-Force 1)
             (Documentation Air-Force
              "A collection of military organizations.  An element of Air-Force is a military organization, modern or historical, composed mainly of airborne forces: bombers, fighters, torpedo planes, parachute troops, surveillance aircraft, etc., and having the function of defending or attacking air space, ships, or ground targets."))

(defrelation Hospital-Care-Event
             (Name-In-Cyc Hospital-Care-Event "#$HospitalCareEvent")
             (Temporal-Object-Type Hospital-Care-Event)
             (Default-Disjoint-Script-Type Hospital-Care-Event)
             (Subclass-Of Hospital-Care-Event Medical-Care-Event)
             (Set-Or-Collection Hospital-Care-Event)
             (Arity Hospital-Care-Event 1)
             (Documentation Hospital-Care-Event
              "What happens when you are in the hospital being treated for a disease like Cancer or Hepatitis or AIDS, or recovering from Surgery.  This is not just a Medical-Care-Event which happens in a hospital; it's the whole event meant by a hospital stay.  Also see Hospital-Room-Stay which only represents the stay in the room."))

(defrelation Hardware-Tool
             (Name-In-Cyc Hardware-Tool "#$HardwareTool")
             (Existing-Object-Type Hardware-Tool)
             (Subclass-Of Hardware-Tool Tool)
             (Subclass-Of Hardware-Tool Solid-Tangible-Product)
             (Subclass-Of Hardware-Tool Physical-Device)
             (Set-Or-Collection Hardware-Tool)
             (Arity Hardware-Tool 1)
             (Documentation Hardware-Tool
              "A collection of tools.  An instance of Hardware-Tool is an object used to perform a task, usually by applying a particular kind of force on another object.  The tool is used to produce a physical effect in the position, structure, or arrangement of the other object.  Subsets of Hardware-Tool include Hammer, Screwdriver, Hand-Saw.  An electric drill is also a Hardware-Tool.  Borderline nonexamples include eating utensils, robot servants, screws, nails, and levers."))

(defrelation Cotemporal
             (Subrelation-Of Cotemporal Temporally-Subsumes)
             (Subrelation-Of Cotemporal Temporal-Bounds-Identical)
             (Slot-Inverse Cotemporal Cotemporal)
             (Domain Cotemporal Temporal-Thing)
             (Range Cotemporal Temporal-Thing)
             (Name-In-Cyc Cotemporal "#$cotemporal")
             (Reflexive-Binary-Predicate Cotemporal)
             (Symmetric-Binary-Predicate Cotemporal)
             (Complex-Temporal-Relation Cotemporal)
             (Transitive-Binary-Predicate Cotemporal)
             (Slot Cotemporal)
             (Relation Cotemporal)
             (Arity Cotemporal 2)
             (Binary-Relation Cotemporal)
             (Documentation Cotemporal
              "(Cotemporal X Y) means that X and Y have the exact same temporal extent.  This is a much stronger relation than Temporal-Bounds-Identical (q.v.).







Note:  Cyc's Cotemporal relation is equivalent to what James Allen independently dubbed the EQUALS relation."))

(defrelation Drug-Product
             (Name-In-Cyc Drug-Product "#$DrugProduct")
             (Existing-Stuff-Type Drug-Product)
             (Pharmacy-Product-Type Drug-Product)
             (Subclass-Of Drug-Product Artifact)
             (Subclass-Of Drug-Product Drug-Substance)
             (Subclass-Of Drug-Product Consumable-Product)
             (Set-Or-Collection Drug-Product)
             (Arity Drug-Product 1)
             (Documentation Drug-Product
              "Any kind of drug, including the stuff you take when you are sick.  Note, however, that this is a product (intentionally created or used) not merely the chemical description.  This means that salt-water would not be an element of Drug-Product, even though saline solution would be."))

(defrelation Vibration-Through-A-Medium-Sensor
             (Name-In-Cyc Vibration-Through-A-Medium-Sensor
              "#$VibrationThroughAMediumSensor")
             (Existing-Object-Type Vibration-Through-A-Medium-Sensor)
             (Subclass-Of Vibration-Through-A-Medium-Sensor Sensor)
             (Set-Or-Collection Vibration-Through-A-Medium-Sensor)
             (Arity Vibration-Through-A-Medium-Sensor 1)
             (Documentation Vibration-Through-A-Medium-Sensor
              "A subset of Sensor, namely those sensors that detect amplitude and frequency of vibrations through a physical medium.  This includes ears, skin, and also artificial devices such as microphones, seismographs, etc.  
Note:  Eyes are not Vibration-Through-A-Medium-Sensors because there need not be any physical medium for electromagnetic wave propagation.  This is a somewhat close call, and indeed in past centuries most people believed that light propagated through aether, but what it comes down to is this:  consider all the axioms that apply only to the structure, function, and operation, failure, etc. of a Vibration-Through-A-Medium-Sensor, and of that set how many hold true for eyes --- and the answer is No, most of them don't.  So parsimony dictates that Eye not be a subset of Vibration-Through-A-Medium-Sensor."))

(defrelation Mountain
             (Mob-Fn Mountain |(MOB-FN MOUNTAIN)|)
             (Name-In-Cyc Mountain "#$Mountain")
             (Existing-Object-Type Mountain)
             (Subclass-Of Mountain Land-Topographical-Feature)
             (Subclass-Of Mountain |(SOLID-FN EARTH-STUFF)|)
             (Set-Or-Collection Mountain)
             (Arity Mountain 1)
             (Documentation Mountain
              "A collection of topographical features.  Each element of Mountain is a geographical region of significantly higher elevation than its surrounding area.  Mountains may occur individually or as part of a chain (see Mountain-Range).  Examples: Mount-Whitney, Diamond-Head-Mountain, Mount-Kosciusko, Ayers-Rock, Mount-Olympus."))

(defrelation National-Organization
             (Name-In-Cyc National-Organization "#$NationalOrganization")
             (Existing-Object-Type National-Organization)
             (Subclass-Of National-Organization Organization)
             (Set-Or-Collection National-Organization)
             (Arity National-Organization 1)
             (Documentation National-Organization
              "A collection of organizations.  An element of National-Organization is an organization which has nationwide `scope' -- that is, nationwide distribution (throughout some Country) of members and/or activities, as opposed to to local, state-wide or international organizations.  Examples: the National Association for the Advancement of Colored People and the Daughters of the American Revolution in the United States; the Red Guards and the Young Pioneers in China (PROC)."))

(defrelation Human-Family-Name-String
             (Name-In-Cyc Human-Family-Name-String "#$HumanFamilyNameString")
             (Id-String-Type Human-Family-Name-String)
             (Subclass-Of Human-Family-Name-String Id-String)
             (Subclass-Of Human-Family-Name-String Human-Name-String)
             (Set-Or-Collection Human-Family-Name-String)
             (Arity Human-Family-Name-String 1)
             (Documentation Human-Family-Name-String
              "The collection of family name strings such as ``Lenat'', ``Jones'', etc., which are given as last names (in most Western countries), usually at birth.
Note: elements of this collection are really just character strings, not concepts like TheNameSmith that represent character strings."))

(defrelation Indexed-Info-Source
             (Name-In-Cyc Indexed-Info-Source "#$IndexedInfoSource")
             (Object-Type Indexed-Info-Source)
             (Subclass-Of Indexed-Info-Source Abstract-Information)
             (Set-Or-Collection Indexed-Info-Source)
             (Arity Indexed-Info-Source 1)
             (Documentation Indexed-Info-Source "The collection of all 
information sources in which the information contained theirein 
is indexed by some set of terms, names, Character-Strings, 
ID-Numbers or codes.   Given such an index term, there is a 
specific part of the Indexed-Info-Source associated with that 
term.  Each instance has some format or organizing structure 
imposed on the information, although the format might not be 
intrinsically ordered..  An instance of Indexed-Info-Source 
is the abstract informational content of the source, not any 
particular physical object in which the information is stored.  
Examples include a Dictionary, Thesaurus, 
Database-Abstract-Content, or a Knowledge-Base.  Some examples that do not qualify are Painting-As-Art-Form, or a Character-String without any structuring information about it or that has no 
structure beyond being a string of characters."))

(defrelation Railroad-Station-Physical
             (Name-In-Cyc Railroad-Station-Physical
              "#$RailroadStation-Physical")
             (Existing-Object-Type Railroad-Station-Physical)
             (Subclass-Of Railroad-Station-Physical Building)
             (Set-Or-Collection Railroad-Station-Physical)
             (Arity Railroad-Station-Physical 1)
             (Documentation Railroad-Station-Physical
              "The collection of all railroad stations (train station buildings).  These are buildings located near railroad tracks and their primary purpose is to be a place where trains discharge and receive passengers (and possibly freight)."))

(defrelation |(THE-PARTITION SET-MATHEMATICAL COLLECTION)|
             (Skolem-Object |(THE-PARTITION SET-MATHEMATICAL COLLECTION)|)
             (Disjoint-Set-Or-Collection
              |(THE-PARTITION SET-MATHEMATICAL COLLECTION)|)
             (Set-Mathematical |(THE-PARTITION SET-MATHEMATICAL COLLECTION)|)
             (Subclass-Of |(THE-PARTITION SET-MATHEMATICAL COLLECTION)| Thing)
             (Set-Or-Collection |(THE-PARTITION SET-MATHEMATICAL COLLECTION)|)
             (Arity |(THE-PARTITION SET-MATHEMATICAL COLLECTION)| 1))

(defrelation Food
             (Name-In-Cyc Food "#$Food")
             (Product-Type Food)
             (Existing-Stuff-Type Food)
             (Subclass-Of Food Tangible-Product)
             (Subclass-Of Food Food-And-Drink)
             (Subclass-Of Food Edible-Stuff)
             (Subclass-Of Food Organic-Stuff)
             (Set-Or-Collection Food)
             (Arity Food 1)
             (Documentation Food
              "A collection of edible stuff; a subset of Food-And-Drink.  Each element of the collection Food is a particular portion of food of a type which can, and habitually is, eaten (not drunk or inhaled) by humans or animals.  Here the notion of ``eating'' is important --- not drinking or inhaling or osmosing; an element of Food will generally require biting, chewing, etc.  A borderline example is a bowl of Jello; a borderline non-example is a very thick milkshake.  Even closer to the border is a bowl of vegetable soup so thick and chunky that each spoonful require chewing.  The edibles in Food provide calories and/or other nutrients that humans or animals need (e.g., protein, vitamins); this is often true with a Drink as well, but probably less than half the time (since most drinking is of water)."))

(defrelation Medical-Care-Event
             (Name-In-Cyc Medical-Care-Event "#$MedicalCareEvent")
             (Script-Type Medical-Care-Event)
             (Temporal-Object-Type Medical-Care-Event)
             (Subclass-Of Medical-Care-Event Action-On-Object)
             (Subclass-Of Medical-Care-Event Human-Activity)
             (Subclass-Of Medical-Care-Event Service-Event)
             (Set-Or-Collection Medical-Care-Event)
             (Arity Medical-Care-Event 1)
             (Documentation Medical-Care-Event
              "A collection of events.  When any medical care professional provides a medical service to patients, that is an instance of Medical-Care-Event.  An instance of Medical-Care-Event may be a diagnostic procedure, a treatment, a consultation, routine check-up, a medical test, etc. -- anything a medical care provider can bill for.  E.g., (Birth-Fn Nicole-Lenat) represents the birth of a particular person; since she were born in a modern Western hospital, doctors, nurses, and a variety of hospital equipment were present and used, so this is a Medical-Care-Event. "))

(defrelation Physical-Conducting-Media
             (Name-In-Cyc Physical-Conducting-Media
              "#$PhysicalConductingMedia")
             (Existing-Stuff-Type Physical-Conducting-Media)
             (Subclass-Of Physical-Conducting-Media Tangible-Thing)
             (Set-Or-Collection Physical-Conducting-Media)
             (Arity Physical-Conducting-Media 1)
             (Documentation Physical-Conducting-Media
              "A collection of tangible stuff.  Each element of Physical-Conducting-Media is a physical thing that can serve as a conductor, e.g., for heat or electricity.  Examples include power lines, pieces of superconductor materials, ceramic, etc."))

(defobject Foldable
   (Physical-Structural-Attribute Foldable)
   (Subattribute-Of Foldable Bendable)
   (Name-In-Cyc Foldable "#$Foldable")
   (Documentation Foldable
    "A physical attribute.  Foldable is the Physical-Structural-Attribute of being foldable in a flexible way, like towels or paper.  Note a distinction between Foldable objects and Collapsible objects: Collapsible objects are Rigid objects collapsed by means of Hinged-Joints, while Foldable objects are flexible overall."))

(defrelation Symmetry-Member-Function
             (Name-In-Cyc Symmetry-Member-Function "#$SymmetryMemberFunction")
             (Relationship-Type Symmetry-Member-Function)
             (Subclass-Of Symmetry-Member-Function Thing)
             (Set-Or-Collection Symmetry-Member-Function)
             (Arity Symmetry-Member-Function 1)
             (Documentation Symmetry-Member-Function
              "The class of functions which return one member of a symmetric relation.  This class consists of Left-Fn and Right-Fn."))

(defrelation Path-Connects
             (Nth-Domain Path-Connects 1 Path-Simple)
             (Nth-Domain Path-Connects 2 Spatial-Thing)
             (Nth-Domain Path-Connects 3 Spatial-Thing)
             (Name-In-Cyc Path-Connects "#$pathConnects")
             (Ternary-Predicate Path-Connects)
             (Spatial-Predicate Path-Connects)
             (Relation Path-Connects)
             (Arity Path-Connects 3)
             (Documentation Path-Connects
              "(Path-Connects PATH HERE THERE) means that PATH is an individual element of Path-Simple that connects HERE and THERE.  Often PATH is a physical path or connection along which objects or information capable of using that path may travel, back and forth, between HERE and THERE.  Note that (Path-Connects ?PATH ?A ?B) doesn't mean that PATH cant't extend beyond ?A and ?B (in contrast with Path-Between ?A ?B)."))

(defrelation Functional-Predicate
             (Name-In-Cyc Functional-Predicate "#$FunctionalPredicate")
             (Relationship-Type Functional-Predicate)
             (Subclass-Of Functional-Predicate
              Function-Or-Functional-Predicate)
             (Set-Or-Collection Functional-Predicate)
             (Arity Functional-Predicate 1)
             (Documentation Functional-Predicate
              "Functional-Predicate is the collection of Cyc predicates which are functional in at least one argument place.  Given a set of legal arguments for such a predicate's other argument positions, there will be a single value for the functional argument -- not two legal values, and not zero legal values.  For example, (Mother CHILD MOM) is functional in its second argument, since every animal has one and only one biological mother."))

(defrelation Human-Name-String
             (Name-In-Cyc Human-Name-String "#$HumanNameString")
             (Id-String-Type Human-Name-String)
             (Subclass-Of Human-Name-String Id-String)
             (Subclass-Of Human-Name-String Proper-Name-String)
             (Set-Or-Collection Human-Name-String)
             (Arity Human-Name-String 1)
             (Documentation Human-Name-String
              "This is the class of names which human beings give themselves.  See two of its important subsets, Human-Given-Name-String and Human-Family-Name-String, for examples."))

(defrelation Unit-Vector-Precise
             (Name-In-Cyc Unit-Vector-Precise "#$UnitVector-Precise")
             (Object-Type Unit-Vector-Precise)
             (Subclass-Of Unit-Vector-Precise Vector-Precise)
             (Subclass-Of Unit-Vector-Precise Unit-Vector-Interval)
             (Set-Or-Collection Unit-Vector-Precise)
             (Arity Unit-Vector-Precise 1)
             (Documentation Unit-Vector-Precise
              "The collection Unit-Vector-Precise is a subset of Vector-Precise and of Unit-Vector-Interval.  Each element of Unit-Vector-Precise is a vector interval with a magnitude of 1 and a precisely specified direction (e.g., due North, straight down).  Thus, one precise unit vector differs from another only in direction, since each vector consists of a magnitude and a direction (in a space of n > 1 dimensions).  So elements of Unit-Vector-Precise in effect indicate different directions such as `straight up' or `due East'."))

(defrelation Emirate-Geopolitical
             (Name-In-Cyc Emirate-Geopolitical "#$Emirate-Geopolitical")
             (Spatially-Disjoint-Region-Type Emirate-Geopolitical)
             (Subclass-Of Emirate-Geopolitical Geopolitical-Entity)
             (Set-Or-Collection Emirate-Geopolitical)
             (Arity Emirate-Geopolitical 1)
             (Documentation Emirate-Geopolitical
              "The collection of all Emirates, that is, those geopolitical entities, or territories, each of which is ordinarily ruled by an Amir-Head-Of-State or an Emir (Amir) who is not necessariy a Head-Of-State of an Independent-Country, but rules a subsidiary region.  See especially the United-Arab-Emirates."))

(defrelation Drug-Substance
             (Name-In-Cyc Drug-Substance "#$DrugSubstance")
             (Existing-Stuff-Type Drug-Substance)
             (Subclass-Of Drug-Substance Tangible-Thing)
             (Set-Or-Collection Drug-Substance)
             (Arity Drug-Substance 1)
             (Documentation Drug-Substance
              "The class of substances that can be introduced into organism's bodies to produce certain physiological effects.  Includes both stuffs and objects made and/or marketed as Drug-Products, as well as naturally-occurring stuffs and objects that have physiological effects."))

(defobject |(VERY-LOW-AMOUNT-FN FLAMMABILITY)|
   (Scalar-Interval |(VERY-LOW-AMOUNT-FN FLAMMABILITY)|)
   (Flammability |(VERY-LOW-AMOUNT-FN FLAMMABILITY)|)
   (Skolem-Object |(VERY-LOW-AMOUNT-FN FLAMMABILITY)|))

(defrelation Left-Object
             (Name-In-Cyc Left-Object "#$LeftObject")
             (Existing-Object-Type Left-Object)
             (Subclass-Of Left-Object Partially-Tangible)
             (Set-Or-Collection Left-Object)
             (Arity Left-Object 1)
             (Documentation Left-Object
              "The collection of objects that are meant for, or are found on and distinctively structured for, the left side of some larger entity or ensemble of parts.  Examples include left hands, left shoes, left automobile turning signals."))

(defrelation Unemployed-Person
             (Name-In-Cyc Unemployed-Person "#$UnemployedPerson")
             (Person-By-Activity-Type Unemployed-Person)
             (Subclass-Of Unemployed-Person Person)
             (Set-Or-Collection Unemployed-Person)
             (Arity Unemployed-Person 1)
             (Documentation Unemployed-Person
              "A collection of persons.  Each instance of Unemployed-Person is a worker who is unemployed.  An unemployed worker is someone who either has worked previously and could still do so (if s/he had a job), or someone who is qualified to work (e.g., a recent graduate) but has not yet worked."))

(defobject East-Directly
   (Geographical-Direction East-Directly)
   (Unit-Vector-Precise East-Directly)
   (Subattribute-Of East-Directly East-Generally)
   (Name-In-Cyc East-Directly "#$East-Directly")
   (Documentation East-Directly
    "Due East, an element of Terrestrial-Direction."))

(defrelation Communication-Act-Single
             (Name-In-Cyc Communication-Act-Single "#$CommunicationAct-Single")
             (Script-Type Communication-Act-Single)
             (Temporal-Object-Type Communication-Act-Single)
             (Subclass-Of Communication-Act-Single Action)
             (Subclass-Of Communication-Act-Single Communicating)
             (Set-Or-Collection Communication-Act-Single)
             (Arity Communication-Act-Single 1)
             (Documentation Communication-Act-Single
              "A collection of information transfer events; a subset of Communicating.  Each element of Communication-Act-Single is a single-source transmission of information from ONE Sender-Of-Info to one or more recipients; such acts may be one-to-one or one-to-many.  Every element of Communication-Act-Single has a transmission sub-event (which is an element of IBT-Generation-Original) and one or more reception Sub-Events (which are elements of Accessing-An-IBT).  An element of Communication-Act-Single starts when its transmission sub-event starts and ends when its accessing sub-event(s) end.
Notes: (1) For exchanges of information between or among multiple agents, see Multi-Directional-Communication.  (2) An important distinction is made between elements of Communication-Act-Single on the one hand, and their Sub-Events which are elements of IBT-Generation-Original and Accessing-An-IBT, on the other hand; e.g., Speaking and Writing are NOT subsets of Communication-Act-Single, but rather are subsets of IBT-Generation-Original (because instances of both represent only the generation of information and can even occur without actual communication of it), and Listening-Deliberately and Reading are subsets of Accessing-An-IBT, NOT of Communication-Act-Single, because instances of both represent only the accessing of information (even if by default they imply a prior generation of information)."))

(defrelation From-Possessor
             (Subrelation-Of From-Possessor Pre-Actors)
             (Domain From-Possessor Losing-User-Rights)
             (Range From-Possessor Agent)
             (Name-In-Cyc From-Possessor "#$fromPossessor")
             (Actor-Slot From-Possessor)
             (Asymmetric-Binary-Predicate From-Possessor)
             (Irreflexive-Binary-Predicate From-Possessor)
             (Slot From-Possessor)
             (Relation From-Possessor)
             (Arity From-Possessor 2)
             (Binary-Relation From-Possessor)
             (Documentation From-Possessor
              "This predicate identifies an Agent who loses some right to use an object.  (From-Possessor LOSS AGENT) means that AGENT enjoys some User-Rights-Attribute over the Object-Of-Possession-Transfer at the start of the Losing-User-Rights event LOSS, but no longer has that particular User-Rights-Attribute after the LOSS ends."))

(defrelation Biological-Catabolism-Event
             (Name-In-Cyc Biological-Catabolism-Event
              "#$BiologicalCatabolismEvent")
             (Temporal-Object-Type Biological-Catabolism-Event)
             (Default-Disjoint-Script-Type Biological-Catabolism-Event)
             (Subclass-Of Biological-Catabolism-Event
              Biological-Metabolism-Event)
             (Subclass-Of Biological-Catabolism-Event
              Biological-Destruction-Event)
             (Set-Or-Collection Biological-Catabolism-Event)
             (Arity Biological-Catabolism-Event 1)
             (Documentation Biological-Catabolism-Event
              "A collection of events.  Each Biological-Catabolism-Event involve the destruction of larger molecules.  E.g., the degradation of glucose into carbon dioxide and water, which releases energy used to make ATP (adenosine triphosphate)."))

(defrelation Accessing-An-Ibt
             (Name-In-Cyc Accessing-An-Ibt "#$AccessingAnIBT")
             (Default-Disjoint-Script-Type Accessing-An-Ibt)
             (Temporal-Object-Type Accessing-An-Ibt)
             (Subclass-Of Accessing-An-Ibt Information-Transfer-Event)
             (Subclass-Of Accessing-An-Ibt Transfer-In)
             (Subclass-Of Accessing-An-Ibt Purposeful-Action)
             (Subclass-Of Accessing-An-Ibt Mental-Activity)
             (Set-Or-Collection Accessing-An-Ibt)
             (Arity Accessing-An-Ibt 1)
             (Documentation Accessing-An-Ibt
              "A collection of information transfer events.  Each element of Accessing-An-IBT is an action by which an agent accesses the content of some IBT (i.e., an element of Information-Bearing-Thing).  Examples include (getting information from) reading a newspaper, watching a film, listening to a musical performance, decoding an encrypted message, seeing a traffic police officer wave you on, or hearing your roommate ask you to take out the trash.  Of course, communication conventions play a role here.  In the Naive-Information-Mt, Cyc simply assumes that an agent who accesses an IBT understands its content afterwards.  In the Information-G-Mt, Cyc makes the more complicated inference that an agent who accesses an IBT understands its content afterwards only if the agent is able to get the encoded information using a convention familiar to that agent.  See also Communication-Convention, Has-Comm-Convention, Uses-Comm-Convention-For-Info."))

(defrelation Prothetic-Slot
             (Name-In-Cyc Prothetic-Slot "#$ProtheticSlot")
             (Predicate-Category Prothetic-Slot)
             (Subclass-Of Prothetic-Slot Slot)
             (Set-Or-Collection Prothetic-Slot)
             (Arity Prothetic-Slot 1)
             (Documentation Prothetic-Slot
              "A collection of predicates.  Each element of Prothetic-Slot is a binary predicate whose range of values, for any particular element in its domain, must form at least a partial ordering.  Examples: Arity, Latitude, Path-Grade, Fax-Number-Prefix, Street-Of-Address."))

(defrelation Skolem-Object
             (Subclass-Of Skolem-Object Thing)
             (Set-Or-Collection Skolem-Object)
             (Arity Skolem-Object 1)
             (Documentation Skolem-Object
              "Class of constants representing terms that were non-atomic in the Upper-level flat file."))

(defrelation Oxidation-Process
             (Name-In-Cyc Oxidation-Process "#$OxidationProcess")
             (Temporal-Stuff-Type Oxidation-Process)
             (Default-Disjoint-Script-Type Oxidation-Process)
             (Subclass-Of Oxidation-Process Emission)
             (Subclass-Of Oxidation-Process Chemical-Reaction)
             (Subclass-Of Oxidation-Process Transformation-Process)
             (Set-Or-Collection Oxidation-Process)
             (Arity Oxidation-Process 1)
             (Documentation Oxidation-Process
              "A collection of events.  In each instance of this collection, some amount of Oxygen reacts with (`reduces') another substance and releases energy in the process."))

(defrelation Geographical-Direction
             (Name-In-Cyc Geographical-Direction "#$GeographicalDirection")
             (Object-Type Geographical-Direction)
             (Subclass-Of Geographical-Direction Terrestrial-Direction)
             (Subclass-Of Geographical-Direction Unit-Vector-Interval)
             (Subclass-Of Geographical-Direction Direction-Expression)
             (Set-Or-Collection Geographical-Direction)
             (Arity Geographical-Direction 1))

(defrelation Hearing
             (Name-In-Cyc Hearing "#$Hearing")
             (Temporal-Stuff-Type Hearing)
             (Default-Disjoint-Script-Type Hearing)
             (Subclass-Of Hearing Perceiving)
             (Set-Or-Collection Hearing)
             (Arity Hearing 1)
             (Documentation Hearing
              "The collection of sensory Perceivings in which, by means of vibratory sensors, a Perceptual-Agent Hears something that is causing (or consisting of) sound waves, and thereby acquires information about it.  See also: Listening-Deliberately, the subset of Hearing events in which the aural stimulus is intentionally attended to."))

(defrelation Translation-Location-Change
             (Name-In-Cyc Translation-Location-Change
              "#$Translation-LocationChange")
             (Temporal-Object-Type Translation-Location-Change)
             (Subclass-Of Translation-Location-Change
              Movement-Translation-Event)
             (Set-Or-Collection Translation-Location-Change)
             (Arity Translation-Location-Change 1)
             (Documentation Translation-Location-Change
              "A collection of translational motion events; a subset of Movement-Translation-Event.  In each element of Translation-Location-Change, the Object-Moving ends up in a different place than it started; i.e., the From-Location cannot be the same as the To-Location.  Thus, a round trip travel event (Translation-Round-Trip) is NOT an instance of this collection.  See also Translation-No-Location-Change."))

(defobject |(LOW-AMOUNT-FN ELASTICITY)|
   (Scalar-Interval |(LOW-AMOUNT-FN ELASTICITY)|)
   (Elasticity |(LOW-AMOUNT-FN ELASTICITY)|)
   (Skolem-Object |(LOW-AMOUNT-FN ELASTICITY)|)
   (Documentation |(LOW-AMOUNT-FN ELASTICITY)|
    "re-expands somewhat after compression, but not all the way back"))

(defrelation Obtaining-Permission
             (Name-In-Cyc Obtaining-Permission "#$ObtainingPermission")
             (Temporal-Object-Type Obtaining-Permission)
             (Default-Disjoint-Script-Type Obtaining-Permission)
             (Subclass-Of Obtaining-Permission Transaction)
             (Set-Or-Collection Obtaining-Permission)
             (Arity Obtaining-Permission 1)
             (Documentation Obtaining-Permission
              "The collection of events in which one Agent gets permission from another Agent to do something."))

(defrelation Medical-Treatment-Event
             (Name-In-Cyc Medical-Treatment-Event "#$MedicalTreatmentEvent")
             (Default-Disjoint-Script-Type Medical-Treatment-Event)
             (Temporal-Object-Type Medical-Treatment-Event)
             (Subclass-Of Medical-Treatment-Event Simple-Repairing)
             (Subclass-Of Medical-Treatment-Event Medical-Care-Event)
             (Set-Or-Collection Medical-Treatment-Event)
             (Arity Medical-Treatment-Event 1)
             (Documentation Medical-Treatment-Event
              "A collection of medical care events; i.e., a subset of Medical-Care-Event.  In any instance of Medical-Treatment-Event, the procedures performed by a medical professional are done to alleviate or ameliorate an Ailment-Condition.  The set of treatments for a specific ailment may be denoted using Treatment-Fn (q.v.)."))

(defrelation Vegetable-Matter
             (Name-In-Cyc Vegetable-Matter "#$VegetableMatter")
             (Existing-Stuff-Type Vegetable-Matter)
             (Subclass-Of Vegetable-Matter Natural-Tangible-Stuff)
             (Subclass-Of Vegetable-Matter Organic-Stuff)
             (Set-Or-Collection Vegetable-Matter)
             (Arity Vegetable-Matter 1)
             (Documentation Vegetable-Matter
              "A collection of tangible stuff.  Each element of Vegetable-Matter is a piece of stuff (solid, liquid, or, improbably but conceivably, gaseous) which is a piece of vegetable material.  This includes all instances of Plant-Product (such as elements of its subsets Vegetable-Oil, Tobacco-Leaf, Jute-Fiber, Vanilla-Extract, etc.), as well as naturally occurring pieces of vegetable matter (e.g., a clod of peat in a bog, an apple hanging on a tree, a mushroom growing wild in a forest)."))

(defobject Foggy
   (Weather-Attribute Foggy)
   (Name-In-Cyc Foggy "#$Foggy")
   (Documentation Foggy
    "A Weather-Attribute characterizing an Outdoor-Location covered by a ground-level cloud."))

(defrelation |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "ELEMENT")|
             (Skolem-Object
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "ELEMENT")|)
             (Slot |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "ELEMENT")|)
             (Relation
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "ELEMENT")|)
             (Arity |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "ELEMENT")|
              2)
             (Binary-Relation
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "ELEMENT")|))

(defrelation Agility
             (Name-In-Cyc Agility "#$Agility")
             (Script-Performance-Attribute-Type Agility)
             (Subclass-Of Agility Script-Performance-Attribute)
             (Set-Or-Collection Agility)
             (Arity Agility 1)
             (Documentation Agility
              "Agility is the Script-Performance-Attribute-Type for describing actions in which the performer's whole body moves precisely and in a well-coordinated fashion."))

(defrelation Clothing-Accessory
             (Name-In-Cyc Clothing-Accessory "#$ClothingAccessory")
             (Product-Type Clothing-Accessory)
             (Existing-Object-Type Clothing-Accessory)
             (Subclass-Of Clothing-Accessory Clothing-Item)
             (Set-Or-Collection Clothing-Accessory)
             (Arity Clothing-Accessory 1)
             (Documentation Clothing-Accessory
              "A collection of tangible objects.  Each element of Clothing-Accessory is something that is worn as an accessory with other clothing items.  Examples include elements of the collections Jewelry, Scarf, Neck-Tie, Belt-Clothing, Suspenders, and suchlike."))

(defrelation Requesting-Communication-Act
             (Name-In-Cyc Requesting-Communication-Act
              "#$Requesting-CommunicationAct")
             (Temporal-Object-Type Requesting-Communication-Act)
             (Default-Disjoint-Script-Type Requesting-Communication-Act)
             (Subclass-Of Requesting-Communication-Act
              Communication-Act-Single)
             (Set-Or-Collection Requesting-Communication-Act)
             (Arity Requesting-Communication-Act 1)
             (Documentation Requesting-Communication-Act
              "The collection of communication acts in which one agent requests something of another.  Requests are typically followed by a response."))

(defrelation Translation-Complete
             (Name-In-Cyc Translation-Complete "#$Translation-Complete")
             (Temporal-Object-Type Translation-Complete)
             (Subclass-Of Translation-Complete Movement-Translation-Event)
             (Set-Or-Collection Translation-Complete)
             (Arity Translation-Complete 1)
             (Documentation Translation-Complete
              "A collection of translational motion events; hence a subset of Movement-Translation-Event.  In any element of Translation-Complete, the whole Object-Moving moves in its entirety from the origin (From-Location) to the destination (To-Location).  That is, the object completely leaves the origin and relocates at the destination.  The Object-Moving may be either a Non-Fluidlike object or a Fluid-Tangible-Thing all of which moves from one place to another; e.g., a baseball or the gasoline used to fill a gas tank.  Another example: a single molecule of water flowing from point A to B in a river.  Negative example: a river flowing from A to B  (the river itself is not relocated); a rubber band stretching.  A borderline case:  a spider spins a web, leaving part of itself, in effect, extended out behind it.  In most contexts that would still be considered a Translation-Complete event.
Note:  Translation-Complete is noncommittal as to whether net movement has occurred, so round-trip events qualify as complete translations.  (For contrast, see Translation-Location-Change)."))

(defobject Up-Directly
   (Unit-Vector-Precise Up-Directly)
   (Terrestrial-Direction Up-Directly)
   (Subattribute-Of Up-Directly Up-Generally)
   (Name-In-Cyc Up-Directly "#$Up-Directly")
   (Documentation Up-Directly
    "The direction straight up.  In the terrestrial context, Up-Directly points in the opposite direction of Earth's gravitational force vector."))

(defrelation Linguistic-Object
             (Name-In-Cyc Linguistic-Object "#$LinguisticObject")
             (Linguistic-Object-Type Linguistic-Object)
             (Subclass-Of Linguistic-Object
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "LANGUAGE-RELATED-OBJECT")|)
             (Subclass-Of Linguistic-Object Mental-Object)
             (Subclass-Of Linguistic-Object Abstract-Information)
             (Set-Or-Collection Linguistic-Object)
             (Arity Linguistic-Object 1)
             (Documentation Linguistic-Object
              "The collection of intangible objects which are parts of language systems.  Subsets of Linguistic-Object include Linguistic-Object, Title, Word-Sense, Sentential-Constituent, Nonlexical-Linguistic-Object, Linguistic-Attribute, etc.)"))

(deffunction Vector-From-To-Fn
   (Nth-Domain Vector-From-To-Fn 1 Spatial-Thing)
   (Nth-Domain Vector-From-To-Fn 2 Spatial-Thing)
   (Result-Instance-Of Vector-From-To-Fn Unit-Vector-Interval)
   (Name-In-Cyc Vector-From-To-Fn "#$VectorFromToFn")
   (Reifiable-Function Vector-From-To-Fn)
   (Individual-Denoting-Function Vector-From-To-Fn)
   (Function Vector-From-To-Fn)
   (Arity Vector-From-To-Fn 2)
   (Function-Arity Vector-From-To-Fn 1)
   (Binary-Relation Vector-From-To-Fn)
   (Documentation Vector-From-To-Fn
    "Returns a Unit-Vector-Interval which corresponds to the set of unit vectors which originate at some point in arg1 and terminate at some point in arg2.  For example, `the ball rolled towards Mecca' would be represented as (Direction-Of-Translation-Throughout BallRolling01 (Vector-From-To-Fn Ball01 Mecca)).  `a ball rolling away from Mecca' would be represented as (Direction-Of-Translation-Throughout BallRolling (Vector-From-To-Fn Mecca Ball)).  Note that this admits trajectories which are not directly towards a targeted object but which approach at an angle.  Note further that (Vector-From-To-Fn OBJ REF) assumes that OBJ does not Spatially-Intersects REF.  See also Direction-Between-Objects which is roughly interchangeable with Vector-From-To-Fn.  Direction-Between-Objects has the advantage that an arbitrarily precise direction may be specified.  Vector-From-To-Fn saves the user from doing the labor involved with reifiing and from having to know the direction between ?obj1 and ?obj2.). "))

(defrelation National-Tax-Agency
             (Name-In-Cyc National-Tax-Agency "#$NationalTaxAgency")
             (Existing-Object-Type National-Tax-Agency)
             (Subclass-Of National-Tax-Agency Legal-Government-Organization)
             (Set-Or-Collection National-Tax-Agency)
             (Arity National-Tax-Agency 1)
             (Documentation National-Tax-Agency
              "A collection of government organizations.  An element of National-Tax-Agency is a revenue agency that is part of the government of a Country and which is concerned primarily with collecting tax money (from national taxes) from the residents of that Country.  This collection does NOT include customs agencies and agencies that collect minor fees only."))

(defobject Pacific-Ocean
   (Ocean Pacific-Ocean)
   (Entity Pacific-Ocean)
   (Name-In-Cyc Pacific-Ocean "#$PacificOcean")
   (Documentation Pacific-Ocean
    "The main body of salt water in the Eastern-Hemisphere-Region, bordering on five continents (Western coast of North and South Americas, Australia, Antarctica, and Eastern coast of Asia)."))

(defrelation Shirt
             (Name-In-Cyc Shirt "#$Shirt")
             (Product-Type Shirt)
             (Existing-Object-Type Shirt)
             (Subclass-Of Shirt Clothing-Item)
             (Set-Or-Collection Shirt)
             (Arity Shirt 1)
             (Documentation Shirt
              "A collection of objects.  Every element of Shirt is a clothing item that is worn to cover the upper part of the human torso, with openings for the neck and lower body, and either openings for, or sleeves encircling, the arms.  Subsets include Long-Sleeve-Shirt, Blouse, and Tank-Top."))

(defrelation Negative-Number
             (Name-In-Cyc Negative-Number "#$NegativeNumber")
             (Measurable-Attribute-Type Negative-Number)
             (Subclass-Of Negative-Number Real-Number)
             (Set-Or-Collection Negative-Number)
             (Arity Negative-Number 1)
             (Documentation Negative-Number
              "Negative-Number is a subset of Real-Number.  Each element of Negative-Number is a real number that is less than zero; thus, it includes -0.17, but not 0 or 5 or 0.17."))

(defrelation Id-String
             (Name-In-Cyc Id-String "#$IDString")
             (Id-String-Type Id-String)
             (Subclass-Of Id-String Character-String)
             (Set-Or-Collection Id-String)
             (Arity Id-String 1)
             (Documentation Id-String
              "A collection of objects; a subset of Character-String.  Each element of ID-String is a character string which is used to denote a specific object in some identification mapping; for example, instances of Model-Number (e.g., ``JHS146973S2''), or instances of Postal-Code (e.g., ``78751'').  See also Denoted-Object-Fn and Object-ID."))

(defrelation Sale-By-Credit-Card
             (Name-In-Cyc Sale-By-Credit-Card "#$SaleByCreditCard")
             (Script-Type Sale-By-Credit-Card)
             (Temporal-Object-Type Sale-By-Credit-Card)
             (Subclass-Of Sale-By-Credit-Card Buying)
             (Set-Or-Collection Sale-By-Credit-Card)
             (Arity Sale-By-Credit-Card 1)
             (Documentation Sale-By-Credit-Card
              "A collection of events; a subset of Buying.  An instance of Sale-By-Credit-Card is a purchase in which the Buyer makes payment using some element of Credit-Card (the set of all credit cards).
Note: This is different from instances of Credit-Sale (q.v.), in which the Seller (rather than the credit card company) extends credit to the customer."))

(defrelation |(THE-COVERING TRANSFER-IN TRANSFER-OUT)|
             (Skolem-Object |(THE-COVERING TRANSFER-IN TRANSFER-OUT)|)
             (Set-Mathematical |(THE-COVERING TRANSFER-IN TRANSFER-OUT)|)
             (Subclass-Of |(THE-COVERING TRANSFER-IN TRANSFER-OUT)| Thing)
             (Set-Or-Collection |(THE-COVERING TRANSFER-IN TRANSFER-OUT)|)
             (Arity |(THE-COVERING TRANSFER-IN TRANSFER-OUT)| 1))

(defrelation Tactile-Sensor
             (Name-In-Cyc Tactile-Sensor "#$TactileSensor")
             (Existing-Object-Type Tactile-Sensor)
             (Subclass-Of Tactile-Sensor Sensor)
             (Set-Or-Collection Tactile-Sensor)
             (Arity Tactile-Sensor 1)
             (Documentation Tactile-Sensor
              "A subset of Sensor, namely those sensors that operate by coming into physical contact with the object being perceived.  Tactile-Sensors are capable of perceiving properties such as texture, hardness, roughness, etc."))

(defrelation Enlisted-Person
             (Name-In-Cyc Enlisted-Person "#$EnlistedPerson")
             (Occupation-Type Enlisted-Person)
             (Subclass-Of Enlisted-Person Military-Person)
             (Set-Or-Collection Enlisted-Person)
             (Arity Enlisted-Person 1)
             (Documentation Enlisted-Person "A collection of people, a subset 
of Military-Person. Each element of this collection is
somebody who is an enlisted person in some 
Military-Organization, such as a private."))

(defrelation Sound
             (Name-In-Cyc Sound "#$Sound")
             (Wave-Propagation-Type Sound)
             (Subclass-Of Sound Wave-Propagation)
             (Set-Or-Collection Sound)
             (Arity Sound 1)
             (Documentation Sound
              "A collection of events; a subset of Wave-Propagation.  Each element of Sound is an instance of wave propagation in which longitudinal pressure waves travel through matter.  Includes the elements of Audible-Sound, Ultra-Sound, and temblors."))

(defrelation |(LIQUID-FN WATER)|
             (Skolem-Object |(LIQUID-FN WATER)|)
             (Tangible-Stuff-State-Type |(LIQUID-FN WATER)|)
             (Subclass-Of |(LIQUID-FN WATER)| Water)
             (Subclass-Of |(LIQUID-FN WATER)| Liquid-Tangible-Thing)
             (Set-Or-Collection |(LIQUID-FN WATER)|)
             (Arity |(LIQUID-FN WATER)| 1))

(defrelation Two-Dimensional-Shape
             (Name-In-Cyc Two-Dimensional-Shape "#$TwoDimensionalShape")
             (Shape-Type Two-Dimensional-Shape)
             (Subclass-Of Two-Dimensional-Shape Geometric-Thing)
             (Set-Or-Collection Two-Dimensional-Shape)
             (Arity Two-Dimensional-Shape 1)
             (Documentation Two-Dimensional-Shape "A collection of geometrical 
things.  Each element of Two-Dimensional-Shape is a 
physical shapes that exist in two (and not less than two) 
dimensions. Some are basic geometrical shapes,
such as instances of Oval, but others can be irregular."))

(defrelation Temporally-Continuous
             (Nth-Domain Temporally-Continuous 1 Temporal-Thing)
             (Name-In-Cyc Temporally-Continuous "#$temporallyContinuous")
             (Unary-Predicate Temporally-Continuous)
             (Relation Temporally-Continuous)
             (Set-Or-Collection Temporally-Continuous)
             (Arity Temporally-Continuous 1)
             (Documentation Temporally-Continuous
              "If (temporallyContinuous TEMP-OBJ), then TEMP-OBJ occupies one continous chunk of time.  There are no time intervals between the start and end of TEMP-OBJ during which TEMP-OBJ is not occurring/existing."))

(defrelation Primitive-Temporal-Relation
             (Name-In-Cyc Primitive-Temporal-Relation
              "#$PrimitiveTemporalRelation")
             (Predicate-Category Primitive-Temporal-Relation)
             (Subclass-Of Primitive-Temporal-Relation Temporal-Relation)
             (Set-Or-Collection Primitive-Temporal-Relation)
             (Arity Primitive-Temporal-Relation 1)
             (Documentation Primitive-Temporal-Relation
              "Primitive-Temporal-Relations specify temporal relations between Time-Points.  The only two binary predicates which are elements of this set are After and Simultaneous-With.
Note: The predicate `before' is unnecessary since (before x y) would be the same thing as (After y x))"))

(defrelation Unit-Of-Measure-No-Prefix
             (Name-In-Cyc Unit-Of-Measure-No-Prefix "#$UnitOfMeasureNoPrefix")
             (Collection Unit-Of-Measure-No-Prefix)
             (Subclass-Of Unit-Of-Measure-No-Prefix Unit-Of-Measure)
             (Set-Or-Collection Unit-Of-Measure-No-Prefix)
             (Arity Unit-Of-Measure-No-Prefix 1)
             (Documentation Unit-Of-Measure-No-Prefix
              "Please see the Shared-Note Note-For-Unit-Of-Measure-With-Prefix-And-No-Prefix."))

(defrelation Legal-Government-Organization
             (Name-In-Cyc Legal-Government-Organization
              "#$LegalGovernmentOrganization")
             (Existing-Object-Type Legal-Government-Organization)
             (Subclass-Of Legal-Government-Organization Legal-Agent)
             (Subclass-Of Legal-Government-Organization Organization)
             (Set-Or-Collection Legal-Government-Organization)
             (Arity Legal-Government-Organization 1)
             (Documentation Legal-Government-Organization
              "A collection of organizations.  An element of Legal-Government-Organization is an organization which is a part of, and funded by, the government of a geopolitical entity.  Examples include the Internal-Revenue-Service, United-States-Navy, and City-Council-Of-Austin (TX).  Some elements of Legal-Government-Organizations have legal standing in courts."))

(defrelation Biological-Metabolism-Event
             (Name-In-Cyc Biological-Metabolism-Event
              "#$BiologicalMetabolismEvent")
             (Temporal-Object-Type Biological-Metabolism-Event)
             (Default-Disjoint-Script-Type Biological-Metabolism-Event)
             (Subclass-Of Biological-Metabolism-Event Biological-Event)
             (Set-Or-Collection Biological-Metabolism-Event)
             (Arity Biological-Metabolism-Event 1)
             (Documentation Biological-Metabolism-Event
              "The collection of biological processes in which substrates are converted into metabolites.  The metabolites may be more or less complex than the substrates."))

(defrelation Dirtiness
             (Name-In-Cyc Dirtiness "#$Dirtiness")
             (Primitive-Attribute-Type Dirtiness)
             (Subclass-Of Dirtiness Attribute-Value)
             (Subclass-Of Dirtiness Scalar-Interval)
             (Set-Or-Collection Dirtiness)
             (Arity Dirtiness 1)
             (Documentation Dirtiness
              "A collection of attributes.  Dirtiness is a measurable attribute that many tangible objects have.  Each element of the collection Dirtiness represents a specific level of dirtiness (or cleanliness!); e.g., Dirty, Really-Dirty, A-Little-Dirty, Clean, Sterile.  Indicate a particular object's Dirtiness with the predicate Dirtiness-Of-Object."))

(defrelation Month-Of-Year-Type
             (Name-In-Cyc Month-Of-Year-Type "#$MonthOfYearType")
             (Sibling-Disjoint-Collection Month-Of-Year-Type)
             (Subclass-Of Month-Of-Year-Type Collection)
             (Set-Or-Collection Month-Of-Year-Type)
             (Arity Month-Of-Year-Type 1))

(defrelation Sign-The-Display
             (Name-In-Cyc Sign-The-Display "#$SignTheDisplay")
             (Existing-Object-Type Sign-The-Display)
             (Subclass-Of Sign-The-Display Visual-Information-Source)
             (Subclass-Of Sign-The-Display Hardcopy-Information-Bearing-Object)
             (Set-Or-Collection Sign-The-Display)
             (Arity Sign-The-Display 1)
             (Documentation Sign-The-Display
              "A collection of information bearing objects (IBOs); a subset of Visual-Information-Source.  Each element of Sign-The-Display is a tangible object typically posted where people can see it so that they can obtain information from it.  Uses of signs include identification of objects (e.g., street signs, name tags, species labels at zoos); advertising (e.g., billboards, neon signs, posters for garage sales); warnings (e.g., signs for road hazards or road construction, `No Trespassing' postings, printed tape marking off a police line)."))

(defrelation Covers-With-Conformity
             (Nth-Domain Covers-With-Conformity 1 Solid-Tangible-Thing)
             (Nth-Domain Covers-With-Conformity 2 Sheet-Of-Some-Stuff)
             (Nth-Domain Covers-With-Conformity 3 Generic-Attribute)
             (Name-In-Cyc Covers-With-Conformity "#$coversWithConformity")
             (Spatial-Predicate Covers-With-Conformity)
             (Ternary-Predicate Covers-With-Conformity)
             (Functional-Predicate Covers-With-Conformity)
             (Relation Covers-With-Conformity)
             (Arity Covers-With-Conformity 3)
             (Documentation Covers-With-Conformity
              "(Covers-With-Conformity OBJ SHEET LEVEL) means that OBJ is covered by SHEET, and SHEET conforms to the surface features of OBJ to the degree LEVEL.  SHEET may cover OBJ in either the sense of Covers-Ruglike or Covers-Baglike.  For example, hosiery covers legs with a High degree of conformity; sweat pants have Low conformity to legs."))

(defrelation Inform
             (Name-In-Cyc Inform "#$Inform")
             (Object-Type Inform)
             (Subclass-Of Inform Illocutionary-Force)
             (Set-Or-Collection Inform)
             (Arity Inform 1)
             (Documentation Inform
              "A collection of illocutionary forces.  Each instance of Inform consists of a piece of information contained (usually implicitly) in a communication, and which expresses the speaker's intention to inform the listener that the propositional content of what s/he utters is true.  `Speaker' and `listener' are broadly interpreted to mean, respectively, any Sender-Of-Info and Recipient-Of-Info.  See also Illocutionary-Force."))

(defrelation Skill-Level
             (Nth-Domain Skill-Level 1 Something-Existing)
             (Nth-Domain Skill-Level 2 Collection)
             (Nth-Domain Skill-Level 3 Actor-Slot)
             (Nth-Domain Skill-Level 4 Script-Performance-Attribute-Type)
             (Nth-Domain Skill-Level 5 Generic-Attribute)
             (Nth-Domain-Subclass-Of Skill-Level 2 Event)
             (Nth-Domain-Subclass-Of Skill-Level 4
              Script-Performance-Attribute)
             (Name-In-Cyc Skill-Level "#$skillLevel")
             (Quintary-Predicate Skill-Level)
             (Relation Skill-Level)
             (Arity Skill-Level 5)
             (Documentation Skill-Level
              "This predicate relates performers to types of actions.  (Skill-Level OBJ ACT-TYPE ROLE PERF-ATT LEVEL) means that the Something-Existing OBJ has the ability to play the role ROLE in elements of the type of Event ACT-TYPE, with LEVEL degree of PERF-ATT.  For example, (Skill-Level Joe Digging-A-Hole Performed-By Agility High) means that, in general, Joe can dig holes with great agility.  To talk about actual performance in a particular action, use Performance-Level."))

(defrelation Chemical-Reaction
             (Name-In-Cyc Chemical-Reaction "#$ChemicalReaction")
             (Temporal-Object-Type Chemical-Reaction)
             (Default-Disjoint-Script-Type Chemical-Reaction)
             (Subclass-Of Chemical-Reaction Transformation-Event)
             (Set-Or-Collection Chemical-Reaction)
             (Arity Chemical-Reaction 1)
             (Documentation Chemical-Reaction
              "A collection of events; a subset of Transformation-Event.  Each instance of Chemical-Reaction is an event in which two or more substances undergo a chemical change, i.e., some portions of the substances involved are transformed into different Chemical-Compound-Types.  The transformations are brought about by purely chemical (including biochemical) means which affect chemical bonds between atoms in the molecules of stuff, rather than by physical means, biological means, or purposeful planning, etc.  Examples of Chemical-Reaction: instances of Combustion-Process; instances of Photosynthesis."))

(defrelation Taking-Something
             (Name-In-Cyc Taking-Something "#$TakingSomething")
             (Temporal-Object-Type Taking-Something)
             (Default-Disjoint-Script-Type Taking-Something)
             (Subclass-Of Taking-Something Gaining-User-Rights)
             (Subclass-Of Taking-Something Animal-Activity)
             (Set-Or-Collection Taking-Something)
             (Arity Taking-Something 1)
             (Documentation Taking-Something
              "A collection of events; a subset of Gaining-User-Rights.  In an instance of Taking-Something, an Agent takes an object, in the sense of taking it away or using or exercising access to it.  The agent may or may not have any legal right or authorization to use that object.  In an instance of Taking-Something, the taker (the To-Possessor) must intend and actively (attempt to) acquire the Object-Of-Possession-Transfer, so the taking event is intentional and thus, strictly speaking, Performed-By the taker."))

(defrelation Atomic-Nucleus
             (Name-In-Cyc Atomic-Nucleus "#$AtomicNucleus")
             (Existing-Object-Type Atomic-Nucleus)
             (Subclass-Of Atomic-Nucleus Chemical-Object)
             (Set-Or-Collection Atomic-Nucleus)
             (Arity Atomic-Nucleus 1)
             (Documentation Atomic-Nucleus
              "A collection of objects; a subset of Chemical-Object.  Each instance of Atomic-Nucleus is an object composed of some definite number of instances of Proton and some definite number of instances of Neutron.  Instances of the collection Atom are each composed of one member of Atomic-Nucleus and some number of electrons."))

(defrelation Respect
             (Name-In-Cyc Respect "#$Respect")
             (Feeling-Attribute-Type Respect)
             (Subclass-Of Respect Feeling-Attribute)
             (Set-Or-Collection Respect)
             (Arity Respect 1)
             (Documentation Respect
              "A feeling of just regard, consideration, or appreciation for the worth of someone or something.
Note:   Admiration (qv) is different than, or rather a more specialized form of, respect.  To feel Respect towards someone is just to feel that s/he should be treated with politeness and consideration, as having dignity; Admiration and Wonder-Admiration implies all of that, but also implies that the target of the Respect actually did something special or has some special quality that sets them apart from others (or at least from the respecter).  Respect is a Collection --- for an explanation of that, see Happiness.  Some more specialized Feeling-Attribute-Types than Respect are Reverence, Wonder-Admiration, Adulation, Awe, etc. "))

(defrelation Urge-To-Sneeze
             (Name-In-Cyc Urge-To-Sneeze "#$UrgeToSneeze")
             (Physical-Urge-Type Urge-To-Sneeze)
             (Subclass-Of Urge-To-Sneeze Internal-Sensory-Attribute)
             (Subclass-Of Urge-To-Sneeze Animal-Physiological-Attribute)
             (Set-Or-Collection Urge-To-Sneeze)
             (Arity Urge-To-Sneeze 1)
             (Documentation Urge-To-Sneeze
              "This is a Collection of physical urges of a certain type, namely the urges that animals have to sneeze (and their accompanying internal sensations.)"))

(defrelation Event
             (Group-Fn Event |(GROUP-FN EVENT)|)
             (Name-In-Cyc Event "#$Event")
             (Script-Type Event)
             (Temporal-Object-Type Event)
             (Subclass-Of Event Intangible-Individual)
             (Subclass-Of Event Temporal-Thing)
             (Subclass-Of Event Situation)
             (Set-Or-Collection Event)
             (Arity Event 1)
             (Documentation Event "This is one important subset of 
Temporal-Thing.  The elements of Event are events or actions,
things that we say are `happening', changes in the state of the 
world.  Event is also a subset of Intangible, since an 
event consists of the `actions' per se, and THEY then refer 
to the tangible objects which participate in them.  
In contrast, the collection Something-Existing (another 
important subset of Temporal-Thing) has elements which have 
temporal extent yet are `static', such as a rock at the bottom 
of a pond.  



Note: While `Something-Existing vs. Event' might seem at 
first to be an 
obvious partition of things with temporal extent, there are 
interesting borderline cases -- 
such as agreements -- which Cyc treats as instances of 
Something-Existing, but which could also be represented as 
instances of Event.  And there are still other cases,
 such as the pure disembodied elements of Time-Interval, 
which are elements of Temporal-Thing yet belong neither to 
Something-Existing nor to Event."))

(defrelation Sensory-Information
             (Name-In-Cyc Sensory-Information "#$SensoryInformation")
             (Stuff-Type Sensory-Information)
             (Subclass-Of Sensory-Information Mental-Information)
             (Set-Or-Collection Sensory-Information)
             (Arity Sensory-Information 1)
             (Documentation Sensory-Information
              "A collection of mental information.  Each element of Sensory-Information is the propositional content of a mental state in which the nervous system of an animal or other sentient perceives something.  For example, if I perceive that my office is hot, the information is that my [the perceiver's] office is hot; if you perceive that my eyes are brown, the information is that Deborah's eyes are brown."))

(defrelation Male-Animal
             (Synonymous-External-Concept Male-Animal Sensus-Information1997
              "MALE-ANIMAL")
             (Name-In-Cyc Male-Animal "#$MaleAnimal")
             (Existing-Object-Type Male-Animal)
             (Subclass-Of Male-Animal Animal)
             (Set-Or-Collection Male-Animal)
             (Arity Male-Animal 1)
             (Documentation Male-Animal "The collection of all male animals."))

(defrelation Gamma-Ray
             (Name-In-Cyc Gamma-Ray "#$GammaRay")
             (Wave-Propagation-Type Gamma-Ray)
             (Subclass-Of Gamma-Ray Electromagnetic-Radiation)
             (Set-Or-Collection Gamma-Ray)
             (Arity Gamma-Ray 1)
             (Documentation Gamma-Ray
              "A collection of events; a subset of Electromagnetic-Radiation.  Each element of Gamma-Ray is an instance of electromagnetic radiation that has a Wavelength less than  1x10^-2 Angstroms.  Low power Gamma-Rays overlap with high power X-Rays."))

(defrelation Quantifier
             (Name-In-Cyc Quantifier "#$Quantifier")
             (Relationship-Type Quantifier)
             (Subclass-Of Quantifier Relationship)
             (Set-Or-Collection Quantifier)
             (Arity Quantifier 1)
             (Documentation Quantifier
              "A collection of mathematical objects.  Each element of Quantifier represents a relationship between a variable and a formula.  In Cyc, a quantifier binds the variable found in its first argument within the formula that appears as its second argument.  Elements of Quantifier in CycL include :Forall, :Exists, There-Exist-Exactly, There-Exist-At-Least, There-Exist-At-Most."))

(defrelation |(TRANSPORT-FN GASEOUS-TANGIBLE-THING)|
             (Skolem-Object |(TRANSPORT-FN GASEOUS-TANGIBLE-THING)|)
             (Script-Type |(TRANSPORT-FN GASEOUS-TANGIBLE-THING)|)
             (Subclass-Of |(TRANSPORT-FN GASEOUS-TANGIBLE-THING)|
              Transporting-Goods)
             (Set-Or-Collection |(TRANSPORT-FN GASEOUS-TANGIBLE-THING)|)
             (Arity |(TRANSPORT-FN GASEOUS-TANGIBLE-THING)| 1))

(defrelation Independent-Country
             (Name-In-Cyc Independent-Country "#$IndependentCountry")
             (Spatially-Disjoint-Region-Type Independent-Country)
             (Subclass-Of Independent-Country Country)
             (Set-Or-Collection Independent-Country)
             (Arity Independent-Country 1)
             (Documentation Independent-Country
              "A collection of geopolitical entities. Each element of Independent-Country is a distinct, independent geopolitical entity generally recognized by the international community. An independent country typically has a (relatively) stable government and enforced borders, its own currency, laws, culture, etc. Examples: United-States-Of-America, Germany, Liberia, Mongolia-Peoples-Republic, India, Taiwan-Republic-Of-China, Honduras."))

(defrelation Drinking-Event
             (Name-In-Cyc Drinking-Event "#$DrinkingEvent")
             (Temporal-Stuff-Type Drinking-Event)
             (Script-Type Drinking-Event)
             (Subclass-Of Drinking-Event Translation-Complete)
             (Subclass-Of Drinking-Event Consuming-Food-Or-Drink)
             (Set-Or-Collection Drinking-Event)
             (Arity Drinking-Event 1)
             (Documentation Drinking-Event
              "A collection of events.  In each instance of this collection, a single individual consumes a portion of some drink.  A Drinking-Event typically consists of several instances of Drinking-A-Sip.  See Eating-Event."))

(defrelation Ending-An-Agreement
             (Name-In-Cyc Ending-An-Agreement "#$EndingAnAgreement")
             (Temporal-Object-Type Ending-An-Agreement)
             (Default-Disjoint-Script-Type Ending-An-Agreement)
             (Subclass-Of Ending-An-Agreement Purposeful-Action)
             (Subclass-Of Ending-An-Agreement Human-Activity)
             (Subclass-Of Ending-An-Agreement Social-Occurrence)
             (Set-Or-Collection Ending-An-Agreement)
             (Arity Ending-An-Agreement 1)
             (Documentation Ending-An-Agreement
              "A collection of events.  Each element of the collection Ending-An-Agreement is an event in which some instance of Agreement comes to an end.  For example, instances of Employment-Termination and Ending-Membership."))

(defrelation Clothing-Item
             (Name-In-Cyc Clothing-Item "#$ClothingItem")
             (Product-Type Clothing-Item)
             (Existing-Object-Type Clothing-Item)
             (Subclass-Of Clothing-Item Sheet-Of-Some-Stuff)
             (Subclass-Of Clothing-Item Something-To-Wear)
             (Set-Or-Collection Clothing-Item)
             (Arity Clothing-Item 1)
             (Documentation Clothing-Item
              "A collection of tangible objects.  Each element of Clothing-Item is something that a person wears as a protective and/or decorative covering or ornament.  Items of clothing are usually made of flexible materials, such as cloth, leather, or yarn.  The collection Clothing-Item contains primarily individual garments (e.g., elements of the collections Pants, Shirt, Coat, Shoe), together with pairs of shoes, socks, and gloves (since each wearer needs a pair).  Jewelry, suspenders, belts, etc., are in the subset Clothing-Accessory.
Note: outfits (esp. specialized outfits) made up of several individual items worn together belong to the collection Clothing-Outfit, which is NOT a subset of Clothing-Item but IS a subset of the broader collection, Something-To-Wear."))

(defrelation Daily-Personal-Cleaning
             (Name-In-Cyc Daily-Personal-Cleaning "#$DailyPersonalCleaning")
             (Temporal-Object-Type Daily-Personal-Cleaning)
             (Default-Disjoint-Script-Type Daily-Personal-Cleaning)
             (Subclass-Of Daily-Personal-Cleaning Cleaning)
             (Set-Or-Collection Daily-Personal-Cleaning)
             (Arity Daily-Personal-Cleaning 1)
             (Documentation Daily-Personal-Cleaning
              "A collection of events.  Each Daily-Personal-Cleaning encompasses the standard cleaning and grooming activities that an animal engages in over the course of a day.  Such a `daily routine' is almost sure to include many brief grooming and cleaning actions, such as licking one's paws, combing one's hair, washing one's hands, shaving, bathing, etc., and those are sub-events of that Daily-Personal-Cleaning event.  For example, a human's Daily-Personal-Cleaning might have a Teeth-Cleaning as one of its sub-events, along with a Taking-A-Bath, two instances of Combing-Hair, etc.  
Note:  Those specialized kinds of events, like Combing-Hair, are NOT subsets of Daily-Personal-Cleaning, since it would be abnormal for someone to JUST comb their hair each day (and do absolutely no other daily cleaning activity whatsoever).
Note:  In the context Human-Activities-Mt --- where all the performers of actions are, by default, human beings --- Daily-Personal-Cleaning designates human grooming activities only.  In that microtheory, dog-grooming performed by human beings does not constitute Daily-Personal-Cleaning, even if it happens on a daily basis for some pampered poodle, as it is not PERSONAL (i.e, self-) cleaning."))

(defrelation Money
             (Name-In-Cyc Money "#$Money")
             (Fundamental-Numeric-Attribute-Type Money)
             (Subclass-Of Money Scalar-Interval)
             (Subclass-Of Money Attribute-Value)
             (Set-Or-Collection Money)
             (Arity Money 1)
             (Documentation Money
              "The collection of amounts of currency or debt, of which payments, wealth, capital, assets, etc., consist.   An instance of Money may be considered as either (1) an amount of actual, valuable tangible goods (such as gold) or (2) an abstract quantity.  That is, from one perspective, elements of Money represent the amount of a debt (or credit), while from another perspective, they represent what is actually transferred to create or discharge a debt.  Typically, money is created by national governments; either (a) money is a backed claim for a certain amount of precious physical wealth payable by the government on demand (e.g., the gold standard), or (b) money is a legally enforced means of debt payment without any backing.  



Elements of Money in Cyc may be either a fixed amount, such as a U.S. five-dollar bill, or a range, such as `the price of a 1997 Mazda Protege'.  See Unit-Of-Money for the units used by Cyc to measure instances of Money. 



Note: The tangible coins, bills, checks, etc., that represent certain amounts of Money (but which as physical objects may have little value) are elements of Tender-Object, not of Money.  Elements of Tender-Object which also belong to Currency are typically associated with some instance of Unit-Of-Money (e.g., Dollar-United-States) and have a fixed value."))

(defrelation Object-Acted-On
             (Synonymous-External-Concept Object-Acted-On
              Sensus-Information1997 "ACTEE")
             (Subrelation-Of Object-Acted-On Pre-Actors)
             (Domain Object-Acted-On Event)
             (Range Object-Acted-On Something-Existing)
             (Name-In-Cyc Object-Acted-On "#$objectActedOn")
             (Irreflexive-Binary-Predicate Object-Acted-On)
             (Actor-Slot Object-Acted-On)
             (Asymmetric-Binary-Predicate Object-Acted-On)
             (Slot Object-Acted-On)
             (Relation Object-Acted-On)
             (Arity Object-Acted-On 2)
             (Binary-Relation Object-Acted-On)
             (Documentation Object-Acted-On
              "The predicate Object-Acted-On is used to relate an event to an entity (or entities) significantly affected in that event.  That entity must exist before the event, but may be either destroyed in the event (see Inputs-Destroyed), or merely affected by it (e.g., see Damages, Object-Of-State-Change). (Object-Acted-On EVENT OBJECT) means that OBJECT is altered or affected in EVENT, and the change that OBJECT undergoes is central or focal to understanding EVENT.  Thus, scissors are NOT an Object-Acted-On in a Hair-Cutting-Event.  The focal change in a haircut is hair getting shorter; thus, hair is a legitimate Object-Acted-On in a Hair-Cutting-Event.  The almost microscopic dulling that scissors undergo in a single haircut is a comparatively insignificant change with respect to a single haircut, considered as a Hair-Cutting-Event.  

Note: long-term effects of usage on devices should be axiomatized in connection with Using-A-Fn constants."))

(defrelation Frustration
             (Name-In-Cyc Frustration "#$Frustration")
             (Feeling-Attribute-Type Frustration)
             (Subclass-Of Frustration Dissatisfaction)
             (Set-Or-Collection Frustration)
             (Arity Frustration 1)
             (Documentation Frustration
              "A feeling of irritation and dissatisfaction arising from unresolved problems or unfulfilled needs.  This is a collection; for an explanation of a typical Feeling-Attribute-Type, see Happiness."))

(defrelation Proposition
             (Name-In-Cyc Proposition "#$Proposition")
             (Object-Type Proposition)
             (Subclass-Of Proposition Abstract-Information)
             (Subclass-Of Proposition Computational-Object)
             (Set-Or-Collection Proposition)
             (Arity Proposition 1)
             (Documentation Proposition
              "A collection of computational objects.  Each element of Proposition is an abstract propositional claim that has some truth value in some world.  An abstract proposition is assumed to be representable by a statement in some logical language, and usually in one or more natural languages.  Most formal languages (such as predicate calculus) and natural languages (such as English) are capable of composing propositions from fragments that are other propositions.  Elements of the subset Cyc-Formula (q.v.) are statements in such a language."))

(defrelation Default-Monotonic-Predicate
             (Name-In-Cyc Default-Monotonic-Predicate
              "#$DefaultMonotonicPredicate")
             (Object-Type Default-Monotonic-Predicate)
             (Collection Default-Monotonic-Predicate)
             (Subclass-Of Default-Monotonic-Predicate Predicate)
             (Set-Or-Collection Default-Monotonic-Predicate)
             (Arity Default-Monotonic-Predicate 1)
             (Documentation Default-Monotonic-Predicate
              "A collection of predicates.  Each element of Default-Monotonic-Predicate is a predicate whose use as the predicate of a locally asserted ground formula causes that formula to be entered, by default, as :MONOTONIC.  Examples: :Direct-Types, :Direct-Superclasses, Disjoint-With, Equals, Arity, Arg1-Isa."))

(defrelation Functional-Slot
             (Name-In-Cyc Functional-Slot "#$FunctionalSlot")
             (Predicate-Category Functional-Slot)
             (Subclass-Of Functional-Slot Prothetic-Slot)
             (Subclass-Of Functional-Slot Functional-Predicate)
             (Set-Or-Collection Functional-Slot)
             (Arity Functional-Slot 1)
             (Documentation Functional-Slot
              "A collection of predicates; a subset of Functional-Predicate.  Each element of Functional-Slot is a binary predicate which is also a function, and in which the second of its two arguments is the functional one.  A functional predicate F is an element of Functional-Slot if and only if, in assertions of the form (F X Y), for any legal value of X, there is always exactly one value of Y.  Functional-Slot is half of the set intersection of :Slot and Functional-Predicate, namely for the cases where the second of the two arguments is the functional one.  Examples: Latitude, Country-Of-Address, State-Of-Device, Female-Parent-Actor."))

(deffunction Meters-Per-Second-Per-Second
   (Args-Isa Meters-Per-Second-Per-Second Real-Number)
   (Result-Instance-Of Meters-Per-Second-Per-Second Acceleration)
   (Result-Instance-Of Meters-Per-Second-Per-Second Scalar-Interval)
   (Name-In-Cyc Meters-Per-Second-Per-Second "#$MetersPerSecondPerSecond")
   (Standard-Unit-Of-Measure Meters-Per-Second-Per-Second)
   (Mks-Unit-Of-Measure Meters-Per-Second-Per-Second)
   (Unit-Of-Acceleration Meters-Per-Second-Per-Second)
   (Unit-Of-Measure-No-Prefix Meters-Per-Second-Per-Second)
   (Function Meters-Per-Second-Per-Second)
   (Documentation Meters-Per-Second-Per-Second
    "The basic measure of acceleration"))

(defrelation Congenital-Condition
             (Name-In-Cyc Congenital-Condition "#$CongenitalCondition")
             (Physiological-Condition-Type Congenital-Condition)
             (Subclass-Of Congenital-Condition Physiological-Condition)
             (Set-Or-Collection Congenital-Condition)
             (Arity Congenital-Condition 1)
             (Documentation Congenital-Condition
              "A collection of ailments.  An instance of Congenital-Condition is an Ailment-Condition that is present in an afflicted organism from the time of gestation (i.e. before birth), whether or not it is a Genetic-Condition.  Two example types of Congenital-Condition are congenital herpes and congenital heroin addiction.  A Congenital-Condition may be caused by behavior of the mother during pregnancy.  Birth defects (such as having an extra toe) are Congenital-Conditions.  Injuries sustained during the delivery itself are not Congenital-Conditions.  Thus if forceps are used and the infant is scarred, brain-damaged or killed as a result, the situation is not an element of this collection."))

(defrelation Receiving-An-Object
             (Name-In-Cyc Receiving-An-Object "#$ReceivingAnObject")
             (Temporal-Object-Type Receiving-An-Object)
             (Subclass-Of Receiving-An-Object Receiving)
             (Set-Or-Collection Receiving-An-Object)
             (Arity Receiving-An-Object 1)
             (Documentation Receiving-An-Object
              "A collection of events, Receiving-An-Object is a subset of the collection Receiving.  An instance of Receiving-An-Object is an event in which there is some Partially-Tangible which is the Object-Moving, i.e., the thing which `comes in' to the receiver (the To-Location).  For example, the Object-Moving on an occasion when Lynn Swann received a pass from Terry Bradshaw during a Steelers' game would be a football (i.e., some instance of Football-American) and the passing/receiving event itself would be a Receiving-An-Object."))

(defrelation Family-Relation-Slot
             (Name-In-Cyc Family-Relation-Slot "#$FamilyRelationSlot")
             (Predicate-Category Family-Relation-Slot)
             (Subclass-Of Family-Relation-Slot Inter-Existing-Object-Slot)
             (Set-Or-Collection Family-Relation-Slot)
             (Arity Family-Relation-Slot 1)
             (Documentation Family-Relation-Slot
              "A collection of predicates.  Each element of Family-Relation-Slot is a binary predicate used to represent relationships among members of human families.  Examples: Spouse, Siblings, Grandmothers, Grandfathers, Relatives, Cohabiting-Family-Members."))

(defrelation Oxide
             (Name-In-Cyc Oxide "#$Oxide")
             (Tangible-Stuff-Composition-Type Oxide)
             (Subclass-Of Oxide Inanimate-Thing)
             (Subclass-Of Oxide Tangible-Thing)
             (Set-Or-Collection Oxide)
             (Arity Oxide 1)
             (Documentation Oxide
              "A collection of tangible things.  Each element of Oxide is a portion of stuff in which each molecule consists of a combination of oxygen atoms with one or more atoms of another element.  For example, instances of Water (H2O), pieces of rust (Iron-Oxide), portions of Carbon-Dioxide."))

(defrelation Buying
             (Name-In-Cyc Buying "#$Buying")
             (Default-Disjoint-Script-Type Buying)
             (Temporal-Object-Type Buying)
             (Subclass-Of Buying Buying-Activity)
             (Subclass-Of Buying Monetary-Exchange-Of-User-Rights)
             (Set-Or-Collection Buying)
             (Arity Buying 1)
             (Documentation Buying
              "A collection of events.  Each element of Buying is an event in which an agent voluntarily pays to acquire something tangible or intangible, or for the performance of a service.  Payment may be in money or other exchange of wealth.  Elements of Buying may include Sub-Events of negotiation, the act of paying, and the transfer of the purchased thing to the buyer.  Examples of Buying include: purchasing fighter jets for the Navy; buying a Pepsi from a vending machine; ordering dinner at a restaurant; acquiring a personal life insurance policy for oneself; mail-ordering clothes from Sears; shopping at a farmers' market."))

(defrelation Marital-Status-Of-People
             (Name-In-Cyc Marital-Status-Of-People "#$MaritalStatusOfPeople")
             (Sibling-Disjoint-Attribute-Type Marital-Status-Of-People)
             (Unordered-Attribute-Type Marital-Status-Of-People)
             (Subclass-Of Marital-Status-Of-People Attribute-Value)
             (Set-Or-Collection Marital-Status-Of-People)
             (Arity Marital-Status-Of-People 1)
             (Documentation Marital-Status-Of-People
              "The attribute values indicating the Marital-Status of a Person.  Members of this collection include Divorced, Widowed, Single, and Married."))

(defrelation Distributing-Meta-Knowledge-Predicate
             (Name-In-Cyc Distributing-Meta-Knowledge-Predicate
              "#$DistributingMetaKnowledgePredicate")
             (Collection Distributing-Meta-Knowledge-Predicate)
             (Subclass-Of Distributing-Meta-Knowledge-Predicate Predicate)
             (Set-Or-Collection Distributing-Meta-Knowledge-Predicate)
             (Arity Distributing-Meta-Knowledge-Predicate 1)
             (Documentation Distributing-Meta-Knowledge-Predicate
              "instances are predicates which are permitted to distribute over multiple assertions resulting from canonicalizing one (or more) of the formula args"))

(defrelation Transferring-Possession
             (Name-In-Cyc Transferring-Possession "#$TransferringPossession")
             (Default-Disjoint-Script-Type Transferring-Possession)
             (Temporal-Object-Type Transferring-Possession)
             (Subclass-Of Transferring-Possession Social-Occurrence)
             (Subclass-Of Transferring-Possession Gaining-User-Rights)
             (Subclass-Of Transferring-Possession Losing-User-Rights)
             (Set-Or-Collection Transferring-Possession)
             (Arity Transferring-Possession 1)
             (Documentation Transferring-Possession
              "A collection of events.  In an instance of Transferring-Possession, the possession of a single object (i.e., the Object-Of-Possession-Transfer) is transferred from one Agent to another.  Thus, a Transferring-Possession event alters the rights of TWO different agents to use the object in question; one agent loses some User-Rights-Attribute over it, while the other agent gains some User-Rights-Attribute over it.  Each Transferring-Possession event is both a Losing-User-Rights event and a Gaining-User-Rights event.
Note:  In Buying events, Bartering events, Renting events, TWO such Transferring-Possessions occur, because there are TWO objects which transfer possession.  For example, in buying a car, the right to use the buyer's money is transferred to the auto seller, while the ownership of the car is transferred to the buyer.  Both of the Transferring-Possession events (one for each object) are Sub-Events of the instance of Buying, Renting, etc.  See Exchange-Of-User-Rights."))

(defrelation Physical-Amount-Slot
             (Name-In-Cyc Physical-Amount-Slot "#$PhysicalAmountSlot")
             (Predicate-Category Physical-Amount-Slot)
             (Subclass-Of Physical-Amount-Slot Interval-Based-Quantity-Slot)
             (Subclass-Of Physical-Amount-Slot Tangible-Object-Predicate)
             (Set-Or-Collection Physical-Amount-Slot)
             (Arity Physical-Amount-Slot 1)
             (Documentation Physical-Amount-Slot
              "A collection of predicates.  Each element of Physical-Amount-Slot is a slot (i.e., a binary predicate) used in assertions that state (perhaps roughly) `how much' of an object there is.  These can be viewed as different ways of stating the size of an object; e.g., Length-Of-Object, Volume-Of-Object, Mass-Of-Object, Depth-Of-Object, Interior-Floor-Space."))

(deffunction Quarters-Duration
   (Args-Isa Quarters-Duration Real-Number)
   (Result-Instance-Of Quarters-Duration Scalar-Interval)
   (Result-Instance-Of Quarters-Duration Time-Quantity)
   (Name-In-Cyc Quarters-Duration "#$QuartersDuration")
   (Unit-Of-Time Quarters-Duration)
   (Unit-Of-Measure-No-Prefix Quarters-Duration)
   (Unit-Of-Measure Quarters-Duration)
   (Function Quarters-Duration)
   (Documentation Quarters-Duration
    "This is a function that takes one or two numbers and returns, as its value, some amount of Time.  An expression of the form (Quarters-Duration ?min ?max) denotes a quantity of Time that is at least ?min quarter-years and at most ?max quarter-years.  (Quarters-Duration ?num) denotes a quantity of Time that is exactly ?num quarter-years."))

(defrelation Action-On-Object
             (Name-In-Cyc Action-On-Object "#$ActionOnObject")
             (Script-Type Action-On-Object)
             (Temporal-Object-Type Action-On-Object)
             (Subclass-Of Action-On-Object Action)
             (Set-Or-Collection Action-On-Object)
             (Arity Action-On-Object 1)
             (Documentation Action-On-Object
              "The collection of events in which some doer acts on an object. Each element of Action-On-Object is an action in which both the roles of Done-By and Object-Acted-On (qq.v.) are filled.  Positive examples: someone typing on a keyboard; a tornado destroying a building.  Negative examples: a person dancing; wind blowing."))

(defrelation Measurable-Attribute-Type
             (Name-In-Cyc Measurable-Attribute-Type
              "#$MeasurableAttributeType")
             (Collection Measurable-Attribute-Type)
             (Subclass-Of Measurable-Attribute-Type Primitive-Attribute-Type)
             (Set-Or-Collection Measurable-Attribute-Type)
             (Arity Measurable-Attribute-Type 1)
             (Documentation Measurable-Attribute-Type
              "A collection of collections.  Each element of Measurable-Attribute-Type is a collection of attributes, the members of which are quantifiable attributes, i.e., they can be assigned a numeric value.  For example, Rate-Of-Rotation and Concentration-Per-Volume.  For the units in which specific attributes are measured, see Measured-In, Units-Measuring-This-Quantity, Standard-Unit-Measuring.  Note that in Cyc, numbers are classified as measurable attributes; see Real-Number, etc."))

(defobject North-East-Generally
   (Geographical-Direction North-East-Generally)
   (Name-In-Cyc North-East-Generally "#$NorthEast-Generally")
   (Documentation North-East-Generally
    "The general direction of NorthEast.  The Vector-Interval comprising the cone-shaped set of vectors pointing (from some reference point) within approximately forty-five degrees of pointing in the same direction as North-East-Directly."))

(defrelation Collection-Event
             (Name-In-Cyc Collection-Event "#$CollectionEvent")
             (Temporal-Object-Type Collection-Event)
             (Default-Disjoint-Script-Type Collection-Event)
             (Subclass-Of Collection-Event Transfer-In)
             (Set-Or-Collection Collection-Event)
             (Arity Collection-Event 1)
             (Documentation Collection-Event
              "A collection of events.  Each element of Collection-Event is an event in which tangible or intangible objects are collected from various sources to a single destination via some collection network."))

(defrelation Chemical-Object
             (Name-In-Cyc Chemical-Object "#$ChemicalObject")
             (Existing-Object-Type Chemical-Object)
             (Subclass-Of Chemical-Object Microscopic-Scale-Object)
             (Set-Or-Collection Chemical-Object)
             (Arity Chemical-Object 1)
             (Documentation Chemical-Object
              "A collection of objects; a subset of Microscopic-Scale-Object.  Each instance of Chemical-Object is an object whose behavior is typically described in terms of its outer cloud of Electrons.  Subsets of Chemical-Object include the collections Atom and Molecule and Ion, the set of chemical radicals, and the set of molecular fragments."))

(defrelation Arthropod
             (Name-In-Cyc Arthropod "#$Arthropod")
             (Biological-Phylum Arthropod)
             (Subclass-Of Arthropod Invertebrate)
             (Set-Or-Collection Arthropod)
             (Arity Arthropod 1)
             (Documentation Arthropod
              "An instance of Biological-Phylum whose Taxon-Members include (mostly) the numerous collections of chitin-armored invertebrates that have jointed bodies and limbs, e.g., insects, spiders, crustaceans, etc."))

(defrelation Id-String-Type
             (Name-In-Cyc Id-String-Type "#$IDStringType")
             (Collection Id-String-Type)
             (Subclass-Of Id-String-Type Object-Type)
             (Set-Or-Collection Id-String-Type)
             (Arity Id-String-Type 1)
             (Documentation Id-String-Type
              "A collection of collections.  Each element in ID-String-Type is a collection of character strings which is a subset of ID-String (q.v.).  A few instances of ID-String-Type: Product-Name, Product-Version, E-Mail-Address, Phone-Number, Postal-Code."))

(defrelation Space-Transportation-Event
             (Name-In-Cyc Space-Transportation-Event
              "#$SpaceTransportationEvent")
             (Temporal-Object-Type Space-Transportation-Event)
             (Subclass-Of Space-Transportation-Event Transportation-Event)
             (Set-Or-Collection Space-Transportation-Event)
             (Arity Space-Transportation-Event 1)
             (Documentation Space-Transportation-Event
              "The collection of all space transportation event."))

(defrelation Intended-Meaning
             (Nth-Domain Intended-Meaning 1 English-Word)
             (Nth-Domain Intended-Meaning 2 Linguistic-Object-Type)
             (Nth-Domain Intended-Meaning 3 Integer)
             (Nth-Domain Intended-Meaning 4 Thing)
             (Nth-Domain-Subclass-Of Intended-Meaning 2 Speech-Part)
             (Name-In-Cyc Intended-Meaning "#$denotation")
             (Intangible-Object-Predicate Intended-Meaning)
             (Quaternary-Predicate Intended-Meaning)
             (Relation Intended-Meaning)
             (Arity Intended-Meaning 4)
             (Documentation Intended-Meaning
              "The predicate Intended-Meaning is used to relate English words to their denotations within the Cyc Knowledge Base.  Some words have multiple denotations associated with different word senses, which may or may not occur in the same parts of speech. (Intended-Meaning WORD PART NUM CONST) means that the denotation of WORD, with part of speech PART and word sense number NUM, is the Cyc constant CONST.  Examples: (1) Place-The-Word, an instance of English-Word, has the denotation Putting-Something-Somewhere when used as a Verb with its word sense 0, and the denotation Place when used as a Simple-Noun with that same word sense; (2) Ring-The-Word currently has four Intended-Meaning assertions in the KB: Emitting-Sound (as a Verb with its 1st word sense); Audible-Sound (as a Simple-Noun with its 1st word sense); Ring-Shape (as a Simple-Noun with its 0th word sense); and Ring-Jewelry (as a Simple-Noun with its 2nd word sense).  Note that Intended-Meaning may reference the results of Cyc functions, as well as Cyc constants; e.g., Density-The-Word denotes (Interval-Min-Fn (Low-Amount-Fn Density)).  See also Word-Sense, Speech-Part."))

(defrelation Sale-By-Check
             (Name-In-Cyc Sale-By-Check "#$SaleByCheck")
             (Script-Type Sale-By-Check)
             (Temporal-Object-Type Sale-By-Check)
             (Subclass-Of Sale-By-Check Buying)
             (Set-Or-Collection Sale-By-Check)
             (Arity Sale-By-Check 1)
             (Documentation Sale-By-Check
              "Sales in which the payment tendered is a check."))

(defrelation Food-Group-Type
             (Name-In-Cyc Food-Group-Type "#$FoodGroupType")
             (Collection Food-Group-Type)
             (Subclass-Of Food-Group-Type Conventional-Classification-Type)
             (Subclass-Of Food-Group-Type Product-Type)
             (Subclass-Of Food-Group-Type Existing-Stuff-Type)
             (Set-Or-Collection Food-Group-Type)
             (Arity Food-Group-Type 1)
             (Documentation Food-Group-Type
              "A collection of collections.  Each element of Food-Group-Type is a collection of foodstuffs classified according to their nutritional contents.  When restricted to human foods, the elements of Food-Group-Type are familiar as the teaching tools used in public health education in order to promote nutritionally balanced diets.  Examples include: Dairy-Product, Cereal-Food-Group, Fruit-And-Vegetable-Food-Group, Meat-And-Legume-Food-Group."))

(defrelation |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "CAUSAL-RELATION")|
             (Skolem-Object
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "CAUSAL-RELATION")|)
             (Slot
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "CAUSAL-RELATION")|)
             (Relation
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "CAUSAL-RELATION")|)
             (Arity
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "CAUSAL-RELATION")|
              2)
             (Binary-Relation
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "CAUSAL-RELATION")|))

(defrelation Retail-Store
             (Name-In-Cyc Retail-Store "#$RetailStore")
             (Existing-Object-Type Retail-Store)
             (Subclass-Of Retail-Store Single-Site-Organization)
             (Subclass-Of Retail-Store Retail-Organization)
             (Subclass-Of Retail-Store Local-Customer-Contact-Point)
             (Subclass-Of Retail-Store Organization-With-Individual-Customers)
             (Set-Or-Collection Retail-Store)
             (Arity Retail-Store 1)
             (Documentation Retail-Store
              "A collection of retail organizations.  Every element of Retail-Store is a Single-Site-Organization (but not necessarily a stand-alone business) which sells goods directly to consumers at store's Physical-Quarters.  Note that the Niemann-Marcus store at the Galleria is an instance of Retail-Store, but the Niemann-Marcus company as a whole is not, because it is a Retail-Store-Parent-Company (with multiple outlets); both are Retail-Organizations."))

(defrelation Recorded-Sound-Product
             (Name-In-Cyc Recorded-Sound-Product "#$RecordedSoundProduct")
             (Existing-Object-Type Recorded-Sound-Product)
             (Product-Type Recorded-Sound-Product)
             (Subclass-Of Recorded-Sound-Product Partially-Tangible-Product)
             (Subclass-Of Recorded-Sound-Product Published-Material)
             (Set-Or-Collection Recorded-Sound-Product)
             (Arity Recorded-Sound-Product 1)
             (Documentation Recorded-Sound-Product
              "A collection of information bearing objects (IBOs); a subset of Published-Material.  Each element of Recorded-Sound-Product is a sound recording which is one of a class of similar recordings with the same information content.  Typically, Recorded-Sound-Product includes audio recordings (on audio cassettes, CDs, vinyl records) prepared and duplicated for sale as a product.  See also Audio-Recorded-Object."))

(defrelation Organizational-Transfer-Out
             (Name-In-Cyc Organizational-Transfer-Out
              "#$OrganizationalTransferOut")
             (Script-Type Organizational-Transfer-Out)
             (Temporal-Object-Type Organizational-Transfer-Out)
             (Subclass-Of Organizational-Transfer-Out Transfer-Out)
             (Subclass-Of Organizational-Transfer-Out Organizational-Transfer)
             (Set-Or-Collection Organizational-Transfer-Out)
             (Arity Organizational-Transfer-Out 1)
             (Documentation Organizational-Transfer-Out
              "A subcollection of Organizational-Transfer such that elements necessarily have some thing which stops being the member of the 'from organization'.  Exemplars include laying someone off, expulsions, and excommunications.   The event of leaving one organization to join another is also an element of Organizational-Transfer-In as well as Organizational-Transfer-Out.  Negative exemplars include 'admitting a nation to NATO', 'hiring someone', and 'pledging a fraternal organization'."))

(defrelation Viscosity
             (Name-In-Cyc Viscosity "#$Viscosity")
             (Measurable-Attribute-Type Viscosity)
             (Subclass-Of Viscosity Physical-Attribute)
             (Subclass-Of Viscosity Scalar-Interval)
             (Set-Or-Collection Viscosity)
             (Arity Viscosity 1)
             (Documentation Viscosity
              "A collection of attributes; a subset of Physical-Attribute.  Each element of Viscosity represents a specific viscosity (i.e., `runniness') of some Liquid-Tangible-Thing.  The lower the viscosity of a liquid, the more easily it flows or spreads out.  Different viscosities may be represented with a Generic-Value-Function (q.v.), or by using some common substance as a reference (e.g., Viscous-As-Water, Viscous-As-Honey).  Vicosities of objects are indicated with the predicate Viscosity-Of-Substance."))

(defrelation Vehicle
             (Subrelation-Of Vehicle Device-Used)
             (Subrelation-Of Vehicle Transporter)
             (Subrelation-Of Vehicle Provider-Of-Motive-Force)
             (Domain Vehicle
              |(TRANSPORT-VIA-FN TRANSPORTATION-DEVICE-VEHICLE)|)
             (Range Vehicle Transportation-Device-Vehicle)
             (Name-In-Cyc Vehicle "#$vehicle")
             (Irreflexive-Binary-Predicate Vehicle)
             (Actor-Slot Vehicle)
             (Asymmetric-Binary-Predicate Vehicle)
             (Anti-Transitive-Binary-Predicate Vehicle)
             (Slot Vehicle)
             (Relation Vehicle)
             (Arity Vehicle 2)
             (Binary-Relation Vehicle)
             (Documentation Vehicle
              "(Vehicle EVENT VEHICLE) means that VEHICLE is a Transportation-Device-Vehicle which is both the Provider-Of-Motive-Force and the Transporter in EVENT.  If an object is a Transportation-Device-Vehicle and plays the role of Transporter in some moving event, then it generally  will play the role of Vehicle in that event.  Examples: a car plays the role of Vehicle in driving.  Note, however, that a bicycle does not play the role of Vehicle in bike riding since it is not a provider of motive force.  A borderline non-example is someone sitting in their car while it's being pulled by a towtruck; their car is not playing the role of Vehicle in that event."))

(defrelation Organization-With-Individual-Customers
             (Name-In-Cyc Organization-With-Individual-Customers
              "#$OrganizationWithIndividualCustomers")
             (Existing-Object-Type Organization-With-Individual-Customers)
             (Subclass-Of Organization-With-Individual-Customers
              Commercial-Organization)
             (Set-Or-Collection Organization-With-Individual-Customers)
             (Arity Organization-With-Individual-Customers 1)
             (Documentation Organization-With-Individual-Customers
              "A collection of organizations; a subset of Commercial-Organization.  An element of Organization-With-Individual-Customers is a commercial organization most of whose Customers are individual Persons rather than other Organizations."))

(defrelation Distance
             (Name-In-Cyc Distance "#$Distance")
             (Fundamental-Numeric-Attribute-Type Distance)
             (Subclass-Of Distance Scalar-Interval)
             (Subclass-Of Distance Physical-Attribute)
             (Set-Or-Collection Distance)
             (Arity Distance 1)
             (Documentation Distance
              "A collection of physical attributes.  Each element of Distance is the length of a path in space extending from one point to another.  Elements of Distance may be either a fixed interval, such as the height of the Washington-Monument-In-Washington-DC, or a range, such as Within-Audible-Distance (see Scalar-Interval for more explanation).  Also, see Unit-Of-Distance for the units used by Cyc to measure distances."))

(defrelation Database-Abstract-Content
             (Name-In-Cyc Database-Abstract-Content
              "#$Database-AbstractContent")
             (Object-Type Database-Abstract-Content)
             (Subclass-Of Database-Abstract-Content Indexed-Info-Source)
             (Set-Or-Collection Database-Abstract-Content)
             (Arity Database-Abstract-Content 1)
             (Documentation Database-Abstract-Content
              "The collection of all databases, as abstract repositories of information rather than as physical storage devices.   A database generally has some means of accessing the data from structured records, frames or relational structures, using some query language.  A particular Database-Abstract-Content may exist in multiple copies, and may be distributed over several different physical data storage sites: see also Database-Physical."))

(defrelation |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "DISTANCE")|
             (Skolem-Object
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "DISTANCE")|)
             (Slot |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "DISTANCE")|)
             (Relation
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "DISTANCE")|)
             (Arity |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "DISTANCE")|
              2)
             (Binary-Relation
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "DISTANCE")|))

(defrelation Waking-Up-From-Sleep
             (Name-In-Cyc Waking-Up-From-Sleep "#$WakingUpFromSleep")
             (Temporal-Object-Type Waking-Up-From-Sleep)
             (Default-Disjoint-Script-Type Waking-Up-From-Sleep)
             (Subclass-Of Waking-Up-From-Sleep Intrinsic-State-Change-Event)
             (Subclass-Of Waking-Up-From-Sleep Single-Doer-Action)
             (Subclass-Of Waking-Up-From-Sleep Animal-Activity)
             (Set-Or-Collection Waking-Up-From-Sleep)
             (Arity Waking-Up-From-Sleep 1)
             (Documentation Waking-Up-From-Sleep
              "The collection of events in which an Animal goes from the state of being asleep to being in a waking state."))

(defrelation Cloth
             (Name-In-Cyc Cloth "#$Cloth")
             (Existing-Stuff-Type Cloth)
             (Product-Type Cloth)
             (Subclass-Of Cloth Solid-Tangible-Thing)
             (Subclass-Of Cloth Textile-Product)
             (Subclass-Of Cloth Free-Sheet)
             (Subclass-Of Cloth Sheet-Of-Some-Stuff)
             (Set-Or-Collection Cloth)
             (Arity Cloth 1)
             (Documentation Cloth
              "A collection of tangible things.  Each element of Cloth is a piece of textile sheet woven or knitted or pressed out of fibers.  Pieces of Cloth are commonly used as material inputs to the manufacture of clothing items, towels, sails for sailing craft, parachutes, draperies, etc.  Excludes Leather (q.v.)."))

(defrelation Unit-Of-Acceleration
             (Name-In-Cyc Unit-Of-Acceleration "#$UnitOfAcceleration")
             (Interconvertible-Unit-Type Unit-Of-Acceleration)
             (Subclass-Of Unit-Of-Acceleration Unit-Of-Measure)
             (Set-Or-Collection Unit-Of-Acceleration)
             (Arity Unit-Of-Acceleration 1)
             (Documentation Unit-Of-Acceleration
              "The collection of functions which return elements of Acceleration.  For example, the value of the function Meters-Per-Second-Per-Second applied to the real number 9.8 -- (Meters-Per-Second-Per-Second 9.8) -- is 9.8 meters per second squared."))

(defrelation Chronic-Condition
             (Name-In-Cyc Chronic-Condition "#$ChronicCondition")
             (Physiological-Condition-Type Chronic-Condition)
             (Subclass-Of Chronic-Condition Physiological-Condition)
             (Set-Or-Collection Chronic-Condition)
             (Arity Chronic-Condition 1)
             (Documentation Chronic-Condition
              "A collection of ailments.  An instance of Chronic-Condition is an ailment that lingers or recurs in an organism throughout its life.  In some cases, the symptoms of a chronic condition may abate with treatment.  The condition may never go away completely.  Asthma is a subset of Chronic-Condition."))

(defobject Misty-Physical-State
   (Physical-Structural-Attribute Misty-Physical-State)
   (Name-In-Cyc Misty-Physical-State "#$Misty-PhysicalState")
   (Documentation Misty-Physical-State
    "A physical attribute.  Misty-Physical-State is the Physical-Structural-Attribute that characterizes mist; i.e., being a mixture of a gaseous substance with suspended particles of liquid."))

(defobject Up-Generally
   (Terrestrial-Direction Up-Generally)
   (Name-In-Cyc Up-Generally "#$Up-Generally")
   (Documentation Up-Generally
    "The element of Vector-Interval which comprises the cone-shaped set of vectors pointing (from some reference point) within approximately forty-five degrees of Up-Directly."))

(defrelation Humid-Subtropical-Climate-Cycle
             (Name-In-Cyc Humid-Subtropical-Climate-Cycle
              "#$HumidSubtropicalClimateCycle")
             (Climate-Cycle-Type Humid-Subtropical-Climate-Cycle)
             (Subclass-Of Humid-Subtropical-Climate-Cycle
              Temperate-Climate-Cycle)
             (Subclass-Of Humid-Subtropical-Climate-Cycle Humid-Climate-Cycle)
             (Set-Or-Collection Humid-Subtropical-Climate-Cycle)
             (Arity Humid-Subtropical-Climate-Cycle 1)
             (Documentation Humid-Subtropical-Climate-Cycle
              "A collection of annual climate cycles.  Each element of Humid-Subtropical-Climate-Cycle is a year-long event consisting of weather occurring (typically) within a temperate climate zone.  Characteristics of a humid subtropical climate cycle include a hot summer and a cool winter, with precipitation and moist air throughout.  Cycles of this kind occur closer to the equator than do instances of Humid-Continental-Climate-Cycle.  For instance, the Southeastern United States is a good example of a region whose annual climate cycles are instances of Humid-Subtropical-Climate-Cycle."))

(defrelation Subattribute-Of
             (not (Asymmetric-Binary-Predicate Subattribute-Of))
             (not (Anti-Symmetric-Binary-Predicate Subattribute-Of))
             (not (Symmetric-Binary-Predicate Subattribute-Of))
             (Domain Subattribute-Of Attribute-Value)
             (Range Subattribute-Of Attribute-Value)
             (Name-In-Cyc Subattribute-Of "#$genlAttributes")
             (Rule-Macro-Predicate Subattribute-Of)
             (Intangible-Object-Predicate Subattribute-Of)
             (Transitive-Binary-Predicate Subattribute-Of)
             (Reflexive-Binary-Predicate Subattribute-Of)
             (Slot Subattribute-Of)
             (Relation Subattribute-Of)
             (Arity Subattribute-Of 2)
             (Binary-Relation Subattribute-Of)
             (Documentation Subattribute-Of
              "(Subattribute-Of S-ATT G-ATT) means that G-ATT is a more general attribute than S-ATT.  If we know, for some object, THING, (Has-Attributes THING S-ATT), the system will be able to derive (Has-Attributes THING G-ATT).  Subattribute-Of is transitive, so (Subattribute-Of A B) and (Subattribute-Of B C) lets the system derive (Subattribute-Of A C).  For example, if a certain portion of the atmosphere has the attribute Hazy, Cyc can conclude through its Subattribute-Of knowledge that there is only moderate Visibility there."))

(defobject |(LOW-AMOUNT-FN HARDNESS)|
   (Scalar-Interval |(LOW-AMOUNT-FN HARDNESS)|)
   (Hardness |(LOW-AMOUNT-FN HARDNESS)|)
   (Skolem-Object |(LOW-AMOUNT-FN HARDNESS)|))

(defrelation Unit-Of-Temperature
             (Name-In-Cyc Unit-Of-Temperature "#$UnitOfTemperature")
             (Interconvertible-Unit-Type Unit-Of-Temperature)
             (Subclass-Of Unit-Of-Temperature Unit-Of-Measure)
             (Set-Or-Collection Unit-Of-Temperature)
             (Arity Unit-Of-Temperature 1)
             (Documentation Unit-Of-Temperature
              "The collection of functions which return elements of Temperature.  E.g., (Degree-Fahrenheit 451) denotes a Temperature of 451 F."))

(defrelation Geopolitical-Entity
             (Synonymous-External-Concept Geopolitical-Entity
              Sensus-Information1997 "GEOPOLITICAL-ENTITY")
             (Name-In-Cyc Geopolitical-Entity "#$GeopoliticalEntity")
             (Existing-Object-Type Geopolitical-Entity)
             (Subclass-Of Geopolitical-Entity Legal-Agent)
             (Subclass-Of Geopolitical-Entity Geographical-Region)
             (Set-Or-Collection Geopolitical-Entity)
             (Arity Geopolitical-Entity 1)
             (Documentation Geopolitical-Entity
              "A collection of geographical regions.  Each element of Geopolitical-Entity is a `thick' geographical region, in other words, a politically defined geographical region taken together with its government, people, artifical habitats, etc.  Important subsets include Country, Independent-Country, State-Geopolitical, City, Province.  Examples: City-Of-Tokyo-Japan, Borough-Of-Bronx-NY, Alaska-State, Rwanda, Singapore, Inner-Mongolia, Somershire-County-England, Taiwan-Republic-Of-China.  Although the name Geopolitical-Entity may suggest, elements are not necessarily elements of Entity."))

(defrelation Disjoint-Set-Or-Collection
             (Synonymous-External-Concept Disjoint-Set-Or-Collection
              Sensus-Information1997 "DISJUNCTIVE-SET")
             (Name-In-Cyc Disjoint-Set-Or-Collection
              "#$DisjointSetOrCollection")
             (Collection Disjoint-Set-Or-Collection)
             (Subclass-Of Disjoint-Set-Or-Collection Set-Or-Collection)
             (Set-Or-Collection Disjoint-Set-Or-Collection)
             (Arity Disjoint-Set-Or-Collection 1)
             (Documentation Disjoint-Set-Or-Collection
              "A collection of mathematical sets and collections the members of which are themselves mathematical sets or collections.  A set or collection, SETORCOL, of sets or collections is an instance of Disjoint-Set-Or-Collection just in case the elements of SETORCOL are mutually disjoint -- that is, no two elements of SETORCOL have any elements in common."))

(defrelation Food-Professional
             (Name-In-Cyc Food-Professional "#$FoodProfessional")
             (Occupation-Type Food-Professional)
             (Subclass-Of Food-Professional Professional)
             (Set-Or-Collection Food-Professional)
             (Arity Food-Professional 1)
             (Documentation Food-Professional
              "A collection of persons; a subset of Professional.  Each element of Food-Professional is a worker in the food and drink industry.  This collection includes bakers, brewers, butchers, and bartenders--everyone from Julia Child to Joe the bartender."))

(defrelation |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "NON-CONSCIOUS-BEING")|
             (Skolem-Object
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "NON-CONSCIOUS-BEING")|)
             (Existing-Object-Type
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "NON-CONSCIOUS-BEING")|)
             (Subclass-Of
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "NON-CONSCIOUS-BEING")|
              Partially-Tangible)
             (Set-Or-Collection
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "NON-CONSCIOUS-BEING")|)
             (Arity
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "NON-CONSCIOUS-BEING")|
              1))

(defrelation Pure-Compound
             (Name-In-Cyc Pure-Compound "#$PureCompound")
             (Tangible-Stuff-Composition-Type Pure-Compound)
             (Subclass-Of Pure-Compound Inanimate-Thing)
             (Subclass-Of Pure-Compound Tangible-Thing)
             (Set-Or-Collection Pure-Compound)
             (Arity Pure-Compound 1)
             (Documentation Pure-Compound
              "A collection of tangible stuffs.  Each instance of Pure-Compound is a chemically pure portion of stuff belonging to some particular Chemical-Compound-Type (e.g., Carbon, Water, Cellulose).  `Chemically pure' applies to a piece of stuff which has no sub-portions which fail to conform to the chemical composition of its (single) Chemical-Compound-Type.  Since this kind of purity is relative to specified chemical composition only, Pure-Compound (and Pure-Fn) does not pertain to mixtures in Cyc (such as Air).  Cf. Mixture, Chemical-Compound-Type."))

(defrelation Sunset
             (Name-In-Cyc Sunset "#$Sunset")
             (Script-Type Sunset)
             (Temporal-Object-Type Sunset)
             (Subclass-Of Sunset Qualitative-Time-Of-Day)
             (Set-Or-Collection Sunset)
             (Arity Sunset 1)
             (Documentation Sunset
              "Each Sunset is an Event where, at a given location, the Sun occludes the horizon as it appears to set.  This event is construed to occur regardless of the visibility of the Sun due to obscuring objects such as clouds.  There is a Dusk which is Contiguous-After each Sunset.  Every Daytime-Hours is Temporally-Finished-By a Sunset, as is every Afternoon."))

(defobject Primary-Role-Use-Rights
   (User-Rights-Attribute Primary-Role-Use-Rights)
   (Name-In-Cyc Primary-Role-Use-Rights "#$PrimaryRoleUseRights")
   (Documentation Primary-Role-Use-Rights
    "An attribute of an object with respect to an Agent, meaning that the agent who holds this kind of User-Rights-Attribute to an object is allowed to use that object in events where it performs its Primary-Function.  A rental agreement typically gives the renter this kind of right to use of an object (such as a car, residence, videotape, etc.)  Just because you rent a car, though, does not give you the right to sell it, burn it up, or repaint it."))

(defrelation Flowering-Plant
             (Name-In-Cyc Flowering-Plant "#$FloweringPlant")
             (Organism-Classification-Type Flowering-Plant)
             (Subclass-Of Flowering-Plant Plant)
             (Set-Or-Collection Flowering-Plant)
             (Arity Flowering-Plant 1)
             (Documentation Flowering-Plant
              "The collection of plants whose seeds are enclosed in ovaries; the flowering plants in the botanical sense.  For flowering plants actually in bloom, see Flowery-Plant."))

(defrelation Check-Tender-Object
             (Name-In-Cyc Check-Tender-Object "#$Check-TenderObject")
             (Money-Tender-Type Check-Tender-Object)
             (Subclass-Of Check-Tender-Object Tender-Object)
             (Subclass-Of Check-Tender-Object Form-Standardized-Ibo)
             (Subclass-Of Check-Tender-Object Id-Document)
             (Subclass-Of Check-Tender-Object Official-Document)
             (Subclass-Of Check-Tender-Object Financial-Account-Tender-Object)
             (Set-Or-Collection Check-Tender-Object)
             (Arity Check-Tender-Object 1)
             (Documentation Check-Tender-Object
              "A collection of documents; a subset of Tender-Object.  Each element of Check-Tender-Object is a financial instrument, drawn on a particular account at some instance of Financial-Organization, which is redeemable for a monetary value by the agent who is the payee.  The financial organization pays the payee funds from the account, upon proper presentation of the check."))

(defrelation Vine-Plant
             (Name-In-Cyc Vine-Plant "#$Vine-Plant")
             (Existing-Object-Type Vine-Plant)
             (Subclass-Of Vine-Plant Plant)
             (Subclass-Of Vine-Plant Terrestrial-Organism)
             (Set-Or-Collection Vine-Plant)
             (Arity Vine-Plant 1)
             (Documentation Vine-Plant
              "The collection of vine plants, Plants that are in the form (gross form and habit) of long tendrils or long, narrow, flexible ropy strands."))

(defrelation Forms-Border-Between
             (Nth-Domain Forms-Border-Between 1 Spatial-Thing)
             (Nth-Domain Forms-Border-Between 2 Spatial-Thing)
             (Nth-Domain Forms-Border-Between 3 Spatial-Thing)
             (Name-In-Cyc Forms-Border-Between "#$formsBorderBetween")
             (Spatial-Predicate Forms-Border-Between)
             (Ternary-Predicate Forms-Border-Between)
             (Relation Forms-Border-Between)
             (Arity Forms-Border-Between 3)
             (Documentation Forms-Border-Between
              "(Forms-Border-Between BORDER REG1 REG2) means that BORDER comprises at least part of the border between REG1 and REG2.  BORDER may be a surface separating two regions of space, or a curve separating two regions of a surface.  The arguments REG1 and REG2 may be physical objects, geographical regions, or abstract entities.  Note that BORDER need not comprise the entire border between REG1 and REG2.  By contrast, Border-Between-Fn returns the entire border between the regions that serve as arguments."))

(defrelation Wave-Propagation-Type
             (Name-In-Cyc Wave-Propagation-Type "#$WavePropagationType")
             (Sibling-Disjoint-Collection Wave-Propagation-Type)
             (Subclass-Of Wave-Propagation-Type Temporal-Stuff-Type)
             (Subclass-Of Wave-Propagation-Type Collection)
             (Set-Or-Collection Wave-Propagation-Type)
             (Arity Wave-Propagation-Type 1)
             (Documentation Wave-Propagation-Type
              "A collection of collections.  Each element of Wave-Propagation-Type is itself a collection, containing one type of Wave-Propagation events.  Examples include the collections Electromagnetic-Radiation, Sound, Visible-Light, and X-Ray."))

(defobject West-Generally
   (Geographical-Direction West-Generally)
   (Name-In-Cyc West-Generally "#$West-Generally")
   (Documentation West-Generally
    "The general direction of West.  The element of Vector-Interval that comprises the cone-shaped set of vectors pointing (from some reference point) within approximately forty-five degrees of West-Directly."))

(defrelation Tangible-Object-Predicate
             (Name-In-Cyc Tangible-Object-Predicate
              "#$TangibleObjectPredicate")
             (Predicate-Category Tangible-Object-Predicate)
             (Subclass-Of Tangible-Object-Predicate Process-Predicate)
             (Set-Or-Collection Tangible-Object-Predicate)
             (Arity Tangible-Object-Predicate 1)
             (Documentation Tangible-Object-Predicate
              "A collection of predicates.  Each element of Tangible-Object-Predicate is a predicate used in assertions which describe the properties of tangible objects.  Examples: Viscosity-Of-Substance, Color-Of-Object, Porosity-Of-Object, Physical-Build."))

(defrelation Public-Sector-Employee
             (Name-In-Cyc Public-Sector-Employee "#$PublicSectorEmployee")
             (Occupation-Type Public-Sector-Employee)
             (Subclass-Of Public-Sector-Employee Professional)
             (Set-Or-Collection Public-Sector-Employee)
             (Arity Public-Sector-Employee 1)
             (Documentation Public-Sector-Employee
              "A collection of persons; a subset of Professional.  Each element of Public-Sector-Employee is a person who is employed by a local, state (or provincial), or national government.  This collection includes both those who are employed directly in government administration (e.g., elected and appointed officials, tax officers, police and military personnel, other regulatory agents) and those who are employed in support services wholly funded by the government (e.g., postal employees, public school teachers, firefighters, unionized government workers, etc.)."))

(defrelation |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "LESS-THAN-COMPARISON")|
             (Skolem-Object
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "LESS-THAN-COMPARISON")|)
             (Slot
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "LESS-THAN-COMPARISON")|)
             (Relation
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "LESS-THAN-COMPARISON")|)
             (Arity
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "LESS-THAN-COMPARISON")|
              2)
             (Binary-Relation
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "LESS-THAN-COMPARISON")|))

(defrelation Seed
             (Name-In-Cyc Seed "#$Seed")
             (Existing-Object-Type Seed)
             (Subclass-Of Seed Biological-Stage-Of-Development)
             (Subclass-Of Seed Plant-Blo)
             (Set-Or-Collection Seed)
             (Arity Seed 1)
             (Documentation Seed
              "The collection of all plant seeds: small nodules or granules consisting of young angiosperms and their protective containers during early (zygotic and embryonic stages) of development.  Seeds, if planted, may grow into adult plants."))

(deffunction Centimeter
   (Args-Isa Centimeter Real-Number)
   (Result-Instance-Of Centimeter Distance)
   (Result-Instance-Of Centimeter Scalar-Interval)
   (Name-In-Cyc Centimeter "#$Centimeter")
   (Unit-Of-Distance Centimeter)
   (Unit-Of-Measure-With-Prefix Centimeter)
   (Cgs-Unit-Of-Measure Centimeter)
   (Function Centimeter)
   (Documentation Centimeter
    "The measurement function used in Cyc to represent the centimeter, a unit used within the Metric system to measure length.  See also CGS-Unit-Of-Measure, Unit-Of-Measure."))

(defrelation Meeting-Taking-Place
             (Name-In-Cyc Meeting-Taking-Place "#$MeetingTakingPlace")
             (Temporal-Object-Type Meeting-Taking-Place)
             (Default-Disjoint-Script-Type Meeting-Taking-Place)
             (Subclass-Of Meeting-Taking-Place Social-Gathering)
             (Set-Or-Collection Meeting-Taking-Place)
             (Arity Meeting-Taking-Place 1)
             (Documentation Meeting-Taking-Place
              "The collection of human meeting events, in which Persons gather intentionally at a location in order to communicate or share some experience; business is often transacted at such a meeting.  Examples include: a particular conference, a business lunch, etc."))

(defrelation Army-Personnel
             (Name-In-Cyc Army-Personnel "#$ArmyPersonnel")
             (Occupation-Type Army-Personnel)
             (Subclass-Of Army-Personnel Soldier)
             (Subclass-Of Army-Personnel Military-Person)
             (Set-Or-Collection Army-Personnel)
             (Arity Army-Personnel 1)
             (Documentation Army-Personnel "A collection of people, a subset 
of Military-Person. Each element of this collection is
somebody who works for an Army."))

(deffunction Body-Part-Fn
   (Nth-Domain Body-Part-Fn 1 Animal)
   (Nth-Domain Body-Part-Fn 2 Unique-Anatomical-Part-Type)
   (Nth-Domain Body-Part-Fn 2 Animal-Body-Part-Type)
   (Nth-Domain-Subclass-Of Body-Part-Fn 2 Animal-Body-Part)
   (Result-Instance-Of Body-Part-Fn Animal-Body-Part)
   (Name-In-Cyc Body-Part-Fn "#$BodyPartFn")
   (Reifiable-Function Body-Part-Fn)
   (Individual-Denoting-Function Body-Part-Fn)
   (Function Body-Part-Fn)
   (Arity Body-Part-Fn 2)
   (Function-Arity Body-Part-Fn 1)
   (Binary-Relation Body-Part-Fn)
   (Documentation Body-Part-Fn
    "Body-Part-Fn is an Individual-Denoting-Function, that is, it is a Cyc function which `returns' (i.e., `has') a single individual object as its value.  (Body-Part-Fn DeborahNichols Heart) represent's Deborah's one and only heart.  That nonatomic term can be used almost anywhere that the term DeborahNicholsHeart could have been used, but this way we needn't reify that other term, and so on.  Note that the second argument to this function --- i.e., the  Animal-Body-Part-Type --- must be a Unique-Anatomical-Part-Type, that is, a kind of part of which an animal can have only one.  If an animal can have multiple parts of that type, such as Finger, then use the function Body-Part-Collection-Fn instead of Body-Part-Fn."))

(defrelation Animal-Blo
             (Name-In-Cyc Animal-Blo "#$AnimalBLO")
             (Existing-Object-Type Animal-Blo)
             (Subclass-Of Animal-Blo Biological-Living-Object)
             (Set-Or-Collection Animal-Blo)
             (Arity Animal-Blo 1)
             (Documentation Animal-Blo
              "The subset of Biological-Living-Object which includes all the elements of Animal and of Animal-Body-Part and Animal-Body-Region."))

(defrelation Geographical-Sub-Regions
             (Subrelation-Of Geographical-Sub-Regions Surface-Parts)
             (Slot-Inverse Geographical-Sub-Regions In-Region)
             (Domain Geographical-Sub-Regions Geographical-Region)
             (Range Geographical-Sub-Regions Geographical-Region)
             (Name-In-Cyc Geographical-Sub-Regions "#$geographicalSubRegions")
             (Transitive-Binary-Predicate Geographical-Sub-Regions)
             (Spatial-Predicate Geographical-Sub-Regions)
             (Reflexive-Binary-Predicate Geographical-Sub-Regions)
             (Slot Geographical-Sub-Regions)
             (Relation Geographical-Sub-Regions)
             (Arity Geographical-Sub-Regions 2)
             (Binary-Relation Geographical-Sub-Regions)
             (Documentation Geographical-Sub-Regions
              "(Geographical-Sub-Regions SUPER SUB) means that SUPER and SUB are both elements of Geographical-Region, and the area SUB lies wholly within the region SUPER (see In-Region).  SUPER may or may not completely surround SUB (i.e., they may share an outer boundary, as do Texas and the USA).  See also Surrounds-Horizontally, Borders-On."))

(defrelation Relation-Type-Max
             (Nth-Domain Relation-Type-Max 1 Slot)
             (Nth-Domain Relation-Type-Max 2 Collection)
             (Nth-Domain Relation-Type-Max 3 Collection)
             (Nth-Domain Relation-Type-Max 4 Positive-Integer)
             (Name-In-Cyc Relation-Type-Max "#$relationTypeMax")
             (Quaternary-Predicate Relation-Type-Max)
             (Relation Relation-Type-Max)
             (Arity Relation-Type-Max 4)
             (Documentation Relation-Type-Max
              "(Relation-Type-Max SLOT COL1 COL2 NUM) means that, for every instance of COL1 (INS1) there are at most NUM instances of COL2 (INS2, INS3, ...) such that (SLOT INS1 INS2), (SLOT INS1 INS3), ..., hold.  Thus (Relation-Type-Max Anatomical-Parts Mammal Leg 4) would mean `every mammal has at most four legs'."))

(defrelation Embryo
             (Name-In-Cyc Embryo "#$Embryo")
             (Existing-Object-Type Embryo)
             (Subclass-Of Embryo Biological-Living-Object)
             (Subclass-Of Embryo Biological-Stage-Of-Development)
             (Set-Or-Collection Embryo)
             (Arity Embryo 1)
             (Documentation Embryo
              "The collection of not yet fully-formed organisms, including mammals before birth, birds before hatching, and plants before sprouting from their seeds.  Note that the criteria of the collection Embryo do not correspond exactly with the meaning of the English word 'embryo', since Embryo includes zygotes, the set of cells derived from the embryo after the fetus is formed (Amniotic-Sac + Fetus + Placenta-Fetal-Portion), etc."))

(defobject |(LOW-AMOUNT-FN POROSITY)|
   (Scalar-Interval |(LOW-AMOUNT-FN POROSITY)|)
   (Porosity |(LOW-AMOUNT-FN POROSITY)|)
   (Skolem-Object |(LOW-AMOUNT-FN POROSITY)|))

(defrelation Local-Customer-Contact-Point
             (Name-In-Cyc Local-Customer-Contact-Point
              "#$LocalCustomerContactPoint")
             (Existing-Object-Type Local-Customer-Contact-Point)
             (Subclass-Of Local-Customer-Contact-Point
              Single-Site-Organization)
             (Subclass-Of Local-Customer-Contact-Point Local-Organization)
             (Set-Or-Collection Local-Customer-Contact-Point)
             (Arity Local-Customer-Contact-Point 1)
             (Documentation Local-Customer-Contact-Point
              "A collection of organizations.  Each element of Local-Customer-Contact-Point is a single-site organization serving customers in a local area, working from a particular store, office, or other physical quarters where customers (or their agents) go in person to speak with company representatives about the services or products offered.  Elements of Local-Customer-Contact-Point may be either stand-alone organizations or sub-organization of a larger company.  Examples of Local-Customer-Contact-Point include New-York-Hospital, Threadgills restaurant, the Bank of America office on Jollyville Road, Studtman-Photo studios, the Village Cinema on Anderson Lane."))

(defrelation Information-Bearing-Object
             (Name-In-Cyc Information-Bearing-Object
              "#$InformationBearingObject")
             (Existing-Object-Type Information-Bearing-Object)
             (Subclass-Of Information-Bearing-Object Information-Bearing-Thing)
             (Subclass-Of Information-Bearing-Object
              Composite-Tangible-And-Intangible-Object)
             (Set-Or-Collection Information-Bearing-Object)
             (Arity Information-Bearing-Object 1)
             (Documentation Information-Bearing-Object
              "A collection of objects which are both tangible and intangible.  (See also the comment for its superset Composite-Tangible-And-Intangible-Object.)  Each element of Information-Bearing-Object is an object that can be interpreted, by an interpreter understanding its conventions, to yield a chunk or chunks of information.  Information-Bearing-Object includes all of the following: (1) artifacts made solely for the purpose of conveying information (e.g., a newspaper, or a children's science video); (2) artifacts that convey information in addition to their intended function (e.g., Neolithic pottery); and (3) non-artifacts, such as a person's fingerprints, gestures, and utterances, which may be interpreted to yield information.  Note: `an IBO' abbreviates `an information bearing object'.  Cf. Information-Bearing-Wave-Propagation.  See also Contains-Information."))

(defrelation Calendar-Covering-Type
             (Name-In-Cyc Calendar-Covering-Type "#$CalendarCoveringType")
             (Sibling-Disjoint-Collection Calendar-Covering-Type)
             (Subclass-Of Calendar-Covering-Type Temporal-Object-Type)
             (Set-Or-Collection Calendar-Covering-Type)
             (Arity Calendar-Covering-Type 1)
             (Documentation Calendar-Covering-Type
              "Calendar-Covering-Type is a collection of collections.  An element ?CC of Calendar-Covering-Type  is itself a collection, a type of time interval, such that the union of all the instances of ?CC would completely cover all of time without overlap.  Thus, Calendar-Year is a Calendar-Covering-Type because all of time consists of a sequence of non-overlapping Calendar-Years.  Similarly Calendar-Month, Calendar-Day, Calendar-Hour, etc.  Notice that Monday and December are NOT instances of Calendar-Covering-Type, because all of time is not a sequence of Mondays, or Decembers.  Also notice that a collection Week -- defined as the set of all seven-day-long-periods-of-time -- would not be an instance of Calendar-Covering-Type, since several different Weeks could overlap; e.g., the week beginning today and the week beginning yesterday and the week beginning tomorrow."))

(defobject East-Generally
   (Geographical-Direction East-Generally)
   (Name-In-Cyc East-Generally "#$East-Generally")
   (Documentation East-Generally
    "The general direction of East.  The element of Vector-Interval that comprises the cone-shaped set of vectors pointing (from some reference point) within approximately forty-five degrees of East-Directly."))

(defrelation Visual-Information-Conveying-Act
             (Name-In-Cyc Visual-Information-Conveying-Act
              "#$VisualInformationConveyingAct")
             (Temporal-Object-Type Visual-Information-Conveying-Act)
             (Default-Disjoint-Script-Type Visual-Information-Conveying-Act)
             (Subclass-Of Visual-Information-Conveying-Act
              Ibt-Generation-Original)
             (Set-Or-Collection Visual-Information-Conveying-Act)
             (Arity Visual-Information-Conveying-Act 1)
             (Documentation Visual-Information-Conveying-Act
              "The collection of actions that express (transmit) visual information."))

(defrelation Biological-Phylum
             (Name-In-Cyc Biological-Phylum "#$BiologicalPhylum")
             (Biological-Taxon-Type Biological-Phylum)
             (Subclass-Of Biological-Phylum Biological-Taxon)
             (Set-Or-Collection Biological-Phylum)
             (Arity Biological-Phylum 1)
             (Documentation Biological-Phylum
              "The collection of main taxonomic subdivisions of Biological-Kingdom (or Biological-Subkingdom if present) for the Animal kingdom and for the animal-like organisms within the Protista-Kingdom.  The other elements of Biological-Kingdom have divisions belonging to Biological-Division instead of Phyla (Phyla is the plural of Phylum)."))

(defrelation Topic-Of-Info-Transfer
             (Domain Topic-Of-Info-Transfer Information-Transfer-Event)
             (Range Topic-Of-Info-Transfer Thing)
             (Name-In-Cyc Topic-Of-Info-Transfer "#$topicOfInfoTransfer")
             (Role Topic-Of-Info-Transfer)
             (Slot Topic-Of-Info-Transfer)
             (Relation Topic-Of-Info-Transfer)
             (Arity Topic-Of-Info-Transfer 2)
             (Binary-Relation Topic-Of-Info-Transfer)
             (Documentation Topic-Of-Info-Transfer
              "The predicate Topic-Of-Info-Transfer is used to indicate what a particular communication is about.  (Topic-Of-Info-Transfer TRANS TOPIC) means that TOPIC is a primary topic of the information communicated in the Information-Transfer-Event TRANS.  For example, a result reported after an instance of Blood-Test will contain information about the Object-Tested (viz., the blood sample); the patient's blood is thus a Topic-Of-Info-Transfer of that report."))

(defrelation Dissatisfaction
             (Name-In-Cyc Dissatisfaction "#$Dissatisfaction")
             (Feeling-Attribute-Type Dissatisfaction)
             (Subclass-Of Dissatisfaction Feeling-Attribute)
             (Set-Or-Collection Dissatisfaction)
             (Arity Dissatisfaction 1)
             (Documentation Dissatisfaction
              "Feeling of discontent, due to a lack of fulfillment of an agent's desires, needs, or requirements.  This is a collection; for an explanation of a typical Feeling-Attribute-Type, see Happiness.   Some more specialized Feeling-Attribute-Types than Dissatisfaction are Disappointment, Frustration, Impatience, Anger, etc. "))

(defrelation Change-In-User-Rights
             (Name-In-Cyc Change-In-User-Rights "#$ChangeInUserRights")
             (Script-Type Change-In-User-Rights)
             (Subclass-Of Change-In-User-Rights Generalized-Transfer)
             (Set-Or-Collection Change-In-User-Rights)
             (Arity Change-In-User-Rights 1)
             (Documentation Change-In-User-Rights
              "A collection of events.  Each element of Change-In-User-Rights is an event in which some instance of Agent either gains or loses possession of something.   `Possession' means having some right to use a thing that one has in hand or otherwise has access to.  Different types of possession (e.g., ownership, rental, borrowings) can be specified by the using the appropriate element(s) of User-Rights-Attribute (q.v.).  Changes in an agent's user rights can come about in various ways: through buying and selling, renting, borrowing or lending, giving, repossession, etc.  Some subsets of this kind of change are Losing-User-Rights, Gaining-User-Rights, and Exchange-Of-User-Rights; in the latter class, there is an alteration in the rights of two (or more) agents to use two (or more) items -- as in a purchase, when one agent gets full use rights to an object by turning over a sum of money to the object's previous owner.  In addition, some changes in user rights are classified explicitly in Temporary-Change-Of-User-Rights (e.g., borrowing, renting), while others are permanent.   Events that involve such changes in user rights all belong in the collection of events, Change-In-User-Rights.   In any particular Change-In-User-Rights event, the item which is changing hands is identified as the Object-Of-Possession-Transfer."))

(defrelation Capable-Of
             (Nth-Domain Capable-Of 1 Agent)
             (Nth-Domain Capable-Of 2 Collection)
             (Nth-Domain Capable-Of 3 Role)
             (Nth-Domain-Subclass-Of Capable-Of 2 Situation)
             (Subrelation-Of Capable-Of Anatomically-Capable-Of)
             (Subrelation-Of Capable-Of Legally-Capable-Of)
             (Subrelation-Of Capable-Of Fiscally-Capable-Of)
             (Subrelation-Of Capable-Of Skill-Capable-Of)
             (Name-In-Cyc Capable-Of "#$capableOf")
             (Ternary-Predicate Capable-Of)
             (Relation Capable-Of)
             (Arity Capable-Of 3)
             (Documentation Capable-Of
              "The predicate Capable-Of indicates that an agent is fully able to carry out a certain role in a certain type of situation.  (Capable-Of AGT SIT-TYPE ROLE) means that the Agent AGT is able to act as described by ROLE in Situations of the type SIT-TYPE.  Capable-Of entails that AGT is qualified in ALL the relevant ways to fill that ROLE; e.g., AGT is Anatomically-Capable-Of, Fiscally-Capable-Of, Legally-Capable-Of, and Skill-Capable-Of playing that ROLE in SIT-TYPE."))

(defobject Down-Generally
   (Terrestrial-Direction Down-Generally)
   (Name-In-Cyc Down-Generally "#$Down-Generally")
   (Documentation Down-Generally
    "The element of Vector-Interval that comprises the cone-shaped set of vectors pointing (from some reference point) within approximately forty-five degrees of Down-Directly."))

(deffunction Second-Unit-Of-Angular-Measure
   (Args-Isa Second-Unit-Of-Angular-Measure Real-Number)
   (Result-Instance-Of Second-Unit-Of-Angular-Measure Physical-Attribute)
   (Result-Instance-Of Second-Unit-Of-Angular-Measure Scalar-Interval)
   (Name-In-Cyc Second-Unit-Of-Angular-Measure "#$Second-UnitOfAngularMeasure")
   (Unit-Of-Angular-Distance Second-Unit-Of-Angular-Measure)
   (Unit-Of-Measure-No-Prefix Second-Unit-Of-Angular-Measure)
   (Function Second-Unit-Of-Angular-Measure)
   (Documentation Second-Unit-Of-Angular-Measure
    "A unit to measure the size of angles, in the Imperial system of measurement.  60 seconds = 1 minute (Minute-Unit-Of-Angular-Measure)"))

(defrelation Professional-Office
             (Name-In-Cyc Professional-Office "#$ProfessionalOffice")
             (Existing-Object-Type Professional-Office)
             (Subclass-Of Professional-Office Local-Customer-Contact-Point)
             (Set-Or-Collection Professional-Office)
             (Arity Professional-Office 1)
             (Documentation Professional-Office
              "A collection of organizations.  Every element of Professional-Office is a Single-Site-Organization comprising one or more professionals (physicians, dentists, lawyers, accountants, etc.) and their support staff."))

(defrelation Tube-Shape
             (Name-In-Cyc Tube-Shape "#$TubeShape")
             (Three-Dimensional-Shape-Type Tube-Shape)
             (Abstract-Shape-Type Tube-Shape)
             (Subclass-Of Tube-Shape Three-Dimensional-Shape)
             (Subclass-Of Tube-Shape Abstract-Shape)
             (Set-Or-Collection Tube-Shape)
             (Arity Tube-Shape 1)
             (Documentation Tube-Shape
              "The collection of all tube-like shapes: long, thin, hollow cylinders.  Pipes, hoses, smokestacks, etc."))

(defobject |(VERY-HIGH-AMOUNT-FN POROSITY)|
   (Scalar-Interval |(VERY-HIGH-AMOUNT-FN POROSITY)|)
   (Porosity |(VERY-HIGH-AMOUNT-FN POROSITY)|)
   (Skolem-Object |(VERY-HIGH-AMOUNT-FN POROSITY)|))

(defobject City-Of-Bandar-Abbas-Iran
   (Entity City-Of-Bandar-Abbas-Iran)
   (City City-Of-Bandar-Abbas-Iran)
   (Name-In-Cyc City-Of-Bandar-Abbas-Iran "#$CityOfBandarAbbasIran")
   (Documentation City-Of-Bandar-Abbas-Iran
    "Bandar Abbas (Bandar-e-'Abbas), a city in Iran on the north coast of the Persian-Gulf, near the Strait-Of-Hormuz.  One of the Chief-Ports of the country of Iran."))

(defrelation Animal-Migration
             (Name-In-Cyc Animal-Migration "#$AnimalMigration")
             (Script-Type Animal-Migration)
             (Temporal-Object-Type Animal-Migration)
             (Subclass-Of Animal-Migration Locomotion-Event)
             (Subclass-Of Animal-Migration Translation-Round-Trip)
             (Set-Or-Collection Animal-Migration)
             (Arity Animal-Migration 1)
             (Documentation Animal-Migration
              "The collection of regular, species-linked movements of an animal or group of animals from one place to another, usually with a return to the starting point after a certain period of time.  In some species, the migration cycle occurs once in a lifetime, while others migrate annually on a seasonal basis.   Migration is typically linked with an animal's reproductive cycle (as in salmon), but may also involve seasonal relocation to a more hospitable climate and/or more plentiful food supply. For example, many birds exhibit seasonal migration; e.g., native Northeastern U.S. birds that spend their winters in the Southern U.S."))

(defrelation Retail-Organization
             (Name-In-Cyc Retail-Organization "#$RetailOrganization")
             (Existing-Object-Type Retail-Organization)
             (Subclass-Of Retail-Organization Selling-Organization)
             (Subclass-Of Retail-Organization Commercial-Organization)
             (Set-Or-Collection Retail-Organization)
             (Arity Retail-Organization 1)
             (Documentation Retail-Organization
              "A collection of organizations.  Each element of Retail-Organization is an enterprise that engages primarily in selling goods to end-users or consumers, rather than to wholesale customers.  Examples: Sears-The-Company, Walden-Books-The-Company, Studtman-Photo."))

(defrelation Making-A-Gesture
             (Name-In-Cyc Making-A-Gesture "#$MakingAGesture")
             (Temporal-Object-Type Making-A-Gesture)
             (Default-Disjoint-Script-Type Making-A-Gesture)
             (Subclass-Of Making-A-Gesture Voluntary-Body-Movement)
             (Subclass-Of Making-A-Gesture Ibt-Generation-Original)
             (Subclass-Of Making-A-Gesture Visual-Information-Conveying-Act)
             (Set-Or-Collection Making-A-Gesture)
             (Arity Making-A-Gesture 1)
             (Documentation Making-A-Gesture
              "The collection of acts of IBO-Creation
done by an Animal (including Person) arranging its limbs or other
body parts (and whatever objects the limbs might be holding) in some
meaningful configuration (static or dynamic).  Vocal IBT-Generations
are not considered to be gestures (see Making-An-Oral-Sound for this),
but they might be done in conjunction with gestures.
NB:  Making-A-Gesture is NOT a subset of Non-Verbal-Communicating;
at most, an instance of Making-A-Gesture is only half of a communication event.
And someone can make a gesture while alone, without using it for
communication. Thus, only some gestures are Sub-Events of
Non-Verbal-Communicating. (But note that Making-A-Gesture IS a subset
of IBT-Generation-Original (q.v.), since every gesture encodes
information, whether or not it is used for communication in a
particular instance.)"))

(defobject Down-Directly
   (Unit-Vector-Precise Down-Directly)
   (Terrestrial-Direction Down-Directly)
   (Subattribute-Of Down-Directly Down-Generally)
   (Name-In-Cyc Down-Directly "#$Down-Directly")
   (Documentation Down-Directly
    "The direction straight down.  In the terrestrial context, Down-Directly points in the same direction as Earth's gravitational force vector."))

(defrelation Object-Of-Possession-Transfer
             (Subrelation-Of Object-Of-Possession-Transfer Transferred-Thing)
             (Domain Object-Of-Possession-Transfer Change-In-User-Rights)
             (Range Object-Of-Possession-Transfer Something-Existing)
             (Name-In-Cyc Object-Of-Possession-Transfer
              "#$objectOfPossessionTransfer")
             (Actor-Slot Object-Of-Possession-Transfer)
             (Asymmetric-Binary-Predicate Object-Of-Possession-Transfer)
             (Slot Object-Of-Possession-Transfer)
             (Relation Object-Of-Possession-Transfer)
             (Arity Object-Of-Possession-Transfer 2)
             (Binary-Relation Object-Of-Possession-Transfer)
             (Documentation Object-Of-Possession-Transfer
              "The predicate Object-Of-Possession-Transfer identifies the object which `changes hands' in a particular event wherein some user's rights to it are changed.  (Object-Of-Possession-Transfer EVENT OBJECT) means that in EVENT, all or some rights to use OBJECT are transferred from one agent (the From-Possessor) to another (the To-Possessor).  EVENT is an element of Change-In-User-Rights (q.v.), for example, a buying, renting, lending, repossessing, etc."))

(defrelation Visible-Light
             (Wave-Emission-Fn Visible-Light
              |(WAVE-EMISSION-FN VISIBLE-LIGHT)|)
             (Name-In-Cyc Visible-Light "#$VisibleLight")
             (Wave-Propagation-Type Visible-Light)
             (Subclass-Of Visible-Light Electromagnetic-Radiation)
             (Set-Or-Collection Visible-Light)
             (Arity Visible-Light 1)
             (Documentation Visible-Light
              "A collection of events; a subset of Electromagnetic-Radiation.  Each element of Visible-Light is an instance of electromagnetic radiation having a wavelength approximately between 3800 and 7750 Angstroms, i.e., light visible to human eyes."))

(defrelation Biological-Kingdom
             (Name-In-Cyc Biological-Kingdom "#$BiologicalKingdom")
             (Biological-Taxon-Type Biological-Kingdom)
             (Subclass-Of Biological-Kingdom Biological-Taxon)
             (Set-Or-Collection Biological-Kingdom)
             (Arity Biological-Kingdom 1)
             (Documentation Biological-Kingdom
              "The collection of the highest, most general taxonomic divisions of organisms.  Traditionally, it has included the elements of Animal and of Plant and may include separate kingdoms for the elements of Prokaryotic-Cell, single-celled eukaryotes (protists), and fungi."))

(defrelation Generic-Value-Function
             (Name-In-Cyc Generic-Value-Function "#$GenericValueFunction")
             (Relationship-Type Generic-Value-Function)
             (Subclass-Of Generic-Value-Function Reifiable-Function)
             (Subclass-Of Generic-Value-Function Individual-Denoting-Function)
             (Set-Or-Collection Generic-Value-Function)
             (Arity Generic-Value-Function 1)
             (Documentation Generic-Value-Function
              "A collection of Cyc functions; a subset of Individual-Denoting-Function.  Each element of Generic-Value-Function is a function that can be applied to an element of Primitive-Attribute-Type and returns some `generic' amount (e.g., high, medium, low) of that attribute.  Such functions are particularly useful for qualitative, hard-to-quantify attribute types, e.g., Happiness, Fragility, Absorbency, Glamor, etc.  They save us from having to create individually the various levels of attributes like Happiness, Fragility, etc.  Instead, for example, we need only refer to (High-Amount-Fn Happiness) as an alternative to painstakingly reifying `HighHappiness' and hand-entering all the formulas that such a constant requires (e.g. :Direct-Types, Following-Value, etc.). The compositionality afforded by the elements of Generic-Value-Function allows this overhead to be taken care of automatically."))

(defrelation Unit-Of-Power
             (Name-In-Cyc Unit-Of-Power "#$UnitOfPower")
             (Interconvertible-Unit-Type Unit-Of-Power)
             (Subclass-Of Unit-Of-Power Unit-Of-Measure)
             (Set-Or-Collection Unit-Of-Power)
             (Arity Unit-Of-Power 1)
             (Documentation Unit-Of-Power
              "The collection of functions which return elements of Energy-As-A-Quantity.  E.g., (Watt 5) denotes 5 watts."))

(defrelation Calendar-Autumn
             (Name-In-Cyc Calendar-Autumn "#$CalendarAutumn")
             (Calendar-Season-Type Calendar-Autumn)
             (Subclass-Of Calendar-Autumn Calendar-Season)
             (Set-Or-Collection Calendar-Autumn)
             (Arity Calendar-Autumn 1)
             (Documentation Calendar-Autumn
              "The calendar season that begins at autumnal equinox and runs until winter solstice."))

(defrelation |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "SEPARABLE-ENTITY")|
             (Skolem-Object
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "SEPARABLE-ENTITY")|)
             (Collection
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "SEPARABLE-ENTITY")|)
             (Subclass-Of
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "SEPARABLE-ENTITY")|
              Something-Existing)
             (Set-Or-Collection
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "SEPARABLE-ENTITY")|)
             (Arity
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "SEPARABLE-ENTITY")|
              1))

(defrelation Starts-After-Starting-Of
             (Overlapping-External-Concept Starts-After-Starting-Of
              Sensus-Information1997 "FOLLOW")
             (Subrelation-Of Starts-After-Starting-Of Ends-After-Starting-Of)
             (Domain Starts-After-Starting-Of Temporal-Thing)
             (Range Starts-After-Starting-Of Temporal-Thing)
             (Name-In-Cyc Starts-After-Starting-Of "#$startsAfterStartingOf")
             (Irreflexive-Binary-Predicate Starts-After-Starting-Of)
             (Complex-Temporal-Relation Starts-After-Starting-Of)
             (Transitive-Binary-Predicate Starts-After-Starting-Of)
             (Asymmetric-Binary-Predicate Starts-After-Starting-Of)
             (Slot Starts-After-Starting-Of)
             (Relation Starts-After-Starting-Of)
             (Arity Starts-After-Starting-Of 2)
             (Binary-Relation Starts-After-Starting-Of)
             (Documentation Starts-After-Starting-Of
              "(Starts-After-Starting-Of X Y) means (After (Start-Fn X) (Start-Fn Y)).  That is, the Starting-Point of X is later than the Starting-Point of Y.  This implies nothing about whether X and Y overlap, or how much they overlap, except that they can't be fully Cotemporal."))

(defrelation Skill-Capable-Of
             (Nth-Domain Skill-Capable-Of 1 Animal)
             (Nth-Domain Skill-Capable-Of 2 Collection)
             (Nth-Domain Skill-Capable-Of 3 Role)
             (Nth-Domain-Subclass-Of Skill-Capable-Of 2 Situation)
             (Name-In-Cyc Skill-Capable-Of "#$skillCapableOf")
             (Ternary-Predicate Skill-Capable-Of)
             (Relation Skill-Capable-Of)
             (Arity Skill-Capable-Of 3)
             (Documentation Skill-Capable-Of
              "The predicate Skill-Capable-Of indicates that an agent has the skill to take a certain role in a certain type of situation or event.  (Skill-Capable-Of AGT SIT-TYPE ROLE) means that a particular Agent AGT has the necessary skills to act in this ROLE in normal instances of SIT-TYPE.  For example, to express that Gumby is capable of swimming, Cyc would say (Skill-Capable-Of Gumby Swimming-Generic Performed-By).  Skill-Capable-Of entails that AGT has any anatomical and/or intellectual prerequisites for performing the skill; however, it is neutral as to whether AGT has the necessary resources of time, money, opportunity, etc., to use the skill in any particular situation of SIT-TYPE."))

(deffunction Kilometer
   (Args-Isa Kilometer Real-Number)
   (Result-Instance-Of Kilometer Distance)
   (Result-Instance-Of Kilometer Scalar-Interval)
   (Name-In-Cyc Kilometer "#$Kilometer")
   (Unit-Of-Distance Kilometer)
   (Unit-Of-Measure-With-Prefix Kilometer)
   (Mks-Unit-Of-Measure Kilometer)
   (Function Kilometer)
   (Documentation Kilometer
    "The measurement function used in Cyc to represent the 1000-meter unit used within the Metric system to measure distance.  Modern countries using the metric system measure their roads - and their road races - in kilometers. See also MKS-Unit-Of-Measure, Unit-Of-Measure."))

(defrelation October
             (Name-In-Cyc October "#$October")
             (Month-Of-Year-Type October)
             (Subclass-Of October Calendar-Month)
             (Set-Or-Collection October)
             (Arity October 1))

(defrelation Exchange-Of-User-Rights
             (Name-In-Cyc Exchange-Of-User-Rights "#$ExchangeOfUserRights")
             (Default-Disjoint-Script-Type Exchange-Of-User-Rights)
             (Temporal-Object-Type Exchange-Of-User-Rights)
             (Subclass-Of Exchange-Of-User-Rights Change-In-User-Rights)
             (Subclass-Of Exchange-Of-User-Rights Social-Occurrence)
             (Subclass-Of Exchange-Of-User-Rights Human-Activity)
             (Set-Or-Collection Exchange-Of-User-Rights)
             (Arity Exchange-Of-User-Rights 1)
             (Documentation Exchange-Of-User-Rights
              "A collection of events.  In an instance of Exchange-Of-User-Rights, two Agents (the Exchangers) perform two distinct (though related) Transferring-Possessions with each other.  Two objects are exchanged.  Each agent gains possession -- in the form of some User-Rights-Attribute -- of something (an Object-Of-Possession-Transfer) from the other.  Each transfer is related to the other as some kind of condition, a precondition or an intended result; e.g., the news seller will hand over a paper if given fifty cents, and I give the news seller my fifty cents so that he will turn over a newspaper to me.  The two Transferring-Possession events are Sub-Events of the Exchange-Of-User-Rights event."))

(defobject |(HIGH-AMOUNT-FN POROSITY)|
   (Scalar-Interval |(HIGH-AMOUNT-FN POROSITY)|)
   (Porosity |(HIGH-AMOUNT-FN POROSITY)|)
   (Skolem-Object |(HIGH-AMOUNT-FN POROSITY)|))

(defrelation Movement-Process
             (Name-In-Cyc Movement-Process "#$MovementProcess")
             (Temporal-Stuff-Type Movement-Process)
             (Script-Type Movement-Process)
             (Subclass-Of Movement-Process Movement-Event)
             (Set-Or-Collection Movement-Process)
             (Arity Movement-Process 1)
             (Documentation Movement-Process
              "Movement-Process is a subset of Movement-Event.  Its elements are those Movement-Events which can be considered as continuous motions.  That is, (1) motion happens without interruption throughout a Movement-Process, and thus (2) every time-slice of a Movement-Process is also a Movement-Process."))

(defrelation Nervousness
             (Name-In-Cyc Nervousness "#$Nervousness")
             (Feeling-Attribute-Type Nervousness)
             (Subclass-Of Nervousness Feeling-Attribute)
             (Set-Or-Collection Nervousness)
             (Arity Nervousness 1)
             (Documentation Nervousness
              "Feeling of nervousness and excitability.  One can be nervous ABOUT something in particular, or one can have undirected feelings of anxiety.   For the former, state an assertion of the form (Feels-Towards-Object ?AGT ?OBJ Nervousness ?DEGREE) or (Feels-Towards-Event ?AGT ?EVNT Nervousness ?DEGREE); but for the latter (undirected feelings of anxiety) use (Feels-Emotion ?AGT Nervousness).
Note: This is a collection; for an explanation of a typical Feeling-Attribute-Type, see Happiness.  A more specialized Feeling-Attribute-Type than Nervousness is Panic."))

(defrelation Calendar-Century
             (Name-In-Cyc Calendar-Century "#$CalendarCentury")
             (Calendar-Covering-Type Calendar-Century)
             (Subclass-Of Calendar-Century Time-Interval)
             (Set-Or-Collection Calendar-Century)
             (Arity Calendar-Century 1)
             (Documentation Calendar-Century
              "The collection of centuries that make up the calendar (1900's, 1700's etc.)  An example of such a constant in Cyc is The-Nineteenth-Century-AD "))

(defrelation Unit-Of-Voltage
             (Name-In-Cyc Unit-Of-Voltage "#$UnitOfVoltage")
             (Interconvertible-Unit-Type Unit-Of-Voltage)
             (Subclass-Of Unit-Of-Voltage Unit-Of-Measure)
             (Set-Or-Collection Unit-Of-Voltage)
             (Arity Unit-Of-Voltage 1)
             (Documentation Unit-Of-Voltage
              "The collection of functions which return elements of Voltage.  E.g., (Volt 120) denotes an electrical voltage of 120 volts."))

(defrelation Calendar-Summer
             (Name-In-Cyc Calendar-Summer "#$CalendarSummer")
             (Calendar-Season-Type Calendar-Summer)
             (Subclass-Of Calendar-Summer Calendar-Season)
             (Set-Or-Collection Calendar-Summer)
             (Arity Calendar-Summer 1)
             (Documentation Calendar-Summer
              "The calendar season that begins at summer solstice and runs until autumnal equinox."))

(defobject List-The-Format
   (Format List-The-Format)
   (Name-In-Cyc List-The-Format "#$ListTheFormat")
   (Documentation List-The-Format
    "A Format or datatype.  Multiple copies of entries, & any number of entries, are OK; and order matters; i.e., if you change the order of two different elements of a list, the resultant list is not equal to the original one"))

(defobject |(HIGH-AMOUNT-FN VISIBILITY)|
   (Scalar-Interval |(HIGH-AMOUNT-FN VISIBILITY)|)
   (Visibility |(HIGH-AMOUNT-FN VISIBILITY)|)
   (Skolem-Object |(HIGH-AMOUNT-FN VISIBILITY)|))

(defrelation Submarine
             (Name-In-Cyc Submarine "#$Submarine")
             (Product-Type Submarine)
             (Existing-Object-Type Submarine)
             (Subclass-Of Submarine Transportation-Device-Vehicle)
             (Subclass-Of Submarine Ship)
             (Set-Or-Collection Submarine)
             (Arity Submarine 1)
             (Documentation Submarine
              "Submarine is the collection of all boats that can operate underwater."))

(defrelation Head-Vertebrate
             (Name-In-Cyc Head-Vertebrate "#$Head-Vertebrate")
             (Unique-Anatomical-Part-Type Head-Vertebrate)
             (Subclass-Of Head-Vertebrate Biological-Living-Object)
             (Subclass-Of Head-Vertebrate Head-Animal-Body-Part)
             (Set-Or-Collection Head-Vertebrate)
             (Arity Head-Vertebrate 1)
             (Documentation Head-Vertebrate
              "The collection of all heads of Vertebrates (animals with backbones).  Vertebrate heads all have faces (see Face-Of-Animal) and connect to the animal's torso via a neck; these things are not generally true for most non-vertebrates."))

(defrelation Acceleration
             (Name-In-Cyc Acceleration "#$Acceleration")
             (Derived-Numeric-Attribute-Type Acceleration)
             (Subclass-Of Acceleration Physical-Attribute)
             (Subclass-Of Acceleration Scalar-Interval)
             (Set-Or-Collection Acceleration)
             (Arity Acceleration 1)
             (Documentation Acceleration
              "Acceleration is the change in speed of an object per unit time.  It is a measurable physical quantity, measured in units such as MilesPerHourPerSecond."))

(defobject South-East-Directly
   (Geographical-Direction South-East-Directly)
   (Unit-Vector-Precise South-East-Directly)
   (Name-In-Cyc South-East-Directly "#$SouthEast-Directly")
   (Documentation South-East-Directly
    "The precise Southeast direction from any geographic point other than a pole."))

(defrelation Field-Of-Study
             (Name-In-Cyc Field-Of-Study "#$FieldOfStudy")
             (Object-Type Field-Of-Study)
             (Subclass-Of Field-Of-Study Propositional-Information-Thing)
             (Set-Or-Collection Field-Of-Study)
             (Arity Field-Of-Study 1)
             (Documentation Field-Of-Study
              "A collection of microtheories.  Each element of Field-Of-Study is a microtheory containing the knowledge, theory, hypotheses, evidence, and problems covered in a particular field of study (in propositional form).  Examples:  Linguistics, Ethology, Artificial-Intelligence, Business-Administration, Nursing-Field-Of-Study, etc.  Fields of study are typically the subject of teaching and/or research within instances of Academic-Department, although the correlation between Academic-Department and Field-Of-Study is not one-to-one.  Note also that elements of Field-Of-Study are intangible objects (i.e., contexts with propositional content), while academic departments are partially tangible organizations.  For the activity of specialized study in a field, see Course-Of-Study."))

(defrelation Disaster-Event
             (Name-In-Cyc Disaster-Event "#$DisasterEvent")
             (Temporal-Object-Type Disaster-Event)
             (Script-Type Disaster-Event)
             (Subclass-Of Disaster-Event Destruction-Event)
             (Set-Or-Collection Disaster-Event)
             (Arity Disaster-Event 1)
             (Documentation Disaster-Event
              "A collection of events.  In each Disaster-Event, a large group of people (or, in decreasing order of likelihood of usage of this concept, a large group of animals, plants, corporations, etc.) are at very high risk of injury or property damage, or in which a lot of injury and property damage occurs even though the risk was low."))

(defrelation Goal
             (Name-In-Cyc Goal "#$Goal")
             (Stuff-Type Goal)
             (Subclass-Of Goal Mental-Object)
             (Set-Or-Collection Goal)
             (Arity Goal 1)
             (Documentation Goal
              "Each element of this collection is a state of affairs that some Agent prefers would hold; moreover, the agent is/will be taking steps to achieve (or maintain) that state of affairs.  A Goal may be a reified Cyc constant, or may be represented by a Cyc-Formula.   Some subsets of Goal (that is, some classes of goals) include: species preservation (Preserving-Own-Species), self-preservation (Preserving-Self), accomplishing a milestone (Milestone), avoiding hunger (Hunger-Avoidance-Goal), etc."))

(defrelation Single-Site-Organization
             (Name-In-Cyc Single-Site-Organization "#$SingleSiteOrganization")
             (Existing-Object-Type Single-Site-Organization)
             (Subclass-Of Single-Site-Organization Organization)
             (Set-Or-Collection Single-Site-Organization)
             (Arity Single-Site-Organization 1)
             (Documentation Single-Site-Organization
              "A collection of organizations.  An instance of Single-Site-Organization is an organization which has a single location as its Physical-Quarters.  For example, the K-Mart-Store at Parmer Lane, Simon & David at the Arboretum, and Great Hills Fire-Station Number 2 would be positive instances.  But the K-Mart-Company, Tom-Thumb-The-Company, and the Austin City Fire Department are negative examples, since those `parent' organizations have several sites as their Physical-Quarters."))

(defrelation Owns
             (not (Transitive-Binary-Predicate Owns))
             (not (Reflexive-Binary-Predicate Owns))
             (Synonymous-External-Concept Owns Sensus-Information1997
              "OWNERSHIP")
             (Subrelation-Of Owns Has-Ownership-In)
             (Subrelation-Of Owns Cotemporal)
             (Domain Owns Agent)
             (Range Owns Something-Existing)
             (Name-In-Cyc Owns "#$owns")
             (Cotemporal-Objects-Slot Owns)
             (Asymmetric-Binary-Predicate Owns)
             (Slot Owns)
             (Relation Owns)
             (Arity Owns 2)
             (Binary-Relation Owns)
             (Documentation Owns
              "(Owns AGENT OBJECT) means that AGENT owns OBJECT -- that is, AGENT enjoys Full-Use-Rights (q.v.) over OBJECT.  
Note:  There are commonsense rules relating Owns to Controls.  E.g., ownership typically implies control.  But they are just default rules, as there are many exceptions (e.g., when the owner of a building leases it to a company for ten years, the owner gives up almost all `control' over it during that decade)."))

(defrelation Making-Something
             (Name-In-Cyc Making-Something "#$MakingSomething")
             (Temporal-Object-Type Making-Something)
             (Default-Disjoint-Script-Type Making-Something)
             (Subclass-Of Making-Something Purposeful-Action)
             (Subclass-Of Making-Something Creation-Event)
             (Set-Or-Collection Making-Something)
             (Arity Making-Something 1)
             (Documentation Making-Something
              "A collection of (very generic) events.  In each Making-Something event, something (tangible) is made from some raw materials. The end result may or may not be what is called a Product."))

(defrelation Skolem-Func-N
             (Name-In-Cyc Skolem-Func-N "#$SkolemFuncN")
             (Collection Skolem-Func-N)
             (Subclass-Of Skolem-Func-N Skolem-Function)
             (Set-Or-Collection Skolem-Func-N)
             (Arity Skolem-Func-N 1))

(deffunction Seconds-Duration
   (Args-Isa Seconds-Duration Real-Number)
   (Result-Instance-Of Seconds-Duration Time-Quantity)
   (Result-Instance-Of Seconds-Duration Scalar-Interval)
   (Name-In-Cyc Seconds-Duration "#$SecondsDuration")
   (Unit-Of-Measure Seconds-Duration)
   (Standard-Unit-Of-Measure Seconds-Duration)
   (Unit-Of-Measure-No-Prefix Seconds-Duration)
   (Cgs-Unit-Of-Measure Seconds-Duration)
   (Unit-Of-Time Seconds-Duration)
   (Function Seconds-Duration)
   (Documentation Seconds-Duration
    "Seconds are the standard unit of Time in Cyc.  Think of Seconds-Duration as a function; it takes one or two numbers and returns, as its value, some amount of Time.   An expression of the form (Seconds-Duration ?num) denotes a quantity of Time that is exactly ?num seconds long.  An expression of the form (Seconds-Duration ?min ?max) denotes a quantity of Time that is at least ?min seconds at most ?max seconds long.
Note:  Cyc's ontology contains ways to specify nonuniform distributions (e.g., a normal distribution with a mean and standard deviation), but for most purposes this simple uniform specification of `a piece of time' has proven itself to be the most useful building block."))

(deffunction Watt
   (Args-Isa Watt Real-Number)
   (Result-Instance-Of Watt Physical-Attribute)
   (Result-Instance-Of Watt Scalar-Interval)
   (Name-In-Cyc Watt "#$Watt")
   (Unit-Of-Power Watt)
   (Unit-Of-Measure-No-Prefix Watt)
   (Mks-Unit-Of-Measure Watt)
   (Standard-Unit-Of-Measure Watt)
   (Function Watt)
   (Documentation Watt
    "This is the basic unit of power in the metric system and the basic Unit-Of-Power in CYC.  It is a newton-meter per second or a joule per second."))

(defrelation |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "ONE-OR-TWO-D-LOCATION")|
             (Skolem-Object
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "ONE-OR-TWO-D-LOCATION")|)
             (Collection
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "ONE-OR-TWO-D-LOCATION")|)
             (Shape-Type
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "ONE-OR-TWO-D-LOCATION")|)
             (Subclass-Of
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "ONE-OR-TWO-D-LOCATION")|
              Geometric-Thing)
             (Set-Or-Collection
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "ONE-OR-TWO-D-LOCATION")|)
             (Arity
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "ONE-OR-TWO-D-LOCATION")|
              1))

(defrelation Jealousy
             (Name-In-Cyc Jealousy "#$Jealousy")
             (Feeling-Attribute-Type Jealousy)
             (Subclass-Of Jealousy Resentment)
             (Set-Or-Collection Jealousy)
             (Arity Jealousy 1)
             (Documentation Jealousy
              "Intolerance of rivalry; feeling of suspicion and resentment of one's rivals.  This is a collection; for an explanation of a typical Feeling-Attribute-Type, see Happiness.
Note: Envy is related to covetousness, wanting (perhaps in the future) what someone else has; Jealousy is related to possessiveness, wanting to keep what is (or was or could have been) already yours."))

(defrelation Time-Of-Day-Am
             (Name-In-Cyc Time-Of-Day-Am "#$TimeOfDay-AM")
             (Time-Of-Day-Type Time-Of-Day-Am)
             (Subclass-Of Time-Of-Day-Am Time-Of-Day)
             (Set-Or-Collection Time-Of-Day-Am)
             (Arity Time-Of-Day-Am 1)
             (Documentation Time-Of-Day-Am
              "The collection of half-days from Midnight to Noon.  See Calendar-Day."))

(defrelation Account-Status-Attribute
             (Name-In-Cyc Account-Status-Attribute "#$AccountStatusAttribute")
             (Sibling-Disjoint-Attribute-Type Account-Status-Attribute)
             (Subclass-Of Account-Status-Attribute Attribute-Value)
             (Set-Or-Collection Account-Status-Attribute)
             (Arity Account-Status-Attribute 1)
             (Documentation Account-Status-Attribute
              "A collection of attributes.  Each element of Account-Status-Attribute is an attribute that describes the obligational status of an Account; e.g.,Paid-In-Full, In-Compliance-With-Payment-Schedule, Payment-Overdue, Account-Inactive."))

(defrelation Engine
             (Name-In-Cyc Engine "#$Engine")
             (Existing-Object-Type Engine)
             (Subclass-Of Engine Powered-Device)
             (Subclass-Of Engine Mechanical-Device)
             (Set-Or-Collection Engine)
             (Arity Engine 1)
             (Documentation Engine
              "A collection of Powered-Devices.  An instance of Engine is a device that changes some form of energy into motion (usually rotation).  An engine may operate by burning some type of fuel (as do jet engines and internal combustion engines), or it may be powered by electricity, fluid flow, etc."))

(defrelation Political-Dispute
             (Name-In-Cyc Political-Dispute "#$PoliticalDispute")
             (Temporal-Object-Type Political-Dispute)
             (Default-Disjoint-Script-Type Political-Dispute)
             (Subclass-Of Political-Dispute Dispute-Event)
             (Set-Or-Collection Political-Dispute)
             (Arity Political-Dispute 1)
             (Documentation Political-Dispute
              "The class of all political disputes, including serious political controversies and skirmishes between individuals, organizations or countries.   Such a dispute involves some question of public policy, as opposed to purely personal or commercial issiues."))

(defrelation Proposal
             (Name-In-Cyc Proposal "#$Proposal")
             (Microtheory-Type Proposal)
             (Subclass-Of Proposal Agreement)
             (Set-Or-Collection Proposal)
             (Arity Proposal 1)
             (Documentation Proposal
              "A collection of agreements.  Each element of Proposal is an agreement to which only one party (namely, the proposer) has agreed.  Proposals are usually part of some Negotiating process.  If a proposal is accepted by all parties, they all then become Agreeing-Agents in an agreement based on that proposal.  For example, an instance of Bid-On-Sale states the terms at which a potential seller will supply goods to the agent who requested bids.  If a particular seller's bid is accepted, then some instance of Sales-Contract is drawn up to which both parties agree; it includes the terms of the bid, along with any additions such as information about how or when the buyer will pay."))

(defrelation Interval-Based-Quantity-Slot
             (Synonymous-External-Concept Interval-Based-Quantity-Slot
              Sensus-Information1997 "SCALAR-ATTRIBUTE-ASCRIPTION")
             (Name-In-Cyc Interval-Based-Quantity-Slot
              "#$IntervalBasedQuantitySlot")
             (Predicate-Category Interval-Based-Quantity-Slot)
             (Subclass-Of Interval-Based-Quantity-Slot Quantity-Slot)
             (Subclass-Of Interval-Based-Quantity-Slot Functional-Slot)
             (Set-Or-Collection Interval-Based-Quantity-Slot)
             (Arity Interval-Based-Quantity-Slot 1)
             (Documentation Interval-Based-Quantity-Slot
              "A collection of binary predicates (i.e., slots).  Flexibility in the representation of quantities is allowed in assertions made with the binary predicates that are elements of Interval-Based-Quantity-Slot.  Each of these predicates, like those in their superset Quantity-Slot, is a binary predicate whose second argument must be an element of Scalar-Interval, i.e., an interval or point representing the value of some measurement.  For example, take the predicate Height-Of-Object, which relates an object to its vertical length.  Although we suppose that in reality there is only a single distance that is the height of some one particular object, our measurement systems are in practice less precise--and typically we need a measurement only within a certain tolerance.  For example, in measuring the Height-Of-Object of a person, usually a measurement to the nearest inch or centimeter will do.  Or we may be even less detailed in our descriptions, perhaps caring only whether someone is more than four feet tall, or `Tall enough to ride' on an amusement park ride.  By allowing an Interval-Entry Format (qq.v.) in the second argument of the measuring predicate, we are telling Cyc that it's okay to describe the (e.g.) Height-Of-Object in several different ways, with varying levels of precision, SO LONG AS all of the measurements asserted for the same object `overlap'.  For example, it is consistent to say both that Jenny is 4'10'' tall, between four and five feet tall, and that she is `Tall enough to ride' the Dodgems (provided that `Tall enough to ride' is an interval whose minimum is at 4'10'' or lower).  Even though there is only one height of a person in reality, using an Interval-Based-Quantity-Slot allows us to represent that height in many different ways, avoiding contradictions while still checking for consistency.  For example, asserting both that Jeff's Height-Of-Object is 5'9'' and in the range 4.5-5.5 feet tall is an inconsistency."))

(defrelation Inter-Arg-Isa2-5
             (Nth-Domain Inter-Arg-Isa2-5 1 Predicate)
             (Nth-Domain Inter-Arg-Isa2-5 2 Collection)
             (Nth-Domain Inter-Arg-Isa2-5 3 Collection)
             (Name-In-Cyc Inter-Arg-Isa2-5 "#$interArgIsa2-5")
             (Ternary-Predicate Inter-Arg-Isa2-5)
             (Relation Inter-Arg-Isa2-5)
             (Arity Inter-Arg-Isa2-5 3)
             (Documentation Inter-Arg-Isa2-5
              "(Inter-Arg-Isa2-5 PRED INDEPENDENT-ARG-COL DEPENDENT-ARG-COL) Base-KB) means that, when an instance of INDEPENDENT-ARG-COL appears as the second argument to PRED, the fifth argument in that assertion is constrained to be an instance of DEPENDENT-ARG-COL."))

(defrelation Composite-Tangible-And-Intangible-Object
             (Name-In-Cyc Composite-Tangible-And-Intangible-Object
              "#$CompositeTangibleAndIntangibleObject")
             (Existing-Object-Type Composite-Tangible-And-Intangible-Object)
             (Subclass-Of Composite-Tangible-And-Intangible-Object
              Partially-Tangible)
             (Subclass-Of Composite-Tangible-And-Intangible-Object
              Partially-Intangible)
             (Subclass-Of Composite-Tangible-And-Intangible-Object
              Something-Existing)
             (Set-Or-Collection Composite-Tangible-And-Intangible-Object)
             (Arity Composite-Tangible-And-Intangible-Object 1)
             (Documentation Composite-Tangible-And-Intangible-Object
              "The collection of things which have both a tangible and an intangible component -- e.g., people (with bodies and minds), information bearing objects (intangible information encoded on a tangible substrate, such as music on a CD, or text in a book) and so on.  Like anything else that has at least some tangible component, each element of Composite-Tangible-And-Intangible-Object exists in time.  Our representation allows us to separately reify the tangible and intangible components of an object; this is sometimes necessary  (e.g., to state that the age of the Frankenstein monster's mind is x, the age of his body is y, and the age of the new composite is z) but not very often needed --- usually one can just reify the Composite-Tangible-And-Intangible-Object and state things about it."))

(defrelation Plant
             (Synonymous-External-Concept Plant Sensus-Information1997 "PLANT")
             (Name-In-Cyc Plant "#$Plant")
             (Biological-Kingdom Plant)
             (Subclass-Of Plant Vegetable-Matter)
             (Subclass-Of Plant Organism-Whole)
             (Subclass-Of Plant Plant-Blo)
             (Set-Or-Collection Plant)
             (Arity Plant 1)
             (Documentation Plant
              "Plant is the collection of all plants; it is a member of the Biological-Kingdom and contains the primary subjects of Biology.  Plants are typically stationary, living, whole organisms; the cells of plants generally lack cholesterol and have cell walls that include substances of Cellulose.  Most, though not all, plants are capable of making sugars by Photosynthesis processes and have green parts.  Some example subsets of Plant are the collections Rose-Bush, Spruce-Tree, and Moss."))

(defrelation |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "SENSE-AND-MEASURE-QUALITY")|
             (Skolem-Object
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "SENSE-AND-MEASURE-QUALITY")|)
             (Attribute-Type
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "SENSE-AND-MEASURE-QUALITY")|)
             (Subclass-Of
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "SENSE-AND-MEASURE-QUALITY")|
              Attribute-Value)
             (Set-Or-Collection
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "SENSE-AND-MEASURE-QUALITY")|)
             (Arity
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "SENSE-AND-MEASURE-QUALITY")|
              1))

(defrelation Salting-Food
             (Name-In-Cyc Salting-Food "#$SaltingFood")
             (Script-Type Salting-Food)
             (Subclass-Of Salting-Food Preserving-Food)
             (Set-Or-Collection Salting-Food)
             (Arity Salting-Food 1)
             (Documentation Salting-Food
              "Soaking food in salt to prevent it from rotting."))

(defrelation Touch-Perception
             (Name-In-Cyc Touch-Perception "#$TouchPerception")
             (Temporal-Stuff-Type Touch-Perception)
             (Default-Disjoint-Script-Type Touch-Perception)
             (Subclass-Of Touch-Perception Perceiving)
             (Subclass-Of Touch-Perception Physical-Contact-Situation)
             (Set-Or-Collection Touch-Perception)
             (Arity Touch-Perception 1)
             (Documentation Touch-Perception
              "The collection of sensory-perceptual events (Perceivings) in which a Perceptual-Agent perceives (acquires information) by touch."))

(defrelation Information-Bearing-Thing
             (Name-In-Cyc Information-Bearing-Thing
              "#$InformationBearingThing")
             (Collection Information-Bearing-Thing)
             (Subclass-Of Information-Bearing-Thing Temporal-Thing)
             (Set-Or-Collection Information-Bearing-Thing)
             (Arity Information-Bearing-Thing 1)
             (Documentation Information-Bearing-Thing
              "A collection of temporal objects, including actions and events as well as physical objects.  Each element of Information-Bearing-Thing is an item that carries information, for an interpreter who understands its conventions.  Examples: a copy of the novel `Moby Dick'; a signal buoy; a photograph; a flag; an elevator sign in Braille; a map; a US dollar bill; a resume; an account ledger; a word in ASL; a musical score; the Cyc program itself.  Note: `an IBT' abbreviates `an information bearing thing'.  See also Specified-Information-Bearing-Thing-Type.  For representation of the propositional content of information bearing things, see Propositional-Information-Thing; but note that not all IBTs have a propositional content (cf. Art-Object)."))

(defrelation Post-Actors
             (Subrelation-Of Post-Actors Actors)
             (Slot-Inverse Post-Actors Ends-After-Ending-Of)
             (Domain Post-Actors Event)
             (Range Post-Actors Something-Existing)
             (Name-In-Cyc Post-Actors "#$postActors")
             (Actor-Slot Post-Actors)
             (Slot Post-Actors)
             (Relation Post-Actors)
             (Arity Post-Actors 2)
             (Binary-Relation Post-Actors)
             (Documentation Post-Actors
              "The predicate Post-Actors is used to indicate a participant that continues to exist after a particular event.  (Post-Actors EVENT OBJECT) means that OBJECT exists after EVENT ends.  It makes no commitment about OBJECT's condition before or during EVENT.  Post-Actors is a very general element of Actor-Slot; it subsumes Outputs-Created, Done-By, and many others."))

(defrelation Reifiable-Term
             (Name-In-Cyc Reifiable-Term "#$ReifiableTerm")
             (Reifiable-Term Reifiable-Term)
             (Collection Reifiable-Term)
             (Subclass-Of Reifiable-Term Cyc-Indexed-Term)
             (Set-Or-Collection Reifiable-Term)
             (Arity Reifiable-Term 1)
             (Documentation Reifiable-Term
              "A collection of Cyc terms.  All CycL constants are elements of Reifiable-Terms, as is any NAT (non-atomic term; see Non-Predicate-Function) whose function is an instance of Reifiable-Function.  E.g., since Government-Fn is an instance of Reifiable-Function, it is true that (Government-Fn France) is a Reifiable-Term.





[Implementation-level Footnote:   At the present time, all assertions of the form (:Direct-Types TERM Reifiable-Term) are recorded and checked specially, as compared to other sorts of assertions; see Defn-Iff.]"))

(defrelation Has-Ownership-In
             (Domain Has-Ownership-In Agent)
             (Range Has-Ownership-In Something-Existing)
             (Name-In-Cyc Has-Ownership-In "#$hasOwnershipIn")
             (Slot Has-Ownership-In)
             (Relation Has-Ownership-In)
             (Arity Has-Ownership-In 2)
             (Binary-Relation Has-Ownership-In)
             (Documentation Has-Ownership-In
              "The predicate Has-Ownership-In relates a particular agent to some thing of which it has part or whole ownership.  (Has-Ownership-In AGENT SOMETHING) means that the Agent AGENT owns a part (or possibly the whole) of the thing SOMETHING.  For example, Ted Turner Has-Ownership-In Atlanta's Olympic Stadium. There may be other owners.  See also Legal-Owner-Of and Owns-Share."))

(defrelation Three-Dimensional-Shape
             (Synonymous-External-Concept Three-Dimensional-Shape
              Sensus-Information1997 "THREE-D-LOCATION")
             (Name-In-Cyc Three-Dimensional-Shape "#$ThreeDimensionalShape")
             (Shape-Type Three-Dimensional-Shape)
             (Subclass-Of Three-Dimensional-Shape Geometric-Thing)
             (Set-Or-Collection Three-Dimensional-Shape)
             (Arity Three-Dimensional-Shape 1)
             (Documentation Three-Dimensional-Shape "A collection of shapes 
that exist in 3 (but not less than 3) dimensions. Some
elements of this are basic geometrical shapes, e.g.,
instances of Sphere-Shape and Cone-Shape, but can also
include irregular shapes, such as the region from the
surface of Russia extending 2 miles up."))

(defrelation Movement-Event
             (Synonymous-External-Concept Movement-Event Sensus-Information1997
              "MOTION-PROCESS")
             (Name-In-Cyc Movement-Event "#$MovementEvent")
             (Temporal-Object-Type Movement-Event)
             (Script-Type Movement-Event)
             (Subclass-Of Movement-Event Physical-Event)
             (Subclass-Of Movement-Event Generalized-Transfer)
             (Set-Or-Collection Movement-Event)
             (Arity Movement-Event 1)
             (Documentation Movement-Event
              "Movement-Event is the most general collection of events which are physical movements.  Each element of Movement-Event is an action primarily about some element(s) of Partially-Tangible rotating or translating, periodically or nonperiodically, with respect to some frame of reference which is not a part of the Object-Moving.  Thus, Neil Armstrong stepping from the lunar landing module onto the Moon's surface is an instance of Movement-Event.  Another element of this collection: the turning of the Earth on its axis 31 times during the month of August 1996.  Li Xiaoshuang's compulsory floor exercise in the 1996 Olympics Men's Gymnastics Team Competition is also a (complex!) movement event.  















Note on what is NOT included in this concept:  Consider a person raising her hand and waving, or a tree whose branches are bending in a strong wind:  the person and the tree are remaining in the same place, so that person and that tree are not moving in the sense of Movement-Event (though the hand and the branches are).  In other words, `performers' which do not, as a whole, rotate or translate are not Actors in any element of Movement-Event.  However, the waving person and tree events would have Sub-Events which DO belong to Movement-Event, in which a hand, a branch, etc., `moves' in this sense.  Note also that elements of Transformation-Event, such as a caterpillar turning into a butterfly, or of Shaping-Something, such as molding a piece of clay into the bust of Napoleon, are also not necessarily elements of this collection, because they do not involve motion of the whole object with respect to some frame of reference that is different from the object's.  (See also Frame-Of-Reference.)















Note: When classifying something into Movement-Event, one should consider (1) is it translational or rotational motion?  (2) is it periodic or nonperiodic?  (3) does it involve a continuous flow or a discrete (an object or objects moving completely from one place to another) motion? (4) does it involve a location change or no location change? (5) does it involve a single pathway or more than one?  Based on the answers to those questions, one or more of these subsets of Movement-Event may more precisely represent the moving: Movement-Translation-Event, Movement-Rotation, Movement-Periodic, Movement-Non-Periodic, Translation-Flow, Translation-Complete, Translation-Single-Path, Translation-Multi-Path."))

(defrelation Evening
             (Name-In-Cyc Evening "#$Evening")
             (Temporal-Object-Type Evening)
             (Subclass-Of Evening Qualitative-Time-Of-Day)
             (Set-Or-Collection Evening)
             (Arity Evening 1)
             (Documentation Evening
              "Each Evening is started by a Dusk and is Temporally-Coterminal with the Calendar-Day it's a part of.  Each Evening is Contiguous-After an Afternoon, and each Overnight is Contiguous-After an Evening."))

(defrelation Partially-Tangible
             (Synonymous-External-Concept Partially-Tangible
              Sensus-Information1997 "PHYSICAL-OBJECT")
             (Name-In-Cyc Partially-Tangible "#$PartiallyTangible")
             (Existing-Stuff-Type Partially-Tangible)
             (Object-Type Partially-Tangible)
             (Subclass-Of Partially-Tangible Spatial-Thing)
             (Subclass-Of Partially-Tangible Something-Existing)
             (Set-Or-Collection Partially-Tangible)
             (Arity Partially-Tangible 1)
             (Documentation Partially-Tangible
              "Elements of Partially-Tangible have some tangible (i.e., material) part and also have a temporal extent (i.e., they exist in time).  They may or may not also have an intangible part; e.g., a book is made of matter, has a temporal extent, and also has intangible content which is the information content of the text that the author wrote."))

(defrelation Fiscally-Capable-Of
             (Nth-Domain Fiscally-Capable-Of 1 Intelligent-Agent)
             (Nth-Domain Fiscally-Capable-Of 2 Collection)
             (Nth-Domain Fiscally-Capable-Of 3 Role)
             (Nth-Domain-Subclass-Of Fiscally-Capable-Of 2 Situation)
             (Name-In-Cyc Fiscally-Capable-Of "#$fiscallyCapableOf")
             (Ternary-Predicate Fiscally-Capable-Of)
             (Relation Fiscally-Capable-Of)
             (Arity Fiscally-Capable-Of 3)
             (Documentation Fiscally-Capable-Of
              "The predicate Fiscally-Capable-Of indicates that an agent has the economic prerequisites needed for taking a certain role in a certain type of situation or event.  (Fiscally-Capable-Of AGT SIT-TYPE ROLE) means that a particular Agent AGT has the financial resources for acting in this ROLE in normal instances of SIT-TYPE.  For example, we could say that Mary is Fiscally-Capable-Of being the Buyer in a Buying of a Humvee (i.e., (Buying-Fn Humvee)).  However, Fiscally-Capable-Of is noncommittal as to whether Mary does or will in fact buy a Humvee."))

(defrelation Hate
             (Name-In-Cyc Hate "#$Hate")
             (Feeling-Attribute-Type Hate)
             (Subclass-Of Hate Dislike)
             (Subclass-Of Hate Contempt)
             (Subclass-Of Hate Hostility)
             (Set-Or-Collection Hate)
             (Arity Hate 1)
             (Documentation Hate
              "An intense feeling of hostility and aversion, usually deriving from fear, anger, or a sense of injury, and usually coupled with enmity and malice.  This is a Collection --- for an explanation of that, see Happiness."))

(defrelation |(TRANSPORT-VIA-FN WATER-TRANSPORTATION-DEVICE)|
             (Skolem-Object |(TRANSPORT-VIA-FN WATER-TRANSPORTATION-DEVICE)|)
             (Temporal-Stuff-Type
              |(TRANSPORT-VIA-FN WATER-TRANSPORTATION-DEVICE)|)
             (Script-Type |(TRANSPORT-VIA-FN WATER-TRANSPORTATION-DEVICE)|)
             (Default-Disjoint-Script-Type
              |(TRANSPORT-VIA-FN WATER-TRANSPORTATION-DEVICE)|)
             (Subclass-Of |(TRANSPORT-VIA-FN WATER-TRANSPORTATION-DEVICE)|
              Transportation-Event)
             (Subclass-Of |(TRANSPORT-VIA-FN WATER-TRANSPORTATION-DEVICE)|
              |(TRANSPORT-VIA-FN WATER-TRANSPORTATION-DEVICE)|)
             (Subclass-Of |(TRANSPORT-VIA-FN WATER-TRANSPORTATION-DEVICE)|
              |(TRANSPORT-VIA-FN TRANSPORTATION-DEVICE)|)
             (Set-Or-Collection
              |(TRANSPORT-VIA-FN WATER-TRANSPORTATION-DEVICE)|)
             (Arity |(TRANSPORT-VIA-FN WATER-TRANSPORTATION-DEVICE)| 1)
             (Documentation |(TRANSPORT-VIA-FN WATER-TRANSPORTATION-DEVICE)|
              "A collection of events.  An instance of (Transport-Via-Fn Water-Transportation-Device) is a transportation event in which a Vehicle designed to float on or travel through water is used.  Examples include instances of Sailing in boats, Water-Skiing, and Windsurfing.  Note: This collection does not include swimming, which is a Locomotion-Process (q.v.), not a form of transportation as defined (intended and axiomatized) in Cyc."))

(deffunction Interval-Before-Fn
   (Nth-Domain Interval-Before-Fn 1 Temporal-Thing)
   (Nth-Domain Interval-Before-Fn 2 Time-Quantity)
   (Result-Instance-Of Interval-Before-Fn Time-Interval)
   (Name-In-Cyc Interval-Before-Fn "#$IntervalBeforeFn")
   (Reifiable-Function Interval-Before-Fn)
   (Individual-Denoting-Function Interval-Before-Fn)
   (Function Interval-Before-Fn)
   (Arity Interval-Before-Fn 2)
   (Function-Arity Interval-Before-Fn 1)
   (Binary-Relation Interval-Before-Fn)
   (Documentation Interval-Before-Fn
    "(Interval-Before-Fn ?X ?D) returns the time interval, of duration ?D, immediately preceding ?X.  So the value is a Time-Interval, it has Duration ?D, and  (Contiguous-After  ?X  (Interval-Before-Fn ?X ?D))."))

(defrelation Ibt-Generation-Original
             (Name-In-Cyc Ibt-Generation-Original "#$IBTGeneration-Original")
             (Default-Disjoint-Script-Type Ibt-Generation-Original)
             (Temporal-Object-Type Ibt-Generation-Original)
             (Subclass-Of Ibt-Generation-Original Human-Activity)
             (Subclass-Of Ibt-Generation-Original Ibt-Generation)
             (Subclass-Of Ibt-Generation-Original Purposeful-Action)
             (Set-Or-Collection Ibt-Generation-Original)
             (Arity Ibt-Generation-Original 1)
             (Documentation Ibt-Generation-Original
              "A collection of events; a subset of IBT-Generation.  Each element of IBT-Generation-Original is an event in which some original idea is expressed; that is, the content of the IBT generated is not a copy of the content of a previously created information-bearing thing.  See also IBT-Generation, Communicating."))

(defrelation Requesting-Information
             (Synonymous-External-Concept Requesting-Information
              Sensus-Information1997 "ROGATIVE-ACT")
             (Synonymous-External-Concept Requesting-Information
              Sensus-Information1997 "QUESTION")
             (Name-In-Cyc Requesting-Information "#$RequestingInformation")
             (Temporal-Object-Type Requesting-Information)
             (Default-Disjoint-Script-Type Requesting-Information)
             (Subclass-Of Requesting-Information Requesting-Communication-Act)
             (Set-Or-Collection Requesting-Information)
             (Arity Requesting-Information 1)
             (Documentation Requesting-Information
              "A collection of actions, many of which are speech acts.
In each element of this collection, somebody asks
a question or requests some information. See also the Illocutionary-Force
associated with this action, Query."))

(defrelation Skolem-Function
             (Name-In-Cyc Skolem-Function "#$SkolemFunction")
             (Collection Skolem-Function)
             (Relationship-Type Skolem-Function)
             (Subclass-Of Skolem-Function Reifiable-Function)
             (Set-Or-Collection Skolem-Function)
             (Arity Skolem-Function 1)
             (Documentation Skolem-Function
              "Skolem-Function is a collection of Cyc system-generated functions that implement existential quantifications in Cyc.  Whenever someone asserts to Cyc an expression that contains a `:Exists', Cyc automatically creates a new element of Skolem-Function and rewrites the assertion using that skolem function, as described in what follows.  (Most Cyc users don't need to know the following details, which are supplied only for the curious.)







Suppose we tell Cyc that every animal has a birth date; i.e., for each animal, there exists a date such that the animal was born on that date --- in CycL, (:=> (:Direct-Types ?x Animal)(:Exists ?y (Birth-Date ?x ?y))).  In response to that CycL formula, Cyc would create a new element of Skolem-Function -- we might call it the `BirthDateFn' -- whose single argument would be an animal and whose resultant value would be a date, namely, that animal's date of birth.  Subsequently, Cyc would automatically use the `BirthDateFn' in asserting our rule, eliminating the need for a `:Exists'.  Our formula would thus be rewritten by the system, as follows:







(:=> 

   (:and

     (:Direct-Types ?x Animal)

     (Term-Of-Unit ?y (`BirthDateFn' ?x)))

   (Birth-Date ?x ?y)).





See also Term-Of-Unit. 





Note: Although our example uses the name 'BirthDateFn' for our skolem function, at this time (4/97), skolem functions are automatically named by the Cyc system using the prefix `SKF-' followed by a number.  The system-generated name can be replaced by re-naming, though that is rarely done in practice."))

(defrelation Stone-Stuff
             (Name-In-Cyc Stone-Stuff "#$StoneStuff")
             (Tangible-Stuff-Composition-Type Stone-Stuff)
             (Subclass-Of Stone-Stuff Structural-Support-Stuff)
             (Subclass-Of Stone-Stuff |(SOLID-FN EARTH-STUFF)|)
             (Set-Or-Collection Stone-Stuff)
             (Arity Stone-Stuff 1)
             (Documentation Stone-Stuff
              "A collection of tangible things; a subset of Earth-Stuff.  Each element of Stone-Stuff is a piece or portion of rock or stone; e.g., Mount-Rushmore-Monument."))

(defrelation Represents-Agent-To-Agent
             (Nth-Domain Represents-Agent-To-Agent 1 Agent)
             (Nth-Domain Represents-Agent-To-Agent 2 Agent)
             (Nth-Domain Represents-Agent-To-Agent 3 Agent)
             (Name-In-Cyc Represents-Agent-To-Agent "#$representsAgentToAgent")
             (Ternary-Predicate Represents-Agent-To-Agent)
             (Relation Represents-Agent-To-Agent)
             (Arity Represents-Agent-To-Agent 3)
             (Documentation Represents-Agent-To-Agent
              "(Represents-Agent-To-Agent AGENT1 AGENT2 AGENT3) means that in in dealings with AGENT3,  AGENT1 represents AGENT2.  For example, if Joe Terwilliger is a salesman working for IBM, and is their sales rep to NASA, then we could represent that by asserting to Cyc  (Represents-Agent-To-Agent JoeTerwilliger IBM NASA)."))

(defrelation Mathematical-Or-Computational-Thing
             (Synonymous-External-Concept Mathematical-Or-Computational-Thing
              Sensus-Information1997 "ABSTRACTION")
             (Name-In-Cyc Mathematical-Or-Computational-Thing
              "#$MathematicalOrComputationalThing")
             (Object-Type Mathematical-Or-Computational-Thing)
             (Subclass-Of Mathematical-Or-Computational-Thing Intangible)
             (Set-Or-Collection Mathematical-Or-Computational-Thing)
             (Arity Mathematical-Or-Computational-Thing 1)
             (Documentation Mathematical-Or-Computational-Thing
              "A collection of abstract (Intangible) objects.  Each element of Mathematical-Or-Computational-Thing is a massless, timeless abstraction, such as an algorithm, logical connective, character string, assertion, integer, etc."))

(defrelation Belief-System-Type
             (Name-In-Cyc Belief-System-Type "#$BeliefSystemType")
             (Collection Belief-System-Type)
             (Subclass-Of Belief-System-Type Stuff-Type)
             (Set-Or-Collection Belief-System-Type)
             (Arity Belief-System-Type 1)
             (Documentation Belief-System-Type
              "The collection of all the kinds of Belief-Systems: religious, philosophical, political, ethical, cultural, and scientific.  Some elements of this collection include Religion, Philosophy-Beliefs, etc.  The most general member of this set is Belief-Systems (qv)."))

(defrelation Legally-Capable-Of
             (Nth-Domain Legally-Capable-Of 1 Agent)
             (Nth-Domain Legally-Capable-Of 2 Collection)
             (Nth-Domain Legally-Capable-Of 3 Role)
             (Nth-Domain-Subclass-Of Legally-Capable-Of 2 Situation)
             (Name-In-Cyc Legally-Capable-Of "#$legallyCapableOf")
             (Ternary-Predicate Legally-Capable-Of)
             (Relation Legally-Capable-Of)
             (Arity Legally-Capable-Of 3)
             (Documentation Legally-Capable-Of
              "The predicate Legally-Capable-Of indicates that an agent is legally able to take a certain role in a certain type of action.  (Legally-Capable-Of AGT SIT-TYPE ROLE) means that the individual AGT is legally qualified and/or entitled to act in this ROLE in Situations of the type SIT-TYPE.  For example, a person over 21 years of age is Legally-Capable-Of smoking cigarettes in the United States."))

(defrelation Dietary-Deficiency-Condition
             (Name-In-Cyc Dietary-Deficiency-Condition
              "#$DietaryDeficiencyCondition")
             (Physiological-Condition-Type Dietary-Deficiency-Condition)
             (Subclass-Of Dietary-Deficiency-Condition Malnutrition)
             (Set-Or-Collection Dietary-Deficiency-Condition)
             (Arity Dietary-Deficiency-Condition 1)
             (Documentation Dietary-Deficiency-Condition
              "The collection of physiological conditions brought on by consuming less of a nutrient than the body requires."))

(deffunction Time-Interval-From-Fn
   (Nth-Domain Time-Interval-From-Fn 1 Temporal-Thing)
   (Nth-Domain Time-Interval-From-Fn 2 Temporal-Thing)
   (Result-Instance-Of Time-Interval-From-Fn Time-Interval)
   (Name-In-Cyc Time-Interval-From-Fn "#$TimeIntervalFromFn")
   (Individual-Denoting-Function Time-Interval-From-Fn)
   (Reifiable-Function Time-Interval-From-Fn)
   (Function Time-Interval-From-Fn)
   (Arity Time-Interval-From-Fn 2)
   (Function-Arity Time-Interval-From-Fn 1)
   (Binary-Relation Time-Interval-From-Fn)
   (Documentation Time-Interval-From-Fn
    "(Time-Interval-From-Fn ?X ?Y) returns the time interval between ?X and ?Y.  The Starting-Point of that interval is the Ending-Point of ?X, and the Ending-Point of that interval is the Starting-Point of ?Y.  It must be true that ?Y starts after ?X ends; i.e., (Starts-After-Ending-Of ?Y ?X)."))

(defrelation Abstract-Shape-Type
             (Name-In-Cyc Abstract-Shape-Type "#$AbstractShapeType")
             (Collection Abstract-Shape-Type)
             (Subclass-Of Abstract-Shape-Type Shape-Type)
             (Set-Or-Collection Abstract-Shape-Type)
             (Arity Abstract-Shape-Type 1)
             (Documentation Abstract-Shape-Type
              "A collection of collections.  Each element of Abstract-Shape-Type is a collection of things which are subsets of Abstract-Shape.  The elements of Abstract-Shape-Type comprise the basic physical shapes.  Examples include: Cylinder-Shape, Pyramid-Shape, Cone-Shape, Tube-Shape, Rectangular3D-Shape, Polygon, Spiral, etc."))

(defrelation |(MOB-FN MOUNTAIN)|
             (Skolem-Object |(MOB-FN MOUNTAIN)|)
             (Collection |(MOB-FN MOUNTAIN)|)
             (Existing-Stuff-Type |(MOB-FN MOUNTAIN)|)
             (Subclass-Of |(MOB-FN MOUNTAIN)| Mob)
             (Set-Or-Collection |(MOB-FN MOUNTAIN)|)
             (Arity |(MOB-FN MOUNTAIN)| 1))

(defrelation August
             (Name-In-Cyc August "#$August")
             (Month-Of-Year-Type August)
             (Subclass-Of August Calendar-Month)
             (Set-Or-Collection August)
             (Arity August 1))

(defrelation Reading
             (Name-In-Cyc Reading "#$Reading")
             (Temporal-Stuff-Type Reading)
             (Default-Disjoint-Script-Type Reading)
             (Subclass-Of Reading Accessing-An-Ibt)
             (Subclass-Of Reading Perceiving)
             (Set-Or-Collection Reading)
             (Arity Reading 1)
             (Documentation Reading
              "The collection of acts of reading Textual-Material.  These may be for extracting some sort of information from the text, for entertainment, for prurient stimulation, or to test reading skills."))

(defrelation Human-Shelter-Construction
             (Name-In-Cyc Human-Shelter-Construction
              "#$HumanShelterConstruction")
             (Existing-Object-Type Human-Shelter-Construction)
             (Subclass-Of Human-Shelter-Construction
              Human-Occupation-Construct)
             (Subclass-Of Human-Shelter-Construction Shelter-Construction)
             (Subclass-Of Human-Shelter-Construction Container-Product)
             (Set-Or-Collection Human-Shelter-Construction)
             (Arity Human-Shelter-Construction 1)
             (Documentation Human-Shelter-Construction
              "A collection of artifacts; a subset of Human-Occupation-Construct.  An instance of Human-Shelter-Construction is a place made to shelter people from the elements by allowing them to get Indoors.  Subsets include Modern-Human-Residence, School-Building, Shopping-Mall-Building, many others.   An instance of Human-Shelter-Construction must have a roof and typically has sides, though the latter may be flimsy (as in elements of Tent-The-Shelter) or even absent (as in some elements of Parking-Garage)."))

(defrelation Offering-Communication-Act
             (Synonymous-External-Concept Offering-Communication-Act
              Sensus-Information1997 "OFFER")
             (Synonymous-External-Concept Offering-Communication-Act
              Sensus-Information1997 "COMMISSIVE-ACT")
             (Name-In-Cyc Offering-Communication-Act
              "#$Offering-CommunicationAct")
             (Temporal-Object-Type Offering-Communication-Act)
             (Default-Disjoint-Script-Type Offering-Communication-Act)
             (Subclass-Of Offering-Communication-Act Communication-Act-Single)
             (Set-Or-Collection Offering-Communication-Act)
             (Arity Offering-Communication-Act 1)
             (Documentation Offering-Communication-Act
              "A collection of actions, many of which are speech acts.
In each element of this collection,
somebody offers to do something, furnish something, make
something the case, etc. See also the
Illocutionary-Force associated with these actions,
Offer."))

(defrelation Fragility
             (Very-High-Amount-Fn Fragility |(VERY-HIGH-AMOUNT-FN FRAGILITY)|)
             (Low-Amount-Fn Fragility |(LOW-AMOUNT-FN FRAGILITY)|)
             (Very-Low-Amount-Fn Fragility |(VERY-LOW-AMOUNT-FN FRAGILITY)|)
             (Medium-Amount-Fn Fragility |(MEDIUM-AMOUNT-FN FRAGILITY)|)
             (Name-In-Cyc Fragility "#$Fragility")
             (Primitive-Attribute-Type Fragility)
             (Subclass-Of Fragility Physical-Attribute)
             (Subclass-Of Fragility Scalar-Interval)
             (Set-Or-Collection Fragility)
             (Arity Fragility 1)
             (Documentation Fragility
              "A collection of attributes; a subset of Physical-Attribute.  Each element of Fragility represents a specific property which determines how easily a physical object breaks.  Different fragilities may be designated using a Generic-Value-Function.  Fragilities of objects are indicated with the predicate Fragility-Of-Object."))

(defrelation |(THE-PARTITION SET-OR-COLLECTION :INDIVIDUAL)|
             (Skolem-Object |(THE-PARTITION SET-OR-COLLECTION :INDIVIDUAL)|)
             (Disjoint-Set-Or-Collection
              |(THE-PARTITION SET-OR-COLLECTION :INDIVIDUAL)|)
             (Set-Mathematical |(THE-PARTITION SET-OR-COLLECTION :INDIVIDUAL)|)
             (Subclass-Of |(THE-PARTITION SET-OR-COLLECTION :INDIVIDUAL)|
              Thing)
             (Set-Or-Collection
              |(THE-PARTITION SET-OR-COLLECTION :INDIVIDUAL)|)
             (Arity |(THE-PARTITION SET-OR-COLLECTION :INDIVIDUAL)| 1))

(defobject Conductor-Resistance
   (Electrical-Resistance Conductor-Resistance)
   (Name-In-Cyc Conductor-Resistance "#$ConductorResistance")
   (Documentation Conductor-Resistance
    "A measurable physical attribute.  Conductor-Resistance is the element of Electrical-Resistance that represents a very low level of electrical resistance.  An object having Conductor-Resistance readily conducts electricity.  See also Resistance-Of-Object."))

(deffunction Foot-Unit-Of-Measure
   (Args-Isa Foot-Unit-Of-Measure Real-Number)
   (Result-Instance-Of Foot-Unit-Of-Measure Scalar-Interval)
   (Result-Instance-Of Foot-Unit-Of-Measure Distance)
   (Name-In-Cyc Foot-Unit-Of-Measure "#$Foot-UnitOfMeasure")
   (Unit-Of-Measure-No-Prefix Foot-Unit-Of-Measure)
   (Fps-Unit-Of-Measure Foot-Unit-Of-Measure)
   (Unit-Of-Distance Foot-Unit-Of-Measure)
   (Function Foot-Unit-Of-Measure)
   (Documentation Foot-Unit-Of-Measure
    "The measurement function used in Cyc to represent the basic unit of length within the British (FPS) system.  See also FPS-Unit-Of-Measure, Unit-Of-Measure."))

(defrelation Satisfies-Description
             (Nth-Domain Satisfies-Description 1 Cyc-System-List)
             (Nth-Domain Satisfies-Description 2 Cyc-System-List)
             (Nth-Domain Satisfies-Description 3 Microtheory)
             (Name-In-Cyc Satisfies-Description "#$satisfiesDescription")
             (Ternary-Predicate Satisfies-Description)
             (Relation Satisfies-Description)
             (Arity Satisfies-Description 3)
             (Documentation Satisfies-Description
              "ARG1 is a list of things (item1, item2, ...) which, taken together, satisfy the descriptions in the MT ARG3 of the roles listed in ARG2 (role1, role2, ...).  For example, we might see (Satisfies-Description (Joe Jane) (TheHusband TheWife) Human-Social-Life-Mt)."))

(defrelation |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "DECOMPOSABLE-OBJECT")|
             (Skolem-Object
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "DECOMPOSABLE-OBJECT")|)
             (Collection
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "DECOMPOSABLE-OBJECT")|)
             (Subclass-Of
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "DECOMPOSABLE-OBJECT")|
              Thing)
             (Set-Or-Collection
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "DECOMPOSABLE-OBJECT")|)
             (Arity
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "DECOMPOSABLE-OBJECT")|
              1))

(defrelation Meeting-Someone
             (Name-In-Cyc Meeting-Someone "#$MeetingSomeone")
             (Script-Type Meeting-Someone)
             (Subclass-Of Meeting-Someone Social-Occurrence)
             (Set-Or-Collection Meeting-Someone)
             (Arity Meeting-Someone 1)
             (Documentation Meeting-Someone
              "A collection of actions.  In a Meeting-Someone event, one Agent is moving and meets (comes into close proximity with) another Agent.  This may or may not be purposeful.  It may be performed by non-human animals, and occasionally by other sorts of Agents.
Note: this does not mean `being introduced to someone', but rather `going to meet with someone'."))

(defrelation Bill-Payment-Request
             (Name-In-Cyc Bill-Payment-Request "#$Bill-PaymentRequest")
             (Existing-Object-Type Bill-Payment-Request)
             (Subclass-Of Bill-Payment-Request Official-Document)
             (Subclass-Of Bill-Payment-Request
              Hardcopy-Information-Bearing-Object)
             (Subclass-Of Bill-Payment-Request Textual-Material)
             (Set-Or-Collection Bill-Payment-Request)
             (Arity Bill-Payment-Request 1)
             (Documentation Bill-Payment-Request
              "A collection of documents.  Each element of Bill-Payment-Request is a notification, demand, or request made by a creditor (or its agent) to a debtor, for payment of a debt previously incurred for some loan, goods, or services.  Examples: telephone bills, tax bills, department store bills, cleaning bills, fuel bills."))

(defrelation Product-Type
             (Name-In-Cyc Product-Type "#$ProductType")
             (Collection Product-Type)
             (Subclass-Of Product-Type Collection)
             (Set-Or-Collection Product-Type)
             (Arity Product-Type 1)
             (Documentation Product-Type
              "A collection of collections.  Each element of Product-Type is a collection of things--i.e., some kind of substances, objects, actions--at least some of which are produced and/or performed and sold as products.  Not all elements in such a Product-Type collection must be products, but some are.  Examples of Product-Type: Dairy-Product, Hard-Disk-Drive, Plastic-Wrap, etc.  Note that Product-Type is not a subset of either Object-Type or Stuff-Type, because there are products of both kinds (e.g., Rice-Foodstuff is a Product-Type but not an Object-Type).  *Many* of the collections which are elements of Product-Type will, however, be an :Direct-Types either Object-Type or Stuff-Type."))

(defrelation Lung
             (Name-In-Cyc Lung "#$Lung")
             (Symmetric-Anatomical-Part-Type Lung)
             (Subclass-Of Lung Organ)
             (Set-Or-Collection Lung)
             (Arity Lung 1)
             (Documentation Lung
              "The collection of all lungs, the primary respiratory organs of Air-Breathing-Vertebrates."))

(defrelation Cyc-System-Atom
             (Name-In-Cyc Cyc-System-Atom "#$CycSystemAtom")
             (Object-Type Cyc-System-Atom)
             (Subclass-Of Cyc-System-Atom Cyc-System-List-Or-Atom)
             (Set-Or-Collection Cyc-System-Atom)
             (Arity Cyc-System-Atom 1)
             (Documentation Cyc-System-Atom
              "A collection of the atomic data belonging to the CycL substrate of the Cyc System.  Elements of Cyc-System-Atom cannot be decomposed (e.g., a symbol)."))

(defrelation Lake
             (Name-In-Cyc Lake "#$Lake")
             (Existing-Object-Type Lake)
             (Subclass-Of Lake Body-Of-Water)
             (Set-Or-Collection Lake)
             (Arity Lake 1)
             (Documentation Lake
              "A collection of topographical features.  Each instance of Lake is a land-locked body of water, typically but not necessarily of freshwater.  Examples: Lake-Maracaibo, Lake-Winnipeg, Lake-Tanganyika, Loch-Ness-Lake, Lake-Erie, Lake-Tahoe.  Note that inland saltwater lakes, commonly referred to as `seas', belong to the collection Inland-Sea (rather than to Lake); e.g., Caspian-Sea, Black-Sea, Dead-Sea."))

(defrelation |(SOLID-FN PLASTIC)|
             (Skolem-Object |(SOLID-FN PLASTIC)|)
             (Tangible-Stuff-State-Type |(SOLID-FN PLASTIC)|)
             (Subclass-Of |(SOLID-FN PLASTIC)| Plastic)
             (Subclass-Of |(SOLID-FN PLASTIC)| Solid-Tangible-Thing)
             (Set-Or-Collection |(SOLID-FN PLASTIC)|)
             (Arity |(SOLID-FN PLASTIC)| 1))

(defrelation Dawn
             (Name-In-Cyc Dawn "#$Dawn")
             (Temporal-Object-Type Dawn)
             (Script-Type Dawn)
             (Subclass-Of Dawn Twilight)
             (Subclass-Of Dawn Qualitative-Time-Of-Day)
             (Set-Or-Collection Dawn)
             (Arity Dawn 1)
             (Documentation Dawn
              "Each instance of Dawn is a dimly-lit period before a Sunrise."))

(defrelation Fiscal-Year
             (Name-In-Cyc Fiscal-Year "#$FiscalYear")
             (Temporal-Object-Type Fiscal-Year)
             (Subclass-Of Fiscal-Year Time-Interval)
             (Set-Or-Collection Fiscal-Year)
             (Arity Fiscal-Year 1)
             (Documentation Fiscal-Year
              "Each instance of this collection is an annual, year-long interval of time kept track of by an Agent as part of its operational and financial accounting procedures.  Since the start dates and end dates may vary depending on the organization, instances of this collection are time intervals like FiscalYearOf1989ForMicrosoft"))

(defrelation Dying
             (Name-In-Cyc Dying "#$Dying")
             (Temporal-Object-Type Dying)
             (Default-Disjoint-Script-Type Dying)
             (Subclass-Of Dying Destruction-Event)
             (Subclass-Of Dying Biological-Event)
             (Subclass-Of Dying Single-Doer-Action)
             (Set-Or-Collection Dying)
             (Arity Dying 1)
             (Documentation Dying
              "A collection of events.  Each element of Dying is an event in which a living organism (i.e., an instance of Organism-Whole) ceases to live and thus ceases to exist.  The physical portion of the organism may remain, but that is not considered an instance of Organism-Whole (cf. Dead-Animal).  Note that the expiring animal is related to its dying event by Bodily-Doer (q.v.)--in contrast to the role an organism plays when it is the Object-Acted-On in a Killing-Biological event (which will have some Dying event among its Sub-Events), and cf. Bodily-Acted-On."))

(defrelation Protista-Kingdom
             (Name-In-Cyc Protista-Kingdom "#$ProtistaKingdom")
             (Biological-Kingdom Protista-Kingdom)
             (Subclass-Of Protista-Kingdom Thing)
             (Set-Or-Collection Protista-Kingdom)
             (Arity Protista-Kingdom 1)
             (Documentation Protista-Kingdom
              "A Biological-Kingdom proposed to include primarily single-celled, eukaryotic organisms such as Algae, $#Protozoans, and Slime-Molds."))

(defrelation |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "GENERALIZED-POSSESSION")|
             (Skolem-Object
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "GENERALIZED-POSSESSION")|)
             (Slot
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "GENERALIZED-POSSESSION")|)
             (Relation
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "GENERALIZED-POSSESSION")|)
             (Arity
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "GENERALIZED-POSSESSION")|
              2)
             (Binary-Relation
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "GENERALIZED-POSSESSION")|))

(defrelation Drink
             (Name-In-Cyc Drink "#$Drink")
             (Product-Type Drink)
             (Existing-Stuff-Type Drink)
             (Subclass-Of Drink Food-And-Drink)
             (Set-Or-Collection Drink)
             (Arity Drink 1)
             (Documentation Drink
              "The collection of drinkable substances; a collection of edible stuff and a subset of Food-And-Drink.  Each element of the collection Drink is a liquid of a type that is ingestible and commonly consumed by humans or animals.  Drinks are ingested without chewing.  Examples of Drink include all elements of the collections Water-Ingestible, Tea-Hot, Hot-Chocolate, Lemonade, Beer. .  By default they are liquids.  Borderline examples include a thick milkshake or soup, even if there are solid objects suspended in it.  Thus Liquid-Tangible-Thing is not necessarily (monotonically) a :Direct-Superclasses of Drink, though it is true by default that a Drink be an instance of Liquid-Tangible-Thing.  I.e., by default, elements of Drink are in a Liquid-State-Of-Matter.  Another borderline example of a Drink is a glassful of poison or urine; it may be unpalatable or unsafe to drink a Drink.  Note that the Drink includes the portion of liquid, but not the container such as the glass or coffee cup or bowl.   So one borderline non-example is a glass of water -- as opposed to a glassful of water; the former includes the glass, the latter doesn't.   Other borderline non-examples include: an ice cube, a grape sno-cone, a scoop of ice cream with hot fudge sauce on it, and a tiny bit of liquid such as a single raindrop even if it enters one's mouth."))

(defobject Temporary-Work
   (Work-Status Temporary-Work)
   (Name-In-Cyc Temporary-Work "#$TemporaryWork")
   (Documentation Temporary-Work
    "An attribute; an element of Work-Status.  The attribute of being a temporary worker for an organization."))

(defrelation Womens-Clothing
             (Name-In-Cyc Womens-Clothing "#$WomensClothing")
             (Product-Type Womens-Clothing)
             (Existing-Object-Type Womens-Clothing)
             (Subclass-Of Womens-Clothing Sheet-Of-Some-Stuff)
             (Subclass-Of Womens-Clothing Something-To-Wear)
             (Set-Or-Collection Womens-Clothing)
             (Arity Womens-Clothing 1)
             (Documentation Womens-Clothing
              "A collection of objects.  Each element of Womens-Clothing is a clothing item worn usually by women, i.e., items normally found in the women's section of department stores.  Subsets include Skirts and Hair-Pins."))

(defrelation Artifact
             (Synonymous-External-Concept Artifact Sensus-Information1997
              "ARTIFACT")
             (The-Partition Artifact Inanimate-Thing-Natural
              |(THE-PARTITION ARTIFACT INANIMATE-THING-NATURAL)|)
             (Name-In-Cyc Artifact "#$Artifact")
             (Collection Artifact)
             (Subclass-Of Artifact Something-Existing)
             (Subclass-Of Artifact Partially-Tangible)
             (Set-Or-Collection Artifact)
             (Arity Artifact 1)
             (Documentation Artifact
              "A collection of tangible things.  An instance of Artifact is a tangible which was more or less intentionally created by an Agent (or a group of Agents working together) to serve some purpose or perform some function.  By `created', we don't require that the matter itself be created, it is often just the result of some sort of assemblage or modification process, such as a wooden flute that's been whittled from a tree branch, a sawhorse that's been put together out of boards and nails, a coin that's been minted by embossing or by melting liquid silver into a mold, etc.

Let's consider some positive and negative examples.

In addition to the obvious human artifacts (buildings, tools, textiles, power lines), this collection includes certain sorts of things made by Animals, such as bird nests, termite mounds, and beaver dams.

Something which just barely squeaks through the intended meaning of this concept is Yale-University.  In addition to the abstract legal entity, it consists of a set of physical buildings, furnishings, etc.  By contrast, an organization that had no headquarters building, equipment, tangible property, etc. would not be an artifact.  Similarly, a fictional character such as Tom Sawyer is not an artifact (in the context of the story, Tom is not an artifact because he is a real boy; in the context of the real world, Tom is not an artifact because he has no tangible component whatsoever.)

While some artifacts may be alive, or contain living subparts, we do not intend this collection to encompass all organisms which resulted from normal biological reproductive processes.  Your child is not an artifact.

If you do an oil painting of a house that is an artifact, but much more borderline is what you get if you take a rock and just paint it a solid color, say white.  In general that won't be an artifact unless it serves some purpose, such as marking the shoulder of a roadway, but more questionable cases are if the purpose of the white rock is just `to be sold as art' or `to look pretty.'  The white rock might thus be an artifact in certain contexts, but not in others.

Not every instance of Path-Generic (q.v.) is necessarily an instance of Artifact.  For example, some channels used for navigation may not be artifacts, because even though they are marked with human artifacts (i.e., channel markers) as locations where ships may safely travel, the channel itself may have been a naturally occurring pre-existing thing -- e.g., the English-Channel.  If a Channel-Wide-Strait were produced or maintained only by constant dredging, it might count as an artifact.  By contrast, each Canal, such as Suez-Canal, is almost certain to be an Artifact."))

(defrelation Fixed-Structure
             (Name-In-Cyc Fixed-Structure "#$FixedStructure")
             (Existing-Object-Type Fixed-Structure)
             (Subclass-Of Fixed-Structure Construction-Artifact)
             (Set-Or-Collection Fixed-Structure)
             (Arity Fixed-Structure 1)
             (Documentation Fixed-Structure
              "A collection of artifacts.  Each element of Fixed-Structure is a humanly-constructed, freestanding object that exists in a fixed location; e.g., buildings, pyramids, the Great Wall of China, dams, elevated roadways, canals, etc.  Such structures may have parts which are also elements of Fixed-Structure (e.g., bridge pilings) and parts which are not freestanding (e.g., the span of a bridge, or a room in a building)."))

(defobject |(NO-AMOUNT-FN POROSITY)|
   (Scalar-Interval |(NO-AMOUNT-FN POROSITY)|)
   (Porosity |(NO-AMOUNT-FN POROSITY)|)
   (Skolem-Object |(NO-AMOUNT-FN POROSITY)|))

(defrelation Tree-The-Plant
             (Name-In-Cyc Tree-The-Plant "#$Tree-ThePlant")
             (Existing-Object-Type Tree-The-Plant)
             (Subclass-Of Tree-The-Plant Plant-Woody)
             (Set-Or-Collection Tree-The-Plant)
             (Arity Tree-The-Plant 1)
             (Documentation Tree-The-Plant
              "A collection of plants; a subset of Plant-Woody.  Each element of Tree-The-Plant is a tree, i.e., a tall woody plant that is usually taller than a person or a bush, generally having a branching form overall, and with roots in the ground, a trunk, and the branches having numerous leaves exposed to the sky.  Cf. Bush."))

(defrelation Inverse-Relation-Type-Min
             (Nth-Domain Inverse-Relation-Type-Min 1 Slot)
             (Nth-Domain Inverse-Relation-Type-Min 2 Collection)
             (Nth-Domain Inverse-Relation-Type-Min 3 Collection)
             (Nth-Domain Inverse-Relation-Type-Min 4 Non-Negative-Integer)
             (Name-In-Cyc Inverse-Relation-Type-Min "#$inverseRelationTypeMin")
             (Quaternary-Predicate Inverse-Relation-Type-Min)
             (Relation Inverse-Relation-Type-Min)
             (Arity Inverse-Relation-Type-Min 4)
             (Documentation Inverse-Relation-Type-Min
              "(Inverse-Relation-Type-Min SLOT COL1 COL2 NUM) means that, for every instance of COL2 (INS2) there are at least NUM instances of COL1 (INS1, INS3, ...) such that (SLOT INS1 INS2), (SLOT INS3 INS2), ..., hold.  Thus (Inverse-Relation-Type-Min Children Person Human-Child 1) means literally `every child is the child of at least one person' or `every child has at least one parent'."))

(defrelation Time-Of-Day
             (Name-In-Cyc Time-Of-Day "#$TimeOfDay")
             (Temporal-Object-Type Time-Of-Day)
             (Subclass-Of Time-Of-Day Time-Interval)
             (Set-Or-Collection Time-Of-Day)
             (Arity Time-Of-Day 1)
             (Documentation Time-Of-Day
              "The collection of all temporal intervals marking times of the day.  This includes the twenty-four clock hours, and also longer and shorter pieces of time."))

(defrelation Set-With-Structure
             (Name-In-Cyc Set-With-Structure "#$SetWithStructure")
             (Object-Type Set-With-Structure)
             (Subclass-Of Set-With-Structure Situation)
             (Subclass-Of Set-With-Structure Mathematical-Object)
             (Set-Or-Collection Set-With-Structure)
             (Arity Set-With-Structure 1)
             (Documentation Set-With-Structure
              "The collection of all mathematical structures each consisting of a set with structuring relations (e.g., a Binary-Predicate-On-Sets) on that set (and, optionally, one or more functions and/or selected other sets, individuals or subsets for that set).  Examples include Partially-Ordered-Sets, Multi-Graphs, etc.  Sometimes mathematicians specify these using a Tuple of sets, relations, functions, and/or individuals, as specifications."))

(defrelation Calendar-Half-Century
             (Name-In-Cyc Calendar-Half-Century "#$CalendarHalfCentury")
             (Calendar-Covering-Type Calendar-Half-Century)
             (Subclass-Of Calendar-Half-Century Time-Interval)
             (Set-Or-Collection Calendar-Half-Century)
             (Arity Calendar-Half-Century 1)
             (Documentation Calendar-Half-Century
              "The collection of exact half-centuries on the calendar, such as First-Half-Of20th-Century-CE"))

(defrelation |(GASEOUS-FN WATER)|
             (Skolem-Object |(GASEOUS-FN WATER)|)
             (Tangible-Stuff-State-Type |(GASEOUS-FN WATER)|)
             (Subclass-Of |(GASEOUS-FN WATER)| Water)
             (Subclass-Of |(GASEOUS-FN WATER)| Gaseous-Tangible-Thing)
             (Set-Or-Collection |(GASEOUS-FN WATER)|)
             (Arity |(GASEOUS-FN WATER)| 1))

(defrelation Resentment
             (Name-In-Cyc Resentment "#$Resentment")
             (Feeling-Attribute-Type Resentment)
             (Subclass-Of Resentment Dislike)
             (Subclass-Of Resentment Contempt)
             (Subclass-Of Resentment Feeling-Attribute)
             (Set-Or-Collection Resentment)
             (Arity Resentment 1)
             (Documentation Resentment
              "Indignation, displeasure, and ill will felt about something regarded as a slight, affront, insult, or indignity.  This is a collection; for an explanation of a typical Feeling-Attribute-Type, see Happiness.  More specialized Feeling-Attribute-Types than Resentment are Jealousy and Envy."))

(defrelation Junction-Of-Paths
             (Name-In-Cyc Junction-Of-Paths "#$JunctionOfPaths")
             (Situation-Type Junction-Of-Paths)
             (Subclass-Of Junction-Of-Paths Partially-Tangible)
             (Subclass-Of Junction-Of-Paths Static-Situation)
             (Subclass-Of Junction-Of-Paths |(GROUP-FN SPATIAL-THING)|)
             (Set-Or-Collection Junction-Of-Paths)
             (Arity Junction-Of-Paths 1)
             (Documentation Junction-Of-Paths
              "The collection of junctions of paths, each being an arrangement of two or more links of Path-Generics such that the parts are in a particular spatial relation to each other (they are all locally connected to each other and join at the place of the Junction-Of-Paths).  It includes the case of two or more paths that 'cross' at a junction, but not the case in which the end of one path simply joins the end of another path.  For junctions in Path-Systems, see Junction-In-System."))

(defrelation Secretion-Event
             (Name-In-Cyc Secretion-Event "#$SecretionEvent")
             (Temporal-Stuff-Type Secretion-Event)
             (Default-Disjoint-Script-Type Secretion-Event)
             (Subclass-Of Secretion-Event Biological-Production-Event)
             (Subclass-Of Secretion-Event Emitting-An-Object)
             (Set-Or-Collection Secretion-Event)
             (Arity Secretion-Event 1)
             (Documentation Secretion-Event
              "A collection of events; a subset of Biological-Production-Event.  Each element of Secretion-Event is an event in which a living animal or plant secretes a substance."))

(defrelation Link-Between-In-System
             (Nth-Domain Link-Between-In-System 1 Path-Simple)
             (Nth-Domain Link-Between-In-System 2 Thing)
             (Nth-Domain Link-Between-In-System 3 Thing)
             (Nth-Domain Link-Between-In-System 4 Thing)
             (Name-In-Cyc Link-Between-In-System "#$linkBetweenInSystem")
             (Quaternary-Predicate Link-Between-In-System)
             (Relation Link-Between-In-System)
             (Arity Link-Between-In-System 4)
             (Documentation Link-Between-In-System
              "(Link-Between-In-System LINK X Y SYS) means that in the Path-System SYS, LINK (a link in SYS) has its two end points X and Y (nodes in SYS).  A link in a path system is one of the paths in the system whose end points are nodes in the system and that have no other nodes along them.  For each link LINK in SYS, there is a unique pair {X, Y} of different nodes in SYS such that (Link-Between-In-System LINK X Y SYS) and (Link-Between-In-System LINK Y X SYS) hold, and for two points (nodes) in SYS, there could be several different ('parallel') links between them.  No point in SYS that is not a node can be an end point of a link.  If node X is an end-point of LINK and (Link-Between-In-System LINK X Y SYS) holds, then (Point-On-Path X LINK) holds.  A link in SYS may have many points on it other than its end-points, but these points cannot be nodes in SYS (another way to put this is to say that there are exactly two nodes on a link, though there can be any number, greater than 1, of points on the link).  Only nodes in SYS can be 'intersection' point in SYS (see Junction-In-System), which implies that there is, in the system SYS, no point on a link LINK between X and Y that is an 'intersection' point of LINK and another link or a loop.  When defining a path system, it is convenient (and also quite safe) to start with a name of the system, say SYS1 (with an assertion (:Direct-Types SYS1 Path-System)), and enter the names of links in SYS, say Link1, Link2 etc. (with assertions (:Direct-Types Link1 Path-Simple) etc.), and then only enter assertions of the form (Link-Between-In-System LINK X Y SYS1) for each link in SYS1 and its end points X and Y--the rules related to a path systems will generate assertions like (Node-In-System X SYS1), (Point-In-System X SYS1), (Link-In-System LINK SYS1) and (Path-In-System LINK SYS1) etc.  If one later needs to add something else to the system, say a point A on a link LINK other than its end nodes X and Y, he/she may further enter (Between-On-Path A X Y LINK) and (Point-In-System A SYS1) without changing anything else.  Note that (Link-Between-In-System LINK X Y SYS) is actually an abbreviation of (:and (Link-In-System LINK SYS) (Node-In-System X SYS) (Node-In-System Y SYS) (Path-Between LINK X Y))."))

(defobject Rainy
   (Raininess Rainy)
   (Subattribute-Of Rainy Cloudy)
   (Name-In-Cyc Rainy "#$Rainy")
   (Documentation Rainy
    "The Weather-Attribute that characterizes an Outdoor-Location at which it is raining."))

(defrelation Legal-Code
             (Name-In-Cyc Legal-Code "#$LegalCode")
             (Existing-Object-Type Legal-Code)
             (Microtheory-Type Legal-Code)
             (Subclass-Of Legal-Code Government-Coc)
             (Set-Or-Collection Legal-Code)
             (Arity Legal-Code 1)
             (Documentation Legal-Code
              "A collection of microtheories.  Each element of Legal-Code is a microtheory for collecting all the instances of Law which hold in a given Geopolitical-Entity.  For example, Legal-Code-Modern-United-States."))

(defrelation Feels-Emotion
             (Overlapping-External-Concept Feels-Emotion Sensus-Information1997
              "REACTION")
             (Nth-Domain Feels-Emotion 1 Intelligent-Agent)
             (Nth-Domain Feels-Emotion 2 Feeling-Attribute-Type)
             (Nth-Domain Feels-Emotion 3 Generic-Attribute)
             (Nth-Domain-Subclass-Of Feels-Emotion 2 Feeling-Attribute)
             (Name-In-Cyc Feels-Emotion "#$feelsEmotion")
             (Cotemporal-Predicate Feels-Emotion)
             (Ternary-Predicate Feels-Emotion)
             (Relation Feels-Emotion)
             (Arity Feels-Emotion 3)
             (Documentation Feels-Emotion
              "(Feels-Emotion AGT EMOTYPE DEGREE) means that the Intelligent-Agent AGT feels a feeling of the type EMOTYPE with the intensity DEGREE.  For example, (Feels-Emotion Lenat Pride High).  As you might imagine, such statements are generally embedded in a context, or within some other statement (such as Holds-In some small time interval).  See also Feels-Towards-Event, Feels-Towards-Object.
Note: the first argument can be a non-human intelligent agent, such as a dog or a company, because we often ascribe feelings and emotions to them, and they often behave consistently with having such feelings and emotions."))

(defrelation Buyer
             (Subrelation-Of Buyer Exchangers)
             (Domain Buyer Commercial-Activity)
             (Range Buyer Agent)
             (Name-In-Cyc Buyer "#$buyer")
             (Actor-Slot Buyer)
             (Asymmetric-Binary-Predicate Buyer)
             (Irreflexive-Binary-Predicate Buyer)
             (Slot Buyer)
             (Relation Buyer)
             (Arity Buyer 2)
             (Binary-Relation Buyer)
             (Documentation Buyer
              "The predicate Buyer relates an agent to a business activity.  (Buyer EVENT AGENT) means that the Agent AGENT purchases the goods for sale in the Commercial-Activity EVENT."))

(defrelation Liquid-Tangible-Thing
             (Transport-Fn Liquid-Tangible-Thing
              |(TRANSPORT-FN LIQUID-TANGIBLE-THING)|)
             (Name-In-Cyc Liquid-Tangible-Thing "#$LiquidTangibleThing")
             (Tangible-Stuff-State-Type Liquid-Tangible-Thing)
             (Subclass-Of Liquid-Tangible-Thing Fluid-Tangible-Thing)
             (Set-Or-Collection Liquid-Tangible-Thing)
             (Arity Liquid-Tangible-Thing 1)
             (Documentation Liquid-Tangible-Thing
              "A collection of tangible stuff.  Each element of Liquid-Tangible-Thing is a tangible thing which is in a Liquid-State-Of-Matter; i.e., its shape would conform to the bottom of a vessel containing it.  Cf. Fluid-Tangible-Thing and Gaseous-Tangible-Thing."))

(defobject Opaque
   (Transparency Opaque)
   (Name-In-Cyc Opaque "#$Opaque")
   (Documentation Opaque
    "Opaque is a Physical-Attribute representing a specific degree of Transparency.  Opaque objects do not transmit light.  See also Transparency-Of-Object."))

(defrelation Surface-Parts
             (not (Reflexive-Binary-Predicate Surface-Parts))
             (not (Irreflexive-Binary-Predicate Surface-Parts))
             (Subrelation-Of Surface-Parts External-Parts)
             (Domain Surface-Parts Partially-Tangible)
             (Range Surface-Parts Partially-Tangible)
             (Name-In-Cyc Surface-Parts "#$surfaceParts")
             (Physical-Part-Predicate Surface-Parts)
             (Anti-Symmetric-Binary-Predicate Surface-Parts)
             (Transitive-Binary-Predicate Surface-Parts)
             (Slot Surface-Parts)
             (Relation Surface-Parts)
             (Arity Surface-Parts 2)
             (Binary-Relation Surface-Parts)
             (Documentation Surface-Parts
              "(Surface-Parts BIG LITTLE) means that LITTLE is a physical part of a surface of BIG, or that LITTLE is a physical part of BIG itself and a surface of LITTLE is part of a surface of BIG.  Positive exemplars: the skin of an orange is a Surface-Parts of the orange, Texas-State is a Surface-Parts of United-States-Of-America, a window of a house is a Surface-Parts of that house.  Borderline positive exemplars: the inside surface of a coffee cup is one of the Surface-Parts of the cup; the inside surface of a beer-can in some contexts is a #surfaceParts of the can.  Negative exemplars:  the brain is not a Surface-Parts of a person."))

(defrelation Cavity
             (Name-In-Cyc Cavity "#$Cavity")
             (Existing-Object-Type Cavity)
             (Subclass-Of Cavity Partially-Tangible)
             (Set-Or-Collection Cavity)
             (Arity Cavity 1)
             (Documentation Cavity
              "The collection of all cavities, Crevices or deep concavities or holes, including any cavity of a container, e.g., the interior of a box.  Elements of Cavity, unlike elements of Interior, may include walls as parts."))

(defrelation Organism-Classification-Type
             (Name-In-Cyc Organism-Classification-Type
              "#$OrganismClassificationType")
             (Sibling-Disjoint-Collection Organism-Classification-Type)
             (Subclass-Of Organism-Classification-Type
              Conventional-Classification-Type)
             (Subclass-Of Organism-Classification-Type Existing-Object-Type)
             (Set-Or-Collection Organism-Classification-Type)
             (Arity Organism-Classification-Type 1)
             (Documentation Organism-Classification-Type
              "A collection of collections; Organism-Classification-Type is the collection of all biological types used to classify animals, plants, or other elements of Organism-Whole.  The scientific types in Organism-Classification-Type may or may not correspond to naive categories of organisms, and, in addition, although they are scientific, they might not be officially accepted biological taxons at the standard taxonomic levels.  (Invertebrate is an example.)  Compare Biological-Taxon-Type.







Note that Organism-Classification-Type is an element of Sibling-Disjoint-Collection; hence, any two instances of Organism-Classification-Type can be assumed to be disjoint, unless we know that one is a subset of the other (also see Sibling-Disjoint-Collection)."))

(defobject |(MEDIUM-AMOUNT-FN POROSITY)|
   (Scalar-Interval |(MEDIUM-AMOUNT-FN POROSITY)|)
   (Porosity |(MEDIUM-AMOUNT-FN POROSITY)|)
   (Skolem-Object |(MEDIUM-AMOUNT-FN POROSITY)|))

(defrelation Calendar-Day
             (Name-In-Cyc Calendar-Day "#$CalendarDay")
             (Collection Calendar-Day)
             (Script-Type Calendar-Day)
             (Calendar-Covering-Type Calendar-Day)
             (Subclass-Of Calendar-Day Date)
             (Set-Or-Collection Calendar-Day)
             (Arity Calendar-Day 1)
             (Documentation Calendar-Day
              "The collection of days that make up the calendar.  This is a collection of disjoint but contiguous time intervals.  One of its elements is Thursday, August 1, 1996."))

(defrelation Personal-Product
             (Name-In-Cyc Personal-Product "#$PersonalProduct")
             (Existing-Object-Type Personal-Product)
             (Product-Type Personal-Product)
             (Subclass-Of Personal-Product Product)
             (Set-Or-Collection Personal-Product)
             (Arity Personal-Product 1)
             (Documentation Personal-Product
              "A collection of products.  Each element of Personal-Product is a service or tangible product designed for the physical body of a person, including clothing, accessories, personal care products (e.g., deodorant, hand soap) and devices (e.g., razors, heating pads), cosmetics, and personal services such as massages and manicures.  These are products or services which a person would seek out or apply to him/herself; i.e., it excludes products used on the body of a person by physicians (e.g., scalpels), dentists (e.g., dental drills), or morticians."))

(defrelation Lightning-Event
             (Name-In-Cyc Lightning-Event "#$LightningEvent")
             (Temporal-Object-Type Lightning-Event)
             (Default-Disjoint-Script-Type Lightning-Event)
             (Subclass-Of Lightning-Event Immediate-Weather-Process)
             (Set-Or-Collection Lightning-Event)
             (Arity Lightning-Event 1)
             (Documentation Lightning-Event
              "The collection of lightning flashes, events in which the atmosphere discharges electricity."))

(defrelation Unit-Of-Flow-Rate
             (Name-In-Cyc Unit-Of-Flow-Rate "#$UnitOfFlowRate")
             (Interconvertible-Unit-Type Unit-Of-Flow-Rate)
             (Subclass-Of Unit-Of-Flow-Rate Unit-Of-Measure)
             (Subclass-Of Unit-Of-Flow-Rate Unit-Of-Rate)
             (Set-Or-Collection Unit-Of-Flow-Rate)
             (Arity Unit-Of-Flow-Rate 1)
             (Documentation Unit-Of-Flow-Rate
              "The collection of functions which return elements of Flow-Rate (i.e.,volume of stuff passing a point per unit of time).  E.g., (Cubic-Meter 2000) denotes a Flow-Rate of 2000 cubic meters per second."))

(defrelation Thinking
             (Overlapping-External-Concept Thinking Sensus-Information1997
              "COGNITION")
             (Name-In-Cyc Thinking "#$Thinking")
             (Temporal-Stuff-Type Thinking)
             (Default-Disjoint-Script-Type Thinking)
             (Subclass-Of Thinking Mental-Event)
             (Set-Or-Collection Thinking)
             (Arity Thinking 1)
             (Documentation Thinking
              "A collection of events; a subset of Mental-Event.  Each element of Thinking is a mental process in the most general sense, involving the acquisition, modification, and/or synthesis of ideas.  Theorizing, remembering, inventing something, free associating, and dreaming are all examples of Thinking."))

(defrelation Wall-Of-A-Construction
             (Name-In-Cyc Wall-Of-A-Construction "#$WallOfAConstruction")
             (Existing-Object-Type Wall-Of-A-Construction)
             (Subclass-Of Wall-Of-A-Construction Construction-Artifact)
             (Set-Or-Collection Wall-Of-A-Construction)
             (Arity Wall-Of-A-Construction 1)
             (Documentation Wall-Of-A-Construction
              "Any wall which is a part of a Human-Shelter-Construction.  This includes includes the walls on the outside of the building as well as those on the inside such as the wall separating two rooms in a house."))

(defrelation Flammability
             (Very-High-Amount-Fn Flammability
              |(VERY-HIGH-AMOUNT-FN FLAMMABILITY)|)
             (Very-Low-Amount-Fn Flammability
              |(VERY-LOW-AMOUNT-FN FLAMMABILITY)|)
             (No-Amount-Fn Flammability |(NO-AMOUNT-FN FLAMMABILITY)|)
             (Medium-Amount-Fn Flammability |(MEDIUM-AMOUNT-FN FLAMMABILITY)|)
             (High-Amount-Fn Flammability |(HIGH-AMOUNT-FN FLAMMABILITY)|)
             (Name-In-Cyc Flammability "#$Flammability")
             (Primitive-Attribute-Type Flammability)
             (Subclass-Of Flammability Physical-Attribute)
             (Subclass-Of Flammability Scalar-Interval)
             (Set-Or-Collection Flammability)
             (Arity Flammability 1)
             (Documentation Flammability
              "A collection of attributes; a subset of Physical-Attribute.  Each element of Flammability represents a specific readiness with which some tangible substance burns.  Different degrees of Flammability are represented either using Generic-Value-Functions or qualitatively (e.g., Not-Flammable, Burns-Easily, Explosively-Flammable).  Flammability of an object is indicated with the predicate Flammability-Of-Object."))

(defobject Granular
   (Physical-Structural-Attribute Granular)
   (Subattribute-Of Granular Pourable)
   (Name-In-Cyc Granular "#$Granular")
   (Documentation Granular
    "A physical attribute.  Granular is the Physical-Structural-Attribute that describes a solid  that consists of granules and has a grainy texture; e.g., sand, sugar, salt."))

(defrelation Role
             (Name-In-Cyc Role "#$Role")
             (Relationship-Type Role)
             (Subclass-Of Role Intangible-Individual)
             (Set-Or-Collection Role)
             (Arity Role 1)
             (Documentation Role
              "Instances of Role express relations between a Situation and the things involved in it.  Actor-Slots (the relationships between Events and the Something-Existings that act in them) are a special type of Role."))

(defrelation Truck
             (Transport-Via-Fn Truck |(TRANSPORT-VIA-FN TRUCK)|)
             (Name-In-Cyc Truck "#$Truck")
             (Product-Type Truck)
             (Existing-Object-Type Truck)
             (Subclass-Of Truck Road-Vehicle)
             (Set-Or-Collection Truck)
             (Arity Truck 1)
             (Documentation Truck
              "The collection of all trucks, large Road-Vehicles for ground transportation.  Trucks are most often used to haul freight, garbage, materials, liquids and other heavy loads.  Fire-Trucks take firemen to fires.  In many parts of the world, people routinely ride in the backs of Trucks.  A Truck has a cab for the driver, separate from the cargo area of the Truck."))

(defrelation Relationship-Type
             (Name-In-Cyc Relationship-Type "#$RelationshipType")
             (Collection Relationship-Type)
             (Subclass-Of Relationship-Type Object-Type)
             (Set-Or-Collection Relationship-Type)
             (Arity Relationship-Type 1)
             (Documentation Relationship-Type
              "A collection of collections.  Each element of Relationship-Type is a collection of relations used in Cyc, including predicates, lambda functions, mathematical functions, non-atomic terms, and other types.  Examples: Unary-Function, Logical-Connective, Individual-Denoting-Function, Generic-Time-Predicate, Language-Describing-Predicate, Modal-Relationship."))

(defrelation Prime-Minister-Head-Of-Government
             (Name-In-Cyc Prime-Minister-Head-Of-Government
              "#$PrimeMinister-HeadOfGovernment")
             (Occupation-Type Prime-Minister-Head-Of-Government)
             (Subclass-Of Prime-Minister-Head-Of-Government Head-Of-Government)
             (Set-Or-Collection Prime-Minister-Head-Of-Government)
             (Arity Prime-Minister-Head-Of-Government 1)
             (Documentation Prime-Minister-Head-Of-Government
              "A collection of persons.  Each element of Prime-Minister-Head-Of-Government is a person who holds the political office of Prime Minister in some element of Country.  Examples: John Major, Benjamin Netanyahu, Lien Chen, Andreas-Papandreou."))

(defobject |(HIGH-AMOUNT-FN RAININESS)|
   (Scalar-Interval |(HIGH-AMOUNT-FN RAININESS)|)
   (Raininess |(HIGH-AMOUNT-FN RAININESS)|)
   (Skolem-Object |(HIGH-AMOUNT-FN RAININESS)|)
   (Subattribute-Of |(HIGH-AMOUNT-FN RAININESS)| Rainy))

(defrelation Boat-Water-Transportation-Device
             (Name-In-Cyc Boat-Water-Transportation-Device
              "#$Boat-WaterTransportationDevice")
             (Product-Type Boat-Water-Transportation-Device)
             (Existing-Object-Type Boat-Water-Transportation-Device)
             (Subclass-Of Boat-Water-Transportation-Device Container-Product)
             (Subclass-Of Boat-Water-Transportation-Device
              Water-Transportation-Device)
             (Set-Or-Collection Boat-Water-Transportation-Device)
             (Arity Boat-Water-Transportation-Device 1)
             (Documentation Boat-Water-Transportation-Device
              "A collection of water transportation devices.  An instance of Boat-Water-Transportation-Device is a device for transporting people and/or objects through or over water without getting them wet; thus, instances of Rowboat or Ship (as opposed to Jet-Ski or Surfboard or Sailboard)."))

(defobject Cloudy
   (Cloudiness Cloudy)
   (Name-In-Cyc Cloudy "#$Cloudy")
   (Documentation Cloudy
    "Cloudy is a Weather-Attribute that characterizes an Outdoor-Location which has at least some cloud cover -- this cloud cover not being situated at ground-level (in which case Foggy would be the applicable Weather-Attribute)."))

(defrelation Animal-Physiological-Attribute
             (Name-In-Cyc Animal-Physiological-Attribute
              "#$AnimalPhysiologicalAttribute")
             (Attribute-Type Animal-Physiological-Attribute)
             (Subclass-Of Animal-Physiological-Attribute Attribute-Value)
             (Subclass-Of Animal-Physiological-Attribute
              Physiological-Attribute)
             (Set-Or-Collection Animal-Physiological-Attribute)
             (Arity Animal-Physiological-Attribute 1)
             (Documentation Animal-Physiological-Attribute
              "The broadest collection of attributes of Animals that describe the physiological aspects of an animal, including its physiological (1) capacities, (2) conditions, and (3) states.  Examples include: (1) Capacities: Fertile, Hearing-Impaired, Paraplegic; (2) Conditions: Anemic, Athletic-Physical-Build; (3) States: Intoxicated, Injured, Inflamed.  Plant-Physiological-Attributes, such as In-Bloom, are excluded."))

(defrelation Stock-Type
             (Name-In-Cyc Stock-Type "#$StockType")
             (Collection Stock-Type)
             (Subclass-Of Stock-Type Existing-Object-Type)
             (Set-Or-Collection Stock-Type)
             (Arity Stock-Type 1)
             (Documentation Stock-Type
              "A collection of collections.  An instance of Stock-Type is a collection of all shares of stock of a particular type in a particular corporation.  For example, ``General Motors Class E Stock''."))

(defrelation Human-Residence-Area
             (Name-In-Cyc Human-Residence-Area "#$HumanResidenceArea")
             (Existing-Object-Type Human-Residence-Area)
             (Subclass-Of Human-Residence-Area Humanly-Occupied-Spatial-Object)
             (Subclass-Of Human-Residence-Area Ecological-Region)
             (Set-Or-Collection Human-Residence-Area)
             (Arity Human-Residence-Area 1)
             (Documentation Human-Residence-Area
              "A collection of geographical regions.  Each element of Human-Residence-Area is a region in which a number of people live, at least semi-permanently (i.e., for a year or more).  Examples: San-Francisco-Bay-Area, Research-Triangle-Park, research stations at the South-Pole, radar posts in the Aleutians."))

(defrelation |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "SIZE-PROPERTY-ASCRIPTION")|
             (Skolem-Object
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "SIZE-PROPERTY-ASCRIPTION")|)
             (Physical-Amount-Slot
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "SIZE-PROPERTY-ASCRIPTION")|)
             (Slot
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "SIZE-PROPERTY-ASCRIPTION")|)
             (Relation
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "SIZE-PROPERTY-ASCRIPTION")|)
             (Arity
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "SIZE-PROPERTY-ASCRIPTION")|
              2)
             (Binary-Relation
              |(MEANING-IN-SYSTEM-FN SENSUS-INFORMATION1997 "SIZE-PROPERTY-ASCRIPTION")|))

(defrelation Anatomically-Capable-Of
             (Nth-Domain Anatomically-Capable-Of 1 Animal)
             (Nth-Domain Anatomically-Capable-Of 2 Collection)
             (Nth-Domain Anatomically-Capable-Of 3 Role)
             (Nth-Domain-Subclass-Of Anatomically-Capable-Of 2 Situation)
             (Name-In-Cyc Anatomically-Capable-Of "#$anatomicallyCapableOf")
             (Ternary-Predicate Anatomically-Capable-Of)
             (Relation Anatomically-Capable-Of)
             (Arity Anatomically-Capable-Of 3)
             (Documentation Anatomically-Capable-Of
              "The predicate Anatomically-Capable-Of indicates that an agent is anatomically able to take a certain role in a certain type of situation or event.  (Anatomically-Capable-Of AGENT SIT-TYPE ROLE) means that an individual Animal AGENT has the anatomical prerequisites (natural or prosthetic) to act in this ROLE in normal instances of SIT-TYPE.  For example, to express that Karen is capable of walking, Cyc would say (Anatomically-Capable-Of Karen Biped-Walking Performed-By).  AGENT may or may not have the skills (or other prerequisites) for actually doing a SIT-TYPE.  Anatomically-Capable-Of entails that AGENT satisfies the relevant Anatomical-Resource-Required constraint--e.g., for Karen's Biped-Walking, that she has two legs (natural or prosthetic).  As a default, Cyc concludes that animals who have the Anatomical-Parts needed for a certain kind of activity are Anatomically-Capable-Of that activity--for example, that people who have arms and legs are Anatomically-Capable-Of swimming; those conclusions would be overridden by the additional information that a person was paralyzed."))

(defrelation Intended-Behavior-Capable
             (Overlapping-External-Concept Intended-Behavior-Capable
              Sensus-Information1997 "USE-PROPERTY-ASCRIPTION")
             (Nth-Domain Intended-Behavior-Capable 1 Something-Existing)
             (Nth-Domain Intended-Behavior-Capable 2 Collection)
             (Nth-Domain Intended-Behavior-Capable 3 Role)
             (Nth-Domain-Subclass-Of Intended-Behavior-Capable 2 Situation)
             (Subrelation-Of Intended-Behavior-Capable Behavior-Capable)
             (Name-In-Cyc Intended-Behavior-Capable
              "#$intendedBehaviorCapable")
             (Ternary-Predicate Intended-Behavior-Capable)
             (Relation Intended-Behavior-Capable)
             (Arity Intended-Behavior-Capable 3)
             (Documentation Intended-Behavior-Capable
              "The predicate Intended-Behavior-Capable is used to describe ways in which an object was designed to function.  (Intended-Behavior-Capable OBJ SITTYPE ROLE) means that the individual, OBJ, was designed to serve as a ROLE in situations or events of type SITTYPE.  For example, a Land-Transportation-Device such as an automobile is intended to serve the Vehicle role in instances of (Transport-Via-Fn Land-Transportation-Device); an element of Sphygmomanometer is intended to serve as the Device-Used in instances of Systolic-Blood-Pressure-Test; an element of Rest-Area is intended to be where a Resting-Relaxing Event-Occurs-At.  A thing may be able to play the same kind of ROLE in different kinds of situations; e.g., an element of Stove-Top-Cooking-Pot can be the Instrument-Container in either Boiling-Food or Steaming-Food events.  Or something may serve more than one function; e.g., a Vacuum-Cleaner serves both as the Device-Used in instances of Vacuuming and (in virtue of its Vacuum-Dust-Bag) as the Instrument-Container."))

(defrelation Immediate-Weather-Process
             (Name-In-Cyc Immediate-Weather-Process
              "#$ImmediateWeatherProcess")
             (Temporal-Stuff-Type Immediate-Weather-Process)
             (Default-Disjoint-Script-Type Immediate-Weather-Process)
             (Subclass-Of Immediate-Weather-Process Weather-Event)
             (Set-Or-Collection Immediate-Weather-Process)
             (Arity Immediate-Weather-Process 1)
             (Documentation Immediate-Weather-Process
              "The collection of meteorological events of a duration shorter than seasonal processes.  A particular hurricane event, for example, might be characteristic of a seasonal process for a region; but the hurricane event itself is an instance of Immediate-Weather-Process.  Another example of an Immediate-Weather-Process is a single Lightning-Event.  (Cf. Annual-Climate-Cycle.)"))

(defobject Pourable
   (Physical-Structural-Attribute Pourable)
   (Name-In-Cyc Pourable "#$Pourable")
   (Documentation Pourable
    "A physical attribute.  Pourable is the structural attribute of a tangible thing that is capable of flowing.  Pourable things don't have intrinsic shape, but instead take the shape of their containers.  When acted on by a force, a Pourable thing changes shape at a rate proportional to the force.  (In addition, Pourable things may be easily separated into multiple pieces; however, such a separation is not a breaking or shearing.)  Semisolid mobs of particles, such as portions of sand or snow, are Pourable; but a gelatin-like semisolid is not.  See also Semi-Solid-Tangible-Thing."))

(defrelation Residence-Of-Organization
             (Domain Residence-Of-Organization Organization)
             (Range Residence-Of-Organization Geographical-Region)
             (Name-In-Cyc Residence-Of-Organization
              "#$residenceOfOrganization")
             (Slot Residence-Of-Organization)
             (Relation Residence-Of-Organization)
             (Arity Residence-Of-Organization 2)
             (Binary-Relation Residence-Of-Organization)
             (Documentation Residence-Of-Organization
              "The predicate Residence-Of-Organization indicates the geographical location of a particular organization's main offices.  (Residence-Of-Organization ORG GEOGREG) means that the Organization ORG has its chief office at the location GEOGREG.  GEOGREG is typically a City but may be a larger or smaller Geographical-Region.  For example, the Residence-Of-Organization of the United-States-Federal-Government is the City-Of-Washington-DC."))

(defobject |(LOW-AMOUNT-FN FRAGILITY)|
   (Scalar-Interval |(LOW-AMOUNT-FN FRAGILITY)|)
   (Fragility |(LOW-AMOUNT-FN FRAGILITY)|)
   (Skolem-Object |(LOW-AMOUNT-FN FRAGILITY)|))

(defrelation Sub-Abs-Of-Entity-During
             (Nth-Domain Sub-Abs-Of-Entity-During 1 Entity)
             (Nth-Domain Sub-Abs-Of-Entity-During 2 Something-Existing)
             (Nth-Domain Sub-Abs-Of-Entity-During 3 Temporal-Thing)
             (Name-In-Cyc Sub-Abs-Of-Entity-During "#$subAbsOfEntityDuring")
             (Ternary-Predicate Sub-Abs-Of-Entity-During)
             (Relation Sub-Abs-Of-Entity-During)
             (Arity Sub-Abs-Of-Entity-During 3)
             (Documentation Sub-Abs-Of-Entity-During
              "(Sub-Abs-Of-Entity-During ENTITY SUB TEMP) -- SUB is a Sub-Abstrac (a time-slice) of the Entity ENTITY, and SUB is cotemporal with the Temporal-Thing TEMP.  For example, (Sub-Abs-Of-Entity-During Karen KarenDuring1992 The-Year1992)."))

(defrelation Bush
             (Name-In-Cyc Bush "#$Bush")
             (Existing-Object-Type Bush)
             (Subclass-Of Bush Plant-Woody)
             (Set-Or-Collection Bush)
             (Arity Bush 1)
             (Documentation Bush
              "A collection of plants; a subset of Plant-Woody.  The collection Bush includes all bushes, i.e., woody plants of branching growth habit that lack substantial trunks and are not usually taller than a person (and they are shorter than most specimens of Tree-The-Plant).   This is a commonsense collection without distinct boundaries."))

(defrelation Function-Or-Functional-Predicate
             (Name-In-Cyc Function-Or-Functional-Predicate
              "#$FunctionOrFunctionalPredicate")
             (Relationship-Type Function-Or-Functional-Predicate)
             (Subclass-Of Function-Or-Functional-Predicate Relationship)
             (Set-Or-Collection Function-Or-Functional-Predicate)
             (Arity Function-Or-Functional-Predicate 1)
             (Documentation Function-Or-Functional-Predicate
              "A collection of mathematical objects.  Each element of Function-Or-Functional-Predicate is either a function or else a predicate which is functional in at least one argument place (see also Functional-Predicate).  Examples: Skolem-Function, Interval-Max-Fn, Electrical-Potential-Difference, Revenue-From, Cost-Rate-For-Type, Permeability-Of-Subst-Thro-Subst."))

(defrelation Metal-Alloy
             (Name-In-Cyc Metal-Alloy "#$MetalAlloy")
             (Tangible-Stuff-Composition-Type Metal-Alloy)
             (Subclass-Of Metal-Alloy Mixture)
             (Subclass-Of Metal-Alloy Artificial-Material)
             (Subclass-Of Metal-Alloy Metal)
             (Set-Or-Collection Metal-Alloy)
             (Arity Metal-Alloy 1)
             (Documentation Metal-Alloy
              "A collection of tangible stuffs; a subset of Metal.  Each instance of Metal-Alloy is a metallic stuff which is a homogeneous blend of at least one part of Unalloyed-Metal with at least one other substance.  Metal-Alloy is not a subset of Mixture, because each instance of Metal-Alloy is defined not only by the amounts and kinds of its Constituents, but also (unlike a mixture) by the internal structures formed during its creation.  Furthermore, the creation process is typically more complex than Mixing.  Common metal alloys include the instances of Bronze, Brass, and Steel.  Note that Galvanized-Metal is NOT a subset of Metal-Alloy, because every instance of Galvanized-Metal has a coating of some Zinc on its surface, and thus (unlike an alloy) the components of galvanized metals are not homogenously distributed throughout."))

(defrelation Volatility
             (No-Amount-Fn Volatility |(NO-AMOUNT-FN VOLATILITY)|)
             (Name-In-Cyc Volatility "#$Volatility")
             (Measurable-Attribute-Type Volatility)
             (Subclass-Of Volatility Physical-Attribute)
             (Subclass-Of Volatility Scalar-Interval)
             (Set-Or-Collection Volatility)
             (Arity Volatility 1)
             (Documentation Volatility
              "A collection of attributes; a subset of Physical-Attribute.  Each element of Volatility represents the specific readiness of some liquid to evaporate.  Higher volatility indicates a faster rate of evaporation.  Volatilities of substances are indicated with the predicate Volatility-Of-Substance."))

(defrelation Powered-Device
             (Name-In-Cyc Powered-Device "#$PoweredDevice")
             (Existing-Object-Type Powered-Device)
             (Subclass-Of Powered-Device Physical-Device)
             (Set-Or-Collection Powered-Device)
             (Arity Powered-Device 1)
             (Documentation Powered-Device
              "A collection of physical devices.  An instance of Powered-Device is any device which requires some power input in order to perform its function.  The power supplied may be muscle power, kinetic energy, fuel, electricity, etc.
This is much more general than Electrical-Device (qv), which is one of its subsets. Powered-Device and Non-Powered-Device partition Physical-Device."))

(defrelation Three-Dimensional-Shape-Type
             (Name-In-Cyc Three-Dimensional-Shape-Type
              "#$ThreeDimensionalShapeType")
             (Collection Three-Dimensional-Shape-Type)
             (Subclass-Of Three-Dimensional-Shape-Type Shape-Type)
             (Set-Or-Collection Three-Dimensional-Shape-Type)
             (Arity Three-Dimensional-Shape-Type 1)
             (Documentation Three-Dimensional-Shape-Type
              "A collection of collections.  Each element of Three-Dimensional-Shape-Type is a collection of things which are subsets of Three-Dimensional-Shape.  Examples: Cylinder-Shape, Rectangular3D-Shape, Humanlike-Body-Shape."))

(defobject |(VERY-LOW-AMOUNT-FN POROSITY)|
   (Scalar-Interval |(VERY-LOW-AMOUNT-FN POROSITY)|)
   (Porosity |(VERY-LOW-AMOUNT-FN POROSITY)|)
   (Skolem-Object |(VERY-LOW-AMOUNT-FN POROSITY)|))

(defrelation Cohabitation-Unit
             (Name-In-Cyc Cohabitation-Unit "#$CohabitationUnit")
             (Existing-Object-Type Cohabitation-Unit)
             (Subclass-Of Cohabitation-Unit Organization)
             (Set-Or-Collection Cohabitation-Unit)
             (Arity Cohabitation-Unit 1)
             (Documentation Cohabitation-Unit
              "A collection of organizations.  Each element of Cohabitation-Unit is a group of humans or other animals all living together in the same Physical-Quarters at the same time, whether that be a house, nest, warren, or other dwelling -- loosely speaking, a household.  As a default, the cohabitants in the group are assumed to be all of the same species.  (See also the more specialized Comments in Human-Social-Life-Mt and Naive-Biological-Descent-Mt.)"))

(defobject North-East-Directly
   (Geographical-Direction North-East-Directly)
   (Unit-Vector-Precise North-East-Directly)
   (Name-In-Cyc North-East-Directly "#$NorthEast-Directly")
   (Documentation North-East-Directly
    "The precise Northeast direction from any geographic point other than a pole."))

(defrelation Planet
             (Name-In-Cyc Planet "#$Planet")
             (Existing-Object-Type Planet)
             (Subclass-Of Planet Geographical-Region)
             (Subclass-Of Planet Heavenly-Body)
             (Set-Or-Collection Planet)
             (Arity Planet 1)
             (Documentation Planet
              "A collection of heavenly bodies.  Each element of Planet is a planet either in Earth's solar system or elsewhere in the universe.  Examples: Planet-Jupiter, Planet-Venus."))

(defrelation Washing
             (Name-In-Cyc Washing "#$Washing")
             (Temporal-Object-Type Washing)
             (Default-Disjoint-Script-Type Washing)
             (Subclass-Of Washing Cleaning)
             (Set-Or-Collection Washing)
             (Arity Washing 1)
             (Documentation Washing
              "A collection of events, and a subset of Cleaning.  In a Washing event, some Water is being employed in the cleaning, typically with some surfactant such as soap dissolved in the water.  If only water (i.e., no soap) is used in a Washing, then the event also belongs to a particular subset of Washing, namely Rinsing."))

(deffunction Horse-Power
   (Args-Isa Horse-Power Real-Number)
   (Result-Instance-Of Horse-Power Physical-Attribute)
   (Result-Instance-Of Horse-Power Scalar-Interval)
   (Name-In-Cyc Horse-Power "#$HorsePower")
   (Unit-Of-Power Horse-Power)
   (Unit-Of-Measure-No-Prefix Horse-Power)
   (Function Horse-Power)
   (Documentation Horse-Power
    "An english unit of power.  The power that, roughly, a single workhorse can continually supply"))

(defrelation Dock
             (Name-In-Cyc Dock "#$Dock")
             (Existing-Object-Type Dock)
             (Subclass-Of Dock Outdoor-Location)
             (Subclass-Of Dock Fixed-Structure)
             (Set-Or-Collection Dock)
             (Arity Dock 1)
             (Documentation Dock
              "The collection of long flat walkways that jut out over water from  shorelines.  A Dock's main function is to provide a place to secure boats and to provide a place where passengers and cargo can be loaded and unloaded."))

(defrelation Near
             (not (Transitive-Binary-Predicate Near))
             (Slot-Inverse Near Near)
             (Domain Near Spatial-Thing)
             (Range Near Spatial-Thing)
             (Name-In-Cyc Near "#$near")
             (Symmetric-Binary-Predicate Near)
             (Spatial-Predicate Near)
             (Irreflexive-Binary-Predicate Near)
             (Slot Near)
             (Relation Near)
             (Arity Near 2)
             (Binary-Relation Near)
             (Documentation Near
              "(Near THIS THAT) means that the distance between THIS and THAT doesn't exceed the maximum dimension of the smaller object.  Thus, two pebbles one mile apart would not be Near each other, but a pebble one centimeter above the earth would be Near the earth."))

(deffunction Year-Fn
   (Range Year-Fn Calendar-Year)
   (Domain Year-Fn Integer)
   (Name-In-Cyc Year-Fn "#$YearFn")
   (Non-Predicate-Function Year-Fn)
   (Individual-Denoting-Function Year-Fn)
   (Relation Year-Fn)
   (Function Year-Fn)
   (Slot Year-Fn)
   (Arity Year-Fn 2)
   (Function-Arity Year-Fn 1)
   (Binary-Relation Year-Fn)
   (Documentation Year-Fn "(Year-Fn ?N) denotes a Calendar-Year -- 
in particular, the year ?N in the Gregorian calendar.  
For example (Year-Fn 1966) denotes the year 1966. Non-positive 
years are permitted: (Year-Fn -1) denotes 1 B.C., (Year-Fn -2)
denotes 2 B.C., etc.) 
There is no (Year-Fn 0), just as in the Gregorian calender
there is no year 0. Note that Year-Fn -- unlike Day-Fn, 
Month-Fn, etc. -- takes only one argument."))

(deffunction End-Fn
   (Range End-Fn Time-Point)
   (Domain End-Fn Temporal-Thing)
   (Name-In-Cyc End-Fn "#$EndFn")
   (Reifiable-Function End-Fn)
   (Individual-Denoting-Function End-Fn)
   (Function End-Fn)
   (Slot End-Fn)
   (Arity End-Fn 2)
   (Function-Arity End-Fn 1)
   (Binary-Relation End-Fn)
   (Documentation End-Fn
    "End-Fn is a function that takes a Temporal-Thing and returns the Time-Point it ends.  Thus: (Ending-Point ?X (End-Fn ?X))"))

(deffunction Start-Fn
   (Range Start-Fn Time-Point)
   (Domain Start-Fn Temporal-Thing)
   (Name-In-Cyc Start-Fn "#$StartFn")
   (Reifiable-Function Start-Fn)
   (Individual-Denoting-Function Start-Fn)
   (Function Start-Fn)
   (Slot Start-Fn)
   (Arity Start-Fn 2)
   (Function-Arity Start-Fn 1)
   (Binary-Relation Start-Fn)
   (Documentation Start-Fn
    "Start-Fn is a function that takes a Temporal-Thing and returns the Time-Point it began.  Thus:  (Starting-Point ?X (Start-Fn ?X))"))

(defrelation Agreeing-Agents
             (Domain Agreeing-Agents Agreement)
             (Range Agreeing-Agents Agent)
             (Name-In-Cyc Agreeing-Agents "#$agreeingAgents")
             (Inter-Actor-Slot Agreeing-Agents)
             (Slot Agreeing-Agents)
             (Relation Agreeing-Agents)
             (Arity Agreeing-Agents 2)
             (Binary-Relation Agreeing-Agents)
             (Documentation Agreeing-Agents
              "The predicate Agreeing-Agents relates a particular agreement to the agents who are making the agreement.  (Agreeing-Agents AGR PARTY) means that the Agreement AGR has the Agent PARTY among its agreeing parties.  Agreeing-Agents may have specialized roles, such as Agreeing-Buyer or Agreeing-Seller, Insuring-Agent or Policy-Holder, Employed-Agent or Employing-Agent.  The Agreeing-Agents will be mentioned in their agreement."))

(defrelation Ends-During
             (not (Transitive-Binary-Predicate Ends-During))
             (not (Symmetric-Binary-Predicate Ends-During))
             (Subrelation-Of Ends-During Ends-After-Starting-Of)
             (Subrelation-Of Ends-During Temporal-Bounds-Intersect)
             (Domain Ends-During Temporal-Thing)
             (Range Ends-During Temporal-Thing)
             (Name-In-Cyc Ends-During "#$endsDuring")
             (Complex-Temporal-Relation Ends-During)
             (Asymmetric-Binary-Predicate Ends-During)
             (Slot Ends-During)
             (Relation Ends-During)
             (Arity Ends-During 2)
             (Binary-Relation Ends-During)
             (Documentation Ends-During
              "(Ends-During ?X ?Y) means ?Y covers the end of ?X, i.e. the Ending-Point of ?X is properly contained in (Temporal-Bounds-Contain) ?Y.  Note that ?X and ?Y don't necessarily intersect, however, if ?Y is continuous, they do."))

(defrelation Outputs
             (Subrelation-Of Outputs Post-Actors)
             (Subrelation-Of Outputs Actors)
             (Domain Outputs Creation-Or-Destruction-Event)
             (Range Outputs Something-Existing)
             (Name-In-Cyc Outputs "#$outputs")
             (Actor-Slot Outputs)
             (Slot Outputs)
             (Relation Outputs)
             (Arity Outputs 2)
             (Binary-Relation Outputs)
             (Documentation Outputs
              "The predicate Outputs is used to relate a particular event to any of the outputs from that event.  (Outputs EVENT OBJECT) means that OBJECT is an output from the Creation-Or-Destruction-Event EVENT; i.e., OBJECT is either created as a result of EVENT, or it is something left after another thing was destroyed in EVENT.  For example, silicon chips are Outputs-Created in a chip manufacturing process, while scrap metal is Outputs-Remaining after cars are put through a crusher.
Note that those two types of cases should be distinguished by using (respectively) the specialized predicates Outputs-Created or Outputs-Remaining whenever they are appropriate, rather than only the more general predicate Outputs."))

(deffunction Stib
   (Range Stib Time-Interval)
   (Domain Stib Temporal-Thing)
   (Name-In-Cyc Stib "#$STIB")
   (Individual-Denoting-Function Stib)
   (Reifiable-Function Stib)
   (Relation Stib)
   (Function Stib)
   (Slot Stib)
   (Arity Stib 2)
   (Function-Arity Stib 1)
   (Binary-Relation Stib)
   (Documentation Stib
    "(STIB ?X) returns the `Short Time Interval Before' ?X.  The function STIB is used to state axioms which assert propositions about the world just before some Temporal-Thing.  E.g., just before some event begins, or just before some tangible object comes into being.  Whether the propositions hold beyond the bounds of the short interval specified depends the nature of the proposition.  Consider the axiom `before launching, the Space Shuttle's fuel tanks are full'. The fuel tanks are only known to be full immediately before the launching event, and for some (measurable but potentially short) time interval before that launch, and so we use STIB to specify the time interval in which the assertion of fullness will hold.  Before or after that time, additional axioms are required to conclude whether the tanks are full or not.  Also see:  STIF."))

(defrelation Sub-Events
             (Synonymous-External-Concept Sub-Events Sensus-Information1997
              "SUBEVENT")
             (Subrelation-Of Sub-Events Temporally-Subsumes)
             (Subrelation-Of Sub-Events Parts)
             (Domain Sub-Events Event)
             (Range Sub-Events Event)
             (Name-In-Cyc Sub-Events "#$subEvents")
             (Complex-Temporal-Relation Sub-Events)
             (Sub-Process-Slot Sub-Events)
             (Transitive-Binary-Predicate Sub-Events)
             (Anti-Symmetric-Binary-Predicate Sub-Events)
             (Reflexive-Binary-Predicate Sub-Events)
             (Slot Sub-Events)
             (Relation Sub-Events)
             (Arity Sub-Events 2)
             (Binary-Relation Sub-Events)
             (Documentation Sub-Events
              "(Sub-Events WHOLE PART) means that the event PART is a meaningful part of the event WHOLE.  So both WHOLE and PART are elements of Event.  The predicate Sub-Events can be used to decompose events in time, in space, and/or in other ways.  Following a recipe often has this property:  the task is broken down into several sub-tasks, some of which happen before others, and some of which happen simultaneously but involve different ingredients.  One could also decompose `making dinner' into Sub-Events according to how dangerous they are, which might be useful if one had kids of various ages helping.  Often, a more specialized relation than Sub-Events can be used; e.g., if you have subevents that decompose an action in time only, then the more specialized predicate Sub-Processes should be used."))

(defrelation Citizens
             (Domain Citizens Geopolitical-Entity)
             (Range Citizens Person)
             (Name-In-Cyc Citizens "#$citizens")
             (Slot Citizens)
             (Intensional-Representation-Predicate Citizens)
             (Relation Citizens)
             (Arity Citizens 2)
             (Binary-Relation Citizens)
             (Documentation Citizens
              "The predicate Citizens indicates that a particular person is a citizen of a particular country/state/... .  (Citizens GEOPOL PERSON) means that GEOPOL is a Geopolitical-Entity in which the Person PERSON has full rights of citizenship (whatever those rights might consist of in GEOPOL)."))

(defrelation Greater-Than
             (Overlapping-External-Concept Greater-Than Sensus-Information1997
              "GREATER-THAN")
             (Synonymous-External-Concept Greater-Than Sensus-Information1997
              "GREATER-THAN-COMPARISON")
             (Domain Greater-Than Scalar-Interval)
             (Range Greater-Than Scalar-Interval)
             (Name-In-Cyc Greater-Than "#$greaterThan")
             (Numeric-Comparison Greater-Than)
             (Evaluatable-Function Greater-Than)
             (Transitive-Binary-Predicate Greater-Than)
             (Asymmetric-Binary-Predicate Greater-Than)
             (Slot Greater-Than)
             (Relation Greater-Than)
             (Arity Greater-Than 2)
             (Binary-Relation Greater-Than)
             (Documentation Greater-Than
              "The predicate Greater-Than is Cyc's representation of the `greater than' ( > ) relation in mathematics, adapted to use with Cyc's scalars, which include quantitative intervals as well as point values.  Formally, there are two conditions under which (Greater-Than SI-1 SI-2) is true, for two elements of Scalar-Interval: (1) (Following-Value SI-1 SI-2) is true, or (2) the minimum of SI-1 is greater than the maximum of SI-2.  Note that `A is less than B' is expressed in CycL as (Greater-Than B A)."))

(defrelation Group-Cardinality
             (Domain Group-Cardinality Group)
             (Range Group-Cardinality Non-Negative-Integer)
             (Name-In-Cyc Group-Cardinality "#$groupCardinality")
             (Interval-Based-Quantity-Slot Group-Cardinality)
             (Slot Group-Cardinality)
             (Relation Group-Cardinality)
             (Arity Group-Cardinality 2)
             (Binary-Relation Group-Cardinality)
             (Documentation Group-Cardinality
              "The predicate Group-Cardinality is used to indicate the total number of members there are in a particular group.  (Group-Cardinality GROUP INTEGER) means that the number of members in the Group GROUP is INTEGER.  For example, the Group-Cardinality of the Seven-Wonders-Of-The-Ancient-World is 7.  Cyc infers that the Group-Cardinality of any group that is a pair is 2, and that of a dozen is 12."))

(defrelation Outputs-Created
             (Subrelation-Of Outputs-Created Outputs)
             (Subrelation-Of Outputs-Created Non-Deliberate-Actors)
             (Subrelation-Of Outputs-Created Starts-During)
             (Domain Outputs-Created Creation-Event)
             (Range Outputs-Created Something-Existing)
             (Name-In-Cyc Outputs-Created "#$outputsCreated")
             (Actor-Slot Outputs-Created)
             (Slot Outputs-Created)
             (Relation Outputs-Created)
             (Arity Outputs-Created 2)
             (Binary-Relation Outputs-Created)
             (Documentation Outputs-Created
              "The predicate Outputs-Created is used to identify items created by a particular event.  (Outputs-Created EVENT OBJECT) means that OBJECT doesn't exist before EVENT but comes into existence sometime during EVENT, as a result of EVENT.  Outputs-Created is a specialization of Non-Deliberate-Actors, since it would in general be impossible for OBJECT to act deliberately in its own creation."))

(defrelation Successful-For-Agents
             (Subrelation-Of Successful-For-Agents Performed-By)
             (Domain Successful-For-Agents Purposeful-Action)
             (Range Successful-For-Agents Agent)
             (Name-In-Cyc Successful-For-Agents "#$successfulForAgents")
             (Actor-Slot Successful-For-Agents)
             (Slot Successful-For-Agents)
             (Relation Successful-For-Agents)
             (Arity Successful-For-Agents 2)
             (Binary-Relation Successful-For-Agents)
             (Documentation Successful-For-Agents
              "The predicate Successful-For-Agents is used to indicate that a particular agent achieves its goal in a particular action.  (Successful-For-Agents ENDEAVOR AGT) means that the Agent AGT is successful in accomplishing the Purposeful-Action ENDEAVOR.  This means that each of the purposes AGT had in doing ENDEAVOR has come true.  See also Purpose-In-Event."))