// Copyright © 2000 Microsoft Corporation.  All rights reserved.
// In installing/viewing this source code, you agree to the terms of the
// Microsoft Research Source License (MSRSL) included in the root of this source tree
// and available from http://www.vworlds.org/license.asp.

// vwmm.idl : IDL source for vwmm.dll
//

// This file will be processed by the MIDL tool to
// produce the type library (vwmm.tlb) and marshalling code.

	import "oaidl.idl";
	import "ocidl.idl";

	// properties
	import "vector.idl";
	import "cellprop.idl";
	import "vwadata.idl";
	import "vwidata.idl";
	import "vwgeomsp.idl";
	import "vwgeomar.idl";
	import "pickdata.idl";
	import "isound.idl";

	// graphics
	import "vwgcache.idl";
	import "vwrender.idl";

	// geometry converters
	import "convgeom.idl";
	import "3dstod3d.idl";
//	import "vrml2d3d.idl";
			
	// ui tools
	import "vwuiobjs.idl";
	import "vwnvtool.idl";
	import "vwpktool.idl";

	// tools
//	import "vwsound.idl";

	// modules
	import "vwmmex.idl";
			
[
	uuid(C2871F2D-6528-11d1-959D-00C04FD91F4D),
	version(1.0),
	helpstring("vwmm 1.0 Type Library")
]
library VWMMLib
{
	importlib("stdole32.tlb");
	importlib("stdole2.tlb");

// from cellprop.idl
	[
		uuid(EA6CB797-3663-11D0-8AC3-00A0C90A6BFC),
		helpstring("Boundary Class")
	]
	coclass Boundary
	{
		[default] interface IBoundary;
	};

// from vector.idl
	[
		uuid(27EB890D-1842-11D0-89A9-00A0C9054129),
		helpstring("Vector Class")
	]
	coclass Vector
	{
		[default] interface IVector;
	};

	// from isound.idl
	[
		uuid(8FC43EBC-B30C-11d1-83F0-00C04FB6FA46),
		helpstring("Sound Class")
	]
	coclass Sound
	{
		[default] interface ISound;
	};

// from vwgeomo.idl
	[
		uuid(CFC0B266-1DDB-11D0-89A9-00A0C9054129),
		helpstring("VWGeometry Class")
	]
	coclass VWGeometry
	{
		[default] interface IVWGeometry;
	};

// from vwgeomsp.idl
	[
		uuid(DEA5A34D-1DF3-11D0-8AC3-00A0C90A6BFC),
		helpstring("VWGeometrySprite Class")
	]
	coclass VWGeometrySprite
	{
		[default] interface IVWGeometrySprite;
	};

// from vwgeomar.idl
	[
		uuid(E59063EF-9611-11D0-8AC3-00A0C90A6BFC),
		helpstring("VWGeometryArticulated Class")
	]
	coclass VWGeometryArticulated
	{
		[default] interface IVWGeometryArticulated;
	};
//Joints
	[
		uuid(25a580a0-013a-11d2-b8e2-00104b72dba8),
		helpstring("Joint Class")
	]
	coclass Joint
	{
		[default] interface IJoint;
	};
//Characters
	[
		uuid(12867ba0-013a-11d2-b8e2-00104b72dba8),
		helpstring("Character Class")
	]
	coclass Character
	{
		[default] interface ICharacter;
	};
	[
		uuid(ed4613a0-06ac-11d2-b8e2-00104b72dba8),
		helpstring("Behavior Class")
	]
	coclass Behavior
	{
		[default] interface IBehavior;
	};
	[
		uuid(eddeaa20-06ac-11d2-b8e2-00104b72dba8),
		helpstring("Puppet")
	]
	coclass Puppet
	{
		[default] interface IPuppet;
	};
// from vwadata.idl
	[
		uuid(607FA980-6B2B-11d1-9888-006097C9A0E1),
		helpstring("VWAccessoryData Class")
	]
	coclass VWAccessoryData
	{
		[default] interface IVWAccessoryData;
	};

// from vwidata.idl
	[
		uuid(79573080-64C0-11d0-89AA-00A0C9054129),
		helpstring("VWIntersectData Class")
	]
	coclass VWIntersectData
	{
		[default] interface IVWIntersectData;
	};

// from pickdata.idl
	[
		uuid(DE671B92-A01D-11d1-84F3-00C04FB6A5C8),
		helpstring("VWPickData Class")
	]
	coclass VWPickData
	{
		[default] interface IVWPickData;
	};

// from vwframe.idl
	[
		uuid(FEADAC66-0B23-11D0-89A9-00A0C9054129),
		helpstring("VWFrame Class")
	]
	coclass VWFrame
	{
		[default] interface IVWFrame;
	};

// from vwgcache.idl
	[
		uuid(E2186714-116A-11D0-89A9-00A0C9054129),
		helpstring("VWGeometryCache Class")
	]
	coclass VWGeometryCache
	{
		[default] interface IVWGeometryCache;
	};

// from vwrender.idl
	[
		uuid(7D6A5880-07DE-11d0-89A9-00A0C9054129),
		helpstring("VWRenderRoot Class")
	]
	coclass VWRenderRoot
	{
		[default] interface IVWRenderRoot;
	};

	[
		uuid(60CE4B26-FFF0-11CF-89A9-00A0C9054129),
		helpstring("VWRender3D Class")
	]
	coclass VWRender3D
	{
		[default] interface IVWRender3D;
	};

	[
		uuid(60CE4B2B-FFF0-11CF-89A9-00A0C9054129),
		helpstring("VWRender2D Class")
	]
	coclass VWRender2D
	{
		[default] interface IVWRender2D;
	};

// from vwnvtool.idl
	[
		uuid(60CE4B71-FFF0-11CF-89A9-00A0C9054129),
		helpstring("VWNavigationTool3D Class")
	]
	coclass VWNavigationTool3D
	{
		[default] interface IVWNavigationTool;
	};

	[
		uuid(60CE4B76-FFF0-11CF-89A9-00A0C9054129),
		helpstring("VWNavigationTool2D Class")
	]
	coclass VWNavigationTool2D
	{
		[default] interface IVWNavigationTool;
	};

	[
		uuid(E76C0940-0711-11d0-89A9-00A0C9054129),
		helpstring("VWNavigationTool2D3D Class")
	]
	coclass VWNavigationTool2D3D
	{
		[default] interface IVWNavigationTool;
	};

// from vwpktool.idl
	[
		uuid(6B2A1B46-43A9-11D0-8AC3-00A0C90A6BFC),
		helpstring("VWPickTool Class")
	]
	coclass VWPickTool
	{
		[default] interface IVWPickTool;
	};

// from vwsound.idl
#if 0
	[
		uuid(96732829-482A-11D0-89AB-00A0C9054129),
		helpstring("VWSound Class")
	]
	coclass VWSound
	{
		[default] interface IVWSound;
	};

	[
		uuid(9673282D-482A-11D0-89AB-00A0C9054129),
		helpstring("SoundBuffer Class")
	]
	coclass SoundBuffer
	{
		[default] interface ISoundBuffer;
	};

	[
		uuid(9673282F-482A-11D0-89AB-00A0C9054129),
		helpstring("Sound3DBuffer Class")
	]
	coclass Sound3DBuffer
	{
		[default] interface ISound3DBuffer;
	};
#endif


// from 3dstod3d.idl
	[
		uuid(8639C43E-C5F0-11D0-811D-00C04FB6A5C8),
		helpstring("Convert3DSGeometry Class")
	]
	coclass Convert3DSGeometry
	{
		[default] interface IConvert3DSGeometry;
	};

	// no VRML support yet
// from vrml2d3d.idl
#if 0
	[
		uuid(724CFFEE-CDE8-11D0-811D-00C04FB6A5C8),
		helpstring("ConvertVRMLGeometry Class")
	]
	coclass ConvertVRMLGeometry
	{
		[default] interface IConvertVRMLGeometry;
	};
#endif

// from vwmmex.idl
	[
		uuid(717B5A94-7267-11d1-959F-00C04FD91F4D),
		helpstring("MultimediaExemplar Class")
	]
	coclass MultimediaExemplar
	{
		[default] interface IMultimediaExemplar;
	};
};
