// Copyright © 2000 Microsoft Corporation.  All rights reserved.
// In installing/viewing this source code, you agree to the terms of the
// Microsoft Research Source License (MSRSL) included in the root of this source tree
// and available from http://www.vworlds.org/license.asp.

// VWErrorTool.cpp : Implementation of CTools1App and DLL registration.

#include "stdafx.h"
#include <stdtools.h>
#include "VWErrTl.h"

/////////////////////////////////////////////////////////////////////////////
//

void CVWErrorToolObject::ShowError( UINT nID )
{
	CString strMessage, strError;

	strMessage.LoadString(nID);

	strError.LoadString(IDS_ERROR);

	ASSERT(AfxGetMainWnd());
	AfxGetMainWnd()->MessageBox( strMessage, strError, MB_OK | MB_ICONSTOP | MB_TASKMODAL );

}

/*
VWOBJECT_E_INVOKEEXCEPTION
VWOBJECT_E_FILEEXCEPTION
VWOBJECT_E_FILEREADERROR
VWOBJECT_E_INVALIDMODULE
VWOBJECT_E_COLLECTIONERROR
VWOBJECT_E_WRONGPROPERTYTYPE
VWOBJECT_E_UNKNOWNTYPE
VWOBJECT_E_INVALIDPROPERTYLIST
VWOBJECT_E_PROPERTYEXISTS
VWOBJECT_E_INVALIDPROPERTYMAP
VWOBJECT_E_PROPERTYNOTEXIST
VWOBJECT_E_METHODEXISTS
VWOBJECT_E_METHODNOTEXIST
VWOBJECT_E_INVALIDMETHOD
VWOBJECT_E_INVALIDMETHODMAP
VWOBJECT_E_CONNECTIONERROR
VWOBJECT_E_INVALIDCREATUREMAP
VWOBJECT_E_EXEMPLAREXISTS
VWOBJECT_E_INVALIDOBJECT
VWOBJECT_E_EXEMPLARNOTEXIST
VWOBJECT_E_INVALIDEXEMPLARMAP
VWOBJECT_E_CREATUREEXISTS
VWOBJECT_E_INVALIDTOOLMAP
VWOBJECT_E_INVALIDMODULEMAP
VWOBJECT_E_STUBOBJECT
VWOBJECT_E_UNKNOWNPROPERTYTYPE
VWOBJECT_E_UNKNOWNMESSAGETYPE
VWOBJECT_E_MODULEEXISTS
VWOBJECT_E_MODULENOTEXIST
VWOBJECT_E_TOOLEXISTS
VWOBJECT_E_TOOLNOTEXIST
VWOBJECT_E_INVALIDMODULETYPE
VWOBJECT_E_UNKNOWNPROGID
VWOBJECT_E_INVALIDCONNECTION
VWOBJECT_E_INTERFACENOTSUPPORTED
VWOBJECT_E_INVALIDTRACELEVEL
VWOBJECT_E_COLLECTIONLEVEL
VWOBJECT_E_PERMISSION_DENIED
VWOBJECT_E_SYNTAX_ERROR
VWOBJECT_E_UNKNOWNTRACECOMPONENT
VWOBJECT_E_ALREADYCONNECTED
VWOBJECT_E_OBJECTNOTFOUND
VWOBJECT_E_UNKNOWNCLSIDINDEX
VWOBJECT_E_INVALIDLISTINDEX
VWOBJECT_E_EMPTYPROPERTYLIST
VWOBJECT_E_TYPE_MISMATCH
VWOBJECT_E_INVALIDDEFAULTSCRIPT
VWOBJECT_E_INVALIDWORLD
VWOBJECT_E_INVALIDBITSTATE
*/

// IVWErrorTool Methods
STDMETHODIMP CVWErrorToolObject::DisplayError(HRESULT hr, VARIANT_BOOL *pbHandled)
{
	AFX_MANAGE_STATE(AfxGetStaticModuleState());

	switch (hr)
	{
		case VWOBJECT_E_INVOKEEXCEPTION:
			ShowError(IDS_ERROR_INTERNAL);
			break;
		case VWOBJECT_E_FILEEXCEPTION:
		case VWOBJECT_E_FILEREADERROR:
			ShowError(IDS_FILE_ERROR);
			break;
		case VWOBJECT_E_INVALIDMODULE:
			ShowError(IDS_ERROR_INVALID_MODULE);
			break;
		case VWOBJECT_E_COLLECTIONERROR:
			ShowError(IDS_ERROR_INTERNAL);
			break;
		case VWOBJECT_E_WRONGPROPERTYTYPE:
		case VWOBJECT_E_UNKNOWNTYPE:
		case VWOBJECT_E_INVALIDPROPERTYLIST:
			ShowError(IDS_ERROR_INTERNAL);
			break;
		case VWOBJECT_E_PROPERTYNOTEXIST:
			ShowError(IDS_ERROR_PROP_NOT_EXIST);
			break;
		case VWOBJECT_E_METHODEXISTS:
			ShowError(IDS_ERROR_INTERNAL);
			break;
		case VWOBJECT_E_METHODNOTEXIST:
			ShowError(IDS_ERROR_METHOD_NOT_EXIST);
			break;
		case VWOBJECT_E_INVALIDMETHOD:
			ShowError(IDS_ERROR_INTERNAL);
			break;
		case VWOBJECT_E_INVALIDMETHODMAP:
			ShowError(IDS_ERROR_PROP_MAP_INVALID);
			break;
		case VWOBJECT_E_CONNECTIONERROR:
		case VWOBJECT_E_INVALIDCREATUREMAP:
		case VWOBJECT_E_EXEMPLAREXISTS:
		case VWOBJECT_E_INVALIDOBJECT:
			ShowError(IDS_ERROR_INTERNAL);
			break;
		case VWOBJECT_E_EXEMPLARNOTEXIST:
			ShowError(IDS_ERROR_EXEMPLAR_NOT_EXIST);
			break;
		case VWOBJECT_E_INVALIDEXEMPLARMAP:
		case VWOBJECT_E_CREATUREEXISTS:
		case VWOBJECT_E_INVALIDTOOLMAP:
		case VWOBJECT_E_INVALIDMODULEMAP:
			ShowError(IDS_ERROR_INTERNAL);
			break;
		case VWOBJECT_E_STUBOBJECT:
			ShowError(IDS_ERROR_STUB_OBJECT);
			break;
		case VWOBJECT_E_UNKNOWNPROPERTYTYPE:
		case VWOBJECT_E_UNKNOWNMESSAGETYPE:
		case VWOBJECT_E_MODULEEXISTS:
		case VWOBJECT_E_MODULENOTEXIST:
		case VWOBJECT_E_TOOLEXISTS:
		case VWOBJECT_E_TOOLNOTEXIST:
		case VWOBJECT_E_INVALIDMODULETYPE:
		case VWOBJECT_E_UNKNOWNPROGID:
		case VWOBJECT_E_INVALIDCONNECTION:
		case VWOBJECT_E_INTERFACENOTSUPPORTED:
		case VWOBJECT_E_INVALIDTRACELEVEL:
			ShowError(IDS_ERROR_INTERNAL);
			break;
		case VWOBJECT_E_COLLECTIONLEVEL:
			ShowError(IDS_ERROR_INVALID_COLLECTION_NESTING);
			break;
		case VWOBJECT_E_PERMISSION_DENIED:
			ShowError(IDS_ERROR_PERMISSION_DENIED);
			break;
		case VWOBJECT_E_SYNTAX_ERROR:
		case VWOBJECT_E_UNKNOWNTRACECOMPONENT:
		case VWOBJECT_E_ALREADYCONNECTED:
		case VWOBJECT_E_OBJECTNOTFOUND:
		case VWOBJECT_E_UNKNOWNCLSIDINDEX:
		case VWOBJECT_E_INVALIDLISTINDEX:
		case VWOBJECT_E_EMPTYPROPERTYLIST:
		case VWOBJECT_E_TYPE_MISMATCH:
		case VWOBJECT_E_INVALIDDEFAULTSCRIPT:
		case VWOBJECT_E_INVALIDWORLD:
		case VWOBJECT_E_INVALIDBITSTATE:
			ShowError(IDS_ERROR_INTERNAL);
			break;
		default:
			ShowError(IDS_ERROR_INTERNAL);
			break;
	}
	return S_OK;
}