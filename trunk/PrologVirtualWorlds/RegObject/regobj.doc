{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{\nowidctlpar\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}{\s1\sb480\nowidctlpar\widctlpar\brdrb\brdrs\brdrw15\brsp20 \brdrbtw\brdrs\brdrw15\brsp20 \adjustright \b\fs30\cgrid \sbasedon0 \snext0 heading 1;}{\s2\sb480\nowidctlpar\widctlpar\outlinelevel0\adjustright \b\fs26\cgrid \sbasedon1 \snext0 heading 2;}{\s3\sb480\nowidctlpar\widctlpar\outlinelevel1\adjustright \b\fs22\cgrid \sbasedon2 \snext0 heading 3;}{\s7\keepn\nowidctlpar\widctlpar\adjustright \b\i\fs20\cgrid \sbasedon0 \snext0 heading 7;}{\*\cs10 \additive Default Paragraph Font;}{\s15\nowidctlpar\widctlpar\adjustright \fs20\cgrid \sbasedon0 \snext16 byline;}{\s16\nowidctlpar\widctlpar\adjustright \fs20\cgrid \sbasedon0 \snext17 date;}{\s17\nowidctlpar\widctlpar\adjustright \v\fs20\lang1024\cgrid \sbasedon0 \snext18 bin;}{\s18\nowidctlpar\widctlpar\adjustright \v\fs20\lang1024\cgrid \sbasedon0 \snext19 art status;}{\s19\nowidctlpar\widctlpar\adjustright \v\fs20\lang1024\cgrid \sbasedon0 \snext20 revision history;}{\s20\nowidctlpar\widctlpar\adjustright \fs20\lang1024\cgrid \sbasedon0 \snext21 button-dir;}{\s21\sb480\nowidctlpar\widctlpar\brdrb\brdrs\brdrw15\brsp20 \brdrbtw\brdrs\brdrw15\brsp20 \adjustright \b\fs30\cgrid \sbasedon0 \snext22 abstract title;}{\s22\nowidctlpar\widctlpar\adjustright \fs20\cgrid \sbasedon0 \snext1 abstract;}{\s23\fi-360\li540\sb144\nowidctlpar\widctlpar\tx540\tx900\adjustright \fs20\cgrid \sbasedon24 \snext23 abstract bullet;}{\s24\fi-360\li540\sb144\nowidctlpar\widctlpar\tx540\tx900\adjustright \fs20\cgrid \sbasedon0 \snext24 bulleted list 1;}{\s25\nowidctlpar\widctlpar\adjustright \b\fs20\cgrid \sbasedon0 \snext25 syntax;}{\s26\nowidctlpar\widctlpar\adjustright \fs20\cgrid \sbasedon27 \snext26 bullet single-sp;}{\s27\nowidctlpar\widctlpar\adjustright \fs20\cgrid \sbasedon0 \snext27 bullet;}}{\*\listtable{\list\listtemplateid-1\listsimple{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat0\levelspace0\levelindent0{\leveltext\'01*;}{\levelnumbers;}}{\listname ;}\listid-2}{\list\listtemplateid-1563777758\listsimple{\listlevel\levelnfc23\leveljc0\levelfollow0\levelstartat0\levelspace0\levelindent0{\leveltext\'01-;}{\levelnumbers;}\fbias0 \fi-360\li360\jclisttab\tx360 }{\listname ;}\listid1133788108}{\list\listtemplateid1999541490\listsimple{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'00.;}{\levelnumbers\'01;}\fbias0 \fi-360\li1080\jclisttab\tx1080 }{\listname ;}\listid1313369603}{\list\listtemplateid67698703\listsimple{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'00.;}{\levelnumbers\'01;}\fbias0 \fi-360\li360\jclisttab\tx360 }{\listname ;}\listid1487160828}{\list\listtemplateid-1731668784\listsimple{\listlevel\levelnfc23\leveljc0\levelfollow0\levelstartat0\levelspace0\levelindent0{\leveltext\'01-;}{\levelnumbers;}\fbias0 \fi-360\li504\jclisttab\tx504 }{\listname ;}\listid1607424901}}{\*\listoverridetable{\listoverride\listid-2\listoverridecount1{\lfolevel\listoverrideformat{\listlevel\levelnfc23\leveljc0\levelfollow0\levelstartat1\levelold\levelspace0\levelindent360{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li540 }}\ls1}{\listoverride\listid1133788108\listoverridecount0\ls2}{\listoverride\listid1313369603\listoverridecount0\ls3}{\listoverride\listid1487160828\listoverridecount0\ls4}{\listoverride\listid1607424901\listoverridecount0\ls5}}{\info{\title RegObj}{\author A-OSWALN}{\operator A-OSWALN}{\creatim\yr1997\mo6\dy30\hr16\min1}{\revtim\yr1997\mo6\dy30\hr16\min1}{\version2}{\edmins0}{\nofpages1}{\nofwords3306}{\nofchars18846}{\*\company  }{\nofcharsws23144}{\vern71}}\widowctrl\ftnbj\aenddoc\formshade\viewkind4\viewscale100\pgbrdrhead\pgbrdrfoot \fet0\sectd \linex0\endnhere\sectdefaultcl {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}\pard\plain \s1\sb480\nowidctlpar\widctlpar\brdrb\brdrs\brdrw15\brsp20 \brdrbtw\brdrs\brdrw15\brsp20 \outlinelevel0\adjustright \b\fs30\cgrid {RegObj.dll - An ActiveX Server for Manipulation of the Registry
\par }\pard\plain \s17\nowidctlpar\widctlpar\adjustright \v\fs20\lang1024\cgrid {\v0 June 1997}{
\par }\pard\plain \s16\nowidctlpar\widctlpar\adjustright \fs20\cgrid {
\par }\pard\plain \s21\sb480\nowidctlpar\widctlpar\brdrb\brdrs\brdrw15\brsp20 \brdrbtw\brdrs\brdrw15\brsp20 \adjustright \b\fs30\cgrid {Abstract
\par }\pard\plain \s23\sb144\nowidctlpar\widctlpar\tx900\adjustright \fs20\cgrid {This article describes RegObj.dll, an ActiveX server that allows Visual Basic developers to programmatically control the Registry without having to resort to the Windows API.  It discusses the object model of RegObj.dll, and includes some Visual Basic code to illustrate using the objects in the server to perform common types of registry manipulation.  Although the code in this article is constructed in Visual Basic, any other language capable of constructing ActiveX client applications, such as Java or C/C++ can use this ActiveX DLL.
\par }\pard\plain \s2\sb480\nowidctlpar\widctlpar\outlinelevel1\adjustright \b\fs26\cgrid {Background to the Registry
\par }{\b0\fs20 The Registry is a database used by the Microsoft Windows operating systems to store system and application settings.  It has a hierarchical tree structure, where any key can have one or more subkeys and associated with these keys are values.  A key may have no values, a default value or a set of named values.  To view the registry on Windows 95 or Windows NT, run RegEdit from the Start…Run menu.
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \fs20\cgrid {
\par The registry is divided into sections, and each section has a top-level key associated with it.  Four of the most commonly used top-level keys are:
\par 
\par }\pard \fi144\nowidctlpar\widctlpar\adjustright {- \tab HKEY_CLASSES_ROOT
\par {\pntext\pard\plain\fs20\cgrid \hich\af0\dbch\af0\loch\f0 -\tab}}\pard \fi-360\li504\nowidctlpar\widctlpar\jclisttab\tx504{\*\pn \pnlvlblt\ilvl0\ls5\pnrnot0\pnindent504\pnhang{\pntxtb -}}\ls5\adjustright {    HKEY_CURRENT_USER
\par {\pntext\pard\plain\fs20\cgrid \hich\af0\dbch\af0\loch\f0 -\tab}}\pard \fi-360\li504\nowidctlpar\widctlpar\jclisttab\tx504{\*\pn \pnlvlblt\ilvl0\ls5\pnrnot0\pnindent504\pnhang{\pntxtb -}}\ls5\adjustright {    HKEY_LOCAL_MACHINE
\par }\pard \fi144\nowidctlpar\widctlpar\adjustright {-\tab HKEY_USERS
\par }\pard \nowidctlpar\widctlpar\adjustright {
\par These top-level keys are also known as hives.  Hives can either be stored in memory or stored as files on disk. Regardless of the actual storage mechanism, the user should generally only be concerned with calling high-level functions to add/change/delete registry keys. 
\par 
\par Visual Basic gives programmers a few limited commands to help with registry manipulation \endash  GetSetting, SaveSetting, DeleteSetting and GetAllSettings.  These commands only allow for manipulating keys inside one specific section of the Registry \endash  the VB and VBA Program Settings section of the HKEY_CURRENT_USER key.  This is fine for storing and retrieving application specific information.  However, the Visual Basic programmer has had to resort to the Win32 API to access keys outside of this registry section if any other information is required.
\par 
\par The ActiveX DLL introduced here provides a better alternative to using the Win32 API for general purpose Registry access.
\par }\pard\plain \s2\sb480\nowidctlpar\widctlpar\outlinelevel1\adjustright \b\fs26\cgrid {\page Using the RegObj ActiveX DLL versus the Win32 API
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \fs20\cgrid {
\par Using the Windows API has several drawbacks when compared with use of RegObj DLL presented here:
\par 
\par {\pntext\pard\plain\fs20\cgrid \hich\af0\dbch\af0\loch\f0 1.\tab}}\pard \fi-360\li360\nowidctlpar\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec\pnstart1\pnindent360\pnhang{\pntxta .}}\ls4\adjustright {It is easy to make a mistake in an API declaration that can produce a bug in the code or worst still, an access violation (General Protection fault).
\par }\pard \nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright {
\par {\pntext\pard\plain\fs20\cgrid \hich\af0\dbch\af0\loch\f0 2.\tab}}\pard \fi-360\li360\nowidctlpar\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec\pnstart1\pnindent360\pnhang{\pntxta .}}\ls4\adjustright {The existing Windows API does not provide an intuitive object model for accessing and changing keys.  Since keys belong to the registry, and subkeys and values belong to each key, the registry has a recursive tree structure that lends itself to an object model with collections of keys and values.
\par }\pard \nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright {
\par {\pntext\pard\plain\fs20\cgrid \hich\af0\dbch\af0\loch\f0 3.\tab}}\pard \fi-360\li360\nowidctlpar\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec\pnstart1\pnindent360\pnhang{\pntxta .}}\ls4\adjustright {Since the object model exposes keys and values in collections, convenient Visual Basic constructs such as For Each… can be used to iterate through them.  Also, since RegObj.dll is an automation server, Visual Basic developers get the benefit of features such as statement completion when typing code.
\par }\pard \nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright {
\par {\pntext\pard\plain\fs20\cgrid \hich\af0\dbch\af0\loch\f0 4.\tab}}\pard \fi-360\li360\nowidctlpar\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec\pnstart1\pnindent360\pnhang{\pntxta .}}\ls4\adjustright {RegObj.dll has been designed to allow interaction with both it and the Win32 API. It exposes the handle (HKey) of the registry keys. Code can be written in a format that allows for interdependence with existing code routines that do use handles to keys and the API.
\par }\pard \nowidctlpar\widctlpar\adjustright {
\par }{\b 
\par }\pard\plain \s3\nowidctlpar\widctlpar\outlinelevel2\adjustright \b\fs22\cgrid {\fs26 The Object Model of the RegObj Server
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \fs20\cgrid {
\par The RegObj.dll server consists of five objects.  At the very top of the hierarchy is the Registry object.
\par }{\b 
\par Registry Object}{
\par }{\b 
\par }{The Registry object represents the entire registry database of the local machine.  Its methods are listed in Table 1.  It is an \ldblquote appobject\rdblquote , so the methods inside of it can be invoked without explicitly creating an instance of it, as long as the DLL has been referenced from Visual Basic.  For example, the Registry object has a RegKeyFromHKey method, which returns a RegKey object.  To invoke the methods of this object in Visual Basic, one only needs to reference RegObj.dll (this can be done by choosing Project….References from the menu, and placing a check by \ldblquote Registration Manipulation Classes\rdblquote ), and then write code to invoke the methods as if they were intrinsic commands that are part of Visual Basic.
\par }{\b 
\par 
\par }\trowd \trgaph108\trbrdrt\brdrs\brdrw15\brdrcf9 \trbrdrl\brdrs\brdrw15\brdrcf9 \trbrdrb\brdrs\brdrw15\brdrcf9 \trbrdrr\brdrs\brdrw15\brdrcf9 \trbrdrv\brdrs\brdrw15\brdrcf9 \clvertalt\clbrdrt\brdrs\brdrw15\brdrcf9 \clbrdrl\brdrs\brdrw15\brdrcf9 \clbrdrr\brdrs\brdrw15\brdrcf9 \clcfpat9\clcbpat8\clshdng10000\cltxlrtb \cellx2880\clvertalt\clbrdrt\brdrs\brdrw15\brdrcf9 \clbrdrl\brdrs\brdrw15\brdrcf9 \clbrdrr\brdrs\brdrw15\brdrcf9 \clcfpat9\clcbpat8\clshdng10000\cltxlrtb \cellx9540\pard \nowidctlpar\widctlpar\intbl\adjustright {\cf8 Table 1 - Registry Object\cell }{\b\cf8 \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\b\cf8 \row }\trowd \trgaph108\trbrdrt\brdrs\brdrw15\brdrcf9 \trbrdrl\brdrs\brdrw15\brdrcf9 \trbrdrb\brdrs\brdrw15\brdrcf9 \trbrdrr\brdrs\brdrw15\brdrcf9 \trbrdrv\brdrs\brdrw15\brdrcf9 \clvertalt\clbrdrl\brdrs\brdrw15\brdrcf9 \clbrdrr\brdrs\brdrw15\brdrcf9 \clcfpat16\clcbpat8\clshdng10000\cltxlrtb \cellx2880\clvertalt\clbrdrl\brdrs\brdrw15\brdrcf9 \clbrdrr\brdrs\brdrw15\brdrcf9 \clcfpat1\clcbpat8\clshdng1000\cltxlrtb \cellx9540\pard\plain \s25\nowidctlpar\widctlpar\intbl\adjustright \b\fs20\cgrid {\cell }\pard\plain \s26\nowidctlpar\widctlpar\intbl\adjustright \fs20\cgrid {\cell }\pard\plain \nowidctlpar\widctlpar\intbl\adjustright \fs20\cgrid {\b \row }\pard\plain \s25\nowidctlpar\widctlpar\intbl\adjustright \b\fs20\cgrid {Methods\cell }\pard\plain \s26\nowidctlpar\widctlpar\intbl\adjustright \fs20\cgrid {\cell }\pard\plain \nowidctlpar\widctlpar\intbl\adjustright \fs20\cgrid {\b \row }\pard\plain \s25\nowidctlpar\widctlpar\intbl\adjustright \b\fs20\cgrid {\cell }\pard\plain \s26\nowidctlpar\widctlpar\intbl\adjustright \fs20\cgrid {\cell }\pard\plain \nowidctlpar\widctlpar\intbl\adjustright \fs20\cgrid {\b \row }\pard\plain \s25\nowidctlpar\widctlpar\intbl\adjustright \b\fs20\cgrid {\b0 AddRootRegKey\cell }\pard\plain \s26\nowidctlpar\widctlpar\intbl\adjustright \fs20\cgrid {Add a new HKey/String mapping for a root level registry key\cell }\pard\plain \nowidctlpar\widctlpar\intbl\adjustright \fs20\cgrid {\b \row }\pard\plain \s25\nowidctlpar\widctlpar\intbl\adjustright \b\fs20\cgrid {\b0 RegKeyFromHKey\cell }\pard\plain \nowidctlpar\widctlpar\intbl\adjustright \fs20\cgrid {Returns RegKey object from Win32 API handle\cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\b \row }\pard\plain \s25\nowidctlpar\widctlpar\intbl\adjustright \b\fs20\cgrid {\b0 RegKeyFromString\cell }\pard\plain \nowidctlpar\widctlpar\intbl\adjustright \fs20\cgrid {Returns RegKey object from string description of key\cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\b \row }\trowd \trgaph108\trbrdrt\brdrs\brdrw15\brdrcf9 \trbrdrl\brdrs\brdrw15\brdrcf9 \trbrdrb\brdrs\brdrw15\brdrcf9 \trbrdrr\brdrs\brdrw15\brdrcf9 \trbrdrv\brdrs\brdrw15\brdrcf9 \clvertalt\clbrdrl\brdrs\brdrw15\brdrcf9 \clbrdrb\brdrs\brdrw15\brdrcf9 \clbrdrr\brdrs\brdrw15\brdrcf9 \clcfpat16\clcbpat8\clshdng10000\cltxlrtb \cellx2880\clvertalt\clbrdrl\brdrs\brdrw15\brdrcf9 \clbrdrb\brdrs\brdrw15\brdrcf9 \clbrdrr\brdrs\brdrw15\brdrcf9 \clcfpat1\clcbpat8\clshdng1000\cltxlrtb \cellx9540\pard\plain \s25\nowidctlpar\widctlpar\intbl\adjustright \b\fs20\cgrid {\b0 RemoteRegistry\cell }\pard\plain \s26\nowidctlpar\widctlpar\intbl\adjustright \fs20\cgrid {Returns a Registry object from a computer name\cell }\pard\plain \nowidctlpar\widctlpar\intbl\adjustright \fs20\cgrid {\b \row }\pard \nowidctlpar\widctlpar\adjustright {\b 
\par }\pard\plain \s26\nowidctlpar\widctlpar\adjustright \fs20\cgrid {
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \fs20\cgrid {\b 
\par \page RegKey Object}{
\par }{\b 
\par }{The RegKey object represents a key in the registry.  Its properties and methods are listed in table 2.  Its properties include a name that is the string that represents the key, and FullName, which is the full path to the key itself.  It also has a Parent property that returns the parent RegKey.  Most importantly, each RegKey object has a Subkey\rquote s collection, which is a collection of more key objects underneath the key represented by the Regkey. A Values collection property contains all the values associated with the key. 
\par }{\b 
\par 
\par 
\par }\trowd \trgaph108\trbrdrt\brdrs\brdrw15\brdrcf9 \trbrdrl\brdrs\brdrw15\brdrcf9 \trbrdrb\brdrs\brdrw15\brdrcf9 \trbrdrr\brdrs\brdrw15\brdrcf9 \trbrdrv\brdrs\brdrw15\brdrcf9 \clvertalt\clbrdrt\brdrs\brdrw15\brdrcf9 \clbrdrl\brdrs\brdrw15\brdrcf9 \clbrdrr\brdrs\brdrw15\brdrcf9 \clcfpat9\clcbpat8\clshdng10000\cltxlrtb \cellx2880\clvertalt\clbrdrt\brdrs\brdrw15\brdrcf9 \clbrdrl\brdrs\brdrw15\brdrcf9 \clbrdrr\brdrs\brdrw15\brdrcf9 \clcfpat9\clcbpat8\clshdng10000\cltxlrtb \cellx9540\pard \nowidctlpar\widctlpar\intbl\adjustright {\cf8 Table 2 \endash  RegKey Object\cell }{\b\cf8 \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\b\cf8 \row }\trowd \trgaph108\trrh80\trbrdrt\brdrs\brdrw15\brdrcf9 \trbrdrl\brdrs\brdrw15\brdrcf9 \trbrdrb\brdrs\brdrw15\brdrcf9 \trbrdrr\brdrs\brdrw15\brdrcf9 \trbrdrv\brdrs\brdrw15\brdrcf9 \clvertalt\clbrdrl\brdrs\brdrw15\brdrcf9 \clbrdrr\brdrs\brdrw15\brdrcf9 \clcfpat16\clcbpat8\clshdng10000\cltxlrtb \cellx2880\clvertalt\clbrdrl\brdrs\brdrw15\brdrcf9 \clbrdrr\brdrs\brdrw15\brdrcf9 \clcfpat1\clcbpat8\clshdng1000\cltxlrtb \cellx9540\pard\plain \s25\nowidctlpar\widctlpar\intbl\adjustright \b\fs20\cgrid {\cell }\pard\plain \s26\nowidctlpar\widctlpar\intbl\adjustright \fs20\cgrid {\cell }\pard\plain \nowidctlpar\widctlpar\intbl\adjustright \fs20\cgrid {\b \row }\pard\plain \s25\nowidctlpar\widctlpar\intbl\adjustright \b\fs20\cgrid {Methods:\cell }\pard\plain \s26\nowidctlpar\widctlpar\intbl\adjustright \fs20\cgrid {\cell }\pard\plain \nowidctlpar\widctlpar\intbl\adjustright \fs20\cgrid {\b \row }\pard\plain \s25\nowidctlpar\widctlpar\intbl\adjustright \b\fs20\cgrid {\cell }\pard\plain \s26\nowidctlpar\widctlpar\intbl\adjustright \fs20\cgrid {\cell }\pard\plain \nowidctlpar\widctlpar\intbl\adjustright \fs20\cgrid {\b \row }\pard\plain \s25\nowidctlpar\widctlpar\intbl\adjustright \b\fs20\cgrid {\b0 ParseKeyName\cell }\pard\plain \s26\nowidctlpar\widctlpar\intbl\adjustright \fs20\cgrid {Parses a descriptive string of the location of a Registry key, and returns the RegKey object\cell }\pard\plain \nowidctlpar\widctlpar\intbl\adjustright \fs20\cgrid {\b \row }\pard\plain \s25\nowidctlpar\widctlpar\intbl\adjustright \b\fs20\cgrid {\cell }\pard\plain \s26\nowidctlpar\widctlpar\intbl\adjustright \fs20\cgrid {\cell }\pard\plain \nowidctlpar\widctlpar\intbl\adjustright \fs20\cgrid {\b \row }\pard\plain \s25\nowidctlpar\widctlpar\intbl\adjustright \b\fs20\cgrid {Properties:\cell }\pard\plain \s26\nowidctlpar\widctlpar\intbl\adjustright \fs20\cgrid {\cell }\pard\plain \nowidctlpar\widctlpar\intbl\adjustright \fs20\cgrid {\b \row }\pard\plain \s25\nowidctlpar\widctlpar\intbl\adjustright \b\fs20\cgrid {\cell }\pard\plain \s26\nowidctlpar\widctlpar\intbl\adjustright \fs20\cgrid {\cell }\pard\plain \nowidctlpar\widctlpar\intbl\adjustright \fs20\cgrid {\b \row }\pard\plain \s25\nowidctlpar\widctlpar\intbl\adjustright \b\fs20\cgrid {\b0 FullName\cell }\pard\plain \s26\nowidctlpar\widctlpar\intbl\adjustright \fs20\cgrid {Returns a descriptive string of the location of a Registry key\cell }\pard\plain \nowidctlpar\widctlpar\intbl\adjustright \fs20\cgrid {\b \row }\pard\plain \s25\nowidctlpar\widctlpar\intbl\adjustright \b\fs20\cgrid {\b0 HKey\cell }\pard\plain \s26\nowidctlpar\widctlpar\intbl\adjustright \fs20\cgrid {Returns Win32 API handle\cell }\pard\plain \nowidctlpar\widctlpar\intbl\adjustright \fs20\cgrid {\b \row }\pard\plain \s25\nowidctlpar\widctlpar\intbl\adjustright \b\fs20\cgrid {\b0 Name\cell }\pard\plain \s26\nowidctlpar\widctlpar\intbl\adjustright \fs20\cgrid {Name of the Registry key\cell }\pard\plain \nowidctlpar\widctlpar\intbl\adjustright \fs20\cgrid {\b \row }\pard\plain \s25\nowidctlpar\widctlpar\intbl\adjustright \b\fs20\cgrid {\b0 Parent\cell }\pard\plain \s26\nowidctlpar\widctlpar\intbl\adjustright \fs20\cgrid {Returns the parent Registry key object\cell }\pard\plain \nowidctlpar\widctlpar\intbl\adjustright \fs20\cgrid {\b \row }\pard\plain \s25\nowidctlpar\widctlpar\intbl\adjustright \b\fs20\cgrid {\b0 SubKeys\cell }\pard\plain \s26\nowidctlpar\widctlpar\intbl\adjustright \fs20\cgrid {Collection of subkey objects\cell }\pard\plain \nowidctlpar\widctlpar\intbl\adjustright \fs20\cgrid {\b \row }\pard\plain \s25\nowidctlpar\widctlpar\intbl\adjustright \b\fs20\cgrid {\b0 Value\cell }\pard\plain \s26\nowidctlpar\widctlpar\intbl\adjustright \fs20\cgrid {Default value of the registry key\cell }\pard\plain \nowidctlpar\widctlpar\intbl\adjustright \fs20\cgrid {\b \row }\trowd \trgaph108\trrh80\trbrdrt\brdrs\brdrw15\brdrcf9 \trbrdrl\brdrs\brdrw15\brdrcf9 \trbrdrb\brdrs\brdrw15\brdrcf9 \trbrdrr\brdrs\brdrw15\brdrcf9 \trbrdrv\brdrs\brdrw15\brdrcf9 \clvertalt\clbrdrl\brdrs\brdrw15\brdrcf9 \clbrdrb\brdrs\brdrw15\brdrcf9 \clbrdrr\brdrs\brdrw15\brdrcf9 \clcfpat16\clcbpat8\clshdng10000\cltxlrtb \cellx2880\clvertalt\clbrdrl\brdrs\brdrw15\brdrcf9 \clbrdrb\brdrs\brdrw15\brdrcf9 \clbrdrr\brdrs\brdrw15\brdrcf9 \clcfpat1\clcbpat8\clshdng1000\cltxlrtb \cellx9540\pard\plain \s25\nowidctlpar\widctlpar\intbl\adjustright \b\fs20\cgrid {\b0 Values\cell }\pard\plain \s26\nowidctlpar\widctlpar\intbl\adjustright \fs20\cgrid {Collection of values for the registry key\cell }\pard\plain \nowidctlpar\widctlpar\intbl\adjustright \fs20\cgrid {\b \row }\pard \nowidctlpar\widctlpar\adjustright {\b 
\par 
\par RegValue Object}{
\par }{\b 
\par }{The RegValue object has properties to hold a value associated with a key, any name associated with that value, and the type of that value.  Its properties and methods are listed in Table 3.  The type of a Value can be a String, Binary or a long (DWORD).  The ChangeType method of the RegValue object also allows the user to change the length of the string allowed inside the value.
\par }{\b 
\par 
\par }\trowd \trgaph108\trbrdrt\brdrs\brdrw15\brdrcf9 \trbrdrl\brdrs\brdrw15\brdrcf9 \trbrdrb\brdrs\brdrw15\brdrcf9 \trbrdrr\brdrs\brdrw15\brdrcf9 \trbrdrv\brdrs\brdrw15\brdrcf9 \clvertalt\clbrdrt\brdrs\brdrw15\brdrcf9 \clbrdrl\brdrs\brdrw15\brdrcf9 \clbrdrr\brdrs\brdrw15\brdrcf9 \clcfpat9\clcbpat8\clshdng10000\cltxlrtb \cellx2880\clvertalt\clbrdrt\brdrs\brdrw15\brdrcf9 \clbrdrl\brdrs\brdrw15\brdrcf9 \clbrdrr\brdrs\brdrw15\brdrcf9 \clcfpat9\clcbpat8\clshdng10000\cltxlrtb \cellx9540\pard \nowidctlpar\widctlpar\intbl\adjustright {\cf8 Table 3 \endash  RegValue Object\cell }{\b\cf8 \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\b\cf8 \row }\trowd \trgaph108\trrh80\trbrdrt\brdrs\brdrw15\brdrcf9 \trbrdrl\brdrs\brdrw15\brdrcf9 \trbrdrb\brdrs\brdrw15\brdrcf9 \trbrdrr\brdrs\brdrw15\brdrcf9 \trbrdrv\brdrs\brdrw15\brdrcf9 \clvertalt\clbrdrl\brdrs\brdrw15\brdrcf9 \clbrdrr\brdrs\brdrw15\brdrcf9 \clcfpat16\clcbpat8\clshdng10000\cltxlrtb \cellx2880\clvertalt\clbrdrl\brdrs\brdrw15\brdrcf9 \clbrdrr\brdrs\brdrw15\brdrcf9 \clcfpat1\clcbpat8\clshdng1000\cltxlrtb \cellx9540\pard\plain \s25\nowidctlpar\widctlpar\intbl\adjustright \b\fs20\cgrid {\cell }\pard\plain \s26\nowidctlpar\widctlpar\intbl\adjustright \fs20\cgrid {\cell }\pard\plain \nowidctlpar\widctlpar\intbl\adjustright \fs20\cgrid {\b \row }\pard\plain \s25\nowidctlpar\widctlpar\intbl\adjustright \b\fs20\cgrid {Methods:\cell }\pard\plain \s26\nowidctlpar\widctlpar\intbl\adjustright \fs20\cgrid {\cell }\pard\plain \nowidctlpar\widctlpar\intbl\adjustright \fs20\cgrid {\b \row }\pard\plain \s25\nowidctlpar\widctlpar\intbl\adjustright \b\fs20\cgrid {\cell }\pard\plain \s26\nowidctlpar\widctlpar\intbl\adjustright \fs20\cgrid {\cell }\pard\plain \nowidctlpar\widctlpar\intbl\adjustright \fs20\cgrid {\b \row }\pard\plain \s25\nowidctlpar\widctlpar\intbl\adjustright \b\fs20\cgrid {\b0 ChangeType\cell }\pard\plain \s26\nowidctlpar\widctlpar\intbl\adjustright \fs20\cgrid {Changes the type of the value\cell }\pard\plain \nowidctlpar\widctlpar\intbl\adjustright \fs20\cgrid {\b \row }\pard\plain \s25\nowidctlpar\widctlpar\intbl\adjustright \b\fs20\cgrid {\cell }\pard\plain \s26\nowidctlpar\widctlpar\intbl\adjustright \fs20\cgrid {\cell }\pard\plain \nowidctlpar\widctlpar\intbl\adjustright \fs20\cgrid {\b \row }\pard\plain \s25\nowidctlpar\widctlpar\intbl\adjustright \b\fs20\cgrid {Properties:\cell }\pard\plain \s26\nowidctlpar\widctlpar\intbl\adjustright \fs20\cgrid {\cell }\pard\plain \nowidctlpar\widctlpar\intbl\adjustright \fs20\cgrid {\b \row }\pard\plain \s25\nowidctlpar\widctlpar\intbl\adjustright \b\fs20\cgrid {\cell }\pard\plain \s26\nowidctlpar\widctlpar\intbl\adjustright \fs20\cgrid {\cell }\pard\plain \nowidctlpar\widctlpar\intbl\adjustright \fs20\cgrid {\b \row }\pard\plain \s25\nowidctlpar\widctlpar\intbl\adjustright \b\fs20\cgrid {\b0 Name\cell }\pard\plain \s26\nowidctlpar\widctlpar\intbl\adjustright \fs20\cgrid {Name of the value\cell }\pard\plain \nowidctlpar\widctlpar\intbl\adjustright \fs20\cgrid {\b \row }\pard\plain \s25\nowidctlpar\widctlpar\intbl\adjustright \b\fs20\cgrid {\b0 Type\cell }\pard\plain \s26\nowidctlpar\widctlpar\intbl\adjustright \fs20\cgrid {Returns the type of the value\cell }\pard\plain \nowidctlpar\widctlpar\intbl\adjustright \fs20\cgrid {\b \row }\trowd \trgaph108\trrh80\trbrdrt\brdrs\brdrw15\brdrcf9 \trbrdrl\brdrs\brdrw15\brdrcf9 \trbrdrb\brdrs\brdrw15\brdrcf9 \trbrdrr\brdrs\brdrw15\brdrcf9 \trbrdrv\brdrs\brdrw15\brdrcf9 \clvertalt\clbrdrl\brdrs\brdrw15\brdrcf9 \clbrdrb\brdrs\brdrw15\brdrcf9 \clbrdrr\brdrs\brdrw15\brdrcf9 \clcfpat16\clcbpat8\clshdng10000\cltxlrtb \cellx2880\clvertalt\clbrdrl\brdrs\brdrw15\brdrcf9 \clbrdrb\brdrs\brdrw15\brdrcf9 \clbrdrr\brdrs\brdrw15\brdrcf9 \clcfpat1\clcbpat8\clshdng1000\cltxlrtb \cellx9540\pard\plain \s25\nowidctlpar\widctlpar\intbl\adjustright \b\fs20\cgrid {\b0 Value\cell }\pard\plain \s26\nowidctlpar\widctlpar\intbl\adjustright \fs20\cgrid {Returns the value held\cell }\pard\plain \nowidctlpar\widctlpar\intbl\adjustright \fs20\cgrid {\b \row }\pard \nowidctlpar\widctlpar\adjustright {\b 
\par 
\par 
\par \page RegKeys and RegValues Collections
\par }\pard\plain \s2\sb480\nowidctlpar\widctlpar\outlinelevel1\adjustright \b\fs26\cgrid {\b0\fs20 Each Regkey object has SubKeys and Values properties that are collections of Regkey and RegValue objects for that key.   Table 4 shows the properties and methods of these collections.  The methods and properties of the collections are consistent with those found in regular Visual Basic collections \endash  i.e. Add, Count, Remove. The collections have an additional method, Reset, which syncs the collection with the registry.  The RegKey property returns the parent key to the RegKeys and RegValues collections.
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \fs20\cgrid {
\par }{\b 
\par }\trowd \trgaph108\trbrdrt\brdrs\brdrw15\brdrcf9 \trbrdrl\brdrs\brdrw15\brdrcf9 \trbrdrb\brdrs\brdrw15\brdrcf9 \trbrdrr\brdrs\brdrw15\brdrcf9 \trbrdrv\brdrs\brdrw15\brdrcf9 \clvertalt\clbrdrt\brdrs\brdrw15\brdrcf9 \clbrdrl\brdrs\brdrw15\brdrcf9 \clbrdrr\brdrs\brdrw15\brdrcf9 \clcfpat9\clcbpat8\clshdng10000\cltxlrtb \cellx2880\clvertalt\clbrdrt\brdrs\brdrw15\brdrcf9 \clbrdrl\brdrs\brdrw15\brdrcf9 \clbrdrr\brdrs\brdrw15\brdrcf9 \clcfpat9\clcbpat8\clshdng10000\cltxlrtb \cellx9540\pard \nowidctlpar\widctlpar\intbl\adjustright {\cf8 Table 4 - RegKeys and RegValues  Collections\cell }{\b\cf8 \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\b\cf8 \row }\trowd \trgaph108\trrh80\trbrdrt\brdrs\brdrw15\brdrcf9 \trbrdrl\brdrs\brdrw15\brdrcf9 \trbrdrb\brdrs\brdrw15\brdrcf9 \trbrdrr\brdrs\brdrw15\brdrcf9 \trbrdrv\brdrs\brdrw15\brdrcf9 \clvertalt\clbrdrl\brdrs\brdrw15\brdrcf9 \clbrdrr\brdrs\brdrw15\brdrcf9 \clcfpat16\clcbpat8\clshdng10000\cltxlrtb \cellx2880\clvertalt\clbrdrl\brdrs\brdrw15\brdrcf9 \clbrdrr\brdrs\brdrw15\brdrcf9 \clcfpat1\clcbpat8\clshdng1000\cltxlrtb \cellx9540\pard\plain \s25\nowidctlpar\widctlpar\intbl\adjustright \b\fs20\cgrid {\cell }\pard\plain \s26\nowidctlpar\widctlpar\intbl\adjustright \fs20\cgrid {\cell }\pard\plain \nowidctlpar\widctlpar\intbl\adjustright \fs20\cgrid {\b \row }\pard\plain \s25\nowidctlpar\widctlpar\intbl\adjustright \b\fs20\cgrid {Methods:\cell }\pard\plain \s26\nowidctlpar\widctlpar\intbl\adjustright \fs20\cgrid {\cell }\pard\plain \nowidctlpar\widctlpar\intbl\adjustright \fs20\cgrid {\b \row }\pard\plain \s25\nowidctlpar\widctlpar\intbl\adjustright \b\fs20\cgrid {\cell }\pard\plain \s26\nowidctlpar\widctlpar\intbl\adjustright \fs20\cgrid {\cell }\pard\plain \nowidctlpar\widctlpar\intbl\adjustright \fs20\cgrid {\b \row }\pard\plain \s25\nowidctlpar\widctlpar\intbl\adjustright \b\fs20\cgrid {\b0 Add\cell }\pard\plain \s26\nowidctlpar\widctlpar\intbl\adjustright \fs20\cgrid {Adds an item to the collection\cell }\pard\plain \nowidctlpar\widctlpar\intbl\adjustright \fs20\cgrid {\b \row }\pard\plain \s25\nowidctlpar\widctlpar\intbl\adjustright \b\fs20\cgrid {\b0 Remove\cell }\pard\plain \s26\nowidctlpar\widctlpar\intbl\adjustright \fs20\cgrid {Removes an item from the collection \endash  and therefore from the Registry\cell }\pard\plain \nowidctlpar\widctlpar\intbl\adjustright \fs20\cgrid {\b \row }\pard\plain \s25\nowidctlpar\widctlpar\intbl\adjustright \b\fs20\cgrid {\b0 Reset\cell }\pard\plain \s26\nowidctlpar\widctlpar\intbl\adjustright \fs20\cgrid {Synchronizes the list with the Registry\cell }\pard\plain \nowidctlpar\widctlpar\intbl\adjustright \fs20\cgrid {\b \row }\pard\plain \s25\nowidctlpar\widctlpar\intbl\adjustright \b\fs20\cgrid {\b0 \cell }\pard\plain \s26\nowidctlpar\widctlpar\intbl\adjustright \fs20\cgrid {\cell }\pard\plain \nowidctlpar\widctlpar\intbl\adjustright \fs20\cgrid {\b \row }\pard\plain \s25\nowidctlpar\widctlpar\intbl\adjustright \b\fs20\cgrid {Properties:\cell }\pard\plain \s26\nowidctlpar\widctlpar\intbl\adjustright \fs20\cgrid {\cell }\pard\plain \nowidctlpar\widctlpar\intbl\adjustright \fs20\cgrid {\b \row }\pard\plain \s25\nowidctlpar\widctlpar\intbl\adjustright \b\fs20\cgrid {\b0 \cell }\pard\plain \s26\nowidctlpar\widctlpar\intbl\adjustright \fs20\cgrid {\cell }\pard\plain \nowidctlpar\widctlpar\intbl\adjustright \fs20\cgrid {\b \row }\pard\plain \s25\nowidctlpar\widctlpar\intbl\adjustright \b\fs20\cgrid {\b0 Count\cell }\pard\plain \s26\nowidctlpar\widctlpar\intbl\adjustright \fs20\cgrid {Number of items in the collection\cell }\pard\plain \nowidctlpar\widctlpar\intbl\adjustright \fs20\cgrid {\b \row }\pard\plain \s25\nowidctlpar\widctlpar\intbl\adjustright \b\fs20\cgrid {\b0 Type\cell }\pard\plain \s26\nowidctlpar\widctlpar\intbl\adjustright \fs20\cgrid {Returns the type of the value\cell }\pard\plain \nowidctlpar\widctlpar\intbl\adjustright \fs20\cgrid {\b \row }\trowd \trgaph108\trrh80\trbrdrt\brdrs\brdrw15\brdrcf9 \trbrdrl\brdrs\brdrw15\brdrcf9 \trbrdrb\brdrs\brdrw15\brdrcf9 \trbrdrr\brdrs\brdrw15\brdrcf9 \trbrdrv\brdrs\brdrw15\brdrcf9 \clvertalt\clbrdrl\brdrs\brdrw15\brdrcf9 \clbrdrb\brdrs\brdrw15\brdrcf9 \clbrdrr\brdrs\brdrw15\brdrcf9 \clcfpat16\clcbpat8\clshdng10000\cltxlrtb \cellx2880\clvertalt\clbrdrl\brdrs\brdrw15\brdrcf9 \clbrdrb\brdrs\brdrw15\brdrcf9 \clbrdrr\brdrs\brdrw15\brdrcf9 \clcfpat1\clcbpat8\clshdng1000\cltxlrtb \cellx9540\pard\plain \s25\nowidctlpar\widctlpar\intbl\adjustright \b\fs20\cgrid {\b0 Value\cell }\pard\plain \s26\nowidctlpar\widctlpar\intbl\adjustright \fs20\cgrid {Returns the value held\cell }\pard\plain \nowidctlpar\widctlpar\intbl\adjustright \fs20\cgrid {\b \row }\pard\plain \s2\sb480\nowidctlpar\widctlpar\outlinelevel1\adjustright \b\fs26\cgrid {Using the RegObj ActiveX DLL from Visual Basic
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \fs20\cgrid {
\par }\pard\plain \s7\keepn\nowidctlpar\widctlpar\outlinelevel6\adjustright \b\i\fs20\cgrid {Using the Registry Object
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \fs20\cgrid {
\par }\pard\plain \s26\nowidctlpar\widctlpar\adjustright \fs20\cgrid {RegKeyFromHKey can be used to obtain a RegKey object from a HKey \endash  a HKey is a long value that is a handle to that key.  The five most common HKeys are included as predefined constants in RegObj.dll, and these represent five top-level keys of the Registry.  They are listed under PredefinedHKeys as:
\par 
\par HKEY_CLASSES_ROOT
\par HKEY_CURRENT_USER
\par HKEY_LOCAL_MACHINE
\par HKEY_PERFORMANCE_DATA
\par HKEY_USERS
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \fs20\cgrid {\b 
\par }\pard\plain \s26\nowidctlpar\widctlpar\adjustright \fs20\cgrid {Thus, to open the HKEY_CLASSES_ROOT key in Visual Basic, code similar to the following can be used:
\par 
\par }{\fs16 \lquote Set the key
\par Dim objRegKey As RegKey
\par Set objRegKey  = RegKeyFromHKey(HKEY_CLASSES_ROOT)}{
\par 
\par RegkeyFromString allows the developer to enter a descriptive string for the key to be obtained. The string parameter would be in a similar form to a file path.  For example, to obtain the CLSID subkey of HKEY_CLASSES_ROOT:
\par 
\par }{\fs16 Dim objRegKey As Regkey
\par Set objRegKey = RegKeyFromString(\ldblquote \\HKEY_CLASSES_ROOT\\CLSID\rdblquote )
\par }{
\par The RemoteRegistry function of the Registry object can be used to obtain a Registry object from another computer on the network.  It will only work if the user has appropriate permissions to view the remote registry.  Once the Registry object is obtained, it can be used to retrieve/manipulate details of the registry of another user.  For example, to obtain the HKEY_CLASSES_ROOT top-level key from a machine named \ldblquote Lab1\rdblquote , and then print out the name of all of its immediate subkeys, the following code can be used: 
\par 
\par }{\fs16 Dim objRemoteRegistry As Registry
\par 
\par \lquote See if we can obtain the Registry of machine Lab1:
\par Set objRemoteRegistry = RemoteRegistry(\ldblquote Lab1\rdblquote )
\par 
\par \lquote Print out all the subkeys of the HKEY_CLASSES_ROOT on the Lab1 machine 
\par Dim objSubKey As RegKey
\par Dim objRegRootKey As regKey
\par 
\par Set objRegRootKey = objRemoteRegistry.RegKeyFromHKey(HKEY_CLASSES_ROOT)
\par 
\par For Each objSubKey In objRegRootKey.SubKeys
\par \tab Debug.Print objSubKey.Name
\par Next objSubKey
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \fs20\cgrid {
\par The ParseKeyName function can be used to jump straight to a particular key via a descriptive path string to the key.  An example of a descriptive string would be \ldblquote AudioCD\\DefaultIcon\rdblquote .  If this string is passed to ParseKeyName, and if the key is present, then the RegKey object of that key is passed back.  The descriptive string  represents the path relative to the path of the key object from which the method is invoked.  For example, if the key object represents  HKEY_CLASSES_ROOT, then passing \ldblquote AudioCD\rdblquote  would cause RegObj.dll to look for the key:
\par 
\par HKEY_CLASSES_ROOT\\AudioCD
\par 
\par If the key is not present, then ParseKeyName returns a run-time error.
\par 
\par 
\par }\pard\plain \s7\keepn\nowidctlpar\widctlpar\outlinelevel6\adjustright \b\i\fs20\cgrid {Modifying Key Values
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \fs20\cgrid {
\par The Value properties of the RegKey and RegValue objects are read-write, so they can be assigned as well as read.  Modifying a registry key value is as simple as assigning a property of an object, as shown in the code below (note the code below will not work if the A1.Class1 key is not in HKEY_CLASSES_ROOT):
\par 
\par }{\fs16 \lquote Choose a Registry Key
\par Dim objRegKey As RegKey
\par 
\par \lquote Get the RegKey object
\par Set objRegKey = RegKeyFromString(\ldblquote \\HKEY_CLASSES_ROOT\\A1.Class1\rdblquote )
\par 
\par \lquote Set the Value of this RegKey
\par objRegKey.Value = \ldblquote A1Value\rdblquote }{
\par 
\par To modify the name of a registry key, the user can delete the original key and then recreate it with the desired name - this makes sense because the name of a registry key essentially defines that key.  
\par 
\par 
\par }\pard\plain \s7\keepn\nowidctlpar\widctlpar\outlinelevel6\adjustright \b\i\fs20\cgrid {Deleting Registry Keys and Values
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \fs20\cgrid {\b\i 
\par }{To delete a key, the Remove method of the SubKeys collection can be used.  The first operation is to find the parent key to the one to be removed. One way to accomplish this is to create a Regkey object for the key to be deleted, and then to create another object reference to the parent of that key.  At that point, the object reference to the key to be deleted can be passed to the Remove method of the SubKeys collection of the parent key object.  The code below illustrates deleting the HKEY_CLASSES_ROOT\\A1.Class1 key (note the code below will not work if the A1.Class1 key is not in HKEY_CLASSES_ROOT):}{\ul 
\par }{\b\i 
\par }{\fs16 Dim objRegRootKey As RegKey
\par Dim objRegKey As RegKey
\par 
\par 'Get the key we want to remove
\par Set objRegKey = RegKeyFromString("\\HKEY_CLASSES_ROOT\\A1.Class1")
\par 
\par 'Obtain the parent of this
\par Set objRegRootKey = objRegKey.Parent
\par 
\par 'Remove the key from the Subkeys collection
\par objRegRootKey.SubKeys.Remove (objRegKey)}{
\par }\pard\plain \s26\nowidctlpar\widctlpar\adjustright \fs20\cgrid {
\par A value can be deleted in a similar way, by providing the reference to the Value object to the Remove method of the Values collection. The Values collection is a property of the key that owns that value.
\par 
\par It should be noted that the Remove method is recursive \endash  it will also delete any subkeys of that key.  This is much easier than having to search and destroy subkeys one at a time. 
\par 
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \fs20\cgrid {
\par }\pard\plain \s7\keepn\nowidctlpar\widctlpar\outlinelevel6\adjustright \b\i\fs20\cgrid { Adding New Keys and New Values
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \fs20\cgrid {
\par Adding keys and values is also accomplished by use of the RegKeys and RegValues collection. To add a new key to the HKEY_CLASSES_ROOT, a Visual Basic developer calls the Add method of the Subkeys collection, passing the name of the new key to be added:
\par 
\par }{\fs16 Dim objRootKey As RegKey
\par 
\par 'Collect the parent of the new key - in this case HKEY_CLASSES_ROOT
\par Set objRootKey = RegKeyFromHKey(HKEY_CLASSES_ROOT)
\par 
\par 'Simply add a new SubKey
\par objRootKey.SubKeys.Add "NewKey1"}{ 
\par 
\par To add a new value, the Values collection can be used in a similar way except that a name for the Value, the value itself, and the type of value  have to be supplied as parameters.   Note the helpstring for the Add method of the Values collection suggests that the first parameter is a key name.  In fact it is the name for the value itself. 
\par 
\par If the name of the value supplied is an empty string, the value is added as the default parameter.  To help with choosing the type of value, there is a RegValueType enum defined in regobj.dll that contains the types of value allowed.  The code below adds values to the NewKey1 key.  It adds a default value with a value of \ldblquote Default1\rdblquote , and a named value to the key called \ldblquote Name1\rdblquote  and with a value of \ldblquote value\rdblquote .
\par }{\fs16 
\par Dim objKey As RegKey
\par 
\par 'Retrieve the Key
\par Set objKey = RegKeyFromString("\\HKEY_CLASSES_ROOT\\NewKey1")
\par 
\par 'Add new named values to this key
\par objKey.Values.Add "", "Default1", RegValueType.rvString\tab \lquote Default value
\par objKey.Values.Add "Name1", "value", RegValueType.rvString\tab \lquote Named value}{
\par 
\par 
\par }\pard\plain \s7\keepn\nowidctlpar\widctlpar\outlinelevel6\adjustright \b\i\fs20\cgrid {\page Searching The Registry
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \fs20\cgrid {\b\i 
\par }{Searching for a single key based on only the name or value of that key can be achieved by looping through the SubKeys collection of registry keys. If the key being searched for is only one level below a top-level key, then the algorithm to find it could be similar to the function presented below:
\par 
\par }{\fs16 'Function which finds a registry key that contains a particular string
\par Private Function FindKey(ByVal HKey As Long, ByVal strName As String) As String
\par     
\par     Dim objRegKey As RegKey
\par     Dim objRootKey As RegKey
\par     
\par     'Choose the Registry Hive
\par     Set objRootKey = RegKeyFromHKey(HKey)
\par     
\par     'Loop through its subkeys, see if it contains the string given
\par     For Each objRegKey In objRootKey.SubKeys
\par         If (InStr(1, objRegKey.Name, strName, vbTextCompare)) Then
\par             FindKey = objRegKey.FullName
\par             Exit Function
\par         End If
\par     Next objRegKey
\par     
\par     'Return an empty string if we did not find it
\par     FindKey = ""
\par     
\par End Function
\par }{
\par This function can be called like so:
\par 
\par }{\fs16 MsgBox FindKey(HKEY_CLASSES_ROOT, \ldblquote A1\rdblquote )
\par }{
\par In this case, there would be a MsgBox containing the full path of the first registry key it encountered that has \ldblquote A1\rdblquote  in the name, or of an empty string if no immediate subkey to HKEY_CLASSES_ROOT contains that string.
\par 
\par Often applications must search for more than just a name.  It may be useful to search for a group of keys that have certain characteristics.  For example, consider a dialog box such as the Components dialog found in Visual Basic 5.0 (found under Project…Components in the menu).  The dialog is a list of ActiveX OCX controls and ActiveX Designers found on the system.  The characteristics of the keys that Visual Basic is searching for might be approximated as the list of components which have registered a \ldblquote Control\rdblquote , \ldblquote TypeLib\rdblquote  and \ldblquote InProcServer32\rdblquote  subkey  under a HKEY_CLASSES_ROOT\\CLSID\\<GUID> key, where <GUID> is a unique number which identifies the ID of a CoClass in ActiveX servers.  The function below uses RegObj.dll to generate a list of 32-Bit ActiveX servers registered on a system. In practice this will not be the same list as shown by the References and Components dialogs in Visual Basic, since there are other ways to obtain a list of registered servers on a system (e.g. looping through the keys in the HKEY_CLASSES_ROOT\\TypeLib section).  Also the routine below suffers from collecting duplicate entries if the registry has not been \ldblquote cleaned\rdblquote  regularly.   Registry operations such as the search for ActiveX components can begin to become more of an art than a science, because the keys that applications register are rarely completely mandated or defined.
\par 
\par }{\fs16 '*********************************************************************************************
\par 'This function is a very crude way to find an array of DLL, EXE and Control Components Registered.
\par 'This MAY NOT give the same results as other applications - the techniques to
\par 'gather  these lists can vary!!! 
\par 'The algorithm used here opens the HKEY_CLASSES_ROOT\\CLSID section, loops through the subkeys of each CLSID.
\par \lquote and checks to see if there is a combination of LocalServer, InProcServer, TypeLib and/or Control subkey.
\par \lquote The routine illustrates use of objects in RegObj.dll
\par '********************************************************************************************
\par Private Sub ObtainRegisteredComponents(ControlServers() As String, DLLServers() As String, EXEServers() As String)
\par 
\par Dim ulNumberControls As Long
\par Dim ulNumberEXEs As Long
\par Dim ulNumberDLLs As Long
\par 
\par Dim strLocation As String
\par Dim strProgID As String
\par Dim strTLBGUID As String
\par Dim strVersion As String
\par Dim strDescription As String
\par 
\par Dim objRegKey As RegObj.RegKey
\par Dim objRegCLSID As RegObj.RegKey
\par Dim objRegSubKey As RegObj.RegKey
\par Dim strArrayComponents() As String
\par 
\par Dim blnIsEXEServer As Boolean
\par Dim blnIsInProcServer As Boolean
\par Dim blnIsControlServer As Boolean
\par 
\par     'Trim the arrays to an initial guess length
\par     '/////////////////////////////////////////////////////////////////////////
\par     ReDim ControlServers(1 To 10000)
\par     ReDim DLLServers(1 To 10000)
\par     ReDim EXEServers(1 To 10000)
\par     '////////////////////////////////////////////////////////////////////////
\par 
\par 
\par     'Open the CLSID section of the Registry
\par     '///////////////////////////////////////////////////////////////////////
\par     Set objRegKey = RegKeyFromHKey(HKEY_CLASSES_ROOT)
\par     Set objRegKey = objRegKey.ParseKeyName("CLSID")
\par     '//////////////////////////////////////////////////////////////////////
\par     
\par On Error Resume Next
\par     
\par     'Loop through every CLSID
\par     '//////////////////////////////////////////////////////////////////
\par     For Each objRegCLSID In objRegKey.SubKeys
\par     
\par     
\par         'Must have a TypeLib, ProgID and LocalServer or InProcServer Key
\par         'to be considered a server - at least in this implementation
\par         If (objRegCLSID.SubKeys.Count < 3) Then
\par             GoTo NextCLSID
\par         End If
\par     
\par     
\par         'Initialize the Test
\par         '*******************************************************************
\par         blnIsEXEServer = False
\par         blnIsControlServer = False
\par         blnIsInProcServer = False
\par         strDescription = ""
\par         strTLBGUID = ""
\par         strDescription = objRegCLSID.Value
\par         strTLBGUID = objRegCLSID.Name
\par         strProgID = ""
\par         strVersion = ""
\par         '*******************************************************************
\par     
\par         'Find out if it contains the LocalServer or InProc SubKey (16 or 32)
\par         For Each objRegSubKey In objRegCLSID.SubKeys
\par         
\par             'If Control is there, we have found a Control
\par             If (UCase(objRegSubKey.Name) = UCase("Control")) Then
\par                 blnIsControlServer = True
\par             End If
\par         
\par             'A Control or a DLL Has Been Found if InProcServer found
\par             If (InStr(1, objRegSubKey.Name, "InProcServer", vbTextCompare)) Then
\par                 blnIsInProcServer = True
\par                 strLocation = objRegSubKey.Value
\par             End If
\par         
\par             'An ActiveX EXE Has Been Found
\par             If (InStr(1, objRegSubKey.Name, "LocalServer", vbTextCompare)) Then
\par                 blnIsEXEServer = True
\par                 strLocation = objRegSubKey.Value
\par             End If
\par         
\par             'Get the Version
\par             If (UCase(objRegSubKey.Name) = UCase("Version")) Then
\par                 strVersion = objRegSubKey.Value
\par             End If
\par         
\par             'Get the ProgID
\par             If (UCase(objRegSubKey.Name) = UCase("ProgID")) Then
\par                 strProgID = objRegSubKey.Value
\par             End If
\par         
\par         Next objRegSubKey
\par     
\par         'Have we found a Server??
\par         '**********************************************************************
\par         If (blnIsControlServer Or blnIsInProcServer Or blnIsEXEServer) Then
\par         
\par             'Controls
\par             If (blnIsControlServer) And (blnIsInProcServer) Then
\par                 If ((strProgID <> "")) Then
\par                     ulNumberControls = ulNumberControls + 1
\par                     ControlServers(ulNumberControls) = strLocation
\par                 End If
\par             End If
\par         
\par             'DLLs
\par             If ((blnIsControlServer = False) And (blnIsInProcServer)) Then
\par                 If ((strProgID <> "")) Then
\par                     ulNumberDLLs = ulNumberDLLs + 1
\par                     DLLServers(ulNumberDLLs) = strLocation
\par                 End If
\par             End If
\par             
\par             'EXEs
\par             If (blnIsEXEServer) Then
\par                 If ((strProgID <> "")) Then
\par                     ulNumberEXEs = ulNumberEXEs + 1
\par                     EXEServers(ulNumberEXEs) = strLocation
\par                 End If
\par             End If
\par             
\par         End If
\par         '**********************************************************************
\par     
\par 
\par NextCLSID:
\par         Next objRegCLSID
\par     '//////////////////////////////////////////////////////////////////
\par 
\par 
\par 'Trim the arrays to their final length
\par ReDim Preserve ControlServers(1 To ulNumberControls)
\par ReDim Preserve DLLServers(1 To ulNumberDLLs)
\par ReDim Preserve EXEServers(1 To ulNumberEXEs)
\par 
\par 'Release the RegObj objects used
\par Set objRegSubKey = Nothing
\par Set objRegCLSID = Nothing
\par Set objRegKey = Nothing
\par 
\par 
\par End Sub
\par 
\par '*********************************************************************************************
\par \lquote This routine demonstrates a simple way to use ObtainRegisteredComponents to print a list of all components to the 
\par \lquote immediate window
\par '********************************************************************************************
\par 
\par Private Sub DisplayRegisteredServers()
\par Dim sControlServers() As String 'Array to contain returned ActiveX Controls
\par Dim sDLLServers() As String 'Array to contain returned ActiveX DLLs
\par Dim sEXEServers() As String 'Array to contain returned ActiveX EXEs
\par Dim vTemp As Variant 'Temp variable to move through array with For Each
\par 
\par     ObtainRegisteredComponents sControlServers, sDLLServers, sEXEServers
\par     
\par     For Each vTemp In sControlServers()
\par         Debug.Print vTemp
\par     Next vTemp
\par     
\par     For Each vTemp In sDLLServers()
\par         Debug.Print vTemp
\par     Next vTemp
\par     
\par     For Each vTemp In sDLLServers()
\par         Debug.Print vTemp
\par     Next vTemp
\par 
\par End Sub
\par }{
\par 
\par }\pard\plain \s2\nowidctlpar\widctlpar\outlinelevel1\adjustright \b\fs26\cgrid {Conclusions
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \fs20\cgrid {
\par An ActiveX DLL  that allows developers to manipulate the entire Windows registry from Visual Basic has been developed.  It provides an intuitive object model that makes registry access much easier than from the Windows API.  The article contains code snippets to add and remove registry keys and values, and introduces ideas for searching the registry for keys, values or other items.
\par 
\par 
\par }}