<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head>
<Link rel="Stylesheet" href="../APIRef.css">
	<title>VertexCount</title>
</head>
<body>

<!--Header table -->
<table class="head" >
	<tr>
		<td><h2>VertexCount</h2></td>
		<td class="space"></td>
		<td class="propertypic"><!--image is inserted here--></td>
		<td class="greyed">Property of Boundary</td>
	</tr>
</table>

<!--Topic Definition-->
<p>Returns the number of vertices in a <a href="Boundary.htm">Boundary</a>. <b>VertexCount</b> is a read-only <b>Integer</b>.
   
         

<!--Syntax table-->

<H3>Syntax</H3>
<table class="backlight">
	<tr>
    	<td><i>object</i>.<b>VertexCount</b> </td>
	</tr>
</table>

<!--Parameters table-->

<p>The <b>VertexCount</b> property syntax has these parts:
<TABLE class="backlight">
<!--Parameters table: Caption-->

	<thead>
		<TR>
			<td>Parts</td>
			<td>Type</td>
			<td>Use</td>
			<td>Description</td>
		</TR>
	</thead>
	
<!--Parameters table: line divider-->
  <TBODY>
<tr class="line" ><td colspan=100></td></tr>

<!--Parameters table: contents-->

	<TR>
		<td class="boldItal">object</td>
		<td>Boundary</td>
		<td>Required</td>
		<td>Any valid expression that evaluates to a <b>Boundary</b>.</td>
	</TR>
	

</TABLE>

<!--Remarks section-->
<H3>Remarks</H3>
<P>The default setting of the <b>VertexCount</b> property is determined by the <b>Boundary</b> it is associated with.

<p>The <b>VertexCount</b> property returns the number of vertices in an instance of the Boundary object. If a Vertex is added to or removed from the boundary, the <b>VertexCount</b> property is automatically incremented or decremented.
<H3>Examples</H3>

<p>The following example creates a <b>Boundary</b> around an existing object and retrieves the <b>VertexCount</b> property. The argument "myObject" is the name of the existing object being passed to the subroutine.
<br>
<br>
<pre class="example">
Sub myBoundary(myObject)

Dim myFireHydrant
Dim myOuterEdge
Dim myVCount
</pre>

<p class=comments>'Obtain a reference to an existing object.
<pre class="example">Set myFireHydrant = User.Container.FindWithin(myObject)</pre>

<p class=comments>'Create a 4-sided outer boundary.
<pre class="example">Set myOuterEdge = World.CreateBoundary(Array(1,1, 1,-1, -1,-1, -1,1))</pre>

<p class=comments>'Count the vertices and display the result.
<pre class="example">Set myVCount = myOuterEdge.<b>VertexCount</b>
Trace myVCount</pre>

<p class=comments>'Apply the boundary to the existing object
<pre class="example">myFireHydrant.BoundaryList.Add myOuterEdge

End Sub</pre>
<p>Example 2
<p>This example demonstrates retrieving the <b>VertexCount</b> property after the boundary has been assigned to an object. "myObject" is the name of an existing object. To use this example in the Command Window, substitute the name of an existing object for "myObject".<br><br>
<pre class="example">Dim myVertices</pre>

<p class=comments>'Obtain a reference to the third boundary_
<div class=comments>'in an existing object's boundarylist.</div>
<pre class="example">Set myVertices = myObject.BoundaryList.Property(2)</pre>

<p class=comments>'display the number of vertices.
<pre class="example">Trace myVertices.<b>VertexCount</b></pre>


</body>
</html>
