<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head>
<Link rel="Stylesheet" href="../APIRef.css">
	<title>IsPassable</title>
</head>
<body>

<!--Header table -->
<table class="head" >
	<tr>
		<td><h2>IsPassable</h2></td>
		<td class="space"></td>
		<td class="propertypic"><!--image is inserted here--></td>
		<td class="greyed">Property of Boundary</td>
	</tr>
</table>

<!--Topic Definition-->
<p>Flag that indicates whether a <A href="Boundary.htm">Boundary</A> restricts movement through a specified area. <b>IsPassable</b> is a read/write <b>Boolean</b>.
         

<!--Syntax table-->
<H3>Syntax</H3>
<table class="backlight">
	<tr>
    	<td><i>object</i>.<b>IsPassable</b> = <i>BooleanValue</i></td>
	</tr>
</table>

<!--Parameters table-->
<p>The <b>IsPassable</b> property syntax has these parts:
<TABLE class="backlight">
<!--Parameters table: Caption-->

	<thead>
		<TR>
			<td>Parts</td>
			<td>Type</td>
			<td>Use</td>
			<td>Description</td>
		</TR>
	</thead>
	
<!--Parameters table: line divider-->
  
<tr class="line" ><td colspan=100></td></tr>

<!--Parameters table: contents-->

	<TR>
		<td class="boldItal">object</td>
		<td>Boundary</td>
		<td>Required</td>
		<td>An object reference that accesses a <B>Boundary</b>.</td>
	</TR>
	<TR>
		<td class="boldItal">BooleanValue</td>
		<td>Boolean</td>
		<td>Required</td>
		<td>Any valid expression that evaluates to a <b>Boolean</b>. Default is <b>False</b> (not passable).</td>
	</TR>

</TABLE>

<!--Remarks section-->
<H3>Remarks</H3>

<p>The <b>IsPassable</b> property controls whether a <b>Boundary</b> acts as a solid object or as one that can be passed through. If the <b>IsPassable</b> property is set to <b>True</b>, the primary function of the <b>Boundary</b> is to detect motion in a specific area, similar to a "trip wire". If an object passes into the <b>Boundary</b>, the <a href="../Events/OnIntersectee.htm">OnIntersectee</a> and <a href="../Events/OnIntersecter.htm">OnIntersecter</a> events are fired. If the <b>IsPassable</b> property is set to <b>False</b>, the <b>Boundary</b> prevents an object from entering an enclosed area, firing the <b>OnIntersectee</b> and <b>OnIntersecter</b>events on collision.


<!--Example section-->
<H3>Examples</H3>

<p>The following example creates a <b>Boundary</b> around an existing object and changes the <b>IsPassable</b> property. The argument "myObject" is the name of the existing object being passed to the subroutine.
<br>
<br>
<pre class="example">
Sub myBoundary(myObject)

Dim myFireHydrant
Dim myOuterEdge
</pre>

<p class=comments>'Obtain a reference to an existing object.
<pre class="example">Set myFireHydrant = User.Container.FindWithin(myObject)</pre>

<p class=comments>'Create a four-sided outer boundary.
<pre class="example">Set myOuterEdge = World.CreateBoundary(Array(1,1, 1,-1, -1,-1, -1,1))</pre>

<p class=comments>'Make the boundary passable.
<pre class="example">myOuterEdge.<b>IsPassable</b> = True</pre>

<p class=comments>'Apply the boundary to the existing object.
<pre class="example">myFireHydrant.BoundaryList.Add myOuterEdge

End Sub</pre>
<p>Example 2
<p>This example changes the <b>IsPassable</b> property after the boundary has been assigned to an object. "myObject" is the name of an existing object. To use this example, substitute the name of an existing object for "myObject".
<br><br>
<pre class="example">Dim myOuterEdge
</pre>

<p class=comments>'Obtain a reference to the third boundary
<div class=comments>'in an existing object's boundary list.</div>
<pre class="example">Set myOuterEdge = myObject.BoundaryList.Property(2)</pre>

<p class=comments>'Change the <b>IsPassable</b> property.
<pre class="example">myOuterEdge.<b>IsPassable</b> = True</pre>

<p>Example 3

<p>This example changes the <b>IsPassable</b> property and then confirms the change in the Command Window. To use this example, substitute the name of an existing object for "myObject".
<br><br>
<pre class="example">myObject.BoundaryList.Property(2).<b>IsPassable</b> = True
Trace myObject.BoundaryList.Property(2).<b>IsPassable</b></pre>
<!--See also section-->

<P>
<A href=""></A>
<br>



</body>
</html>
