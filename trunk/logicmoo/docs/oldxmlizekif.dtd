<pre><!ELEMENT  Configuration    (string, value)><!ELEMENT  Feature        (string, value)><!ELEMENT  Flag        (string, value)><!ELEMENT  Module        (string, file?, prop?)><!ELEMENT  Atom        (string, mod)><!ELEMENT  Operator      (string, prec, fix)><!ELEMENT  Functor        (string, (mod | valence | prop)*)><!ELEMENT  Predicate      (string, (mod | valence | prop)*)><!ELEMENT  string        (#PCDATA)><!ELEMENT  value        (#PCDATA)><!ELEMENT  file        (#PCDATA)><!ELEMENT  mod          (#PCDATA)><!ELEMENT  valence        (#PCDATA)><!ELEMENT  prop        (#PCDATA)><!ELEMENT  logicmoo:result        (kif:var)*><!ELEMENT  kif:var          (#PCDATA)><!ATTLIST  kif:var      string        CDATA    #REQUIRED      status        CDATA    #IMPLIED><!--    <LE>        Demarcate Logic Engine responses from others --><!ELEMENT  LE          ((logicmoo:result* | logicmoo:request* | logicmoo:message* | logicmoo:error*))><!--  Notations for semantic, formal logic and similarly structured content  The element hierarchy, including its attributes, is, informally:    <logicmoo:insert      ctxt        ="HumanActivitiesMt"      sn          ="UA0-1459" >      <kif:formula        dialect        ="ieee"        valence      ="2" >        <kif:constant          string    ="GivenName"          domain      ="Person,PetAnimal" >        <kif:var          string    ="Person" >        <kif:constant          string    ="GivenName"          domain      ="Person,PetAnimal" >      </kif:formula    </logicmoo:insert>  Examples:  A simple GAF:  KIF:    (isa JSowa Human) (in ImportantPeopleMt)  XML:    <logicmoo:insert ctxt="ImportantPeopleMt" sn="UA0-1459">          <kif:formula dialect="ieee" valence="2">            <kif:constant>isa</kif:constant>            <kif:constant>JSowa</kif:constant>            <kif:constant>Human</kif:constant>          </kif:formula>        </logicmoo:insert>  An logicmoo:insert as it might appera during consultation    (it bears a "domain=" attribute on the unbound,     requesteded second constantument to numLegs).  KIF:    (numLegs Hobbes ?N) (in AnimalGameMt)  XML:    <logicmoo:insert ctxt="AnimalGameMt" sn="UA0-1459">          <kif:formula dialect="ieee" valence="2">            <kif:constant>numLegs</kif:constant>            <kif:constant>JSowa</kif:constant>            <kif:var string="N" status="requested" domain="LandAmimal"/>          </kif:formula>        </logicmoo:insert>  An assertion with sub-formulas:  KIF:    (implies (isa ?P Person) (thereExists ?D (dwellsIn ?P ?D)))  XML: <logicmoo:insert ctxt="HumanActivitiesMt" sn="UA0-CMO-1976">          <kif:formula dialect="ieee" valence=2>            <kif:constant domain="SentenceOperator">implies</kif:constant>            <kif:formula valence="2">              <kif:constant>isa</kif:constant>              <kif:var string="P"/>              <kif:constant>Person</kif:constant>            </kif:formula>            <kif:formula valence="2">              <kif:constant domain="SentenceOperator">thereExists</kif:constant>              <kif:var string="D"/>              <kif:formula valence=1>                <kif:constant>dwellsIn</kif:constant>                <kif:var string="P"/>                <kif:var string="D"/>              </kif:formula>            </kif:formula>          </kif:formula>        </logicmoo:insert>  Here's the same assertion in PNF:  XML:    <logicmoo:insert ctxt="HumanActivitiesMt" sn="UA0-CMO-1976">          <kif:formula dialect="pnf" valence=2>            <kif:formula valence="2">              <kif:constant domain="SentenceOperator">forAll</kif:constant>              <kif:var string="P">              <kif:formula valence="2">                <kif:constant domain="SentenceOperator">thereExists</kif:constant>                <kif:var string="D">                <kif:formula valence="2">                  <kif:constant domain="SentenceOperator">implies</kif:constant>                  <kif:formula valence="2">                    <kif:constant>isa</kif:constant>                    <kif:var string="P"/>                    <kif:constant>Person</kif:constant>                  </kif:formula>                  <kif:formula valence=2>                    <kif:constant>dwellsIn</kif:constant>                    <kif:var string="P">                    <kif:var string="D">                  </kif:formula>                </kif:formula>              </kif:formula>            </kif:formula>          </kif:formula>        </logicmoo:insert>--><!--    <logicmoo:insert>      A KIF assertion: A kif:formula, constring and serial number        ctxt      ="constringName"        sn        ="serialNumber" --><!ELEMENT  logicmoo:insert      (kif:formula)><!ATTLIST  logicmoo:insert      ctxt        CDATA    #IMPLIED      sn          CDATA    #IMPLIED><!--    <kif:formula>      The kif:formula within an <Asserion>        valence      ="predicate_arity"        dialect        ="ieeekif"        Authorial form        dialect        ="cycl"        Authorial form        dialect        ="kif"        Authorial form        dialect        ="pnf"          Prenex normal form        dialect        ="dnf"          Disjunctive normal form        dialect        ="cnf"          Conjunctive normal form        dialect        ="nnf"          Negation normal form --><!ELEMENT  kif:formula        (kif:constant | kif:var | kif:formula)*><!ATTLIST  kif:formula      valence        CDATA    #IMPLIED      dialect          CDATA    #IMPLIED><!--    <kif:constant>        A known constantument in a <kif:formula><!ELEMENT  kif:constant          (#PCDATA)><!--    <kif:var>        An unknown constantument in a <kif:formula>        string      ="varName"        domain        ="Type1,Type2"        status      ="requested"          This value is sought<!ELEMENT  kif:var          EMPTY><!ATTLIST  kif:var      string        CDATA    #IMPLIED      domain          CDATA    #IMPLIED      status        CDATA    #IMPLIED><!--    Consultation    --><!--    <logicmoo:request>      Initiate a request for further information                from the ultimate client of the request. --><!ELEMENT  logicmoo:request        (logicmoo:solicit)*><!--    <logicmoo:solicit>        Solicit a single fact from the ultimate client.  --><!ELEMENT  logicmoo:solicit        (kif:constant*)><!ATTLIST  logicmoo:solicit      operator        CDATA    #REQUIRED      valence        CDATA    #REQUIRED      ctxt        CDATA    #IMPLIED><!--    <kif:constant>        Describe a single argument of the fact sought.        status      ="bound"  Value is known and included        status      ="requested"    Vazlud is unknown and must be supplied --><!ELEMENT  kif:constant          (#PCDATA)><!ATTLIST  kif:constant      domain        CDATA    #REQUIRED      dialect        CDATA    #IMPLIED      status        CDATA    #IMPLIED><!--    logicmoo:errors and Info    --><!--    <logicmoo:message>      Send an informative or diagnostic message to the client.        module      ="module_string"        operator      ="predicate_string"        valence      ="predicate_arity" --><!ELEMENT  logicmoo:message        (#PCDATA)?><!ATTLIST  logicmoo:message      to        CDATA    #REQUIRED      from        CDATA    #REQUIRED      subject        CDATA    #REQUIRED      mesg        CDATA    #REQUIRED><!--    <logicmoo:error>        Send and error message to the client.s        module      ="module_string"        operator      ="predicate_string"        mesg      ="error message." --><!ELEMENT  logicmoo:error        EMPTY><!ATTLIST  logicmoo:error      module        CDATA    #REQUIRED      operator        CDATA    #REQUIRED      mesg        CDATA    #REQUIRED></pre>