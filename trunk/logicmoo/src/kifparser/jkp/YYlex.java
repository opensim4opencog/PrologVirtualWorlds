/* A lexical scanner generated by flex */

/* Scanner skeleton version:
 * $Header: /development/LM/logicmoo-cvsbackup/logicmoo/src/kifparser/jkp/YYlex.java,v 1.1.1.1 2002-03-07 06:11:37 dmiles Exp $
 */

/**************************************************/
/* Indicate the flex optimization template */

//FLEXFLAGS=Cem


//  This line added by X.Luan,  Nov 15, 96
package jkp;

/**************************************************/



/**************************************************/

import java.util.*;
import java.io.*;
import jbf.*;

/**************************************************/

// PREFIX

//import YYtokentypes;
/* regular definitions 
*/
/*
number		\-?{digit}+(\.{digit}+)?((E|e)[+\-]?{digit}+)?
*/


/**************************************************/


public
class YYlex {

    // Set up the fake goto mechanism
    protected int Goto;
    protected static final int yynobranch = 0;
    protected static final int yy_find_action = 1;
    protected static final int yy_match = 2;
    protected static final int do_action = 3;

// CONSTANTS

public static final int YY_FLEX_MAJOR_VERSION = 2;
public static final int YY_FLEX_MINOR_VERSION = 5;
public static final int YY_NULL = 0;
public static final int YY_MORE_ADJ = 0;
public static final int YY_END_OF_BUFFER_CHAR = 0;
public static final int YY_BUF_SIZE = 16384;
public static final int YY_READ_BUF_SIZE = 8192;
public static final int EOB_ACT_CONTINUE_SCAN = 0;
public static final int EOB_ACT_END_OF_FILE = 1;
public static final int EOB_ACT_LAST_MATCH = 2;
public static final int YY_START_STACK_INCR = 25;
public static final int YY_BUFFER_NEW = 0;
public static final int YY_BUFFER_NORMAL = 1;
public static final int YY_BUFFER_EOF_PENDING = 2;
public static final int YY_NUM_RULES = 34;
public static final int YY_END_OF_BUFFER = 35;
public static final int YY_SPECIAL = 251;


// STATES

public static final int INITIAL = 0;


// MISC.

    protected static final int EOF = -1;


// Class State

    Int_Stack yy_start_stack;
    java.io.InputStream yyin;
    java.io.PrintStream yyout;
    int yy_start;		/* start state number */
    int yy_last_accepting_state;
    int yy_last_accepting_cpos;
    YYtoken yylval;
    Integer yytokentype;
    protected StringBuffer lexeme;
    YYlexbuffer yytext;
    public int yydebug;

    boolean yy_at_bol;
    boolean is_interactive;
    int yy_current_state;
    int yy_act;


// PROCS



public YYlex(java.io.InputStream fin) {this(fin,System.out);}
public YYlex() {this(System.in,System.out);}

public
YYlex(java.io.InputStream fin, java.io.PrintStream fout)
{
    yyin = fin;
    yyout = fout;
    yy_start_stack = new Int_Stack();
    yy_start = 1;		/* start state number */
    yy_last_accepting_state = 0;
    yy_last_accepting_cpos = 0;
    yy_current_state = 0;
    yy_act = 0;
    yy_at_bol = true; //pretend
    is_interactive= false;
    yylval = new YYtoken();
    yytokentype = null;
    yydebug = 0;
    yytext = new YYlexbuffer(yyin,yyout);
    lexeme = new StringBuffer();
    
}

public
Integer
yylex() throws LexException, IOException, EmptyStackException
{
	yylval.clear();
	yytext.purge();

scanloop:
    while( true ) {	      /* loops until end-of-file is reached */

	yytext.setmark();

	int thisch = yytext.nextchar();
	if(thisch == EOF) thisch = YY_END_OF_BUFFER_CHAR;

branch: switch (Goto) {
case yynobranch:

	yy_current_state = yy_start;

	yy_current_state += YY_AT_BOL(); //<<
	do {
///**/yyout.println("(1)yy_current_state=" + yy_current_state);
	    int yy_c;
	    // yy_c = yy_ec[YY_SC_TO_UI(thisch)];
	    yy_c = yy_ec[thisch];
///**/yyout.println("(1)yy_c=" + yy_c);
///**/yyout.println("(1)yy_accept[yy_current_state]=" + yy_accept[yy_current_state]);
	    if ( yy_accept[yy_current_state]  != 0) {
		yy_last_accepting_cpos = yytext.currentpos();
		yy_last_accepting_state = yy_current_state;
///**/yyout.println("(1)yy_last_accepting_state=" + yy_last_accepting_state);
///**/yyout.println("(1)yy_last_accepting_cpos=" + yy_last_accepting_cpos);
	    }
	   while (yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state)
	   {
///**/yyout.println("(2)yy_chk[yy_base[yy_current_state]+yy_c]="+yy_chk[yy_base[yy_current_state] + yy_c]);
		yy_current_state = (int) yy_def[yy_current_state];
///**/yyout.println("(2)yy_current_state=" + yy_current_state);
		if ( yy_current_state >= yy_accept.length ) {
			yy_c = yy_meta[yy_c];
///**/yyout.println("(2)yy_c=" + yy_c);
			}
	   }
	   yy_current_state = yy_nxt[yy_base[yy_current_state] + yy_c];
///**/yyout.println("(3)yy_current_state=" + yy_current_state);
///**/yyout.println("yy_at_bol=" + yy_at_bol);
	   yy_at_bol = (thisch == '\n');
	   thisch = yytext.nextchar();
	   if(thisch == EOF) thisch = YY_END_OF_BUFFER_CHAR;
	} while ( yy_base[yy_current_state] != YY_SPECIAL );

















case yy_find_action:
	yy_act = yy_accept[yy_current_state];
///**/yyout.println("(4)yy_act=" + yy_act);
	if ( yy_act == 0 ) {
	    /* have to back up to last accepting state*/
	    do {
		yytext.backup();
	    } while(yytext.currentpos() >= yy_last_accepting_cpos);
	    thisch = yytext.nextchar();
///**/yyout.print("backup:"+" yyline="+lineno()+" ; yychar="+charno0()+" ; yylinechar="+charno()+" ; yytext=/"+yytext+"/");
	    yy_current_state = yy_last_accepting_state;
	    yy_act = yy_accept[yy_current_state];
///**/yyout.println("(5)yy_current_state=" + yy_current_state);
///**/yyout.println("(5)yy_act=" + yy_act);
	}

	// YY_DO_BEFORE_ACTION;

case do_action:	     /* This label is used only to access EOF actions. */

	yy_at_bol = (yytext.charno0() == 0);
	yytext.backup();
	yytext.getlexeme(yylval.text());	
	yytokentype = null; // => no token returned

///**/yyout.println("(6)yy_act=" + yy_act);
///**/yyout.println("(6)yytext=/"+yytext+ "/");
///**/yyout.println("(6)yy_at_bol=" + yy_at_bol);

///**/yyout.println("yytext.lexeme=/" + yytext + "/");

	switch ( yy_act ) { /* beginning of action switch */
		case 0: /* must back up */
		/* have to back up to last accepting state*/
		do {
		    yytext.backup();
		} while(yytext.currentpos() > yy_last_accepting_cpos);
		thisch = yytext.nextchar();
///**/yyout.print("backup:"+" yyline="+lineno()+" ; yychar="+charno0()+" ; yylinechar="+charno()+" ; yytext=/"+yytext+"/");
		yy_current_state = yy_last_accepting_state;
		{Goto = yy_find_action; break branch;}

// ACTIONS

case 1:
/* no action */
break;
case 2:
{yyreturn('('); }
break;
case 3:
{yyreturn(')'); }
break;
case 4:
{yyreturn(INDVAR); }
break;
case 5:
{yyreturn(SEQVAR); }
break;
case 6:
{yyreturn(TRUE);  }
break;
case 7:
{yyreturn(FALSE);  }
break;
case 8:
{yyreturn(STRING);  }
break;
case 9:
{yyreturn(INTEGER);  }
break;
case 10:
{yyreturn(REAL);  }
break;
case 11:
{yyreturn(EQ);  }
break;
case 12:
{yyreturn(NOTEQ);  }
break;
case 13:
{yyreturn(IMPLIES);  }
break;
case 14:
{yyreturn(IMPLIED);  }
break;
case 15:
{yyreturn(EQUIV);  }
break;
case 16:
{yyreturn(EQLESS);  }
break;
case 17:
{yyreturn(LESS);  }
break;
case 18:
{yyreturn(EQGREATER);  }
break;
case 19:
{yyreturn(GREATER);  }
break;
case 20:
{yyreturn(QUOTE);  }
break;
case 21:
{yyreturn(FORALL);  }
break;
case 22:
{yyreturn(EXISTS);  }
break;
case 23:
{yyreturn(AND);  }
break;
case 24:
{yyreturn(OR);  }
break;
case 25:
{yyreturn(NOT);  }
break;
case 26:
{yyreturn(IF);  }
break;
case 27:
{yyreturn(COND);  }
break;
case 28:
{yyreturn(LISTOF);} 
break;
case 29:
{yyreturn(DEFOBJECT);} 
break;
case 30:
{yyreturn(DEFFUNCTION);} 
break;
case 31:
{yyreturn(DEFRELATION);}  
break;
case 32:
{yyreturn(DEFLOGICAL);}  
break;
case 33:
{yyreturn(CONSTANT); }
break;
case 34:
break;
case YY_END_OF_BUFFER + 1 + INITIAL :
yytokentype = YYtokentypes.YYEOF; break;



case YY_END_OF_BUFFER:
///**/yyout.println("case YY_END_OF_BUFFER");
	yy_act = YY_STATE_EOF(YY_START());
	{Goto = do_action; break branch;}

    default:
	yyfatalerror(
		"fatal flex scanner internal error--no action found" );
	break;
} /* end of action switch */
if(yytokentype != null) {
    yylval.settokentype(yytokentype);
    yytext.getlexemelocation(yylval.location());
    if(yydebug >= 1) yyreport(yylval);	  
    return yytokentype;
} else {
    if(yydebug >= 10) yyout.println("yylex: no token produced");
}
} //branch
} /* end of scanning one token */
} /* end of yylex */

public
void
yy_push_state( int new_state )
{
    yy_start_stack.push(YY_START());
    BEGIN(new_state);
}

public
void
yy_pop_state()
{
    BEGIN(yy_start_stack.pop());
}

protected 
int
yy_top_state()
{
    return yy_start_stack.top();
}

protected
void
yyfatalerror( String msg) throws LexException
{
    throw new LexException("yylex: fatalerror: " + msg);
}

public
void
yylexerror(String s) throws LexException
{
    yyout.println("yylexerror: "
		    + "char/line+char "
		    + yytext.charno0()
		    + "/"
		    + yytext.lineno()
		    + "+"
		    + yytext.charno0()
		    + " ; "
		    + s);
    throw new LexException(s);
}

public
YYtoken
yyreport(YYtoken yylval)
{
    if(yylval != null) {
	yyout.println("yylex: "
		    + " char/line+char "
		    + yylval.charno0()
		    + "/"
		    + yylval.lineno()
		    + "+"
		    + yylval.charno()
		    + " /"
		    + YYtokentypes.tokenname(yylval.tokentype())
		    + "/(" + yylval.tokentype()
		    + ") ; text=#"
		    + yylval.text
		    + "#");
    } else {
	yyout.println("yylex: "
		    + " char/line+char "
		    + yytext.charno0()
		    + "/"
		    + yytext.lineno()
		    + "+"
		    + yytext.charno0()
		    + " /EOF/");
    }
    return yylval;
}

protected void BEGIN(int n) {yy_start = 1+2*n;}
public void yybegin(int n) {BEGIN(n);}
public int YY_START() {return (yy_start-1)/2;}
protected int YY_AT_BOL() {return (yy_at_bol)?1:0;}
protected int YY_STATE_EOF(int st) {return YY_END_OF_BUFFER + st + 1;}

/* Promotes a possibly negative, possibly signed char to an unsigned
 * integer for use as an array index.  If the signed char is negative,
 * we want to instead treat it as an 8-bit unsigned char, hence the
 * double cast.
 */
protected int YY_SC_TO_UI(char c) {return (int)((short)c);}

public
void
yy_set_interactive(boolean is_interactive)
{
    this.is_interactive= is_interactive;
}

protected
void
yy_set_bol(boolean at_bol)
{
    yy_at_bol = at_bol;
}

// TABLES

public static final short yy_accept[] = 
    {   0,
        0,    0,   35,   33,    1,   33,    2,    3,   33,   33,
       33,    9,   17,   11,   19,   33,   33,   33,   33,   33,
       33,   33,   33,   33,   33,   33,   33,   33,   33,   33,
       33,   33,   33,   33,   33,   33,   33,   33,   33,   33,
        1,   33,    0,    8,   33,   33,    9,   10,   12,   10,
       33,   14,   16,   13,   18,    4,    5,   33,   33,   33,
       33,   33,   33,   26,   33,   33,   24,   33,   33,   33,
       33,   33,   33,   33,   33,   33,   33,   33,   33,    8,
        0,   33,   10,   33,   10,   15,   23,   33,   33,   33,
       33,   33,   33,   25,   33,   33,   33,   33,   33,   33,

       33,   33,   33,   33,   33,   10,   27,   33,   33,   33,
       33,   33,   33,   33,   33,   33,    6,   33,   33,   33,
       33,   33,   33,   33,   33,   33,   33,   33,   33,   33,
       33,    7,   33,   33,   20,   33,   33,   33,   33,   33,
       33,   33,   33,   33,   33,   33,   22,   21,   28,   33,
       33,   33,   33,   33,   33,   33,   33,   33,   33,   33,
       33,   33,   33,   33,   33,   33,   33,   33,   33,   33,
       33,   29,   33,   33,   33,   33,   33,   32,   33,   33,
       33,   30,   31,    0
};

public static final int yy_ec[] = 
    {   0,
        1,    1,    1,    1,    1,    1,    1,    1,    2,    3,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    2,    1,    4,    1,    1,    1,    1,    1,    5,
        6,    1,    7,    1,    7,    8,    9,   10,   10,   10,
       10,   10,   10,   10,   10,   10,   10,    1,    1,   11,
       12,   13,   14,   15,   16,   17,   18,   19,   20,   21,
       22,    1,   23,   24,    1,   25,    1,   26,   27,    1,
       28,   29,   30,   31,   32,    1,    1,   33,    1,    1,
        1,   34,    1,    1,    1,    1,   35,   36,   37,   38,

       39,   40,   41,    1,   42,   43,    1,   44,    1,   45,
       46,    1,   47,   48,   49,   50,   51,    1,    1,   52,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,

        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1
};

public static final short yy_nxt[] = 
    {   0,
        4,    5,    5,    6,    7,    8,    9,   10,   11,   12,
       13,   14,   15,   16,   17,   18,    4,   19,   20,   21,
       22,    4,   23,    4,   24,   25,   26,   27,    4,    4,
       28,    4,    4,    4,   29,    4,   30,   31,   32,   33,
        4,   34,    4,   35,   36,   37,   38,    4,    4,   39,
        4,    4,   41,   41,   43,   43,   44,   43,   43,   46,
       50,   47,   47,   53,   62,   54,   74,   41,   41,   80,
       43,  184,   51,   43,   43,   63,   57,   75,   43,   43,
       44,   43,   43,   50,   48,   47,   45,   83,   83,   84,
      105,   51,   85,  106,   82,   51,  108,   82,   82,   81,

      109,  118,  110,   56,  111,  119,   40,  120,  183,  121,
       45,  182,  183,   82,   51,  182,   82,   82,   42,   42,
       43,   43,  181,  178,  180,  179,  178,  177,  176,  172,
      175,  174,  173,  172,  171,  170,  169,  168,  167,  166,
      165,  164,  163,  162,  161,  160,  159,  158,  157,  156,
      155,  154,  149,  148,  147,  153,  152,  151,  150,  149,
      148,  147,  146,  145,  144,  143,  135,  142,  141,  132,
      140,  139,  138,  137,  136,  135,  134,  133,  132,  131,
      130,  129,  128,  127,  106,  106,  117,  126,  125,  124,
      123,  122,  107,  117,  116,  115,  114,  113,  112,  107,

       85,   85,  184,  104,  103,   94,  102,  101,  100,   99,
       98,   97,   87,   96,   95,   94,   93,   92,   91,   90,
       89,   88,   87,   86,   48,   79,   78,   67,   77,   76,
       64,   73,   72,   71,   70,   69,   68,   67,   66,   65,
       64,   61,   60,   59,   58,   55,   52,   49,   48,  184,
        3,  184,  184,  184,  184,  184,  184,  184,  184,  184,
      184,  184,  184,  184,  184,  184,  184,  184,  184,  184,
      184,  184,  184,  184,  184,  184,  184,  184,  184,  184,
      184,  184,  184,  184,  184,  184,  184,  184,  184,  184,
      184,  184,  184,  184,  184,  184,  184,  184,  184,  184,

      184,  184,  184
};

public static final int yy_meta[] = 
    {   0,
        1,    2,    2,    1,    2,    2,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1
};

public static final short yy_base[] = 
    {   0,
        0,    0,  250,    0,   51,   53,  251,  251,   52,  239,
      236,   53,  235,   53,  234,    0,    0,  219,  217,  223,
      209,   49,  220,  217,  212,  209,  205,  207,  190,  188,
      194,  180,   32,  191,  188,  183,  180,  176,  178,    0,
       66,   77,   66,    0,   69,  215,   76,   75,    0,   78,
       83,  211,    0,    0,    0,    0,    0,  204,  196,  200,
      197,  194,  189,    0,  187,  185,    0,  188,  182,  175,
      167,  171,  168,  165,  160,  158,  156,  159,  153,  251,
      200,   84,   79,  192,  191,    0,    0,  181,   76,  169,
      168,  181,  165,    0,  164,  174,  155,   62,  143,  142,

      155,  139,  138,  148,  176,  175,    0,  152,  156,  165,
      161,  149,  159,  153,  150,  156,    0,  124,  128,  137,
      133,  121,  131,  125,  122,  128,  140,  143,  140,  138,
      132,    0,  136,  139,    0,  114,  117,  114,  112,  106,
      110,  113,  134,  128,  130,  133,    0,    0,    0,  111,
      105,  107,  110,  113,  125,  124,  110,   90,  102,  101,
       87,  113,  119,  103,  110,   90,   96,   80,   87,  101,
      102,    0,   99,   79,   80,   77,   90,    0,   87,   67,
       64,    0,    0,  251,  106,  118,  103,   76,  120
};

public static final short yy_def[] = 
    {   0,
      184,    1,  184,  185,  184,  186,  184,  184,  185,  185,
      185,  185,  185,  185,  185,  187,  188,  185,  185,  185,
      185,  185,  185,  185,  185,  185,  185,  185,  185,  185,
      185,  185,  185,  185,  185,  185,  185,  185,  185,  185,
      184,  186,  189,  185,  186,  185,  185,  185,  185,  185,
      185,  185,  185,  185,  185,  187,  188,  185,  185,  185,
      185,  185,  185,  185,  185,  185,  185,  185,  185,  185,
      185,  185,  185,  185,  185,  185,  185,  185,  185,  184,
      189,  185,  185,  185,  185,  185,  185,  185,  185,  185,
      185,  185,  185,  185,  185,  185,  185,  185,  185,  185,

      185,  185,  185,  185,  185,  185,  185,  185,  185,  185,
      185,  185,  185,  185,  185,  185,  185,  185,  185,  185,
      185,  185,  185,  185,  185,  185,  185,  185,  185,  185,
      185,  185,  185,  185,  185,  185,  185,  185,  185,  185,
      185,  185,  185,  185,  185,  185,  185,  185,  185,  185,
      185,  185,  185,  185,  185,  185,  185,  185,  185,  185,
      185,  185,  185,  185,  185,  185,  185,  185,  185,  185,
      185,  185,  185,  185,  185,  185,  185,  185,  185,  185,
      185,  185,  185,    0,  184,  184,  184,  184,  184
};

public static final short yy_chk[] = 
    {   0,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    5,    5,    6,    6,    6,    6,    6,    9,
       12,    9,   12,   14,   22,   14,   33,   41,   41,   43,
       45,   45,   12,   45,   45,   22,  188,   33,   42,   42,
       42,   42,   42,   47,   48,   47,    6,   50,   83,   51,
       82,   12,   51,   82,   48,   47,   89,   50,   83,   43,

       89,   98,   89,  187,   89,   98,  185,   98,  181,   98,
       42,  180,  179,   48,   47,  177,   50,   83,  186,  186,
      189,  189,  176,  175,  174,  173,  171,  170,  169,  168,
      167,  166,  165,  164,  163,  162,  161,  160,  159,  158,
      157,  156,  155,  154,  153,  152,  151,  150,  146,  145,
      144,  143,  142,  141,  140,  139,  138,  137,  136,  134,
      133,  131,  130,  129,  128,  127,  126,  125,  124,  123,
      122,  121,  120,  119,  118,  116,  115,  114,  113,  112,
      111,  110,  109,  108,  106,  105,  104,  103,  102,  101,
      100,   99,   97,   96,   95,   93,   92,   91,   90,   88,

       85,   84,   81,   79,   78,   77,   76,   75,   74,   73,
       72,   71,   70,   69,   68,   66,   65,   63,   62,   61,
       60,   59,   58,   52,   46,   39,   38,   37,   36,   35,
       34,   32,   31,   30,   29,   28,   27,   26,   25,   24,
       23,   21,   20,   19,   18,   15,   13,   11,   10,    3,
      184,  184,  184,  184,  184,  184,  184,  184,  184,  184,
      184,  184,  184,  184,  184,  184,  184,  184,  184,  184,
      184,  184,  184,  184,  184,  184,  184,  184,  184,  184,
      184,  184,  184,  184,  184,  184,  184,  184,  184,  184,
      184,  184,  184,  184,  184,  184,  184,  184,  184,  184,

      184,  184,  184
};



// SUFFIX




public static final Integer INDVAR = YYtokentypes.Tokentype[258];
public static final Integer SEQVAR = YYtokentypes.Tokentype[259];
public static final Integer TRUE = YYtokentypes.Tokentype[260];
public static final Integer FALSE = YYtokentypes.Tokentype[261];
public static final Integer STRING = YYtokentypes.Tokentype[262];
public static final Integer INTEGER = YYtokentypes.Tokentype[263];
public static final Integer REAL = YYtokentypes.Tokentype[264];
public static final Integer EQ = YYtokentypes.Tokentype[265];
public static final Integer NOTEQ = YYtokentypes.Tokentype[266];
public static final Integer IMPLIES = YYtokentypes.Tokentype[267];
public static final Integer IMPLIED = YYtokentypes.Tokentype[268];
public static final Integer EQUIV = YYtokentypes.Tokentype[269];
public static final Integer EQLESS = YYtokentypes.Tokentype[270];
public static final Integer LESS = YYtokentypes.Tokentype[271];
public static final Integer EQGREATER = YYtokentypes.Tokentype[272];
public static final Integer GREATER = YYtokentypes.Tokentype[273];
public static final Integer QUOTE = YYtokentypes.Tokentype[274];
public static final Integer FORALL = YYtokentypes.Tokentype[275];
public static final Integer EXISTS = YYtokentypes.Tokentype[276];
public static final Integer AND = YYtokentypes.Tokentype[277];
public static final Integer OR = YYtokentypes.Tokentype[278];
public static final Integer NOT = YYtokentypes.Tokentype[279];
public static final Integer IF = YYtokentypes.Tokentype[280];
public static final Integer COND = YYtokentypes.Tokentype[281];
public static final Integer LISTOF = YYtokentypes.Tokentype[282];
public static final Integer DEFOBJECT = YYtokentypes.Tokentype[283];
public static final Integer DEFFUNCTION = YYtokentypes.Tokentype[284];
public static final Integer DEFRELATION = YYtokentypes.Tokentype[285];
public static final Integer DEFLOGICAL = YYtokentypes.Tokentype[286];
public static final Integer CONSTANT = YYtokentypes.Tokentype[287];
public static final Integer PLACEHOLDER = YYtokentypes.Tokentype[288];


public void setdebug(boolean d) {yydebug = d?1:0; yytext.setdebug(d);}
public void setdebug(int i) {yydebug = i>0?i:0; yytext.setdebug(i);}

public void yyreturn(Integer ttype) {yytokentype = ttype;}
public void yyreturn(int ttype) {
    if(ttype >= 0 && ttype < YYtokentypes.tokenmax) {
	yytokentype = YYtokentypes.Tokentype[ttype];
    } else {
	yytokentype = new Integer(ttype);
    }
}
public StringBuffer yytext() {return yylval.text();}

// return 0 based line number
public int lineno() {return yytext.lineno();}

// return 0 based absolute char number
public int charno0() {return yytext.charno0();}

// return 0 based char number within line
public int charno() {return yytext.charno();}

} // class YYlex
