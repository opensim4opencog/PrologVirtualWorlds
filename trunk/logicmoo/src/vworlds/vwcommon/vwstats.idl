// Copyright © 2000 Microsoft Corporation.  All rights reserved.
// In installing/viewing this source code, you agree to the terms of the
// Microsoft Research Source License (MSRSL) included in the root of this source tree
// and available from http://www.vworlds.org/license.asp.

// vwstats.idl : IDL source for vwstats.dll
//

// This file will be processed by the MIDL tool to
// produce the type library (vwstats.tlb) and marshalling code.

///////////////////////////////////////////////////////////////////////////////////////////////
// This file contains the interface definitions for:-
//
// IVWStatCol : Interface for generic statistics gathering object. Not used at present.
///////////////////////////////////////////////////////////////////////////////////////////////

// Codes 0x0-0x01ff are reserved for the OLE group of
// interfaces.  We start our codes at 0x900.

cpp_quote("#define VWSTATS_INITIALIZED_TWICE	MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, 0x0951)")	
cpp_quote("#define VWSTATS_NOT_INITIALIZED		MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, 0x0952)")	
cpp_quote("#define VWSTATS_WRONG_DATATYPE		MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, 0x0953)")	


	[
		object,
		uuid(13B24363-3EEF-11D0-8587-00A0C90F2911),
		dual,
		helpstring("IVWStatCol Interface"),
		pointer_default(unique)
	]
	interface IVWStatCol : IDispatch
	{
		import "oaidl.idl";
		import "vwobject.idl";

		[helpstring("Hack for now. (Shouldn't be necessary)")] 
		HRESULT Initialize([in] IWorld *pworld); 

		[propput,helpstring("Sets a statistic.")] 
		HRESULT Item([in] BSTR category, 
						[in] BSTR item, 
						[in] VARIANT var);
	
		[propget,helpstring("Returns item.")] 
		HRESULT Item([in] BSTR category, 
						[in] BSTR item, 
						[out, retval] VARIANT * var);

		[helpstring("Removes a statistic.")] 
		HRESULT RemoveItem([in] BSTR category, 
						[in] BSTR item);

		[propget, helpstring("Returns number of categories in the collection.")]
		HRESULT Count([out, retval] long* retval);

		[propget,helpstring("Returns category propmap (for optimization use.")] 
		HRESULT PropertyMap([in] BSTR category, 
						[out, retval] IPropertyMap **ppmap);

		//helper fcns for C++.

		[hidden,propput,helpstring("Helper fcn for setting a statistic.")] 
		HRESULT LongItem([in] BSTR category, 
						[in] BSTR item, 
						[in] long var);
	
		[hidden,propput,helpstring("Helper fcn for setting a statistic.")] 
		HRESULT BSTRItem([in] BSTR category, 
						[in] BSTR item, 
						[in] BSTR var);
	
		[hidden,propget,helpstring("Helper fcn for getting a statistic.")] 
		HRESULT LongItem([in] BSTR category, 
						[in] BSTR item, 
						[out, retval] long * var);
	
		[hidden,propget,helpstring("Helper fcn for getting a statistic.")] 
		HRESULT BSTRItem([in] BSTR category, 
						[in] BSTR item, 
						[out, retval] BSTR * var);

	};

#ifdef VWSTATSLIB
[
	uuid(13B24361-3EEF-11D0-8587-00A0C90F2911),
	version(1.0),
	helpstring("vwstats 1.0 Type Library")
]
library VWStatsLib
{
	importlib("stdole32.tlb");

	[
		uuid(13B24367-3EEF-11D0-8587-00A0C90F2911),
		helpstring("VWStatCol Class")
	]
        coclass VWStatCol
	{
		[default] interface IVWStatCol;
	};

};
#endif
