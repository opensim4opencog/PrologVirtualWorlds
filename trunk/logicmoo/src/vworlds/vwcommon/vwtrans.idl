// Copyright © 2000 Microsoft Corporation.  All rights reserved.
// In installing/viewing this source code, you agree to the terms of the
// Microsoft Research Source License (MSRSL) included in the root of this source tree
// and available from http://www.vworlds.org/license.asp.

// VWTrans.idl : IDL source for VWTrans.dll
//

// This file will be processed by the MIDL tool to
// produce the type library (Vector.tlb) and marshalling code.

///////////////////////////////////////////////////////////////////////////////////////////////
// This file contains the interface definitions for:-
//
// IVWTransform : Old interface no longer actually used but code still contains references
// so its still here.
///////////////////////////////////////////////////////////////////////////////////////////////

	import "oaidl.idl";
	import "vwprop.idl";
	
	[
		object,
		uuid(27EB8909-1842-11D0-89A9-445368617270),
		dual,
		local,
		helpstring("IVWTransform Interface"),
		pointer_default(unique)
	]
	interface IVWTransform : IObjectProperty
	{
//		[ helpstring("Set X,Y,Z position of an object relative to its parent transform.") ] 
//		HRESULT SetPosition([in] float flX, [in] float flY, [in] float flZ);
//		[ helpstring("Get X,Y,Z position of an object relative to its parent transform.") ] 
//		HRESULT GetPosition([out] float * pflX, [out] float * pflY, [out] float * pflZ);

//		[ helpstring("Set X,Y,Z scale of an object relative to its parent transform.") ] 
//		HRESULT SetScale([in] float flX, [in] float flY, [in] float flZ);
//		[ helpstring("Get X,Y,Z scale of an object relative to its parent transform.") ] 
//		HRESULT GetScale([out] float * pflX, [out] float * pflY, [out] float * pflZ);

//		[helpstring("Set the orientation of the object relative to it's parent transform.See D3D SetPosition().")]
//		HRESULT SetOrientation([in] float flXDir, [in] float flYDir, [in] float flZDir,
//								[in] float flXUp, [in] float flYUp, [in] float flZUp);
//		[helpstring("Get the orientation of the object relative to it's parent transform.See D3D SetPosition().")]
//		HRESULT GetOrientation([out] float * pflXDir, [out] float * pflYDir, [out] float * pflZDir,
//								[out] float * pflXUp, [out] float * pflYUp, [out] float * pflZUp);
	};


