// Copyright © 2000 Microsoft Corporation.  All rights reserved.
// In installing/viewing this source code, you agree to the terms of the
// Microsoft Research Source License (MSRSL) included in the root of this source tree
// and available from http://www.vworlds.org/license.asp.

// VWHtml.idl : IDL source for VWHtml.dll
//

// This file will be processed by the MIDL tool to
// produce the type library (VWHtml.tlb) and marshalling code.

///////////////////////////////////////////////////////////////////////////////////////////////
// This file contains the interface definitions for:-
//
// IVWHtml : Interface to allow windows to be opened to display specified HTML or URLs. This
// interface also allows an IDispatch parameter to be passed to the page being opened.
//
// IVWHtmlHelper : An object supporting this interface will be placed on a page to be opened
// via the IVWHtml interface. The object will then allow scripts on that page to access the 
// parameter passed via the IVWHtml interface.
///////////////////////////////////////////////////////////////////////////////////////////////

import "vwclient.idl";

	[
		object,
		uuid(7E3832C9-4F4E-11D0-89AB-00A0C9054129),
		dual,
		helpstring("IVWHtml Interface"),
		pointer_default(unique)
	]
	interface IVWHtml : IDispatch
	{
		import "oaidl.idl";

		[helpstring("Initialize - must be invoked before any other method.")]
		HRESULT Initialize([in] IVWClient *pclient);

		[propget, helpstring("A root URL which will be pre-pended to the URL to be opened (if that URL is not a full one).")] 
		HRESULT RootURL([out, retval] BSTR * bstrRootURL);
		[propput, helpstring("A root URL which will be pre-pended to the URL to be opened (if that URL is not a full one).")] 
		HRESULT RootURL([in] BSTR bstrRootURL);

		[helpstring("Close all windows")]
		HRESULT CloseAll();

		[helpstring("Close specific window")]
		HRESULT Close([in] BSTR bstrName);

		[helpstring("Shows window with given Html")]
		HRESULT ShowHTML(	[in] int nhwnd, 
							[in] BSTR bstrHtml, 
							[in] BSTR bstrTitle,
							[in] VARIANT_BOOL bSafeMode,
							[in] IDispatch *pdispArg, 
							[in] int x,
							[in] int y,
							[in] int cx,
							[in] int cy );

		[helpstring("Shows particular window with given Html")]
		HRESULT ShowHTMLEx(	[in] BSTR bstrName,
							[in] int nhwnd, 
							[in] BSTR bstrHtml, 
							[in] BSTR bstrTitle,
							[in] VARIANT_BOOL bSafeMode,
							[in] IDispatch *pdispArg, 
							[in] int x,
							[in] int y,
							[in] int cx,
							[in] int cy );

		[helpstring("Shows window, navigating to given URL")]
		HRESULT ShowURL(	[in] int nhwnd, 
							[in] BSTR bstrURL, 
							[in] BSTR bstrTitle,
							[in] VARIANT_BOOL bSafeMode,
							[in] IDispatch *pdispArg, 
							[in] int x,
							[in] int y,
							[in] int cx,
							[in] int cy );

		[helpstring("Shows particular window, navigating to given URL")]
		HRESULT ShowURLEx(	[in] BSTR bstrName,
							[in] int nhwnd, 
							[in] BSTR bstrURL, 
							[in] BSTR bstrTitle,
							[in] VARIANT_BOOL bSafeMode,
							[in] IDispatch *pdispArg, 
							[in] int x,
							[in] int y,
							[in] int cx,
							[in] int cy );
	};

	[
		object,
		uuid(7E3832CB-4F4E-11D0-89AB-00A0C9054129),
		dual,
		helpstring("IVWHtmlHelper Interface"),
		pointer_default(unique)
	]
	interface IVWHtmlHelper : IDispatch
	{
		import "oaidl.idl";

		[propget, helpstring("Return the VWClient object")]
		HRESULT Client([out, retval] IVWClient **ppclient);

		[propget, helpstring("Return the IDispatch object")]
		HRESULT Arg([out, retval] IDispatch **ppdispArg);

		[helpstring("Closes the current window")]
		HRESULT CloseWindow();

		[helpstring("Given a long pathname, returns the short name")]
		HRESULT GetShortPathName([in] BSTR bstrLongName, [out, retval] BSTR *pbstrShortName);
	};


#ifdef VWHTMLLIB

[
	uuid(7E3832C7-4F4E-11D0-89AB-00A0C9054129),
	version(1.0),
	helpstring("VWHtml 1.0 Type Library")
]
library VWHTMLLib
{
	importlib("stdole32.tlb");

	[
		uuid(7E3832CD-4F4E-11D0-89AB-00A0C9054129),
		helpstring("VWHtml Class")
	]
	coclass VWHtml
	{
		[default] interface IVWHtml;
	};

	[
		uuid(7E3832CF-4F4E-11D0-89AB-00A0C9054129),
		helpstring("VWHtmlHelper Class")
	]
	coclass VWHtmlHelper
	{
		[default] interface IVWHtmlHelper;
	};

};

#endif