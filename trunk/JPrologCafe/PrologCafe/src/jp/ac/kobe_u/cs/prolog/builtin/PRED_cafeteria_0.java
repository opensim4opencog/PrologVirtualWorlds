package jp.ac.kobe_u.cs.prolog.builtin;
import jp.ac.kobe_u.cs.prolog.lang.*;
/*
 This file is generated by Prolog Cafe.
 PLEASE DO NOT EDIT!
*/
/**
 <code>cafeteria/0</code> defined in builtins.pl<br>
 @author Mutsunori Banbara (banbara@kobe-u.ac.jp)
 @author Naoyuki Tamura (tamura@kobe-u.ac.jp)
 @author Douglas R. Miles (dmiles@users.sourceforge.net) for Object(s) 
 @version 1.0-dmiles
*/
public class PRED_cafeteria_0 extends PredicateBase {
    static /*Symbol*/Object s1 = makeAtom("error");
    static /*Symbol*/Object s2 = makeAtom("end_of_file");
    static /*Symbol*/Object s3 = makeAtom("bye");

    public PRED_cafeteria_0(Predicate cont) {
        this.cont = cont;
    }

    public PRED_cafeteria_0(){}

    public void setArgument(Object[] args, Predicate cont) {
        this.cont = cont;
    }

    public int arity() { return 0; }

    public String nameUQ() { return "cafeteria"; }

    public void sArg(int i0, Object val) {  switch (i0) {default: newIndexOutOfBoundsException("setarg" , i0 , val);  }   }


    public Object gArg(int i0) {  switch (i0) {default: return newIndexOutOfBoundsException("getarg", i0,null);  }   }


    public String toPrologString(java.util.Collection newParam) {
        return "'cafeteria";
    }

    public Predicate exec(Prolog engine) { enter(engine); Object[] engine_aregs = engine.getAreg(); 
    // cafeteria:-'$cafeteria_init', repeat, '$toplvel_loop', on_exception(A, '$cafeteria'(B), print_message(error, A)), B==end_of_file, !, nl, '$fast_write'(bye), nl
        engine.setB0();
        Object a1, a2, a3, a4, a5;
        Predicate p1, p2, p3, p4, p5, p6, p7, p8;
    // cafeteria:-['$get_level'(A), '$cafeteria_init', repeat, '$toplvel_loop', on_exception(B, 'jp.ac.kobe_u.cs.prolog.builtin':'$cafeteria'(C), 'jp.ac.kobe_u.cs.prolog.builtin':print_message(error, B)), '$equality_of_term'(C, end_of_file), '$cut'(A), nl, '$fast_write'(bye), nl]
        a1 = engine.makeVariable(this);
        //START inline expansion of $get_level(a(1))
        if (! unify(a1,makeInteger(engine.B0))) {
            return fail(engine);
        }
        //END inline expansion
        a2 = engine.makeVariable(this);
        a3 = engine.makeVariable(this);
        a4 = makeClosure(new PRED_$cafeteria_1(a3, null));
        a5 = makeClosure(new PRED_print_message_2(s1, a2, null));
        p1 = new PRED_nl_0(cont);
        p2 = new PRED_$fast_write_1(s3, p1);
        p3 = new PRED_nl_0(p2);
        p4 = new PRED_$cut_1(a1, p3);
        p5 = new PRED_$equality_of_term_2(a3, s2, p4);
        p6 = new PRED_on_exception_3(a2, a4, a5, p5);
        p7 = new PRED_$toplvel_loop_0(p6);
        p8 = new PRED_repeat_0(p7);
        return exit(engine, new PRED_$cafeteria_init_0(p8));
    }
}
