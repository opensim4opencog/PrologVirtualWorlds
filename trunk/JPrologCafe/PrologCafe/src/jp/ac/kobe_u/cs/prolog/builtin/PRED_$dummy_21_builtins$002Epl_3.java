package jp.ac.kobe_u.cs.prolog.builtin;
import jp.ac.kobe_u.cs.prolog.lang.*;
/*
 This file is generated by Prolog Cafe.
 PLEASE DO NOT EDIT!
*/
/**
 <code>'$dummy_21_builtins.pl'/3</code> defined in builtins.pl<br>
 @author Mutsunori Banbara (banbara@kobe-u.ac.jp)
 @author Naoyuki Tamura (tamura@kobe-u.ac.jp)
 @author Douglas R. Miles (dmiles@users.sourceforge.net) for Object(s) 
 @version 1.0-dmiles
*/
class PRED_$dummy_21_builtins$002Epl_3 extends PredicateBase {
    static Predicate _$dummy_21_builtins$002Epl_3_sub_1 = new PRED_$dummy_21_builtins$002Epl_3_sub_1();
    static Predicate _$dummy_21_builtins$002Epl_3_1 = new PRED_$dummy_21_builtins$002Epl_3_1();
    static Predicate _$dummy_21_builtins$002Epl_3_2 = new PRED_$dummy_21_builtins$002Epl_3_2();

    public Object arg1, arg2, arg3;

    public PRED_$dummy_21_builtins$002Epl_3(Object a1, Object a2, Object a3, Predicate cont) {
        arg1 = a1;
        arg2 = a2;
        arg3 = a3;
        this.cont = cont;
    }

    public PRED_$dummy_21_builtins$002Epl_3(){}

    public void setArgument(Object[] args, Predicate cont) {
        arg1 = args[0];
        arg2 = args[1];
        arg3 = args[2];
        this.cont = cont;
    }

    public int arity() { return 3; }

    public String nameUQ() { return "$dummy_21_builtins.pl"; }

    public void sArg(int i0, Object val) {  switch (i0) {         case 0: arg1 = val;break ;
         case 1: arg2 = val;break ;
         case 2: arg3 = val;break ;
default: newIndexOutOfBoundsException("setarg" , i0 , val);  }   }


    public Object gArg(int i0) {  switch (i0) {         case 0: return arg1;
         case 1: return arg2;
         case 2: return arg3;
default: return newIndexOutOfBoundsException("getarg", i0,null);  }   }


    public String toPrologString(java.util.Collection newParam) {
        return "'$dummy_21_builtins.pl'(" + argString(arg1,newParam) + "," + argString(arg2,newParam) + "," + argString(arg3,newParam) + ")";
    }

    public Predicate exec(Prolog engine) { enter(engine); Object[] engine_aregs = engine.getAreg(); 
        engine_aregs[1] = arg1;
        engine_aregs[2] = arg2;
        engine_aregs[3] = arg3;
        engine.cont = cont;
        engine.setB0();
        return engine.jtry(_$dummy_21_builtins$002Epl_3_1, _$dummy_21_builtins$002Epl_3_sub_1);
    }
}

class PRED_$dummy_21_builtins$002Epl_3_sub_1 extends PRED_$dummy_21_builtins$002Epl_3 {
    public Predicate exec(Prolog engine) { enter(engine); Object[] engine_aregs = engine.getAreg(); //anony 
        return engine.trust(_$dummy_21_builtins$002Epl_3_2);
    }
}

class PRED_$dummy_21_builtins$002Epl_3_1 extends PRED_$dummy_21_builtins$002Epl_3 {
    public Predicate exec(Prolog engine) { enter(engine); Object[] engine_aregs = engine.getAreg(); //anony 
    // '$dummy_21_builtins.pl'(A, B, C):-number_codes(C, B), !, A=C
        Object a1, a2, a3, a4;
        Predicate p1, p2;
        Predicate cont;
        a1 = engine_aregs[1];
        a2 = engine_aregs[2];
        a3 = engine_aregs[3];
        cont = engine.cont;
    // '$dummy_21_builtins.pl'(A, B, C):-['$get_level'(D), number_codes(C, B), '$cut'(D), '$unify'(A, C)]
        a4 = engine.makeVariable(this);
        //START inline expansion of $get_level(a(4))
        if (! unify(a4,makeInteger(engine.B0))) {
            return fail(engine);
        }
        //END inline expansion
        p1 = new PRED_$unify_2(a1, a3, cont);
        p2 = new PRED_$cut_1(a4, p1);
        return exit(engine, new PRED_number_codes_2(a3, a2, p2));
    }
}

class PRED_$dummy_21_builtins$002Epl_3_2 extends PRED_$dummy_21_builtins$002Epl_3 {
    public Predicate exec(Prolog engine) { enter(engine); Object[] engine_aregs = engine.getAreg(); //anony 
    // '$dummy_21_builtins.pl'(A, B, C):-'$dummy_22_builtins.pl'(A, B, C)
        Object a1, a2, a3;
        Predicate cont;
        a1 = engine_aregs[1];
        a2 = engine_aregs[2];
        a3 = engine_aregs[3];
        cont = engine.cont;
    // '$dummy_21_builtins.pl'(A, B, C):-['$dummy_22_builtins.pl'(A, B, C)]
        return exit(engine, new PRED_$dummy_22_builtins$002Epl_3(a1, a2, a3, cont));
    }
}
