package jp.ac.kobe_u.cs.prolog.builtin;
import jp.ac.kobe_u.cs.prolog.lang.*;
/*
 This file is generated by Prolog Cafe.
 PLEASE DO NOT EDIT!
*/
/**
 <code>java_method/3</code> defined in builtins.pl<br>
 @author Mutsunori Banbara (banbara@kobe-u.ac.jp)
 @author Naoyuki Tamura (tamura@kobe-u.ac.jp)
 @author Douglas R. Miles (dmiles@users.sourceforge.net) for Object(s) 
 @version 1.0-dmiles
*/
public class PRED_java_method_3 extends PredicateBase {

    public Object arg1, arg2, arg3;

    public PRED_java_method_3(Object a1, Object a2, Object a3, Predicate cont) {
        arg1 = a1;
        arg2 = a2;
        arg3 = a3;
        this.cont = cont;
    }

    public PRED_java_method_3(){}

    public void setArgument(Object[] args, Predicate cont) {
        arg1 = args[0];
        arg2 = args[1];
        arg3 = args[2];
        this.cont = cont;
    }

    public int arity() { return 3; }

    public String nameUQ() { return "java_method"; }

    public void sArg(int i0, Object val) {  switch (i0) {         case 0: arg1 = val;break ;
         case 1: arg2 = val;break ;
         case 2: arg3 = val;break ;
default: newIndexOutOfBoundsException("setarg" , i0 , val);  }   }


    public Object gArg(int i0) {  switch (i0) {         case 0: return arg1;
         case 1: return arg2;
         case 2: return arg3;
default: return newIndexOutOfBoundsException("getarg", i0,null);  }   }


    public String toPrologString(java.util.Collection newParam) {
        return "'java_method'(" + argString(arg1,newParam) + "," + argString(arg2,newParam) + "," + argString(arg3,newParam) + ")";
    }

    public Predicate exec(Prolog engine) { enter(engine); Object[] engine_aregs = engine.getAreg(); 
    // java_method(A, B, C):-B=..[D|E], builtin_java_convert_args(E, F), G=..[D|F], java_method0(A, G, H), java_conversion(I, H), C=I
        engine.setB0();
        Object a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11;
        Predicate p1, p2, p3, p4, p5;
        a1 = arg1;
        a2 = arg2;
        a3 = arg3;
    // java_method(A, B, C):-['$univ'(B, [D|E]), builtin_java_convert_args(E, F), '$univ'(G, [D|F]), java_method0(A, G, H), java_conversion(I, H), '$unify'(C, I)]
        a4 = engine.makeVariable(this);
        a5 = engine.makeVariable(this);
        a6 = makeList(a4, a5);
        a7 = engine.makeVariable(this);
        a8 = engine.makeVariable(this);
        a9 = makeList(a4, a7);
        a10 = engine.makeVariable(this);
        a11 = engine.makeVariable(this);
        p1 = new PRED_$unify_2(a3, a11, cont);
        p2 = new PRED_java_conversion_2(a11, a10, p1);
        p3 = new PRED_java_method0_3(a1, a8, a10, p2);
        p4 = new PRED_$univ_2(a8, a9, p3);
        p5 = new PRED_builtin_java_convert_args_2(a5, a7, p4);
        return exit(engine, new PRED_$univ_2(a2, a6, p5));
    }
}
