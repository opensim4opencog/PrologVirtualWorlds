package jp.ac.kobe_u.cs.prolog.builtin;
import jp.ac.kobe_u.cs.prolog.lang.*;
/*
 This file is generated by Prolog Cafe.
 PLEASE DO NOT EDIT!
*/
/**
 <code>java_declared_constructor/2</code> defined in builtins.pl<br>
 @author Mutsunori Banbara (banbara@kobe-u.ac.jp)
 @author Naoyuki Tamura (tamura@kobe-u.ac.jp)
 @author Douglas R. Miles (dmiles@users.sourceforge.net) for Object(s) 
 @version 1.0-dmiles
*/
public class PRED_java_declared_constructor_2 extends PredicateBase {

    public Object arg1, arg2;

    public PRED_java_declared_constructor_2(Object a1, Object a2, Predicate cont) {
        arg1 = a1;
        arg2 = a2;
        this.cont = cont;
    }

    public PRED_java_declared_constructor_2(){}

    public void setArgument(Object[] args, Predicate cont) {
        arg1 = args[0];
        arg2 = args[1];
        this.cont = cont;
    }

    public int arity() { return 2; }

    public String nameUQ() { return "java_declared_constructor"; }

    public void sArg(int i0, Object val) {  switch (i0) {         case 0: arg1 = val;break ;
         case 1: arg2 = val;break ;
default: newIndexOutOfBoundsException("setarg" , i0 , val);  }   }


    public Object gArg(int i0) {  switch (i0) {         case 0: return arg1;
         case 1: return arg2;
default: return newIndexOutOfBoundsException("getarg", i0,null);  }   }


    public String toPrologString(java.util.Collection newParam) {
        return "'java_declared_constructor'(" + argString(arg1,newParam) + "," + argString(arg2,newParam) + ")";
    }

    public Predicate exec(Prolog engine) { enter(engine); Object[] engine_aregs = engine.getAreg(); 
    // java_declared_constructor(A, B):-A=..[C|D], builtin_java_convert_args(D, E), F=..[C|E], java_declared_constructor0(F, G), B=G
        engine.setB0();
        Object a1, a2, a3, a4, a5, a6, a7, a8, a9;
        Predicate p1, p2, p3, p4;
        a1 = arg1;
        a2 = arg2;
    // java_declared_constructor(A, B):-['$univ'(A, [C|D]), builtin_java_convert_args(D, E), '$univ'(F, [C|E]), java_declared_constructor0(F, G), '$unify'(B, G)]
        a3 = engine.makeVariable(this);
        a4 = engine.makeVariable(this);
        a5 = makeList(a3, a4);
        a6 = engine.makeVariable(this);
        a7 = engine.makeVariable(this);
        a8 = makeList(a3, a6);
        a9 = engine.makeVariable(this);
        p1 = new PRED_$unify_2(a2, a9, cont);
        p2 = new PRED_java_declared_constructor0_2(a7, a9, p1);
        p3 = new PRED_$univ_2(a7, a8, p2);
        p4 = new PRED_builtin_java_convert_args_2(a4, a6, p3);
        return exit(engine, new PRED_$univ_2(a1, a5, p4));
    }
}
