package jp.ac.kobe_u.cs.prolog.builtin;
import jp.ac.kobe_u.cs.prolog.lang.*;
/*
 This file is generated by Prolog Cafe.
 PLEASE DO NOT EDIT!
*/
/**
 <code>repeat/0</code> defined in builtins.pl<br>
 @author Mutsunori Banbara (banbara@kobe-u.ac.jp)
 @author Naoyuki Tamura (tamura@kobe-u.ac.jp)
 @author Douglas R. Miles (dmiles@users.sourceforge.net) for Object(s) 
 @version 1.0-dmiles
*/
public class PRED_repeat_0 extends PredicateBase {
    static Predicate _repeat_0_top = new PRED_repeat_0_top();
    static Predicate _repeat_0_sub_1 = new PRED_repeat_0_sub_1();
    static Predicate _repeat_0_1 = new PRED_repeat_0_1();
    static Predicate _repeat_0_2 = new PRED_repeat_0_2();

    public PRED_repeat_0(Predicate cont) {
        this.cont = cont;
    }

    public PRED_repeat_0(){}

    public void setArgument(Object[] args, Predicate cont) {
        this.cont = cont;
    }

    public int arity() { return 0; }

    public String nameUQ() { return "repeat"; }

    public void sArg(int i0, Object val) {  switch (i0) {default: newIndexOutOfBoundsException("setarg" , i0 , val);  }   }


    public Object gArg(int i0) {  switch (i0) {default: return newIndexOutOfBoundsException("getarg", i0,null);  }   }


    public String toPrologString(java.util.Collection newParam) {
        return "'repeat";
    }

    public Predicate exec(Prolog engine) { enter(engine); Object[] engine_aregs = engine.getAreg(); 
        engine.cont = cont;
        return exit(engine, _repeat_0_top);
    }
}

class PRED_repeat_0_top extends PRED_repeat_0 {
    public Predicate exec(Prolog engine) { enter(engine); Object[] engine_aregs = engine.getAreg(); //anony 
        engine.setB0();
        return engine.jtry(_repeat_0_1, _repeat_0_sub_1);
    }
}

class PRED_repeat_0_sub_1 extends PRED_repeat_0 {
    public Predicate exec(Prolog engine) { enter(engine); Object[] engine_aregs = engine.getAreg(); //anony 
        return engine.trust(_repeat_0_2);
    }
}

class PRED_repeat_0_1 extends PRED_repeat_0 {
    public Predicate exec(Prolog engine) { enter(engine); Object[] engine_aregs = engine.getAreg(); //anony 
    // repeat:-true
        Predicate cont;
        cont = engine.cont;
    // repeat:-[]
        return exit(engine,cont);
    }
}

class PRED_repeat_0_2 extends PRED_repeat_0 {
    public Predicate exec(Prolog engine) { enter(engine); Object[] engine_aregs = engine.getAreg(); //anony 
    // repeat:-repeat
        Predicate cont;
        cont = engine.cont;
    // repeat:-[repeat]
        engine.cont = cont;
        return exit(engine, _repeat_0_top);
    }
}
