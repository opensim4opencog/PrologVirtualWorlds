package jp.ac.kobe_u.cs.prolog.builtin;
import jp.ac.kobe_u.cs.prolog.lang.*;
/*
 This file is generated by Prolog Cafe.
 PLEASE DO NOT EDIT!
*/
/**
 <code>'$cafeteria_init'/0</code> defined in builtins.pl<br>
 @author Mutsunori Banbara (banbara@kobe-u.ac.jp)
 @author Naoyuki Tamura (tamura@kobe-u.ac.jp)
 @author Douglas R. Miles (dmiles@users.sourceforge.net) for Object(s) 
 @version 1.0-dmiles
*/
class PRED_$cafeteria_init_0 extends PredicateBase {
    static /*Symbol*/Object s1 = makeAtom(":", 2);
    static /*Symbol*/Object s2 = makeAtom("jp.ac.kobe_u.cs.prolog.builtin");
    static /*Symbol*/Object s3 = makeAtom("$leap_flag", 1);
    static /*Symbol*/Object s4 = makeAtom("$current_leash", 1);
    static /*Symbol*/Object s5 = makeAtom("$current_spypoint", 3);
    static /*Symbol*/Object s6 = makeAtom("$consulted_file", 1);
    static /*Symbol*/Object s7 = makeAtom("$consulted_package", 1);
    static /*Symbol*/Object s8 = makeAtom("$consulted_predicate", 3);
    static /*Symbol*/Object s9 = makeAtom("no");
    static Object[] s10 = {s9};
    static /*Structure*/Object s11 = makeStructure(s3, s10);
    static Object[] s12 = {s2, s11};
    static /*Structure*/Object s13 = makeStructure(s1, s12);
    static /*Symbol*/Object s14 = makeAtom("call");
    static Object[] s15 = {s14};
    static /*Structure*/Object s16 = makeStructure(s4, s15);
    static Object[] s17 = {s2, s16};
    static /*Structure*/Object s18 = makeStructure(s1, s17);
    static /*Symbol*/Object s19 = makeAtom("exit");
    static Object[] s20 = {s19};
    static /*Structure*/Object s21 = makeStructure(s4, s20);
    static Object[] s22 = {s2, s21};
    static /*Structure*/Object s23 = makeStructure(s1, s22);
    static /*Symbol*/Object s24 = makeAtom("redo");
    static Object[] s25 = {s24};
    static /*Structure*/Object s26 = makeStructure(s4, s25);
    static Object[] s27 = {s2, s26};
    static /*Structure*/Object s28 = makeStructure(s1, s27);
    static /*Symbol*/Object s29 = makeAtom("fail");
    static Object[] s30 = {s29};
    static /*Structure*/Object s31 = makeStructure(s4, s30);
    static Object[] s32 = {s2, s31};
    static /*Structure*/Object s33 = makeStructure(s1, s32);

    public PRED_$cafeteria_init_0(Predicate cont) {
        this.cont = cont;
    }

    public PRED_$cafeteria_init_0(){}

    public void setArgument(Object[] args, Predicate cont) {
        this.cont = cont;
    }

    public int arity() { return 0; }

    public String nameUQ() { return "$cafeteria_init"; }

    public void sArg(int i0, Object val) {  switch (i0) {default: newIndexOutOfBoundsException("setarg" , i0 , val);  }   }


    public Object gArg(int i0) {  switch (i0) {default: return newIndexOutOfBoundsException("getarg", i0,null);  }   }


    public String toPrologString(java.util.Collection newParam) {
        return "'$cafeteria_init";
    }

    public Predicate exec(Prolog engine) { enter(engine); Object[] engine_aregs = engine.getAreg(); 
    // '$cafeteria_init':-retractall('$leap_flag'(A)), retractall('$current_leash'(B)), retractall('$current_spypoint'(C, D, E)), retractall('$consulted_file'(F)), retractall('$consulted_package'(G)), retractall('$consulted_predicate'(H, I, J)), assertz('$leap_flag'(no)), assertz('$current_leash'(call)), assertz('$current_leash'(exit)), assertz('$current_leash'(redo)), assertz('$current_leash'(fail)), !
        engine.setB0();
        Object a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13;
        Predicate p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11;
    // '$cafeteria_init':-['$get_level'(A), retractall('jp.ac.kobe_u.cs.prolog.builtin':'$leap_flag'(B)), retractall('jp.ac.kobe_u.cs.prolog.builtin':'$current_leash'(C)), retractall('jp.ac.kobe_u.cs.prolog.builtin':'$current_spypoint'(D, E, F)), retractall('jp.ac.kobe_u.cs.prolog.builtin':'$consulted_file'(G)), retractall('jp.ac.kobe_u.cs.prolog.builtin':'$consulted_package'(H)), retractall('jp.ac.kobe_u.cs.prolog.builtin':'$consulted_predicate'(I, J, K)), assertz('jp.ac.kobe_u.cs.prolog.builtin':'$leap_flag'(no)), assertz('jp.ac.kobe_u.cs.prolog.builtin':'$current_leash'(call)), assertz('jp.ac.kobe_u.cs.prolog.builtin':'$current_leash'(exit)), assertz('jp.ac.kobe_u.cs.prolog.builtin':'$current_leash'(redo)), assertz('jp.ac.kobe_u.cs.prolog.builtin':'$current_leash'(fail)), '$cut'(A)]
        a1 = engine.makeVariable(this);
        //START inline expansion of $get_level(a(1))
        if (! unify(a1,makeInteger(engine.B0))) {
            return fail(engine);
        }
        //END inline expansion
        Object[] y1 = {engine.makeVariable(this)};
        a2 = makeStructure(s3, y1);
        Object[] y2 = {s2, a2};
        a3 = makeStructure(s1, y2);
        Object[] y3 = {engine.makeVariable(this)};
        a4 = makeStructure(s4, y3);
        Object[] y4 = {s2, a4};
        a5 = makeStructure(s1, y4);
        Object[] y5 = {engine.makeVariable(this), engine.makeVariable(this), engine.makeVariable(this)};
        a6 = makeStructure(s5, y5);
        Object[] y6 = {s2, a6};
        a7 = makeStructure(s1, y6);
        Object[] y7 = {engine.makeVariable(this)};
        a8 = makeStructure(s6, y7);
        Object[] y8 = {s2, a8};
        a9 = makeStructure(s1, y8);
        Object[] y9 = {engine.makeVariable(this)};
        a10 = makeStructure(s7, y9);
        Object[] y10 = {s2, a10};
        a11 = makeStructure(s1, y10);
        Object[] y11 = {engine.makeVariable(this), engine.makeVariable(this), engine.makeVariable(this)};
        a12 = makeStructure(s8, y11);
        Object[] y12 = {s2, a12};
        a13 = makeStructure(s1, y12);
        p1 = new PRED_$cut_1(a1, cont);
        p2 = new PRED_assertz_1(s33, p1);
        p3 = new PRED_assertz_1(s28, p2);
        p4 = new PRED_assertz_1(s23, p3);
        p5 = new PRED_assertz_1(s18, p4);
        p6 = new PRED_assertz_1(s13, p5);
        p7 = new PRED_retractall_1(a13, p6);
        p8 = new PRED_retractall_1(a11, p7);
        p9 = new PRED_retractall_1(a9, p8);
        p10 = new PRED_retractall_1(a7, p9);
        p11 = new PRED_retractall_1(a5, p10);
        return exit(engine, new PRED_retractall_1(a3, p11));
    }
}
